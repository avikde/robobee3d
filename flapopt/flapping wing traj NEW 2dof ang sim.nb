(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    678595,      12415]
NotebookOptionsPosition[    676807,      12378]
NotebookOutlinePosition[    677182,      12394]
CellTagsIndexPosition[    677139,      12391]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["2DOF angular - 3D ambient", "Subsection",
 CellChangeTimes->{{3.758808037911851*^9, 3.7588080500165825`*^9}, {
  3.7851630712097263`*^9, 
  3.7851630750113926`*^9}},ExpressionUUID->"e64cb84f-de9f-4b90-a5e9-\
1ea323c30588"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQeUVUXW9/2uz3HEBJIzKEiQLEFAUECSBMlBoiJBsgISJOcMknMUJeec
JGcQAYmiAyIiGGbG55nnHbtv6Pf33f9z9jrc29xumm7C2Hsteh3OPadO1a4d
/rtqV9UL731Qp83/93/+z//ploQ/dVr0LNe1a4uP6z7Hf+p37tbu/c6tW1Xp
/FHr91t3LfHeY9xsxL/LPP//X0c9muTz+Twezz/+8Y/vvvuufPnyX3311f/8
z/+cPn36b3/7W0REhN/v9znk9XojIyP5yzX3ueYB/st1vNdKX+ET/P3jjz/+
/ve/jxs3buTIkf/1X//Ff+P9c480WR+JaSJ3x7l/etCVjZn8AYrNY0F31Eb7
ye+iOJR/p4+Kme7/+kNISqEn3XeCPm195H7AEyD96g2QHuCmuxDdDK2YPSO9
ttfdzLFn0C/7lu5zJ6gy9q1/B4g7//rXv/75z39iMX755Zcff/zxxo0bvwaI
/167du2HH374+eefz549e+LEiT179hw+fPjChQsHDx5ct27drl279u7du2PH
jv379/OXXw8dOvTFF1/s3r17+/bta9eu5ZrHjh079s0331y9epXCUfz/GyC0
XnVzt0sX+mt3eDgyQLzCNfcxU1xQeXdLE8JqJVK8k1tlHmyXyRkhYIjTzp07
+/Tpg9BKLBP602hB7ty5H3vssVGjRoX/nGSbGq5atSqha5VARP3hKkaGJjRv
3vzy5cvw+cCBA1iDh0dn6QVsIFaOqsqEJtKdSNZY3gTJfNDVuWsyHx2G3L7e
XIyMAz9FOCSHG1Sa+07Qp8N8UY4PEg6350Mhn57xOGS/2gPuJphvFbbnv7QC
16nK21+BcwsHVLKu3cW6vyiPDPE6BUpx+Pvf//3fKDvA/qeffrp58yZAgkhE
oIIY5Msvvzx//vylS5cITPbt24cp4M65c+e4iU04evQoUOHIkSNcnzx5Elyx
ceNGUMSpU6cIYb7++mu9DizhJ2EPvUIJXPATKszfb7/99vvvv+ejv/322++/
/y4IES1miw1Z16gc4imVSav1Fw7QZO7Hj4Am0n0kC6OkMg+wJv9yCBdJ5J4k
SZKGDRsiVPchQEa269at+/jjj48YMSIME9yGccOGDQldqwQixT6ocLt27apV
qzZ69GiQCbZClu1B1+5/SbGbjZk86Oo81CSEjM1Hd+4Deo93ChrhiRaNBA3+
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
Au+9nganr169SkdQ26NHj8JYRCVoD5nYkw0/iuduJ3XvFU6k+0MaLM2fPz8A
9UHX5U9Nsleo0uHDh+fNm4dbsUNe4jbv/+chreVctWoVTjlz5swjR47E92lF
+YULFyZPnvzGG2+AH+CqZZBiANevX79w4UKAyogRI1q0aFGmTBni5QULFig3
IMznNIlA8A4gCYMVhUbkXo8fP16hQoXatWtXqlQJ804IwB00LkOGDJj6vn37
pk2bFnfsu8N+6XcqPzKwidDy5ctx91oxFxHdvtmnT5/mW3h87Y7iczIt4+yw
eJ0AvFixYgUKFIDVtkSIygMA8FxPPPEEEKt48eJ169atU6cOKLFt27Y08Kef
fhK0sCwawTMwDI9RT8EMHYdE1IxdAtucPHnS65yHCBqBhzY0QWdRk0jnLCRh
eO1VsnXr1oEDBy5duhRuB8E8jWN88cUXVBJvCDhRAmpQFmjQcKXWGA4ePBis
lSRJkooVKyotR0KlT/OXm9o3yTJqVE+hUANjceN8jER9+vfvD/6kUff+FZ+T
40RXAnJoV3wNOPgcokzEY9euXeCQxo0b16pVK2hJdezJnRnuBlRxXgeUSPeZ
pGgETa+99tqoUaMedHX+1CRDunLlyvr16+M98apmXeMrevpPJaLRKVOm4B/T
pEnTs2fPGzdu2IA5xg1/tHjxYkw0RhWHKHul3UJAI5MCRECNJ7106ZK2Ng1v
chUndunSJU+ePETfd3pM8zLamQfAA4DBRTZt2pTq7d69GyNMPIhv/eyzz779
9luKQgflqWPZarVRRzTK/RkF1R9XeP78+T59+gAVBgwY4D46OZbfCuUAraPA
Z555ZtmyZRooEJqiOa1aterRowcoa9y4cRs2bNBRTaAmHX/mc3LPRELdwCp4
Qk9pJ1jQGp0COEQXnn322Q4dOvDr/v37hwwZkjx58sqVKyuLXmOJ6mhb1SKV
EUbSPoqRIfvn29gFCA0/u3nzZr0Sup2agQefc6QF0Pf9999PmjRpqlSpjh07
ptxpvUtHL1myZO7cuVQe7CT9pQ6ff/75oEGDxo4dC2hU1k3CTcVSLEwDyIVP
4Y4N2RAWjAJ709fKrYoX/+5zbeVEtyIbcBLIWrBgQXB13Mq0LbX37Nlz9uxZ
jdr5Qvb5T6SHlvzOgkd0fPbs2Q+6On9qQpv27dtHnE7IRlRI7InpU5JP4pBj
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
NgWvYqCIXOrWrdu5c+eZM2du2bJF4zAJVOH/PKILlixZorM14apiVYz/wYMH
Xw3QgQMHIp1Tw+L8ifitcyLdB7LAymYEzNy5A3OLUjXMKPOIJbHD3y9cuHD4
8OGtW7cuW7Zs2rRp06dPB+jOmTNn8uTJXI8ePRoE0rFjx/r16xM2vvHGG7t3
7w6qiddZe5I5c+ZevXp5Aoe/xG+U5wssGNSpu/hfPlS5cmWiGzDS7Nmz9+3b
d/XqVZoTv2uNH2byOxuF0TVPPvnkV199ZdNAfx51xhgiabt27frggw+qVKnS
p08fYitLo41lIZr1e+WVV5InT44goSAIFQEgRYV5C20qWrRo7ty5g2ZY+O78
+fOTJk0KRNRoFYWjazdv3vwmQLZ4855afs+kXCZAF8BpwoQJ6HWWLFmqVasG
rkOPNFgXHiVqhAowo+NEH06pUyAjM0hETyAzcODApUuXHjt2DNMneyg9etA1
fZQIYwvqrlSp0qlTp27cuHHr1q3FixfXqVMnT548XGjqWaNJD7qmiXT/yMY0
bCJYwEOQI9I5Re7XX39F9c6fP79t2zZMpZDGsGHDgBmoZ4cOHd59991atWrp
2NlsAcqXLx+xUlaHChYsCO4tX748McXGjRuDUtCjbgckOAVNyocmG9wLaUZD
e1ZUrVq1Z8+eIKjLly9r53YdLqNwL76++JCTJdXgiNOlS6czZf6I6dSt/zBC
FDGGgwcPbtmyJShap+NFm/wQhmAjgBwIgZwrlwbtAHujOGHe+v3333mmZMmS
oYAEK41lLl269Ny5cwH5U6ZM6d2790cffdS9e/fly5fbYsm4Nzs+iGrglKlV
o0aNEKEGDRqMGTNm7dq1mzdv1kaCMfLQHQfFmC3zoMjvHMOhmUGwk47e+8M5
NleTQaFHzyRSGIJvRAFITrt27QB4uBIcBFJEAItFkjAIBz7omibS/SObvvQ4
p+cgDL/99htGdd26datXr545c+bw4cPx3aCO1q1bN2zYsHbt2lyAQJo3b67z
3Nu0aYOLx1QCJDDswwNEhIhN1gVmat68eRhS4gsAgLQ42poIkPTv318T+vGb
1Cqjh508evTooUOHfvrpJ0shUIqackEfuJ2/b+RzFjO+/PLLhLdSfw22P5yu
ISEIDiDwu3fv1lYqfte+AeFfFIvkp+DhBx988NRTT2FdheGR+QIFCoRPkMa1
ZciQoVq1aqG++JdffkH10LV69eoptQnkjxpOmDDhxIkTcoUxLoBKaAJ1UCui
jPfff5+o9ssvv9TGdMK0sREhS0S5q+2+7zP5nR1iNaKohNIIZzNnWzjz5wlk
4oXU6chMr1698CAoTt++fffv3+/eMijyHk6AtVg72p+CLsIU4v5vUAJ50JMS
Bq0s+GeA7EQDzUnZfKu7AqE5DzHWJ/QZ/+3kvhm+geFLi/HdWNKdirIJGsvx
wGD+8MMPly5dItLZtGnTp59+KvjRuXPn+gHSziFNmzYFwQIwgK8rV67ct2/f
gQMHjh8/fu7cue+++w67evPmTYoi4rPVGe6sVAEe24DUF3LyZpSzxxGhByaa
OvgDB+F54nVXEPMgEbdvsWUXUbeL3H88iRUAsxw5chDnutMm/zxMiHQdR2vC
ECMkM+SmPVoBD7ly5SpXrtzWrVuVlTp69OjcuXPzU5hCUBxwIE+G5qtoiBLk
vCZA6JrOAjBrZsvQ4oUJcSO0HoOwYcMGm3AJMrYxlmDYzxvdkbUPCfmc3ZvN
Spj3iXI5vj+PysQLWYrgzz//jAPSUZJipiG90Dz2MGSd4paoSNc58hZ7Rjpn
J8Vo6DzOEZ9e1wEN3sAhAtevX//xxx910sfatWunTp2q46EJyUFWvXv3VnjO
Hfxmv379hgwZgl8bOXIkocq4AI0fP37SpElo0Pr16w8fPnzq1Kmvv/764sWL
OvD9aoCuXLnyXYD43M0AYVL4Lo6SC8IWzThHOAcxuxtlTIi4/aDeoIlUSw11
X7iNYdB/Q8nYHoqL3K/bzjOYMmJA6o/doOvBEqtXrwZ7TJ48uX///kR2ANQW
LVo0bNiQcKxJkyagkQEDBsCuOXPmrFq1ateuXdpiItoaBomE//alMe4H/C4Q
6A9BnmIF/E+WLBmd5XuU96R9VEgKi0EoWrQoCvWgq/MoERYDswDrMCMYn4IF
C5YqVWr58uWYCM0Mzpo1C5gXfmM0ADxRANZG0bf7pyCzkMCtiQv5A0mtikEi
Qk5gTKREij2Z1/A6ZHPHsRd+n2sfA62MdocMxN38xaFr9Y2cS4xoR7qsw6l1
nBzIYf78+SNGjCBs79Spk3KbCSvy5s1boECBEgGqVKlSrVq1COdr1qxZsWLF
IkWKFCpUCBubP3/+TJkypUuXLkuWLC+88ELKlCnTpk2bL1++ChUqNGjQgKj/
nXfead26NR65R48eHTp06NixY7t27biDg+7WrVuvXr34++GHH3bp0oXrrl27
gnkEb7DeM2bMANusWLEC575u3TrChO3bt+/bt2/btm179uw5d+6cVhrCAVqh
vV+UqKCFHgYVtFzOUkndOzDYNn2RrtMZFDppXIgXKeQf//gHn1B+KcYN8HDo
0KGdO3cuW7aMelJbUBnAo2uA2rZt27hx40aNGrVs2ZLmc62dPMFy06ZNoy0n
T56kztpAT9sF3O18ehzIAB6Vf/rppz/55BM3YEvQT/+ZScEIfQ3+DE0zTqQ7
EXz75ptvwOqjRo1Cg1566SUsD1ESaihdRphRQO6HByS2aiZ0tP+RACRmtRIB
SSLdI/mcw9q0oMnj7MMfe+H3uPbo0wmJuLD9+/cvWrToo48+ws19ECDCbYKF
M2fO2Aa5dypQ5tETOIgTt045/fr1A34QaBB9cPHWW2/hQ8EGONkJEyYQvxOS
rFy58osvvjhy5MiJEyeI/Tdv3rzEoYULF44dO3bQoEH8BVRkzZq1bNmyXANv
hg4dio8mtPn444+BGX379sVZU1sASYsWLZo0adKsWbO33367Ro0atWvXrlq1
6ptvvlmlSpXKlStXq1aN63Llyr3++uuUBv6pFCAu+KlOnTqAJZ6kkPfff799
+/awgg8NGTJEYzW42kmTJk0L0MQAzQwQVf0sQEuXLqVFa9asARuAdjB6ywPE
NX/hyezZs3metsOEYcOGUXj37t35Cg3kc3y3efPm1atXp87Ulopxjc189913
YR1thBujR4/mQ7t27Tp27Bjx3ZUrV0Ayv/32my3Yl4U0ROQe8UggsjExAMkz
zzwzd+5cw8mJhi5BSRr37bffhj+XNpGCiChA+/OjesD+vXv32m5XiryOHz+e
M2fOs2fPhilEExzuiRijRwKQ2Lh3/E6tJtKfjQzcEhwBIU6fPn358mVtaxZ7
++9z9mKiEPwabnTgwIE6dbRQoUIlS5bEAzZo0KBw4cL8F/9OBBF+ISciDW7B
53bq1AlfTzklSpSghJ49e3Jz3759BP4XL17EFHicjb79rg2jguY4bBcpHXUE
6sicOXPLli21M7YCw3/+85+UpvyT6wG6du0aD2NG4AkgB+bgtbE2YJ49e/Zg
gmjFunXrFi9eLAiBLZoyZQq4QvNHw4cP18ITQEKnAAHM2rZt27p1a3ACTNDo
BI3ir6ZIuAAzAGaAW8RZ3AQIcb9+/frgIn7lGpzDK9znV6GLtgGiQO7w344d
O3YPELyipQA5agLmAZVt2LABnEYHnTt3DuABaDTgoTEx29JKk2UCIZayZbMw
8SR6d+x6jf8QVwJIiNZt6/IHuNPCn4FMcRKnxu6KlEOCzdRaMNt3yzaJxWhg
cFC9MIX4nO3p7jT7Ge385kNCljhhI+13eswXi8PFQiemoy3HbHs8N+bRJOOV
z8nZ89++W5TP2W0vRrYH5QlYadZxchPaIA5Xcv78eV/scr9j2RABksOHD9eq
VQtvq7yC0J1agxIV3LtS+ALpKIAEon78Zo0aNUAROm6PMH/z5s3fffcdnh2g
QlSeL1++0qVLE+Nr0sHvHJ8a6RwT8M0330yfPh3fCnopUKDAe++9N2TIEKqE
J9UoqMEPq0bU7WJszLT8Sc0fffnll/jrXLlyPfXUUxSujRy1bs7AjN85FsRd
lNd1XlLoV0J7UPBMMzI6UkSZG3/7298I/L/66iuCpoMHDwJstm3btjNAXGzf
vh3YsChAn3/++bJly/g7b968BQsWcA3y4f6nn34K+OG/wCFeAZsBloSa4M/V
q1cJbxWgRdx+ErdbXC2WsQ1GPK5tHt2s0LVtIXjv8hYjmbQjPClSpIBplnea
CEgSmvyJxz3cPQUxzX0hrLJly5b06dOj77Es6lGnOyEK/+2phqHm1O4HkT8E
oZmJlk3wuxzxA2jwgyY332TVLYITo+QHlUeh+0oP0AmMN2/e/OGHH7SL1JUr
V3BSwAyib033b9q0ac2aNXii2bNnE3rj0Pkv4TmeaOjQodp+37IL7r0t/sC5
CRSI48uQIcPFixepG3gAVB+0D0mkawNqJZdqeOHGjRtHjx4FM9SuXTt79uxE
98OGDdu4cSOeUW7R78pg5K3JkyenTZu2XLlyuFGdfqUK8DDcANI0b948Z86c
1atXJ8yHD99++637pNfQizuR5o90FgAl4McbNmyYJUsWoM6rr7769NNP4/31
zAOcCwjS3CBsE/6/oeXcqfygO+GfebBKrQbSL8DaTJky3W2ufiIl0sNDsq67
d+9OkyYNsd6Drk4CUii0MPK50trdMCMIfuhhN1yJ1vT5nHUukc7pOVEuqPMA
LfkDJI9z0ICtJPW5dm+Qb8UPXr58mQAWOVy1atWUKVMGDRrUM0A9AkQA2Ldv
35EjR2qRyPDhw7nD/Q8//FB7O2hIv379+hUrVnwnQHXq1MmcOXPTpk31iXgJ
GP2BTR6o/+rVq4EThNiUDBrp06cPSMP9pNe1Pzyf1gJbkNKIESOAImXLlgUs
0UZgldKtjS1BrPv11187dOhAyNCuXTviX8G2v//972AY7j///POvvfYafIB1
YDbb+y4OTdPYKZ+7devWzJkz8+XLlzVr1i5dupw6dQp0lzx58mbNmtFN9yFR
M5FiT7I/AEjEoGDBgoldk0iPNGEqz58/nzp1amKrB12XBCQ3YPDcTkHgxOda
geh+zJLWRNrc1essqXaTjQC4Vyb6XSfm/NnI5zoEHL7hmn/44Ycvv/xyx44d
a9asWbBgwaxZs6ZPnz5s2LBevXqBNMAbQ4YM0XLUgQMHch8cMmHChPHjx/Mw
SADEsilAmwO0fv36rVu3bt++HR+9dOlSXp84cSK/btmypVKlSjr5UaMK994W
YXh/4GjLF1988ciRIzQKJDBjxoyggzz8zgyIhkd4cvDgwbVq1XrrrbeaN2++
ePHir7/+WodmujcbD3IoGkQ6ffp0vXr1MmTIgJJqjIXPlS5dulChQl27dqXV
N2/eFBTR83GbKPQHNtf66quv+vXr99JLL+XKlYte0G6clA+CypEjx4YNG0Kz
yBLpAZINdJcpUwZMkghIEumRJswLARG2bvbs2XErIR6tU9AcSiw/7XfOTLQd
BgQYFCrKCf7qomvXrmnnBHwKf2n+d999h+H9+eefMcg8oE0bwGnff/89rlMJ
excvXsQv2MYLSq7mmkJ47EaAeFH7FRDJqiiIYrWmSSsN5TU0fhJm3DiIJzEy
LQx/7vTfOFNshrVFvsARGLgzeHLmzBmi+Llz54Irhg4d2rdvXyUQgjSmTp0K
IJk/f/66desOHToEb3nl999/D5rckav1OYtc3JP7hnkMPeK4KaFVq1aVK1dW
UfE1ZaNMKmAJXnvcuHHKQEBItJOPMUfV4ObevXsBVHXr1s2bN2+7du3AYOfO
nTMc4r19s5Egh8JXKF8HRuTOnbtixYonTpyYPHkyRYEQYBrSaws/VYhOcIhD
02AvvdO4cePMmTPXr19/zpw5SLglai5cuDBNmjQNGjT4xz/+8fBMWCSS30lq
Kl++fJEiRRIBSSI9uuQPZDvgOrNkyYJpjVshFtbZzEVQzpvv9kxRn+uI56jo
MjfsXRup0IUOu8dIAgBwcASYoAV8PTDgwoULeDGcAvZZATgYg2ssOfaTB667
6FKAABhnz57lgodxEFyDKCift3TiFaEiv4I9eADUcerUqePHj3NBCRQuEKL9
oLRDFD9xn1odO3aMYJlf+QmcY7tFaZcDUA2uGbfCRyn5WoD4lXYBVyzfWPkG
cgduTtrGWV5XhqSb7Oxd94ySu3fcHWFiYHfcM1AeZxsHnysr0vrLHrM8QA0I
IE60ncZqYcWqVatAGhMnTgR4TJo0SVtvgUmWLFmyc+dOWMHzaq99SEJlYb4+
6k55DZqA892e7WPPU5nevXvny5cP3sbXRIPfSVykwo0aNSpVqtS2bdsQwojA
4ezqL/ULgrR58+Y+ffpUqVIF/WrduvWsWbMQEtvb34Ya3G0J+px2KdGMT8+e
PQkc+GjBggVLly69adMmWOcefLOGx22EBC5VqFAhW7ZsHTp0QNTde0FTASBi
zZo106VLR6PUWZ673A4ukRKCLO2KvsuePbupSSJQTKRHjvyB8We8do4cOTp3
7hy3QtxTFbpwn/PrvjC/5j4LWJYc6/3rr78KD+Cd8e84caw3zpq/gAoqiZu7
HCCgAp59z549/KQRD2AA93lAWzqAQPD1vKWtkGyAQqT0QhpO4Cy/r/u2p4T8
oxL+bW8BKql9Jm1UXM9oNcf/DZAOmaIVlKwP/Rag/9femcf5XK7//49TJIka
axzbQ6FCKJSYiCLryC6SLYbQIWMZk+xkLNlmZBk7Y1B2o0ZoLNnLLrK0kHN0
+nb+OJn5fPyev8/rvO/H7fMZY0xjhnpff3we73nP+32/7+W6r+t1Xfd1Xzdm
Mr+0CDmPCgbbKN0ldQbzHPMRbaH+VFswhscANrQU5IOm0H16hnKM1awU36bn
jWdAriGDVbxW2EyS79RRY5sb4Gdf2OtTQkfmRY+z2UqF8CHaSOsYr8TERGz/
eT5auHAhynf48OHgkMWLF69YsSIuLg58sn//fgZLMDIT0kZR1alTp6LEjbPl
j5epXhIsXLt2LRMHvEED0dfiB/oEcDt37lywEHAF5NCyZcthw4YBmOUfS76d
2GbNFw0BTNK6detcuXJVqVJl2bJlGX5+AWw8cODAcePGAacN2DBEzWNjY4OC
gkJCQsyhmS4gyXLSQiS/L7/8cvHixW0LxcUkLt1bJOWCqKlWrVrjxo3TXYht
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

    "], {{0, 89}, {731, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{731, 89},
  PlotRange->{{0, 731}, {0, 89}}]], "Text",
 CellChangeTimes->{3.785534731477183*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"64d0d6bf-1eab-41bc-a7cd-251369f4e925"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Rspar", "[", "\[Phi]_", "]"}], ":=", 
   RowBox[{"RotationMatrix", "[", 
    RowBox[{"\[Phi]", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Rhinge", "[", "\[Psi]_", "]"}], ":=", 
    RowBox[{"RotationMatrix", "[", 
     RowBox[{"\[Psi]", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Assumption", " ", "Rcop"}], ",", 
    RowBox[{"x", " ", "=", " ", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["r", "^"], "1"], "R", " ", "in", " ", "Chen", 
      RowBox[{"(", "2016", ")"}], " ", "eq", " ", 
      RowBox[{
       RowBox[{"(", "5", ")"}], ".", " ", "Ixx"}], " ", "from", " ", 
      "\"\<incorporate R\>\"", " ", 
      RowBox[{"notes", "."}]}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wingsubs", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"R", "\[Rule]", 
       RowBox[{"Aw", "/", "cbar"}]}], ",", 
      RowBox[{"ycp", "\[Rule]", 
       RowBox[{"R", " ", 
        SubscriptBox[
         OverscriptBox["r", "^"], "1"]}]}], ",", 
      RowBox[{"Ixx", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{"mwing", " ", 
         RowBox[{"ycp", "^", "2"}]}], "*)"}], "0"}], ",", 
      RowBox[{"Izz", "\[Rule]", 
       RowBox[{
        RowBox[{"cbar", "^", "2"}], 
        RowBox[{"\[Gamma]", "^", "2"}], "mwing"}]}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", " ", "nonlin", " ", "transmission"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Tau]inv", "[", "\[Phi]o_", "]"}], ":=", 
    RowBox[{
     RowBox[{"\[Phi]o", " ", 
      RowBox[{"ycp", "/", "\[Tau]1"}]}], "-", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Phi]o", " ", "ycp"}], ")"}], "^", "3"}], 
      RowBox[{"\[Tau]2", "/", 
       RowBox[{"(", 
        RowBox[{"3", 
         RowBox[{"\[Tau]1", "^", "4"}]}], ")"}]}]}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "draw", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"drawWing", "[", 
     RowBox[{"sol_", ",", "a_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"pspar", ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"A", " ", "wing", " ", "in", " ", "local", " ", "fram"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"polyverts", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "R", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "R", ",", 
             RowBox[{"-", "cbar"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "cbar"}]}], "}"}]}], "}"}]}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pspar", "=", 
        RowBox[{
         RowBox[{"Rspar", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "R", ",", "0"}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Transform", " ", "to", " ", "world", " ", "frame"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"polyverts", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Rspar", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ".", 
           RowBox[{"Rhinge", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], ".", 
           RowBox[{"polyverts", "\[Transpose]"}]}], ")"}], "\[Transpose]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Graphics3D", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"Thick", ",", "\[IndentingNewLine]", 
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "pspar"}], 
                 "}"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Polygon", "[", "polyverts", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Opacity", "[", "1", "]"}], ",", "\[IndentingNewLine]",
                "Blue", ",", "\[IndentingNewLine]", 
               RowBox[{"Arrow", "[", 
                RowBox[{"{", 
                 RowBox[{"paero", ",", 
                  RowBox[{"paero", "+", 
                   RowBox[{"1", "Faero"}]}]}], "}"}], "]"}]}], 
              "\[IndentingNewLine]", "}"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"FaceGrids", "\[Rule]", "All"}]}], "]"}], "/.", "sol"}], 
          "/.", 
          RowBox[{"t", "\[Rule]", "a"}]}], "//.", "wingsubs"}], "/.", 
        "params"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"plotTrajs", "[", 
     RowBox[{"sol_", ",", "t2_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"t1", "=", 
         RowBox[{
          RowBox[{"t2", "-", 
           RowBox[{"Ndt", " ", "dt"}]}], "/.", "params"}]}], ",", 
        RowBox[{"FD", "=", 
         RowBox[{"Faero", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\[Phi]mag", "=", 
         RowBox[{"First", "@", 
          RowBox[{"FindMaximum", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"\[Phi]", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
              RowBox[{"t1", "\[LessEqual]", "t", "\[LessEqual]", "t2"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"t1", "+", "t2"}], ")"}], "/", "2"}]}], "}"}]}], 
           "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\[Psi]mag", "=", 
         RowBox[{"First", "@", 
          RowBox[{"FindMaximum", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"\[Psi]", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
              RowBox[{"t1", "\[LessEqual]", "t", "\[LessEqual]", "t2"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"t1", "+", "t2"}], ")"}], "/", "2"}]}], "}"}]}], 
           "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"avglift", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Faero", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "/.", "sol"}], "//.", 
               "wingsubs"}], "/.", "params"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "t1", ",", "t2"}], "}"}]}], "]"}], "/", 
           RowBox[{"(", 
            RowBox[{"t2", "-", "t1"}], ")"}]}], "*", 
          RowBox[{"1000", "/", "9.81"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\[Sigma]amax", "=", "0.35"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<\[Phi]mag=\>\"", ",", "\[Phi]mag", ",", "\"\<, \[Psi]mag=\>\"", 
         ",", "\[Psi]mag", ",", "\"\<, avglift=\>\"", ",", "avglift"}], "]"}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[Tau]inv", "[", 
              RowBox[{
               RowBox[{"\[Phi]", "[", "t", "]"}], "/.", "sol"}], "]"}], "//.",
              "wingsubs"}], "/.", "params"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\[Sigma]act"}], ",", 
           RowBox[{"GridLines", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "\[Sigma]amax"}], ",", "\[Sigma]amax"}], "}"}]}],
              "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Phi]", "[", "t", "]"}], "/.", "sol"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\[Phi]"}], ",", 
           RowBox[{"GridLines", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "\[Phi]mag"}], ",", "\[Phi]mag"}], "}"}]}], 
             "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Psi]", "[", "t", "]"}], "/.", "sol"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\[Psi]"}], ",", 
           RowBox[{"GridLines", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.24"}], ",", 
                RowBox[{"-", "\[Psi]mag"}], ",", "\[Psi]mag", ",", "1.24"}], 
               "}"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Faero", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "*", 
               RowBox[{"1000", "/", "9.81"}]}], "/.", "sol"}], "//.", 
             "wingsubs"}], "/.", "params"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<FL [mg]\>\""}], ",", 
           RowBox[{"GridLines", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", "avglift", "}"}]}], "}"}]}], ",", 
           RowBox[{"Filling", "\[Rule]", "avglift"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"FD", "*", 
               RowBox[{"1000", "/", "9.81"}]}], "/.", "sol"}], "//.", 
             "wingsubs"}], "/.", "params"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<FDx [mg]\>\""}]}], "]"}]}], 
        RowBox[{"(*", 
         RowBox[{",", "\[IndentingNewLine]", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Tau]act", "/.", 
              RowBox[{"c2", "[", "]"}]}], "/.", "params"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "u"}]}], "]"}], ","}], "*)"}], 
        "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"debugComponentsPlot", "[", 
     RowBox[{"sol_", ",", "t2_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"stiff", ",", 
        RowBox[{"t1", "=", 
         RowBox[{
          RowBox[{"t2", "-", 
           RowBox[{"Ndt", " ", "dt"}]}], "/.", "params"}]}], ",", "M", ",", 
        "inertial", ",", "Mdiag", ",", "inc", ",", "ic"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"stiff", "=", 
        RowBox[{"D", "[", 
         RowBox[{"L2", ",", 
          RowBox[{"{", "q", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"M", "=", 
        RowBox[{"D", "[", 
         RowBox[{"KE", ",", 
          RowBox[{"{", 
           RowBox[{"dq", ",", "2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"inertial", "=", 
        RowBox[{"M", ".", "ddq"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Mdiag", "=", 
        RowBox[{"DiagonalMatrix", "@", 
         RowBox[{"Diagonal", "[", "M", "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"inc", "=", 
        RowBox[{"Mdiag", ".", "ddq"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ic", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M", "-", "Mdiag"}], ")"}], ".", "ddq"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
           RowBox[{"inertial", "//.", "wingsubs"}], "/.", "params"}], "]"}], 
         ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"inertial", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<i\>\""}], "]"}],
                    ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"stiff", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", 
                    RowBox[{"\[Tau]damp", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "\"\<g\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"\[Tau]aero", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<aero\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"\[Tau]inp", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/.", 
                    RowBox[{"c2", "[", "]"}]}], ",", "\"\<act\>\""}], "]"}], 
                   ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"\[Tau]act", "/.", 
                    RowBox[{"c2", "[", "]"}]}], ",", "\"\<actinp\>\""}], 
                    "]"}]}], "\[IndentingNewLine]", "}"}], "/.", "sol"}], "//.",
                 "wingsubs"}], "/.", "params"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "Automatic", ",", "Automatic", ",", "Automatic", ",", "Dashed",
                 ",", "Dashed"}], "}"}]}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"i", "\[Equal]", "1"}], ",", "\"\<stroke\>\"", ",", 
                "\"\<hinge\>\""}], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "2"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"inc", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<inc\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"ic", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<ic\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"inertial", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<itot\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"stiff", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<gtot\>\""}], 
                    "]"}]}], "\[IndentingNewLine]", "}"}], "/.", "sol"}], "//.",
                 "wingsubs"}], "/.", "params"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "Automatic", ",", "Automatic", ",", "Dashed", ",", 
                "Automatic"}], "}"}]}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"i", "\[Equal]", "1"}], ",", "\"\<stroke\>\"", ",", 
                "\"\<hinge\>\""}], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"aeroForce", "[", 
     RowBox[{"{", 
      RowBox[{"\[Phi]_", ",", "\[Psi]_", ",", "d\[Phi]_", ",", "d\[Psi]_"}], 
      "}"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sparVecB", "=", 
         RowBox[{
          RowBox[{"Rspar", "[", "\[Phi]", "]"}], ".", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ",", 
        RowBox[{"(*", 
         RowBox[{"vector", " ", "along", " ", "wing"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"chordB", "=", 
         RowBox[{
          RowBox[{"Rspar", "[", "\[Phi]", "]"}], ".", 
          RowBox[{"Rhinge", "[", "\[Psi]", "]"}], ".", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}]}], ",", 
        RowBox[{"(*", 
         RowBox[{"wing", " ", "chord", " ", "unit", " ", "vector"}], "*)"}], 
        "\[IndentingNewLine]", "le", ",", "ne", ",", "pcopB", ",", 
        "rcopnondim", ",", "\[IndentingNewLine]", "eD", ",", "eL", ",", 
        "\[Alpha]", ",", "paero", ",", "Caero", ",", "Faero"}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Leading", " ", "edge", " ", "velocity", " ", "direction"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"le", "=", 
        RowBox[{"Cross", "[", 
         RowBox[{
          RowBox[{"d\[Phi]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ",", 
          RowBox[{"ycp", " ", "sparVecB"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ne", "=", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"le", ".", "le"}], "]"}], "+", "\[Epsilon]aero"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"COP", ":", " ", 
         RowBox[{"nondim", " ", "from", " ", "Chen"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"rcopnondim", "=", 
        RowBox[{"0.25", "+", 
         RowBox[{"0.25", "/", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Exp", "[", 
             RowBox[{"5.0", "*", 
              RowBox[{"(", 
               RowBox[{"1.0", "-", 
                RowBox[{"4", "*", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Pi]", "/", "2"}], "-", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"\[Psi]", "^", "2"}], "]"}]}], ")"}], "/", 
                  "\[Pi]"}]}]}], ")"}]}], "]"}]}], ")"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pcopB", "=", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "d"}], "}"}], "+"}], "*)"}], 
        RowBox[{
         RowBox[{"ycp", " ", "sparVecB"}], "+", 
         RowBox[{"rcopnondim", " ", "chordB"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Lift", "/", "drag"}], " ", "directions"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"eD", "=", 
        RowBox[{
         RowBox[{"-", "le"}], "/", "ne"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"eL", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Aero", " ", "force", " ", "calculate"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{
         RowBox[{"\[Pi]", "/", "2"}], "-", "\[Psi]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"paero", "=", 
        RowBox[{
         RowBox[{"Rspar", "[", "\[Phi]", "]"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "ycp", ",", "0"}], "}"}], "+", 
           RowBox[{
            RowBox[{"Rhinge", "[", "\[Psi]", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{
               RowBox[{"-", "rcopnondim"}], " ", "cbar"}]}], "}"}]}]}], 
          ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Caero", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"CDmax", "+", "CD0"}], ")"}], "/", "2"}], "-", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"CDmax", "-", "CD0"}], ")"}], "/", "2"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", "\[Alpha]"}], "]"}]}]}], ")"}], ",", 
          RowBox[{"CLmax", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", "\[Alpha]"}], "]"}]}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          SubscriptBox[
           OverscriptBox["r", "^"], "2"], " ", "from", " ", "Whitney", " ", 
          "2010", " ", 
          RowBox[{
           RowBox[{"(", "2.23", ")"}], ".", " ", "Assumes"}], " ", "Rcopx"}], 
         "=", 
         RowBox[{
          RowBox[{"ycp", " ", "stays", " ", "constant"}], " ", "-", " ", 
          RowBox[{"OK", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Faero", "=", 
        RowBox[{
         RowBox[{"1", "/", "2"}], "\[Rho]", " ", 
         RowBox[{"d\[Phi]", "^", "2"}], " ", "cbar", " ", 
         RowBox[{"R", "^", "3"}], " ", 
         RowBox[{
          SubscriptBox[
           OverscriptBox["r", "^"], "2"], "^", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Caero", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "eD"}], "+", 
           RowBox[{
            RowBox[{"Caero", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "eL", " ", 
            RowBox[{"Sign", "[", 
             RowBox[{"-", "d\[Phi]"}], "]"}]}]}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"paero", ",", "Faero"}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Psi]", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Pi]", "/", "2"}], " ", "-", " ", 
       RowBox[{"CD0", " ", "should", " ", "remain", " ", "in", " ", 
        RowBox[{"drag", ".", "\[IndentingNewLine]", "Need"}], " ", "to", " ", 
        "check", " ", "lift", " ", 
        RowBox[{"sign", ".", " ", "Trying"}], " ", "to", " ", "coincide", " ",
         "with", " ", "2", "D", " ", "sim", " ", "results", " ", 
        RowBox[{"https", ":"}]}]}], "//", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"github", ".", "com"}], "/", "avikde"}], "/", 
           "robobee3d"}], "/", "issues"}], "/", "88"}], "\[IndentingNewLine]", 
        RowBox[{"i", ".", "e", ".", " ", "when"}], " ", "stroke", " ", 
        "vel"}], " ", ">", " ", "0"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"hinge", " ", "ang"}], " ", "<", " ", 
     RowBox[{"0", " ", "for", " ", 
      RowBox[{"lift", "."}]}]}]}], "\[IndentingNewLine]", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"aeroForce", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Pi]", "/", "4"}], ",", 
          RowBox[{"-", "1"}], ",", "0"}], "}"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "//.", "wingsubs"}], "/.", "params"}], 
    "//", "Simplify"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.785163733169914*^9, 3.785163768788862*^9}, {
   3.7851638219331465`*^9, 3.7851638221495667`*^9}, {3.7851638575914416`*^9, 
   3.7851638656639175`*^9}, {3.785163952461292*^9, 3.785163959194874*^9}, {
   3.785181113450061*^9, 3.7851811849114933`*^9}, {3.785181223420051*^9, 
   3.7851814480879383`*^9}, {3.7851815284493275`*^9, 3.785181574334261*^9}, {
   3.785181607927892*^9, 3.7851818562133703`*^9}, {3.785181897023181*^9, 
   3.785181973204109*^9}, {3.7851820183846817`*^9, 3.785182035584442*^9}, {
   3.785182130927059*^9, 3.7851822788151007`*^9}, {3.785182768706132*^9, 
   3.785182824611698*^9}, {3.7851835377984476`*^9, 3.7851835381465435`*^9}, {
   3.785183574632366*^9, 3.7851838963880434`*^9}, {3.785183935005065*^9, 
   3.78518393938645*^9}, {3.7852369154777946`*^9, 3.7852369276973515`*^9}, {
   3.785237068661893*^9, 3.785237159502931*^9}, {3.7852390830870667`*^9, 
   3.785239105554223*^9}, {3.785239223653453*^9, 3.785239230566188*^9}, {
   3.785239332872146*^9, 3.7852394831645365`*^9}, {3.785239522904046*^9, 
   3.785239527846*^9}, {3.785239574459278*^9, 3.785239590976102*^9}, {
   3.785239663394473*^9, 3.785239765859336*^9}, {3.785239822253582*^9, 
   3.785239852287075*^9}, {3.7852411853333817`*^9, 3.7852412095104837`*^9}, {
   3.7852412747392893`*^9, 3.785241284555241*^9}, {3.785242577855811*^9, 
   3.7852426072696886`*^9}, {3.785242760532243*^9, 3.785242764687683*^9}, {
   3.785243042341342*^9, 3.785243082387663*^9}, {3.78524369984238*^9, 
   3.7852437033492184`*^9}, {3.785243878758131*^9, 3.7852438818282394`*^9}, {
   3.785250588656488*^9, 3.785250591357007*^9}, {3.7852507564570065`*^9, 
   3.7852507638104935`*^9}, {3.785253091532304*^9, 3.785253138847148*^9}, {
   3.7852531795009995`*^9, 3.7852531822852845`*^9}, {3.78525322760236*^9, 
   3.7852532347079835`*^9}, {3.785253269736401*^9, 3.7852533186729493`*^9}, {
   3.7852533499356813`*^9, 3.7852533536194243`*^9}, {3.7852534684496627`*^9, 
   3.7852534710220785`*^9}, {3.7852535409719725`*^9, 3.785253541682535*^9}, {
   3.7852537363906927`*^9, 3.7852537365316057`*^9}, 3.785254209543125*^9, 
   3.785254249221677*^9, {3.7852618005450153`*^9, 3.785261822043441*^9}, {
   3.785261857787959*^9, 3.7852618586202583`*^9}, {3.7852618892287784`*^9, 
   3.785261946037554*^9}, 3.785262059440189*^9, {3.7852620993981705`*^9, 
   3.785262120227375*^9}, {3.785263145319659*^9, 3.7852631460221624`*^9}, {
   3.7852632381337895`*^9, 3.7852632587033963`*^9}, {3.7852633271116285`*^9, 
   3.7852633460395827`*^9}, 3.785263472773306*^9, 3.785263866855198*^9, 
   3.785268139559249*^9, {3.78526972929168*^9, 3.785269729727641*^9}, {
   3.7852699615872583`*^9, 3.7852699902755356`*^9}, {3.7856194498325715`*^9, 
   3.7856194866198425`*^9}, {3.785620292632592*^9, 3.7856204176271205`*^9}, {
   3.785621000831133*^9, 3.7856210498957686`*^9}, {3.785621146464704*^9, 
   3.785621189540737*^9}, {3.7856212292364116`*^9, 3.785621241303481*^9}, {
   3.785830618745776*^9, 3.78583062683438*^9}, 3.785831709123893*^9, {
   3.7858334724121633`*^9, 3.7858334949023423`*^9}, {3.7858335584412346`*^9, 
   3.7858335601674433`*^9}, {3.785833642845225*^9, 3.785833650689127*^9}, {
   3.7858356619043493`*^9, 3.7858357311644955`*^9}, {3.7858357783741217`*^9, 
   3.7858357974762607`*^9}, {3.785835833989029*^9, 3.7858358613427205`*^9}, {
   3.785837432637359*^9, 3.785837437126499*^9}, 3.786458227189885*^9, 
   3.7864587047832603`*^9, {3.7876925378097825`*^9, 3.787692553311702*^9}, {
   3.7876926296788936`*^9, 3.787692630674734*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"7405a249-8e74-42ba-8cb9-4ad6b37b789b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Lagrangian", " ", "setup"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"q", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Phi]", "[", "t", "]"}], ",", 
       RowBox[{"\[Psi]", "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dq", "=", 
     RowBox[{"D", "[", 
      RowBox[{"q", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ddq", "=", 
     RowBox[{"D", "[", 
      RowBox[{"dq", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"for", " ", "analysis"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pwing", "=", 
     RowBox[{
      RowBox[{"Rspar", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "ycp", ",", "0"}], "}"}], "+", 
        RowBox[{
         RowBox[{"Rhinge", "[", 
          RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", 
           RowBox[{
            RowBox[{"-", "\[Gamma]"}], " ", "cbar"}]}], "}"}]}]}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"See", " ", 
       RowBox[{"https", ":"}]}], "//", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"github", ".", "com"}], "/", "avikde"}], "/", 
           "robobee3d"}], "/", "pull"}], "/", "105"}], "#issue"}], "-", 
       RowBox[{
       "349667100", " ", "for", " ", "my", " ", "replacement", " ", "of", " ",
         "Ixx"}]}]}], ",", "Izz"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KE", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "2"}], "Ixx", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], "^", "2"}]}], "+", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "Izz", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "'"}], "[", "t", "]"}], "^", "2"}]}], "+", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "mwing", " ", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"pwing", ",", "t"}], "]"}], ".", 
        RowBox[{"D", "[", 
         RowBox[{"pwing", ",", "t"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "ma", " ", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Tau]inv", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", "t"}], "]"}], "^", 
        "2"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PE", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", "2"}], " ", "k\[Psi]", " ", 
        RowBox[{
         RowBox[{"\[Psi]", "[", "t", "]"}], "^", "2"}]}], "+", 
       RowBox[{
        RowBox[{"1", "/", "2"}], 
        RowBox[{"(", 
         RowBox[{"ko", " ", 
          RowBox[{"ycp", "^", "2"}]}], ")"}], 
        RowBox[{
         RowBox[{"\[Phi]", "[", "t", "]"}], "^", "2"}]}], "+", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "ka", " ", 
        RowBox[{
         RowBox[{"\[Tau]inv", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], ")"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L2", "=", 
     RowBox[{"KE", "-", "PE"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Llhs", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"L2", ",", 
            RowBox[{"{", "dq", "}"}]}], "]"}], ",", "t"}], "]"}], "-", 
        RowBox[{"D", "[", 
         RowBox[{"L2", ",", 
          RowBox[{"{", "q", "}"}]}], "]"}]}], ")"}], "//", "Simplify"}]}], 
    ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Llhs", "=", 
     RowBox[{
      RowBox[{"First", "@", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"And", "@@", 
          RowBox[{"Thread", "[", 
           RowBox[{"Llhs", "\[Equal]", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Phi]", "''"}], "[", "t", "]"}], ",", 
           RowBox[{
            RowBox[{"\[Psi]", "''"}], "[", "t", "]"}]}], "}"}]}], "]"}]}], "//",
       "Simplify"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Add", " ", "non"}], "-", "lagrangian"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"paero", ",", "Faero"}], "}"}], "=", 
     RowBox[{"aeroForce", "[", 
      RowBox[{"Join", "[", 
       RowBox[{"q", ",", "dq"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]aero", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"paero", ",", 
           RowBox[{"{", "q", "}"}]}], "]"}], "\[Transpose]"}], ".", "Faero"}],
        ",", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"R", ">", "0"}], ",", " ", 
          RowBox[{
           SubscriptBox[
            OverscriptBox["r", "^"], "1"], ">", "0"}]}], "}"}]}]}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Tau]damp", "=", 
     RowBox[{"-", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"b\[Psi]", " ", 
         RowBox[{
          RowBox[{"\[Psi]", "'"}], "[", "t", "]"}]}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]inp", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Tau]inv", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", 
        RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], "\[Tau]act"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]rhs", "=", 
     RowBox[{"\[Tau]aero", "+", "\[Tau]damp", "+", "\[Tau]inp"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Simplify", " ", "may", " ", "take", " ", "a", " ", "little", " ", 
     "time"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eoms", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{"Llhs", "\[Equal]", "\[Tau]rhs"}], "]"}], "//.", 
        "wingsubs"}], ",", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"cbar", ">", "0"}], ",", 
          RowBox[{
           RowBox[{"\[Psi]", "[", "t", "]"}], "\[Element]", "Reals"}], ",", 
          RowBox[{"ycp", ">", "0"}]}], "}"}]}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.785163733169914*^9, 3.785163768788862*^9}, {
   3.7851638219331465`*^9, 3.7851638221495667`*^9}, {3.7851638575914416`*^9, 
   3.7851638656639175`*^9}, {3.785163952461292*^9, 3.785163959194874*^9}, {
   3.785181113450061*^9, 3.7851811849114933`*^9}, {3.785181223420051*^9, 
   3.7851814480879383`*^9}, {3.7851815284493275`*^9, 3.785181574334261*^9}, {
   3.785181607927892*^9, 3.7851818562133703`*^9}, {3.785181897023181*^9, 
   3.785181973204109*^9}, {3.7851820183846817`*^9, 3.785182035584442*^9}, {
   3.785182130927059*^9, 3.7851822788151007`*^9}, {3.785182768706132*^9, 
   3.785182824611698*^9}, {3.7851835377984476`*^9, 3.7851835381465435`*^9}, {
   3.785183574632366*^9, 3.7851838963880434`*^9}, {3.785183935005065*^9, 
   3.78518393938645*^9}, {3.7852369154777946`*^9, 3.7852369276973515`*^9}, {
   3.785237068661893*^9, 3.785237159502931*^9}, {3.7852390830870667`*^9, 
   3.785239105554223*^9}, {3.785239223653453*^9, 3.785239230566188*^9}, {
   3.785239332872146*^9, 3.7852394831645365`*^9}, {3.785239522904046*^9, 
   3.785239527846*^9}, {3.785239574459278*^9, 3.785239590976102*^9}, {
   3.785239663394473*^9, 3.785239765859336*^9}, {3.785239822253582*^9, 
   3.785239852287075*^9}, {3.7852411853333817`*^9, 3.7852412095104837`*^9}, {
   3.7852412747392893`*^9, 3.785241284555241*^9}, {3.785242577855811*^9, 
   3.7852426072696886`*^9}, {3.785242760532243*^9, 3.785242764687683*^9}, {
   3.785243042341342*^9, 3.785243082387663*^9}, {3.78524369984238*^9, 
   3.7852437033492184`*^9}, {3.785243878758131*^9, 3.7852438818282394`*^9}, {
   3.785250588656488*^9, 3.785250591357007*^9}, {3.7852507564570065`*^9, 
   3.7852507638104935`*^9}, {3.785253091532304*^9, 3.785253138847148*^9}, {
   3.7852531795009995`*^9, 3.7852531822852845`*^9}, {3.78525322760236*^9, 
   3.7852532347079835`*^9}, {3.785253269736401*^9, 3.7852533186729493`*^9}, {
   3.7852533499356813`*^9, 3.7852533536194243`*^9}, {3.7852534684496627`*^9, 
   3.7852534710220785`*^9}, {3.7852535409719725`*^9, 3.785253541682535*^9}, {
   3.7852537363906927`*^9, 3.7852537365316057`*^9}, 3.785254209543125*^9, 
   3.785254249221677*^9, {3.7852618005450153`*^9, 3.7852618049458847`*^9}, {
   3.7852619352877183`*^9, 3.7852619378303013`*^9}, {3.785262049200818*^9, 
   3.7852620500145736`*^9}, {3.785262103253174*^9, 3.7852621096136494`*^9}, {
   3.785263447209785*^9, 3.7852634489854174`*^9}, 3.7852635401829467`*^9, {
   3.78526380795971*^9, 3.785263833479515*^9}, {3.785264076495087*^9, 
   3.7852640857027893`*^9}, {3.7852681432932625`*^9, 
   3.7852681474119186`*^9}, {3.785831869007831*^9, 3.785831870271266*^9}, {
   3.7858329219017763`*^9, 3.7858329347845373`*^9}, {3.785832983264346*^9, 
   3.7858330065270085`*^9}, 3.7858335037219863`*^9, {3.7858336604094815`*^9, 
   3.785833664118662*^9}, {3.786458626140443*^9, 3.786458639847027*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"b8b499bb-9d2f-4be1-820a-74f2d72ede84"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"For", " ", "analysis"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"compareEomTo2D", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eomsanalysis", ",", "Mm"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"eoms", " ", "for", " ", "analysis", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"comparison", " ", "to", " ", "2", "D"}], ")"}], ".", " ", 
          "Also"}], " ", "comment", " ", "out", " ", "the", " ", "rcopnondim",
          " ", "line"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"eomsanalysis", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{"Llhs", "\[Equal]", "\[Tau]rhs"}], "]"}], 
            RowBox[{"(*", 
             RowBox[{"//.", "wingsubs"}], "*)"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Tau]2", "\[Rule]", "0"}], ",", 
              RowBox[{"\[Epsilon]aero", "\[Rule]", "0"}]}], "}"}]}], ",", 
           RowBox[{"Assumptions", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"cbar", ">", "0"}], ",", 
              RowBox[{
               RowBox[{"\[Psi]", "[", "t", "]"}], "<", "0"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], ">", "0"}], ",", 
              RowBox[{"ycp", ">", "0"}]}], "}"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Get", " ", "all", " ", "the", " ", "terms", " ", "on", " ", "the", 
          " ", "LHS"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"eomsanalysis", "=", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"eom", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"eom", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"eom", ",", "eomsanalysis"}], "}"}]}], "]"}], "//", 
          "Simplify"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Mm", "=", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{"eomsanalysis", ",", 
              RowBox[{"{", "ddq", "}"}]}], "]"}], "//", "Simplify"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<M=\>\"", ",", 
            RowBox[{"Mm", "//", "MatrixForm"}]}], "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<M=\>\"", ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{"KE", ",", 
               RowBox[{"{", 
                RowBox[{"dq", ",", "2"}], "}"}]}], "]"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Tau]2", "\[Rule]", "0"}], ",", 
               RowBox[{"\[Epsilon]aero", "\[Rule]", "0"}]}], "}"}]}], "//", 
            "Simplify"}], "//", "MatrixForm"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<N=\>\"", ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{"PE", ",", 
               RowBox[{"{", "q", "}"}]}], "]"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Tau]2", "\[Rule]", "0"}], ",", 
               RowBox[{"\[Epsilon]aero", "\[Rule]", "0"}]}], "}"}]}], "//", 
            "Simplify"}], "//", "MatrixForm"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"CoefficientList", "[", 
        RowBox[{
         RowBox[{"eomsanalysis", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"\[Phi]", "''"}], "[", "t", "]"}]}], "]"}], "*)"}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"compareEomTo2D", "[", "]"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.785163733169914*^9, 3.785163768788862*^9}, {
   3.7851638219331465`*^9, 3.7851638221495667`*^9}, {3.7851638575914416`*^9, 
   3.7851638656639175`*^9}, {3.785163952461292*^9, 3.785163959194874*^9}, {
   3.785181113450061*^9, 3.7851811849114933`*^9}, {3.785181223420051*^9, 
   3.7851814480879383`*^9}, {3.7851815284493275`*^9, 3.785181574334261*^9}, {
   3.785181607927892*^9, 3.7851818562133703`*^9}, {3.785181897023181*^9, 
   3.785181973204109*^9}, {3.7851820183846817`*^9, 3.785182035584442*^9}, {
   3.785182130927059*^9, 3.7851822788151007`*^9}, {3.785182768706132*^9, 
   3.785182824611698*^9}, {3.7851835377984476`*^9, 3.7851835381465435`*^9}, {
   3.785183574632366*^9, 3.7851838963880434`*^9}, {3.785183935005065*^9, 
   3.78518393938645*^9}, {3.7852369154777946`*^9, 3.7852369276973515`*^9}, {
   3.785237068661893*^9, 3.785237159502931*^9}, {3.7852390830870667`*^9, 
   3.785239105554223*^9}, {3.785239223653453*^9, 3.785239230566188*^9}, {
   3.785239332872146*^9, 3.7852394831645365`*^9}, {3.785239522904046*^9, 
   3.785239527846*^9}, {3.785239574459278*^9, 3.785239590976102*^9}, {
   3.785239663394473*^9, 3.785239765859336*^9}, {3.785239822253582*^9, 
   3.785239852287075*^9}, {3.7852411853333817`*^9, 3.7852412095104837`*^9}, {
   3.7852412747392893`*^9, 3.785241284555241*^9}, {3.785242577855811*^9, 
   3.7852426072696886`*^9}, {3.785242760532243*^9, 3.785242764687683*^9}, {
   3.785243042341342*^9, 3.785243082387663*^9}, {3.78524369984238*^9, 
   3.7852437033492184`*^9}, {3.785243878758131*^9, 3.7852438818282394`*^9}, {
   3.785250588656488*^9, 3.785250591357007*^9}, {3.7852507564570065`*^9, 
   3.7852507638104935`*^9}, {3.785253091532304*^9, 3.785253138847148*^9}, {
   3.7852531795009995`*^9, 3.7852531822852845`*^9}, {3.78525322760236*^9, 
   3.7852532347079835`*^9}, {3.785253269736401*^9, 3.7852533186729493`*^9}, {
   3.7852533499356813`*^9, 3.7852533536194243`*^9}, {3.7852534684496627`*^9, 
   3.7852534710220785`*^9}, {3.7852535409719725`*^9, 3.785253541682535*^9}, {
   3.7852537363906927`*^9, 3.7852537365316057`*^9}, 3.785254209543125*^9, 
   3.785254249221677*^9, {3.7852618005450153`*^9, 3.7852618049458847`*^9}, {
   3.7852619352877183`*^9, 3.7852619378303013`*^9}, {3.785262049200818*^9, 
   3.7852620500145736`*^9}, {3.785262103253174*^9, 3.7852621096136494`*^9}, {
   3.785263447209785*^9, 3.7852634489854174`*^9}, 3.7852635401829467`*^9, {
   3.78526380795971*^9, 3.785263833479515*^9}, {3.785264076495087*^9, 
   3.7852640857027893`*^9}, {3.7852681432932625`*^9, 
   3.7852681474119186`*^9}, {3.785831869007831*^9, 3.785831870271266*^9}, {
   3.7858329219017763`*^9, 3.7858329347845373`*^9}, {3.785832983264346*^9, 
   3.7858330065270085`*^9}, {3.7858330819961247`*^9, 3.7858331447841687`*^9}, 
   3.785833279240972*^9, 3.786458198877563*^9, {3.7864585529787188`*^9, 
   3.786458647859321*^9}, 3.78645869620494*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"7c173ea2-2946-49d8-b3f4-f6b2d745c11e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"wing", " ", "params", " ", "r1h"}], ",", 
    RowBox[{
     RowBox[{"r2h", " ", "from", " ", "Chen", 
      RowBox[{"(", "2016", ")"}]}], ":", " ", 
     RowBox[{"see", " ", "the", " ", "\"\<incorporate R\>\"", " ", 
      RowBox[{"notes", ".", " ", "N"}], " ", "is", " ", "from", " ", "the", 
      " ", "julia", " ", "traj", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"just", " ", "used", " ", "to", " ", "map", " ", "dt"}], 
        ")"}], "."}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"paramsFixed", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ko", "\[Rule]", "0.55"}], ",", 
       RowBox[{"ma", "\[Rule]", "6"}], ",", 
       RowBox[{"ka", "\[Rule]", "150"}], ",", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["r", "^"], "1"], "\[Rule]", "0.49"}], ",", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["r", "^"], "2"], "\[Rule]", "0.551"}], ",", 
       RowBox[{"\[Epsilon]aero", "\[Rule]", "0.001"}], ",", 
       RowBox[{"CDmax", "\[Rule]", "3.4"}], ",", 
       RowBox[{"CLmax", "\[Rule]", "1.8"}], ",", 
       RowBox[{"CD0", "\[Rule]", "0.4"}], ",", 
       RowBox[{"\[Rho]", "\[Rule]", 
        RowBox[{"1.225", "*", "0.001"}]}], ",", 
       RowBox[{"\[Gamma]", "\[Rule]", "0.5"}], ",", 
       RowBox[{"Ndt", "\[Rule]", "45"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"paramsOpt", "=", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "cbar", ",", "\[Tau]1", ",", "mwing", ",", "k\[Psi]", ",", "b\[Psi]", 
         ",", "\[Tau]2", ",", "Aw", ",", "dt"}], "}"}], "\[Rule]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"4.928", ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "15.98", "*)"}], "14.5", ",", " ", 
         "\[IndentingNewLine]", "0.971", ",", " ", "\[IndentingNewLine]", 
         RowBox[{"(*", "26.653", "*)"}], "16", ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "19.792", "*)"}], "8", ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "31.959", "*)"}], "29", ",", " ", 
         "\[IndentingNewLine]", "97.113", ",", " ", "\[IndentingNewLine]", 
         RowBox[{"(*", "0.087", "*)"}], "0.145"}], "\[IndentingNewLine]", 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"paramsFixed", ",", "paramsOpt"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eomsp", "=", 
     RowBox[{"eoms", "/.", "params"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"other", " ", "stuff"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ic3", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Phi]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Psi]", "[", "0", "]"}], "\[Equal]", "0.01"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "'"}], "[", "0", "]"}], "\[Equal]", "0.01"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"c1", "=", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", "\[Rule]", 
        RowBox[{"0.08", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[Pi]", " ", "130", "t"}], "]"}]}]}], "}"}]}], ";"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "c2", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"c2", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"freq", "=", 
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"Ndt", "*", "dt"}], ")"}]}]}], ",", 
         RowBox[{"thCoeff", "=", "0.1"}]}], "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "0.1", " ", "for", " ", "flattened", " ", "sine", " ", "used", " ", 
         "in", " ", "robobee"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\[Tau]act", "\[Rule]", 
        RowBox[{"75", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"2", "\[Pi]", " ", "freq", " ", "t"}], "]"}], "-", 
           RowBox[{"thCoeff", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"6", "\[Pi]", " ", "freq", " ", "t"}], "]"}]}]}], 
          ")"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Make", " ", "sure", " ", "reasonable"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eomsfinal", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{"eomsp", ",", "ic3"}], "]"}], "/.", 
       RowBox[{"c2", "[", "]"}]}], "/.", "params"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"eomsfinal", "/.", 
      RowBox[{"Thread", "[", 
       RowBox[{"q", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.3", ",", "0.2"}], "}"}]}], "]"}]}], "/.", 
     RowBox[{"Thread", "[", 
      RowBox[{"dq", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", "0.1"}], "}"}]}], "]"}]}], "*)"}], "\n", 
   RowBox[{"(*", "Sim", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tf", "=", "50"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"First", "@", 
      RowBox[{"NDSolve", "[", 
       RowBox[{"eomsfinal", ",", "q", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tf"}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"sol", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"dq", "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"q", "/.", "sol"}], ",", "t"}], "]"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"sol", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"ddq", "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"dq", "/.", "sol"}], ",", "t"}], "]"}]}], "]"}]}], "]"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sols", "=", 
     RowBox[{"{", "sol", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Nn", "=", 
     RowBox[{"Length", "@", "sols"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Period=\>\"", ",", 
      RowBox[{
       RowBox[{"Ndt", "*", "dt"}], "/.", "params"}], ",", "\"\<, freq=\>\"", 
      ",", 
      RowBox[{"1000", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Ndt", "*", "dt"}], "/.", "params"}], ")"}]}]}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t2", "=", 
     RowBox[{"tf", "-", "2.85"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t1", "=", 
     RowBox[{
      RowBox[{"t2", "-", 
       RowBox[{"Ndt", "*", "dt"}]}], "/.", "params"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"\[Tau]inv", "[", "\[Phi]o1", "]"}], ",", "\[Phi]o1"}], 
             "]"}]}], "/.", 
           RowBox[{"\[Phi]o1", "\[Rule]", "\[Phi]o"}]}], "//.", "wingsubs"}], 
         "/.", "params"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Phi]o", ",", 
          RowBox[{"-", "0.6"}], ",", "0.6"}], "}"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<T\>\""}]}], "]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"plotTrajs", "[", 
      RowBox[{"sol", ",", "t2"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"debugComponentsPlot", "[", 
      RowBox[{"sol", ",", "t2"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Legended", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Phi]", "[", "t", "]"}], ",", 
                 RowBox[{"\[Psi]", "[", "t", "]"}]}], "}"}], "/.", 
               RowBox[{"sols", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ",", 
              RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "Nn"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\[Phi]", ",", "\[Psi]"}], "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Legended", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], ",", 
                 RowBox[{"\[Psi]", "[", "t", "]"}]}], "}"}], "/.", 
               RowBox[{"sols", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ",", 
              RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "Nn"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Phi]", "'"}], ",", "\[Psi]"}], "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Show", "@", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{",", 
            RowBox[{"{", 
             RowBox[{"soli", ",", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"sols3", ",", "sols4", ",", "sols5"}], "}"}], "}"}]}],
              "}"}]}], "]"}]}], ","}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Animate", "[", 
        RowBox[{
         RowBox[{"drawWing", "[", 
          RowBox[{
           RowBox[{"sols", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "a"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "t1", ",", "t2"}], "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"AnimationRepetitions", "\[Rule]", "1"}], ","}], "*)"}], 
         RowBox[{"DefaultDuration", "\[Rule]", "4"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.785163733169914*^9, 3.785163768788862*^9}, {
   3.7851638219331465`*^9, 3.7851638221495667`*^9}, {3.7851638575914416`*^9, 
   3.7851638656639175`*^9}, {3.785163952461292*^9, 3.785163959194874*^9}, {
   3.785181113450061*^9, 3.7851811849114933`*^9}, {3.785181223420051*^9, 
   3.7851814480879383`*^9}, {3.7851815284493275`*^9, 3.785181574334261*^9}, {
   3.785181607927892*^9, 3.7851818562133703`*^9}, {3.785181897023181*^9, 
   3.785181973204109*^9}, {3.7851820183846817`*^9, 3.785182035584442*^9}, {
   3.785182130927059*^9, 3.7851822788151007`*^9}, {3.785182768706132*^9, 
   3.785182824611698*^9}, {3.7851835377984476`*^9, 3.7851835381465435`*^9}, {
   3.785183574632366*^9, 3.7851838963880434`*^9}, {3.785183935005065*^9, 
   3.78518393938645*^9}, {3.7852369154777946`*^9, 3.7852369276973515`*^9}, {
   3.785237068661893*^9, 3.785237159502931*^9}, {3.7852390830870667`*^9, 
   3.785239105554223*^9}, {3.785239223653453*^9, 3.785239230566188*^9}, {
   3.785239332872146*^9, 3.7852394831645365`*^9}, {3.785239522904046*^9, 
   3.785239527846*^9}, {3.785239574459278*^9, 3.785239590976102*^9}, {
   3.785239663394473*^9, 3.785239765859336*^9}, {3.785239822253582*^9, 
   3.785239852287075*^9}, {3.7852411853333817`*^9, 3.7852412095104837`*^9}, {
   3.7852412747392893`*^9, 3.785241284555241*^9}, {3.785242577855811*^9, 
   3.7852426072696886`*^9}, {3.785242760532243*^9, 3.785242764687683*^9}, {
   3.785243042341342*^9, 3.785243082387663*^9}, {3.78524369984238*^9, 
   3.7852437033492184`*^9}, {3.785243878758131*^9, 3.7852438818282394`*^9}, {
   3.785250588656488*^9, 3.785250591357007*^9}, {3.7852507564570065`*^9, 
   3.7852507638104935`*^9}, {3.785253091532304*^9, 3.785253138847148*^9}, {
   3.7852531795009995`*^9, 3.7852531822852845`*^9}, {3.78525322760236*^9, 
   3.7852532347079835`*^9}, {3.785253269736401*^9, 3.7852533186729493`*^9}, {
   3.7852533499356813`*^9, 3.7852533536194243`*^9}, {3.7852534684496627`*^9, 
   3.7852534710220785`*^9}, {3.7852535409719725`*^9, 3.785253541682535*^9}, {
   3.7852537363906927`*^9, 3.7852537365316057`*^9}, 3.785254209543125*^9, 
   3.785254249221677*^9, {3.7852618005450153`*^9, 3.7852618049458847`*^9}, {
   3.7852619352877183`*^9, 3.7852619378303013`*^9}, {3.785262049200818*^9, 
   3.7852620500145736`*^9}, {3.785262103253174*^9, 3.7852621096136494`*^9}, {
   3.785263447209785*^9, 3.7852634489854174`*^9}, 3.7852635401829467`*^9, {
   3.78526380795971*^9, 3.785263846861192*^9}, {3.7852639620550404`*^9, 
   3.78526398507434*^9}, {3.7852641063890386`*^9, 3.785264110993264*^9}, {
   3.7852641564011707`*^9, 3.7852641571082044`*^9}, {3.7852641960012693`*^9, 
   3.785264216721649*^9}, {3.7852643149914474`*^9, 3.7852643475935354`*^9}, {
   3.7852644069901733`*^9, 3.7852644070928326`*^9}, {3.7852645182904143`*^9, 
   3.7852645377768126`*^9}, {3.7852681182959647`*^9, 3.785268128246215*^9}, 
   3.785269285445484*^9, {3.7852697491566772`*^9, 3.7852697592097054`*^9}, {
   3.785538474804677*^9, 3.7855384812477183`*^9}, 3.7855385189985633`*^9, {
   3.7855385626121855`*^9, 3.7855385662395616`*^9}, {3.785538601860875*^9, 
   3.785538671427971*^9}, {3.785538871632335*^9, 3.785538909036092*^9}, {
   3.7855389463657703`*^9, 3.785538946443622*^9}, {3.785538996298153*^9, 
   3.785539013899557*^9}, {3.7855391273264093`*^9, 3.785539209008417*^9}, {
   3.7855393350449324`*^9, 3.7855393651778836`*^9}, {3.785539442555038*^9, 
   3.7855394441299467`*^9}, 3.785539483284238*^9, {3.785539521251288*^9, 
   3.7855395227811527`*^9}, {3.7855395551847734`*^9, 3.785539555422123*^9}, {
   3.7855395893291893`*^9, 3.785539589949419*^9}, {3.785539636192365*^9, 
   3.7855396769178057`*^9}, {3.78553972259588*^9, 3.7855398435198965`*^9}, {
   3.7855398777105055`*^9, 3.785539954121219*^9}, {3.78561033198108*^9, 
   3.7856104315554953`*^9}, {3.7856105924933624`*^9, 3.785610618959749*^9}, {
   3.7856110746210976`*^9, 3.78561108814141*^9}, {3.7856111337757998`*^9, 
   3.785611138201707*^9}, {3.7856111763604455`*^9, 3.7856112032749205`*^9}, {
   3.7856112397351365`*^9, 3.7856112637734766`*^9}, {3.7856115446899896`*^9, 
   3.7856115449683943`*^9}, {3.785611584275441*^9, 3.785611584356102*^9}, {
   3.7856116328821845`*^9, 3.7856118315286884`*^9}, {3.7856196069008217`*^9, 
   3.785619647460866*^9}, {3.7856197076804085`*^9, 3.785619740585253*^9}, {
   3.785620220584257*^9, 3.785620286772295*^9}, 3.7856203291213646`*^9, {
   3.7856204645278873`*^9, 3.785620503571483*^9}, {3.785620595294875*^9, 
   3.7856206516223783`*^9}, {3.78562070093008*^9, 3.785620703179044*^9}, {
   3.78562108390994*^9, 3.7856211103944044`*^9}, {3.785621343166565*^9, 
   3.7856213761699677`*^9}, {3.7856214080899544`*^9, 3.7856214104346447`*^9}, 
   3.7856215894350953`*^9, 3.785621667110781*^9, {3.7856222098792725`*^9, 
   3.7856222197106028`*^9}, {3.7856225296821537`*^9, 3.7856225297917056`*^9}, 
   3.7858333152064767`*^9, {3.785833834000317*^9, 3.7858338359457874`*^9}, {
   3.785833878396678*^9, 3.785833925023576*^9}, {3.785833960324053*^9, 
   3.785833991089741*^9}, {3.78583525264093*^9, 3.7858353505219145`*^9}, {
   3.7858353845036736`*^9, 3.785835399633337*^9}, {3.7858354498533483`*^9, 
   3.7858354994134316`*^9}, {3.785835550896733*^9, 3.7858355797900333`*^9}, {
   3.7858359237897863`*^9, 3.785835943243043*^9}, {3.7858359959208937`*^9, 
   3.7858360237849255`*^9}, {3.7858360655689564`*^9, 
   3.7858363164565797`*^9}, {3.7858363712222834`*^9, 
   3.7858363972293186`*^9}, {3.7858364680972967`*^9, 3.785836613740854*^9}, {
   3.7858367010687027`*^9, 3.7858367291513357`*^9}, {3.7858370359648848`*^9, 
   3.785837077485405*^9}, {3.7858371352936296`*^9, 3.785837135721219*^9}, {
   3.785837166998909*^9, 3.7858371868821044`*^9}, {3.7876928388770046`*^9, 
   3.7876928404652166`*^9}, {3.787693071328907*^9, 3.7876931220072036`*^9}, {
   3.787693162257538*^9, 3.787693190826539*^9}, {3.7876932259621763`*^9, 
   3.7876932274753127`*^9}, 3.787773505709655*^9, {3.787773563147003*^9, 
   3.7877735635816727`*^9}, 3.7877736466541567`*^9, {3.7877740679466352`*^9, 
   3.7877740681131487`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"51dba8ce-d54e-473b-8306-f61498bec997"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Period=\"\>", "\[InvisibleSpace]", "6.5249999999999995`", 
   "\[InvisibleSpace]", "\<\", freq=\"\>", "\[InvisibleSpace]", 
   "153.25670498084293`"}],
  SequenceForm["Period=", 6.5249999999999995`, ", freq=", 153.25670498084293`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.7856117181236324`*^9, 3.7856117472842274`*^9}, {
   3.785611822556508*^9, 3.785611832420286*^9}, 3.7856182917107253`*^9, 
   3.7856195327693353`*^9, {3.7856196079095793`*^9, 3.785619648254488*^9}, 
   3.785619708792785*^9, 3.7856197412604027`*^9, 3.7856203389831967`*^9, 
   3.7856204236524086`*^9, {3.7856204658232155`*^9, 3.785620504456672*^9}, {
   3.7856206300565457`*^9, 3.7856206524465322`*^9}, 3.7856207042580476`*^9, {
   3.785621055133337*^9, 3.78562111132628*^9}, 3.785621208968561*^9, 
   3.7856212459582443`*^9, 3.7856213799968123`*^9, 3.7856214117513294`*^9, 
   3.785621590169964*^9, 3.7856219801292534`*^9, {3.7856222107186995`*^9, 
   3.7856222205164337`*^9}, 3.7856225305327187`*^9, 3.78583067394069*^9, {
   3.785833315873413*^9, 3.7858333356725883`*^9}, 3.7858334021011252`*^9, 
   3.7858334420789747`*^9, 3.785833512397271*^9, 3.7858335734542665`*^9, 
   3.785833607230345*^9, 3.785833698609768*^9, 3.785833836742333*^9, {
   3.7858338882462716`*^9, 3.7858339258768277`*^9}, {3.7858339759716606`*^9, 
   3.7858339939847393`*^9}, {3.785835253678414*^9, 3.7858353513484545`*^9}, {
   3.7858353863596373`*^9, 3.7858354004402275`*^9}, {3.785835450593163*^9, 
   3.785835501284029*^9}, {3.7858355518192444`*^9, 3.785835580440194*^9}, 
   3.78583576868977*^9, 3.78583580327425*^9, 3.7858358663136873`*^9, {
   3.7858359249027925`*^9, 3.785835944085446*^9}, {3.7858359991182756`*^9, 
   3.7858360244895754`*^9}, {3.785836066640252*^9, 3.7858362010708904`*^9}, {
   3.7858362362322903`*^9, 3.785836323514908*^9}, {3.78583637307673*^9, 
   3.785836397995373*^9}, {3.785836469156339*^9, 3.7858366146745043`*^9}, {
   3.7858367051595297`*^9, 3.7858367301078415`*^9}, {3.7858370402658453`*^9, 
   3.7858370784883842`*^9}, 3.7858371365406604`*^9, {3.7858371689336524`*^9, 
   3.7858371875954933`*^9}, 3.785837441570032*^9, 3.786458077301555*^9, 
   3.7876918194673157`*^9, 3.787692589085015*^9, 3.787692708219276*^9, 
   3.787692841445862*^9, 3.787693123331563*^9, {3.7876931707705717`*^9, 
   3.787693191663977*^9}, 3.7876932284230876`*^9, 3.7877732203122826`*^9, 
   3.7877735071006627`*^9, 3.787773564329996*^9, 3.7877736473904066`*^9, 
   3.787774069123273*^9},
 CellLabel->
  "During evaluation of \
In[100]:=",ExpressionUUID->"ff7768b9-0bda-4418-8542-007f8f38b3d2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Phi]mag=\"\>", "\[InvisibleSpace]", "0.5871091076180988`", 
   "\[InvisibleSpace]", "\<\", \[Psi]mag=\"\>", "\[InvisibleSpace]", 
   "1.1329252865943185`", "\[InvisibleSpace]", "\<\", avglift=\"\>", 
   "\[InvisibleSpace]", "184.65105098904354`"}],
  SequenceForm[
  "\[Phi]mag=", 0.5871091076180988, ", \[Psi]mag=", 1.1329252865943185`, 
   ", avglift=", 184.65105098904354`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.7856117181236324`*^9, 3.7856117472842274`*^9}, {
   3.785611822556508*^9, 3.785611832420286*^9}, 3.7856182917107253`*^9, 
   3.7856195327693353`*^9, {3.7856196079095793`*^9, 3.785619648254488*^9}, 
   3.785619708792785*^9, 3.7856197412604027`*^9, 3.7856203389831967`*^9, 
   3.7856204236524086`*^9, {3.7856204658232155`*^9, 3.785620504456672*^9}, {
   3.7856206300565457`*^9, 3.7856206524465322`*^9}, 3.7856207042580476`*^9, {
   3.785621055133337*^9, 3.78562111132628*^9}, 3.785621208968561*^9, 
   3.7856212459582443`*^9, 3.7856213799968123`*^9, 3.7856214117513294`*^9, 
   3.785621590169964*^9, 3.7856219801292534`*^9, {3.7856222107186995`*^9, 
   3.7856222205164337`*^9}, 3.7856225305327187`*^9, 3.78583067394069*^9, {
   3.785833315873413*^9, 3.7858333356725883`*^9}, 3.7858334021011252`*^9, 
   3.7858334420789747`*^9, 3.785833512397271*^9, 3.7858335734542665`*^9, 
   3.785833607230345*^9, 3.785833698609768*^9, 3.785833836742333*^9, {
   3.7858338882462716`*^9, 3.7858339258768277`*^9}, {3.7858339759716606`*^9, 
   3.7858339939847393`*^9}, {3.785835253678414*^9, 3.7858353513484545`*^9}, {
   3.7858353863596373`*^9, 3.7858354004402275`*^9}, {3.785835450593163*^9, 
   3.785835501284029*^9}, {3.7858355518192444`*^9, 3.785835580440194*^9}, 
   3.78583576868977*^9, 3.78583580327425*^9, 3.7858358663136873`*^9, {
   3.7858359249027925`*^9, 3.785835944085446*^9}, {3.7858359991182756`*^9, 
   3.7858360244895754`*^9}, {3.785836066640252*^9, 3.7858362010708904`*^9}, {
   3.7858362362322903`*^9, 3.785836323514908*^9}, {3.78583637307673*^9, 
   3.785836397995373*^9}, {3.785836469156339*^9, 3.7858366146745043`*^9}, {
   3.7858367051595297`*^9, 3.7858367301078415`*^9}, {3.7858370402658453`*^9, 
   3.7858370784883842`*^9}, 3.7858371365406604`*^9, {3.7858371689336524`*^9, 
   3.7858371875954933`*^9}, 3.785837441570032*^9, 3.786458077301555*^9, 
   3.7876918194673157`*^9, 3.787692589085015*^9, 3.787692708219276*^9, 
   3.787692841445862*^9, 3.787693123331563*^9, {3.7876931707705717`*^9, 
   3.787693191663977*^9}, 3.7876932284230876`*^9, 3.7877732203122826`*^9, 
   3.7877735071006627`*^9, 3.787773564329996*^9, 3.7877736473904066`*^9, 
   3.787774070785314*^9},
 CellLabel->
  "During evaluation of \
In[100]:=",ExpressionUUID->"c3549ebe-78b9-44af-930c-6641214a89ef"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJw12Hk0Fe//APB7U0qWSpS97JK9RKXel5TShlKJkEiWRNmXCMkeIpJ9p+xc
4vIgWwnJniXdW0g+kqKxxPfpnN/vrzmvM2dmnpnnfd7LCJvd0bNYRyKROMkk
0r8jvwG7xL59DKRzj6fhZyaZoiFfqCuvwECf+iwbr6STKdYbdL32yjJQJlP6
XF0KmVJZHN0jKslAiQFc76OfkykXNwv4cfEzUEBWsId2JJkSWi09Nr+OgShX
OpanPcmUVcGT8ZUf6MhxQ/sCiz6Z8pnuy3H0Lh1lXp5T9tlEpvCOd8+xp35G
g8LbRiTsSRS3rOHMqpExpDK1t7Ds8xrYseceUBMaQ8Gu9CvppDXIHUoN2JA4
iqhCZ5YrxFahacf1I2d4R1DGxcKGFzZ/oUmz/7uA0xDa3Nz4hUZdgZ+oRz92
YBB95Rg4/3XHCtiWq19ruzyAECn6vkjEMrxNtDAKovYhXdVlK2W2ZXAhLRIk
xV5UeFkxhZK4BDpF23VFSrvRTVdFQ/LhJWC78DWlnesDct5y1Ex3aBF22kuE
K0W9R8OQtSUyZBHYSUfGNUbb0eg5MZ6eo4twrOqwpGP2W7SNJLW5aoWAnVa8
6Tw5LShgYKfTp2YCSv+ac3RZNqLwopPjodEEDGT/peUbNiKWx488xp4QsKL7
1Cb4fCNyvTvqsx/7RFZL6zGVRvRyPGxoJJKAj+ek/ajMjUgvj6VT+TEB61J+
/Hme+Rpd7j+fvBREgI6G++ebjAb0wiHErt+bgP8CHpetGNcjV0MztY+2BORO
fi3p1a1HHnupR45gW2irFRdo1qMj8jM1KTYEjLB/yzeVrkddzPWHrKwJaI/W
yG6cr0Osi7OipFsE5KfNPwsNrUOqJ7Mzjt/A6/GsWFV1RMhKVuKL3FUC9Cjm
y1MGCPn73ktONSDgLdM2IgEQCrFy6ufCrgq2/kliRUhFRL9m5TIB8XGCX1pT
a1GFQLXxB30Crpb5vbnSWYPUDVinonUJGPp+PtpVmobIo4fKnU8RICFWLpO5
lYYu0TIVl08SYG/E19S1UI32xt0U88Fmbv8yL/26GiHtUtsQLQIUCtwujxhW
o86apYDs4wQE2KfzaYRVIfcmn755dQKU5hdSWGcr0WfLgwFThwjwkjU6qNpX
idoUWku9sFst6rvMaZWo03fLpW3Y1/pC1tUGVqLqF7HEwYMEBFbsNrcXrkQm
tpSyCBUCRt20JXv1KpDFl5LlC/sJCFpNzE8qL0cpT/o9FOUIcJX7+CkgsRy5
Xcx0H5Ql4JbxDs47D8sR7cH7kQfYJ2vDnUG/HN32EezqlsHvc98bxn6XIaG+
HGvPvQT4/zXtEt5fhkbaDc3GpAi4vyI6n1FSgtIK5mR+iRJgJ2MqGRZfgh5m
fcrOxjY2SjBw8i1BRZPyAUbYR2hctcf1SlB2/IhtiwiON48Nj8Z/FqP41azP
qcIEuC2P80gpFiNl0rCZ1S4CJn5fcLtkUoj4nARjNPgJENn3WoBnbyHK2Ogh
ssqH7++gVDe4UIBccspEq7D7/tu68Vp4AdItSXywD7t5vD36Rk0+ct/plLeX
l4CMAa0ie/6XSPpbb67iTgLGdlRcUJp4gaT4fRx+7yBAQF/iz6+SFyi/Nepl
BfaTrvVHXbTxea8+T8D2fVvf5uWWh6RdBR5e5CbgOu3wRHB/DoqcWZCL3k5A
wlJe8Jn0HGQ9u0PaGHtAlU+O404OYv6lGieFrVNOOEYy5yA9UZv2Wk4CKAXl
6+KUs1G76Jf42W0ECKXIC2U+yUTVNKUaq604/vxE9dH5NOQ2oLpUzE6AaTFF
hhBKQzM6Zt9CscdHrzEpzqSimjw1tVvYcwfjitNCU9HWnnm23dibZtk4At6k
oMRBnqvRbATYVk6HPQtIQr22qimPWXE8bJdUYxVPQqE5H1vtsf3srk95vk5E
VncXL+phx4v1nTAlJSLyj5TYHdgtEWhNwv05YjPWak7fjPfDKsqh7HYcohtG
NL9nIUCu8d0uCbY4lPiuQLwS++CujR2xebHoo/iuyWRsnV4PaY+Jp0jg0PRT
e2wvdQuG+vUYJJ5MPN+BHZiQHFm6Fo3amm5yk7Gj/wyCeFI0+ryLe+77JgLy
8s8lbBp6goq1pXsbsAd4VfU7L0ah6udr6k7YXxzvMqn/ikRGh1V7zbB/dL4s
LomMRBz1qW062MwBwhxPOyJQaDiJLot98wt3+KuIcDRZVVs2vRGvJz54KqE9
DHW9P399BDtaZ+2Ez+YwpDi+3qEDu542uXbCPwRZ6PW+KsYWiKl26HEJRJNC
32Y9sVt//noRWvkIbdmxOGeP7XROZlxzMQBJ/dG6aIHdsTHxarn7QzQtl7T/
PLa7eW/07Wp/9MQlvVQTW6KevVN8xQ9JhDMiD2F7u98/9tTLF5lZb7WVxJbp
p3qdq32Aem4tWwphD+z7UcG85oPqsgRfc2Nf/4iuzJC80WTp+tgN2FVPFNqN
fb1Q4brWLavMBHCeTVXvZPJEmyLQxAJ2I/KVLmJ2Q+3NJ8u/YQu6/UraHeiC
/A4M5jGwnZXMt0eyOCMTh+drI9gd33sekUMcUcpseOkAtmTm8RUHtnvI6EBp
cze2jzHVnh7mgB60bzzYiT2wU/Kr3hZ71H0qdHMbtlmafGmA8G00o0U53ILN
xb0twVLMGqnfFm17jd38aM7/pKQl4rmlXFWH7bLUfXuPtDl6/MNpUy221O3y
S5tlr6Ok11/Kq7HLkKx3n4kR2pL/oOEV9s7MWZ04i0voodcZuUps9+BSkas2
Osh1y/FFKnbVp+lJFbomUj1hI/rPJP2vPC5DimiSHb0sx36vr+bDfIAHHhpS
Yv550pvJwH3hCIzJ/Bj+Z7n55cBXP7QhLbDN79/1+7mr5/juXgCt+71BFdhd
8sRuA1sDEJVg//Hv+Xbayudjb5rAjdS7pVXYAUqvaq2LzGATH3M/DbsH9fcG
5VvAeEOLAcIWObswnZN3C/L7Kw43YDt85Frfmm0DYwl9nk3YdZb7+Ccy7GDI
REzwDfajJSlepi576HBOFWj/tz71yoyo83ehjnLOowu775GWgkjHPYgS33uw
D1uM+6aWepszeLG6fBjDbjOc//D+lCv4b5rIH8e+m+ZvbNrqBmd4giansevl
0528mzxB6Y2FxxL2LWcl8hbN+7D8MrWbjONra019aFKDN/RLcYawYMuLz3aN
mjwAk84nO/mwfVsrYiV2+YKTX9a0CHafjfc1u1FfuEOf3S2Dfb+E49tfI39Q
4lbIBux3IEsSvPoIjlnflbbBLrDifZu8JxA+lxxddcGOeLIhWmQxEJZ4xTQe
Yl+YGJGUiguGUgEKXyr2x/Dw8/v6wmAtapJ1FJtW6c5LzQwHLZ5c0xnsRPpN
hqrTYzic/1h8DVvhefLhXcERMG3ZtyaM88HvGZdOsT1REOnps2CL/ZXJbv94
RBTYPsx+54Pdx2P+LJuIgsGU9dtjsCs0dG5Itz4B4yWr2Vps96dSf+QtY8BQ
X2RmJ85f5KODQocz42Bgwf3PKPacXqffCtszCJaW+rCITbdsmqxxfAZXivYL
cuN82hhZXELRjAeXYpf1Z7EDvwadOMF4Dm4qKzsbsDnCDtnpCifDRu0R/Xqc
j1dTFbo5g5JBlY+sysD+QZVQ7ZlNhsYPr4I34Hx/y57lwV7TFCjYvvjgNLZ2
/Lx2gXwqxEnzVw5jc8y0j5Z2pIEwr9sJLg4C1FieXxNcSwOPuCuOh7BtxG4N
B8inQ8cuz/XXsVuvrvtoEJEOzqxJpwuxfVsO9K7pZsDGd1QnnS0E/ElJbjvd
mwk9RVlqmbh+SdBstcs3ZEGUWUxEF/bF/oNvhA5kwTOPjVqr2CXsPc0/n2ZB
wsZHQ1dw/bN139QQeyUbgp7dTufE9XHsgkMlYygHpO+3lsTh+slx56jKWbZc
SHjOpNiGfSSYlUpVywUhJlbOVez4uszSoMRcSFOJWjHnws+T/Vggb5IHdevY
HVVwvX7DfCzTg/4CKpmlf87gel7yiitq+7cC4OjKO5WD+wX/hamuEMFCiHA2
cprGvrSvftt6vUJIcP/GrYj7j+WXtyN/VxUCa25ZefW/fkTnRqv1iSLwGP5u
3ydAgPUxWstpnmLY0f59WBj3L0t77JrZaSXgkm3dvFWMgBsnDcZP9ZWAVVNE
4g3sdzc1mQNmS0DPJmOKip2UzndiVawUaiWqxo3FCdAQbGmaCSuF0OMvLMsk
CAjZurup06QM+GsUYpz24Przp+t1JBMVTo5vGNeRx++Tsv7kBUEq8PmixiLs
U9oq77hUqOAeYLJjmwLO54kJPbHWVDgm58XZjd15zPJrYhcVzJOv3jFSwvsZ
scKcl1wBm+0lmvyVcf+1R1K74fArsK9bkZdRw/c38nw/d48G4yHuWQPauJ/i
GKgiQmiQcK1b7uxpAmLq9mWuptPgsfBbwQZsV7Hvbpt7aLA8XCuffwbv17SB
qMj+GhD9u1488ByOJw8VZ93fNXA9SdxEVw/3r/Fz/EWOCMI5CXNF3M8/tC0r
pR6qB35bZ0dpPB+Mh4kZ1GjVw+v9ZtubsE8WRq++vlgP28eocqZ4nmCbczzV
ZVcPTjT6x9jbBES5KH/6nlYPUxzAym6Pv68vdbMwawPo8nMOczgRUBlXeT1k
qAGs/bPr7fG8MtVI22Lq2QjiR0gzxTEEFEuNKzwNaIHc2m9thY0ECM+Rhlwf
vAUj84n9jEU8X/Tmx2jVtAPTf2MFZLVFsKHXBHeZvge2BX4mJl88n038p+fE
9AF4OGaUQvsXwdShwMskuBt+kamLvIpLEFgwMZ3M0gvGZ7v3ZEctwTvCyvxS
bh9Em4dxH9u0DPWtnkcvyA6AqX1yDbvvMnzIHNjd3DUIc0azl825VqBSOV/r
sd0QLD4gxraWrcD505xdST+GAaUImg9e+Qvr7OrMxCJHAYo4vJuEVkEpxHuv
K+sYwAR/QMv3VehQHdIKejsGd469ceJ7uwaEreGt3mefAbxORe6zIVGWGKJV
moZ0kJzvTqcvkCgdQd33MozpYD5WQHFaJFHS5f1k15vRQSMlQ4hlhUQ540FP
eX2LDsX5G1P3k8mUJM7URxrOdBg98KU3nhXP++pC+pRIOvy6w1yWsZtMCU7i
mT3cQgf+EY1NZafJFGPN1tznb+mwe7HPyP4cmbJvyuXGcjsdzv0WZJfTJVOG
lfv7qnrooMqh7Z9/iUyRa4+pOUing/Gv/77SrpMpH5Y5Q1T+0sF+QxoIuZIp
WakNmrEkBmyQLa2adSdTPLTuri4wMSCFmEpu9CJTxJ50OVA3M8DGMPClvR+Z
4iwdcUWZhwEyAmhyMJxM0X4PnDH8DFg+p9lZEUmm7HL+0fZbiAEz4u6SsdFk
Smv9OSgTZ4CKcrvC1XgyJdFyldi+hwEShv2MI4lkyl32gpJ7MgywXGfLJppC
ppwovWbbLc8A40G/FyzpZMr//Q+B//8f8j8VWJar
         "]]},
       Annotation[#, "Charting`Private`Tag$28059#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 1.5016380148060489`},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"T\"", TraditionalForm],
    PlotRange->{{-0.6, 0.6}, {1.5016380148060489`, 2.206027523394745}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwV13lcTF8bAPBKIi3apI0QIaUi0S91DubODaESpZJ22minlESRUqJSUggR
otBGy6G00N7M3CLSIqUUJZWK3uf9az7fz9y585znPs9zzl3qcMzMWYCPj6+W
n4/v/59G44v4+UxY+LV21a0zUgzaP34kYQt4Tnf08WYJBjmNP195Ftwb2hir
PJ9BYePbdwuZsvCJBR/inoow6OW4/3VRMxb+vtDFNk+QQWsm6jbIm7OwleGy
FjTGQ+J/QtzWWbLw3Eq/5ydbeIg7+YnjZMfC65eXXNkaz0PGjhsHHoH3Hi4p
rYvjoTc1cQK/wGtH3iTsj+Wh3NRt2mH2LLzVRY1tf4GH4g0fxKY5sHBWlvWg
VSgPmZ3x2844sbCxosSlDjceahIWIbQrC8tZ8Lr1MQ/Vy216qObDwo1Vsw5u
+sJFXHxexBNsUPbyu3MnF7UdYTyywQ2+xT6X27mor9BPU8eXhV+leNh0tXLR
rANPcw38YD0aQafd67ho0zU1YhLAwo/LQ8vl87notvwibkAQC+vI6Fz/EMFF
AQoC/8rOsLD1ZpmxkMVcNPPlj6TgWRaW+Sn0c40iF0VmD6+gwNbPDE60LOSi
FFbnrirwWYOnq1dKclHp0VdpNeEsPGB5uyZzFhcJlZ8y4J5j4VXU2g/r+jjo
qvtUcE8U/B/fO0mTbA4qKB6dmhPPwjHp3zMWbuCghz8m43eDRee+p0q0OCh1
Gb96InijkqXeIXUOOhMpZrMsAfKbRIsmq3CQsblq8eZEFp5WMZj8KMlBXQMW
wd5JLLy0PicvZ7AZiSsWTX+4zsKqekmBzrebkUtg2N/Hd1k4e93q/dozTajP
PeTzD7BesdE5tckm5Gob+Fo7g4Wdlto8U/7dhDy2eUfkgac+45G//U3IR8xe
rOQeC+v/siy+wDShkHS8qDaThSf+dDNtWU0o4e3M5v4syI9OmOG+/U2oXP5U
sGoeC6fyfc/4c70RPfGL7PIEr//2WNcisRGlNFwxygN7vunWzY5tRF4R92VY
+Syce0PpxO6wRqQ03JhlX8DCQ3WXb253aUQB1SqfUl+wsLuHZKqmZiNaffyt
gXQpXD/AZNOBDegSV2ZmphLW26ljPD+6Dk03VS1kV7HwSlZVyqKTdcitIUjr
Ijhs8naNsnsdYr/rsJerhvWq2ZXP7IDrSdYbrbcsvDMwPUljXh068ogVZV8D
9VjQdcjgXC3aesZvQXkDCw+mPXOU8a9Bo5rcNedaWfglp+OooMZbNOfYLKa9
j4XjIsuP2Tq+QZHVtWeTJ1nYQtF/0YPOYlQwWyh7uQiFJW1vL0y7kINCuw+H
H1SkcKouSuy6dhHltTkeHFensGH2n/uhkxnkWkHDc0cDuL47ka0ZVUi+P+aJ
ae+h8Fe3dxWpxuWklSUo9ciOwll68ZnpaW+JD7kdP+5F4fRP0rsU6+pJZXrB
dkNvCj+xjtLu76wnCuG1M+HgHRqbFB6O1ZMyozF3KR8Kjz8P75hWbiDSzdtZ
Gr4UFmEn3Rz0biC5X36OOvhTeNU1dPmkcCMZE0b76wMpzLvwTvXN3UYSZN4m
l3GGwvom+9n95U3k4FiPXC84OCNoeVNNE8HJP+VWn6VwhtuM/FNOExH6OFv+
MTi0UH27TXcTueyoJZ8XTuGSau9HhwSaSaZPhHzFOQpnrzqpoYCaCS9OU6En
isI9l90LbZ43k8J1/ymsjKbwmb9OY84vm0kKl6XgCt44c4B95HUzsZOzUhgE
zxdrV7JsaCbfb4Yr/L5I4aObPj740t9MBLLfK8y+ROGJh0anni7hEK26s4or
4ilsvfFjidJ5DgluSb3pATZJ8k6pjeGQt515KrngD5Ehjn4JHOIw1rtmWwKF
6z2NSh+lc0iCsvFm+0QKr47lPXlRxCF/vGUOpiVReNKMu2PvEIeUyWbcWJBK
Ydvd35+E7+IS8aWlyw6CK7YL8evs5RLrNS337oJ35Zy0b7PkklEknL0+jcLt
VlfNpJy4ZKWrJzG9QWF+d0GFpUFccrFoQ0fMLQq76L12K7/LJfvsKpcKZVB4
6KTdzPJRLlkuFmlpDO5Pb/lZNsElIy+2X7oC/n0Ruxz4yyVx0nXTi+/B/XZ/
6zomxCO1lZyWjfcpLGq2cPc2OR5haXTGuD6g8JfR5+yI/3hE+sPtN9ng7c9K
NbMMeaTrnNPUb3Br7JO8mq08crqj98iZhxTmS3l1Y3QHjxTHD227/ojCKyQK
pIeseERncupP7WO4/6zFfGGBPDLrfomW9BMKJ+uqha4L4ZHmvaGHD4AV2xTz
P57mEa/HArwe8EmmyEwxkkey7IRz/mVTuHRD5YktV3lEpUrWResZhYucg8XX
P+URqQTt5vh8CpelcFIKO+H3fN/MeGDB7M9t5l94pN7jFke2gMK6gZVT/V95
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
         "]]},
       Annotation[#, "Charting`Private`Tag$30676#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{40.625, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, {-0.35, 0.35}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\[Sigma]act", TraditionalForm],
    PlotRange->{{40.625, 47.15}, {-0.3511344568561986, 0.3511383842532626}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
ImuK/gedrJKJ
         "]]},
       Annotation[#, "Charting`Private`Tag$30723#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{40.625, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, {-0.5871091076180988, 0.5871091076180988}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\[Phi]", TraditionalForm],
    PlotRange->{{40.625, 47.15}, {-0.5871089614278512, 0.587117456047268}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwV13c8Vl0cAHBkr7yhCFERoUJWyznxPPehENopmaUkCiklIw0lhKZUVCSj
KCTlmEUysrOy93juQykl76+/ns/3c+8999xzfuM8Sx09bFx4uLi4yri5uP79
mk4rcHNZMfDhlodW2iEFaNe0a8xm8MVL3YUXWwqQ8/Qr1Qvg+ncB2ZVahSho
2syS35qBRdqK1AzaC9HbaZ9YURsGNu4+xzyiV4w0flbqye5g4HKPuQtSPaVI
/Jf/UZ09DDyve+9DtnYFqp9pr3O2Z+C51O+vdpTXoioZw+fqJxk4pLJ/Gd7T
jk4t5vlbFMzAP+rj3dfI9aCcd1O/BaIZ2OHOnrbjP/rRoTNBs2lPGFhfgjPN
uD2MBt38v02Ar5TpWOY8HkZH7M4Uaj9l4KhthdeWvhxGx0xOXMwCP43iftde
NoxOijmIvU9kYI3UpJGpX8PIPx4rfH7GwJy+kv0P9o2gmPK5jcOpDMx3UW5d
m/QoKpY9f25FFgN7OrufmvEaQ+neV7rdwRHNbisYAWPoXnWUaRaYKttmGnJ1
DHleTJJiZMN483d2DTwaQ/J0TapDDgPrKhx32Vg5hk6VLW+/n8vAJ9TvJyxW
Hkcrfcs3SeYzcPx7vTspn8aRVG3d433giC+SzsX144hrVYdQAjhx2/1HXzrG
UWM3p0GLMLDApU63L5xxFGwpf9yygIEXK02a2y2eQG0qHg9Cixj4SLeCedrh
CRRRLzU394GBP2ear1z6ewL9+fJxEfWRgePWnu8b52ajo9V+WmFgjWalOFN+
NqI+dTrIlDFwlY7x5nFxNvpDUku0ymH/8y/a8yixkWsK46pDBQN3rdy72HIz
GxkHe0sXVzPw4wPNCd6BbPQyQHW1UA0D103IyeIQNlLwb6G2gW0T037zX2Gj
n774dCv4+I4k/ssRbJTuLto6+YWBTQzur7d6wEZye588Uq5n4H0KP2wE8tho
ak29xqVmBp7cU79emGYj9ui58I/glJpNrqJTbDSarEILfmXgDU3KCcLTbNS3
3Df7Gtj9d/jG33/YqHHR4s03WmC9s79LpgnSKHfu4K77bQzc4hQTuV2RRuer
RwIzOyFeL1TwppvRyC8spmcS/HUjdUDHnEanzDZRel0M3DhR/jnTkkYexeEi
b8DV8Z6cpO00ss/RvvW+m4G/E14npwM0Mn7om1LWC/sZJ6uj6EkjAY95jR2D
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
1+rqggrQ/xbU5fk=
         "]]},
       Annotation[#, "Charting`Private`Tag$30770#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{40.625, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{
     None, {-1.24, -1.1329252865943185`, 1.1329252865943185`, 1.24}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\[Psi]", TraditionalForm],
    PlotRange->{{40.625, 47.15}, {-1.1329252860319319`, 1.1328957403995281`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
      "], {{
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[{
           PolygonBox[{{766, 770, 1, 548, 376, 246, 153, 89, 51, 586, 414, 
            284, 191, 127, 2, 549, 377, 247, 154, 90, 52, 3, 550, 378, 248, 
            155, 91, 53, 587, 415, 285, 192, 128, 4, 551, 379, 249, 156, 92, 
            54, 5, 552, 380, 250, 157, 93, 55, 6, 553, 381, 251, 158, 94, 56, 
            7, 8}}], PolygonBox[CompressedData["
1:eJwV0ssz1XEcxvGT0yabzGimUi1oXUL9A0pYuXSdkVHIqlBNTOW2xa7cQita
ZKMpNBNi0c2iGqK0oBWZpolRlOkyXt/Fe97P83x+Z+ac35zE4or88phIJLIF
j5CKaFTHDfkEDiDDQ3c9tBNP9Zs4iSL7Y1sKpvUWHMRxe6dtF4b1W6i0PdfT
saCfwnnbgJ6KGb0VtbZJPQerejIybV36bozojfqcXIAa/Yr+Qj6KRb1T/y5f
wmn9gj4op6FfjuKD/TYv2krRptfpU3Ju+N7ydvyw9/Av23W8kRNxyJ7F3bZJ
TuAH/I9H3ZrkeXmOz/EYx2Mdte5X+aV9lo/xIG/DKr64d/Fy+D18mV/zXvzB
GfdiHrIfxkN5Kz7a74TP2y6iXa/X38t54d3Jcfhp7+Xftq9cxW85CX+R4p7N
9+xTvIf7+D9/42fuzfxZn+dCHucd4T2hzv0av7J/4gwe4lgsuXXziq0cE/I+
nLWX8BPbkfBewv8pPC+XoUNv0KflfKzp9/UNuRrv5P3h/WMTGmpl4w==
            "]], PolygonBox[CompressedData["
1:eJwV0ltMznEcx/F/ohzqxhTlEJtjrpxVbM4qd6Fypy7SU5TD5nCvEx1ccYmb
ztFyw5CxOVZu2KghUxsTNsNmXPD6Xbz3/nw+3/Uc/k+LSqsLqiZFURSHj4ji
o+ifYZa4imsc4tGql2ELCuyttsV4rNchBavttbbJaNMPBWy39Sy80bdir61N
X4Inej1O2p7puZjQU7HGVqdPQbteHrDd0bPxVt+GfbZ2fSme6s36B/kgGvRT
+oCchy/6Zf2HfAyz9bV6vZwQPrf8lzvsZ+XXciFieky/K+egT07AO/tF/mwb
43J+yGnY7rafO2wveBl3h4eNr+H7ii08Zh/lEr7PKfiNc+6nedA+wvl8k5PC
5w+v4X6Ff9o/8XEe4AzMcVvHDbZEdOo1+rBchH55JirsFdxve8Wb+AYn4jtG
3S/xhH2cY/yI0/EHO9wLudP+kpdzD8fhW3ju7hd43P6eS/kBp+K82xkesu3B
LTk5/J39Kv+ynUCavj48D3kquvRafUQuRqVeqd+TN4f30XeiyNalr8Cg3oh0
bAjvbZsWfg/9MHZhLja6Ndqnh++hH8FuFNu7bZkY0pswD1n2JtsMXNOrkIsD
9h7bSjwP/5OYj2x7sy0J1/Vq5GEBctxa7Mno1Y8iHxlYiP9EKHNu
            "]]}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwl0TtMk2EAheHfJg4KosLCJBY2QWUCL1w2XEDwwopaW9goA65iLzrpSJjE
0ouLk5NiwoCiUSYWarwMykLARUhcjFKeLwxvznnP1zbf/zeeSF+fjEVRdAhz
2CM1NOn9SKGCmA/k0emskT/CB7TZKrhm7+NJlMPv2XI4bz/JH+I9Wm1ljNh7
+Tdc4G8wbrvLR/XP4fu8FB1cLotz/ASd0ncxz7f5Ff0T7vE8v6X/xBO+wmv6
Cz0uSxjWe+zN4RwTtg25JWflV2e/5WG8RLe9KhdlSiac/wnPhSXctH+X1XBP
WXT+S/7lz8P75Gsyw8/K4/yUXEXatil35NNwB2d18hUGbB8xrefsY/oPPObv
+Gm9iKv8Mv+CLv4aSdsdfkNfR4YvhP8XD3gHb9CzeIsW2wKG7Jf4bRTwHzP2
dvsxPYPlcH9bAYP2i+Gd4xn+4b79jL0+PAuO4gj2AW8wTVc=
            "]], PolygonBox[CompressedData["
1:eJwV0TtPk3EcBeBaFqYqIjqwWBUvUIQPAIUiG6VqN6sw4IYowQsQdNfNQrk5
mTAxVVvvTGgHF0KrhEmWqh1MNEJCTEwcfN7hyfmf8yNpG6Ij4+lb4VAodICn
hOq8eed51LhMvz+I6WmmeUuTfYkLbm36ZaZ4wxH7In1urXqOLTptRYbtl/Tv
JPQS47ZJ/TWN+gIJ2zl9j5Re4YFtTv9Mh15gyHZRv+H9iyf6N73X+wPBD7yn
Z7x3eKS/0v95r3oflvP0ep+1H5cb3LX9kH/kitx125cR1hi0f5FleV/Ouv+V
xyhx3V6VNTkrP7n/lmHynLdvy+fymky5N8uPjNpq8mfwP5Bf3erlS3ps77kZ
fEf7leB78DC46w3eOXr0M8FnktQ3mbFl9Qrt+jOuBr9FrxLX1xmz3dFfcEif
I247rT+mTMyWJ2NP6rcpcjD4vXTbW/QBJigQsWfpcjuln+QEUf4DFdBQKQ==

            "]]}]}, {}, {}}, {{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
           "]]},
         Annotation[#, "Charting`Private`Tag$30817#1"]& ]}}], {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{40.625, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, {184.65105098904354`}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}, "AxesInFront" -> True},
    PlotLabel->FormBox["\"FL [mg]\"", TraditionalForm],
    PlotRange->{{40.625, 47.15}, {-0.3422051086911572, 416.96727075634385`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
njpQ82ET+R8SgYoD
         "]]},
       Annotation[#, "Charting`Private`Tag$30865#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{40.625, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"FDx [mg]\"", TraditionalForm],
    PlotRange->{{40.625, 47.15}, {-300.1287742077484, 300.1363480163136}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
7PZPYkJvcZ51/NZSl0yDZ/FNSRN050Vhg0t4nm885yJ7FZ1TJrdl9WUaZhzQ
UGhHuygu/3v0Ig3PtMaUlN5xYEP0Z907F2jY9/HUumL0DMcWZbmzNOQd1Q8e
R7tZaW2pCqFh9pzJer33HHi7ZMnVg0E05Kt5uD1GO+z8+tHPh4a5wdaZNa14
nj+4ZiJui/OGmNTYvDact36+ynuA80hR1hvKCN0+ZO4kh/OKzWujjgZ0fgjx
tOLR8EB+07LWDxwQ268hHLSOhoX3x1xlPnJAPnE5806ZhkPb7pVZo1dJ7Vwh
vhLzx3uNWSe6pvZcp7s45kvV0osDnzjwVZApMJ/EvHIanfuvHeu/ac8fPax7
z+m7+wy+4PplrylMYV9/FuOaEYquea9smY7nrPeDDvbcDg6sDTrJuoZzU53g
6yDRTqzv9vLJyzh3n8jNHVXoxnmi4/7vdrwnfR451M79xoH1vRJPdBIoKF3z
4ksE+oX4PdHWSLx32qh31qK37nO+cjKEAoP68W6jPg4sC35xqvkIBTduh/fv
7OfAXt/o/gweBY42d8bMBvH3Xx6ruTED5+vLIhNX0b+dlaIyJ9ggUe852YrW
fnblR+kwG55v2jRtOYTx0PxSPfcTG9YurZthO4zn69M4E95DNgy/HBR2/oH9
P+i2XKI/G57NNhG5g+at3bc9zoMNqZtKFvSj5UYVZl1xYsOu20GLDo/g/Pb6
rtkbMzYUhi2QOPoT56Xtoiu9N7LBb9M6hYBfeB8KV3twdgYbdnomrCxDU6fO
ib2fYsHq25OKv9FiWetns0dZ8F68YvUJnHvnnXsptL+XBZtGTNROjXNA/f5x
l9P1LPiX5a0Xgfuk0HvDdzCNBSxu7+NXaB/1urm7k1gQ1mtOiU9xQP/KIZHP
l1gwd9XWHTfQuWmPrh3E+83CG/MOPvqN77+JWzgzgAUmrON9s3CuLimFVk9v
FsR/GTrCQ9fwhqOnj7BAUq458C363USKZIAjC+STU2J+/MF+dEdeeaUZCxw2
i4rr/sW/P3t10fXdLMhoC00MQuu8SNuiu4sFa6WcM4T+YT3x//J6xGOB+4O2
tSboPXsLlhQzLMg3My64gu7oGe18TbFA+7JWuSIfDW1/U8BnKwt8N2QYuKGH
5rP7JjazoPSNRM099PP7b8YSN7JgyjvSaBL9LJT8sNRlgb7Y39dbZ+C9IDjg
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
m5Zoal1k4NFUYUyNJ5v8D+bse9c=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$30925, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$30925#1"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV13k4VV8XB3BzhYgopKSSQhmSsVg45557z5FERYMMaSAVkkZClFQokpCU
BiqhDBnSTiVKKqKiQlHGDD8lRd71/lPPh3s86+6913evo+6x22GLiJCQ0Cr8
5///84dnCgvZU3BA/NZyzW6WrB3eHm+FZlO7jF92ssRz+J7mUfQmhYZ83w6W
hA4L7CRWUXD5RSsvp50lxcN7k6UdKLjvd1xMvoUl2r9fLlVeTYHIlUxJj7cs
kRkJ8jZwpiDxbnS7TQlLVEcqx/ag66oO1qYWsURrZOqZfHTapaDI4UKWMCOZ
hSbrKHj45fLaK3ksCRmpF7NcT0FMwJeMT1ksGRhZdInbSME6GQf/nkssefvn
U52nGwUtl89Z7gljie1m4+5baN1bSXfcQljy5EWsyH/oiPTRO1wwS/JSbPRD
3SlID7+8VeUgS+IsMqMveuDzk38/SvJjiUNYgKDBkwLj4e5QTTeWvJkk9ZDx
okDz8nErP3OW8P09G6LRQz+SlsmZsoQ0Puit/7+l7CruGLEk55avqqc3Bd4q
n0K/6LMkdkXDgZAdFNz1EQnSWcAS+zOXDYt2UqCirB8oUGBJjZLJTS1/Cmpn
3j2f0iUgb+G41E7051KFPcodAtK0vcEnGy0UTsbj2gWk436AruEeCvzWWWqE
tQiI6LrcvOUBFOQuNvaybhAQkwtaD+0DKVg6vO6f/SMBuaI8823gQdzPCaIz
Es4JSIaVz9IitPSs7ronZwUk26sk4S96r7LmYH+MgJQWrVsXcoiCW9JWjlZR
AvJuXcLnE4cp6N4v41QeLCDSSbKdKcEUnOyZXGW9TUACVUT+lYdRcLbyjLmm
kYCMt43IiR2lQD+35bz0EgGJzB7QoNGhZeNT+nQFJIlqXfEMvWnYwPbWQgEp
20UuvginoOfjyDGhmQIi8Th4+dtjFFhcjBGZISogCTv+Hm6PomCDa0D5r2o+
UTP6L3b+SQqyxY+/21/FJxlC3Ve3oY/b3YwffsonxecaqzvRVI7ncFcZn3x+
WKT64xSuj92ZvowcPpmvsL/0VzQFRcfr5wXH8Ulh6dDfCXG4//esrvuu5ZOb
fX/i7NCp3YlztRz4JGWOsM459AWJjQrNK/gkLHLyxjnxFMjcTzU1p/nEdvX8
0mXnKLCvdRoqWcInX7qdDvudpyCp1lSjUZZPZGaUjDYmU+AVabTR7QlDhO0e
xaunUKAqFyYR9JAhQyHPdLaji+I2bosvZsiHb3Ubf6KrOyQN7+Uw5OrdnlLZ
VAq+l2/jclIYYsbOCqLSKPAwePPryh6GbD0QOpZ1lYKtMhtvL5/JkI4dQc19
aCfB9ftiSgzx2nTgkf41CmytNuyvkGeIj41fRD66XuzMqOlEhvhPdp/84DoF
0ZZRoS2DPBJ0GWZWZ+B5HJlZPv8Zj8RXjS/ruk3BjZjqFr8dPDKt9O8snSwK
4mpX1YZv4ZHzd4aFdqEdhgwqz7jySFJc35MBtJrY05sXHHkkzaXZduQOBWsf
Kme7mfPI7YGyjRNzKdBzSXtTMYlHHisHH56fj+f1UDJXfZkmdwIiv+xEm63L
vheeRJOkV2f5+Whl1zGrpXE08Y24oUAVUNBW+DgvOJwmqgOvb7sXUmBXfUL7
7laaBFbO/ZRSRMF0xW6NcwtpsnBf1fKpZRRocx8/K2dSRKG2Ln09+oKZvlNV
GkWEFn2edAVt25Cs4JtIkYYvg/V6D7GfG41t0o9TJMxOdZcdoSD2+sScS1so
8lFjd+qJcgoeZW/50KVGkZi3CuPjFRSsCWjrSz5tQ0bfPJvOe0ZBq6mJrWO4
DfF+dVDvFPpYqfse4UM2hPe8xV2pkoJfTx5JWm/Hzz+8/USvigJDY8kSR2sb
sv0WFeX+goLXj3Tn5Q1ZE+uwAMXHr7C/htJfWztYkyHdt9rH3lMwfkIuPLwP
SH/P4ehn6G2efmaxbUB6MjUGJn6gYKVGwbezH4C0z91XcBK9+tOJaUGPgTRM
V7E600jBM4HC6bYEIEXjrmtTPuLz2y5VjZkDCX7VHXK3hYJJTs2W5/9ZkAm7
RRs+d2AeJTgNzHlrTnbFF5dqdFJwL/Fh3KZCc/K2yC/dB138K25TeJI5SRNr
8f2DPr5s8r5oN3NiklQqNa0b+13OTuhitxnZ/nSv1YpeXI93zP7rY6akckbH
7ZIBCm5ny6ifljMhkZXVRxP/UNDnmzDg/mcJKRSXyJ4nRYN1acOn7mma5MjX
beEuM2j4NkVQoiQrRvKbNrsM69BwpnU1/H45Cy4Uvrq3eTkNO+MuPHmoqA89
WfWT9VfS4CLWsCwgwgz427/9DERLOBXa8jPM4Oqc4U+l6O8iK/MmvjCDDeeV
7vDtacgdnbDQboo5PA/ZYOe2ioZlU6lJnRfM4YZja3SMIw1Fd2Jd2Mxl4DHS
I/vDiQZJ2Yqoefct4D0lJn/LjYYnQYneswRWUF4mSfWgq9+cSqtcawVZJnKB
i9xpeLTJ2HO7pxWE6cxqzEan6G4NjzxiBdoKJlfyPGiQXTVWzOZbQfDXHQZl
njRIKZ5qrptlDRphdQ5vttNAto97t3Vaw5TRD+HyXjSUfsuUNftlDX/2thQ4
olutJ3SGi9hAjVevSgP6xRUrwz8qNrB/1YSvjd40zK8fm7SZs4Hq2eZ72nxo
eGsi1aJz0wb8H16JG/al4ciu/uxUVwoqLhcKLPxoEBffInoc7zGV8OrxcPTa
QukUj30UlPN/7ZD3p/H+Nr7yH+bq1FoBtWgPDbuuGOoEPaAgr61/yGMvDepz
Vr7TVaLh1yTLtTUHaNicsMBO4wkNbI+jtOJBGiaU9pw5WENDas328g1oODbD
7/F7GnhxZxd3ov0+Ksvr9dJwXvWbhNhhGvSXPFuzV5EHJrqnC02DafBnlN7f
28yDg6ublK6F0SAjryM5b5gHLr/alb6jD+kM9rmO8wAS+5UWHqXhyqK+xDMT
GJD4KK6chZ79MInfMJ2BM5v1lPPDadj9fmVWuzEDGf4Ryk+P4foGm6mrBzJQ
H6ur0h5Fw9eZevr63QzcNzBT0TxJg/NtqXbdQQaS3lIqXujS0DuTNUYYcFNa
r9KLlp59uH5Qgg89l8JVfp6iQT65oFN1Dh9Esj+oiMfQ8GF0ycmctXzQe3l0
hkYcDaKC2G7hIj4cfpdyyQc9EDF/ivNDPlS15s/NQ0u0vfqR/pQPHr++a9vE
Yz+YfvyrWsuHeDXbZe7naLicNg3OdfFhxE/B5eJ5GgL+Gb65piyA8mnXUhVT
aOgtXO0f5isAGfWyOS7oU3K9Jml7BbBB+931q+hV+rmVeQcFMGQ5KXvJRRrk
tuRsKQ8XgKbXzoerUnH/9EbCfBMFcKpkacvpNNy/rqw7amUCWONWoS5xDb3W
311MlIV5kyOdbdFlHVktvyVYGCwSxJxFL1s190i7JAuxU1+OzrpOQ0mqm8kN
eRaqK+reGd+goeFant9LdRaoRa2nvTJpKN6qk3LLgoWpjVeeZKMH2egUDWsW
vhzz/PsT7f460jCRZiGk5fv2sJs0cFY3+NtsWSiN+2GTfAv7ufX7y6x1LBj+
+TtSnUXD9cN5yV/8WRC98UBv6h3sf624g517Wah1PLJtHdp9+6vNnftZ8M0S
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
/musklzfzZL/AT431Uw=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$30925, {2}}]& ], 
          Annotation[#, "Charting`Private`Tag$30925#2"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
tTFY3+Uq3l4n+OB/2+jVxA==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$30925, {3}}]& ], 
          Annotation[#, "Charting`Private`Tag$30925#3"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$30925, {4}}]& ], 
          Annotation[#, "Charting`Private`Tag$30925#4"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJwV13c8VX0YAHApZBRvUpKWjBJCSFEe3HuueR2jkhAqFbKyEgkpm0JZSUOk
SGbROFnZkpkiyYwyklXxPv6pz/fDvc55fs/6bbNxMjrFysLCkov/LP2vNbNp
GQtJA8lXeSF97NJweOZMrDpa3ZmmUfRICk7O5EkEom2ZX+w89KTAf0abyW5I
g2gBo+Ul13dB8Yx7Eo8RDWJ/D244uVESds3WK24woUHjC+5rDrskYPWcr528
KQ00f0dZ/AfboGW+q/mkFQ0a/micUJRggwZB5UxJVxpEZYer5zwWpTyEWBdK
A2hwM7XOXJRFiSp6OfWHI4YGeYdUDPFrqcyx+RgmGkq70waOApUsskwqDv28
jTbl4ARUQPAqc5FYGhi56+kdSgRKz0T8pWocDYR2t0XFjAHVO3LEx+UWDf5t
t/lWckudWr2x5G9nEg0CL2vZOXRrULYX/P9lPaBBr8TPi1s16dSQve+XMbSs
lKGquAmdOmt54a1cGg1+1+6333KKTjlougQVoJcTEYsjV+mU6yrrVa8e0qC9
qcP1RzWd8r0Lm+oyaNCk0qUVoU9QsdWLqt+f0OBbfVCLiC6DWvfyz2apLBq0
sE7cjjBjULeyZ1gc0Rz5+41GzjKoxJix8gn0k05uZ79gBpVq8UVvLpsGizsO
K3JVMKgnE6/NVz7D+OjV1KaraFFlGy75iBfQIMl0t870Zm0q2y249xw67Ed2
XY+0NpXYeEOrAB0tqJ5boqpNOQelr6UV0uDiE/cHGmbalPDE+yfWRRgvhbcb
42K1KY+q7V3JL2iQxr3TSo9dh9rpWX2A/zX+vUqynbNbh1r7ofm+GXr/SHX8
shEdikW6m/Meuvs7X9fwjA7V1jvZKvsG80svZjbsP10qgCnsyKRooPwntGYd
TZf6LOaUElJKAy2++HvaD3WpqJa1i4uVNND/nKOudlyP+tv0bj3xjgarFja+
ErLTo+wavWXD0c+PWb0bdNOjiJoea8EqGjxl2t8+HIq//+ZJuWw1/v2QvIFr
+XrUmce0UOtaGjSXvhw6wK5PaQS4CZQ10sDP2MJr+x19KsdPQobzPQ1e7l1z
VjVDn9rk20kYoDN11QoYz/SpWU/w+oR24rG5pFimT2Wf4/n0q4kGLK3iTxwH
9KmNRx+kirZgPuzydbKUZFJTu1t2Xe2gwdTWiSzHDCY1PuoT+Q59dsFi04mn
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
1EjZkl0i68LG0BLtl1iWvLZLf7dSO36fmXPB0vc/39X4wQd9qCat9w/a3Jv0
KEPbpsxfm1uKX3XTBq4OAoZy1NKml85nvfErEt2sprL/F5ph22J1C338RwYx
hv6ef2hFN7qS2lfzHR25vD1d9CMBOyViy/vR8kamuvbosCljxZ6lfEr9+PMZ
euYkl3An2nvM7MYsunDTQa+l89p08LOiWieeh4y99tJ5nvzU7VOHbil00Hq5
FE9Jq638n/D3nVe456Efe30tO4ou5hZem4meFOjjGkSzkF0P49A3T57Klv5M
wI/W3/GhS/mQN2Dohn4/bz9/Ce1PDscv68L+veUThy1a9I6dqhb6U9fPZ0v5
XfVj5Eskev+ruHc6S/kf9lNcuJuAr2uPy0mjUyp+5St9wfrzG+j+jvWlsdbd
1Be9juNbRQe632b6TxnaqXVwdSVaimVOw7CHAFem39sUdMn+hff2X7Efybb5
aaEtQ/zcctFvhJlMOTRrB4vgHHqb9BPXDWgd9+XHr/bi+0YShYPYLzqervyR
+o2AQfPR6Yton4WQ6EH0T+VWjePoLfrcCjJ9BNRd+tWqjrb9vupiCTq2qqh6
Bfq3KD9nWz/Oq/yAJ/5L/e587BPhAQLmey/PWKJVSwXIE+i+x35eKugrxwVv
jaP3cezgn/xEwprETWLcQxiP8uTTh9C0jNg1+ugHe/gGZdCehdwsUejeazFp
HOjPH+Y61wwT8E9Oub0Q+3Ead1u00Hc8j6+nGrnRHRv0L5mj+9VnOb9gP+fa
UW6fgp53KnZ5hnak5RIiIwQYWh16Y4xW9o38u3OUAM7PnLyROC/swti+26P7
5FyczNDJCT7tWei0DMthMfSyQrtcuR8Y70GXLcU4j2p+Emf2/cR4HLus047z
y8JqsVlrHOMlulqpF+dftKPH21D07N7N31PQpT4/suvQOolKYWZo8YRPIeQE
AXteewY3NGO9NhWpmU7i/L0Tt+ERzlORHhnpRPTNnc495miTn2lCn9EmJYkX
edEvuGJ/H/+F+7MSt4gLzusATefHp6cwX7dKtYjhPM83HIx/hD6VFdTbiPN+
8Ljl1RG0EG9/phdaz0fP2uk33k+dhc0rG0gQKNix3nMafz4z8cUQ94kM8a8B
V2cJcFy167B4DZ7PbdupevQfHyXGs2oSevhHTwnMEUB6bPLYjxZcNqP1AO1N
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
NkjASRpGVATk98Qw4CvXysJBdmn4H4KUNaQ=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$30925, {5}}]& ], 
          Annotation[#, "Charting`Private`Tag$30925#5"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {40.625, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {40.625, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"stroke\"", TraditionalForm], 
       PlotRange -> {{40.625, 47.15}, {-67.49999687968338, 
        67.49999994472837}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"i\"", "\"g\"", "\"aero\"", "\"act\"", "\"actinp\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], 
                 ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
M2iLB03JamjnwDQRuoCGu6n38t7g/h/ufuQZgmZs/LPt//nB3lza3YQO/slj
MoP5JDHa+NC6kIZvJKpJGL3QqGNZOnq7ibXeTcy/sdR+9xH0osSDwkvQryz+
0N5FNMx17OwdwHw+XyPXFVuM/enMF1tLrAdrOQ2DPnRTDr9IBtaL0aUN6apP
aRAJsDkw0k0ROe1d556id5ml3bbDemuMPy/wvoQG18UJbwQ7Mb5/fFzXlNIQ
wWU9roT1m7o/5MNJdEvX3nub2ilycUlCyi/0jy8vPI2w/tdeeKW/vIyG+BuK
grLYL0Sa3t03R7esW6658B1FuNQ/LkpC13E3inzBftPaM9ZClWO8ZjVehDVg
ve+WcNpN8HsduYtjainimK7YHImOazwmYPSKIma8mpu60IMGWbxT1RRhPGUt
cHhOQ9VZq069Sop0Kpy5d+UF1hP/Ji3PcopU+3jwvkXne4zFTz/DfOzwt19Z
QcO8qtncs9g/r9yM1k1DT+yYLTUpxvz797z+5Usa5j/YE/oyjyI3mkXm5qpo
8NaTz7uE/XrmbfUKdjUNWS6pg0nYz+0bPKlr6OVvvKnnCbiftd3WK2vwuc2F
vsFYfL/84UvqFdZnaIn6nwiK2GbSV63raOhrPaj5zx/X/2AyKQ2dJeGgX+FL
EYPUjJIf6Nue42f8vSkilSj8w+M1DV1XAi3GPPF8iurcc+sN9o/cuY9XXTBf
/dxEKxowf2+6VmVYUiTXW0ljUSMNXBdcA0QPU0TSq529By0V5pvvaUaRqQvg
3oF+Fpqpp70X89mRv2P8LQ2egrdv2BhSZPWh5AT5ZqzfIfnWQk3s74xm1aD3
NBiLyBSYcFFkZOhiaDU6yP5u4rU/DDKUrjDK9wHvSwWT6Q4TDNIvd6EgBL34
NNtk6TcGaV2xauvNdjxfbVsrftQzSPHc0QOxnfg8XFh3Gu8PlxoGffK68byg
a/kvqDGI57WI3nG0tWPUJZYC3le267N1PtOwQuCD7RIpBjlTEbqkCG2+Yirf
S4hBrAo1o5710BCjsuj2zKgG2RZ/IbOmj4YB4yVGtvkaZOGZea0fv+H8ibbD
q3Q1iFPE01KF7zTQvFQHQ12DNBe73HdAr6rVdN0sr0ESeLud/6CD93nl6S7T
IBvulC4RG6RhxDDjVNkPdWJbeW7rrh94P8ux4ha/r05qVn97WDKK92FVs/Oy
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
gFrNqq9SQWzoM1nVU/NMAxom6rQDrrIhcj6XsaiOBrR7ttXvDsf6pTekX+JT
h5ioOMcwdMqEZbrOnBqY5dnwN6H3X1U+2P9LDVq/D2/fH4H1HN7yVqMX73tm
fJWHI9mgUrHpvf0zNajT3Vhiexv7u26JU4izGpSO3Unzu4v3Qb/9HjffqsI9
+yM+Bfexf+Z9bmv3VoG3bt463vmYry6TvAH7leDRMWHbVVX4ffzKiq7i8qAy
+oo+1sqGm5Vemr610rDsjqTCkm9sOFjpnQIWq+CB4me/oCk2/BbK69YqXw4P
32zpO7aYA9F3x2x1YhbBdtHK4cHVHLC6lXmqbNc08/ePb5bqEhxIKNBPshud
YiZX8b92Qs88KUtZETnFnL2w78EoWthSdHNV5yQzr73XalKSA7mSqbnJTr+Z
Egk8TTzSHJgyuu6VdHec+VMFnojLc4Bs5nM9yhhiRkCJO0eNAz7qmWSg7A0z
0/eHfej/vUU0YrNwHfPFizWWLWiuUJ5ND2xqmCN0wFYbdRyv97chSLiCuXP7
rsXeGvh+c8KbCqFHTB7TT3cLKHz/tXjMpG5RubPNvHIFHXz/kUx18fcP5buC
ds7n3YLrmdz792PScPlYkOtWNtrY5s7nYNGR8ujLd72C0T4HLX/FHxop7wse
/MXP5IB7/JRX4+eRcs+QkC+iwIENl3qGjMZGy1PD6qqVtuH/u366b0Rkopzr
7s6rO9kc6Nb9MxrlPFWeete16jo698QojBdOle+MvcvTiH5f8nRp6NxUeVTc
oOc+DsZb/ZhJ0I3pcvWEkNOWhhygbt7Vzcv7U26eUmd0ZgcHzLgu9Srw/St/
krNTKHw3Bwz3h8+nuLlJp6nE7Dt034IiTUMVbsL7e2hIZA8Hkp+/403by032
6YXWRqH5c5QmN6Zxk4maxsA7xjg+5bxUmQkP0e7ZP5Noit/ntro+/Mk8YhGo
ONiDHirPLTPvmUcClCc/yO3lwMqW8PMXhXlJs1N0YQpaOr7DrtGRl7j9bT+b
vo8DEj0MyxK1+eSJiNX33AMceFBc8CaxZAHpLKTej6L5U2S9Vw4vILyHuau1
DnLAqNQ4YVJ2IdmXmJT8BB0r0XL4b8hCMqHef7TIjAPas6a5wjZ8RJtj31pu
zgG+w8+iKYXF5ImHW0X9EQ68rCy06JoRIOzAvbqiRzmgtvviRI2BIHkfppV+
GN05VF+9MUSQ/E0bCf2GftC9423aaiGyrdXBnMeaAyNbo/v9ZYRJo9aJUR0b
Dtx7/64z7sBSMjS4f03cKQ5UTdvGmv9aTi5Nat/qRdfsvbnnrowIEZ4nMl/F
lgO10Uq6UrtFyLpVTQMF6CLeLNGvaSLE03B3QaMdB7Tqm/wvHBElfCnsXbwO
WF+v/G9vfC9G5I6s/++0M+ZXyOKjk1PihF7LvyEL/UIlpOPk2lXk+ET3xE+0
YfTlXB7zVST56lWnsy4coO89KS4pWUUUC7usPc5yIELguvwq39VERTjA8LIb
Bxp4HhqYLpckWi8aRe+7c0BlfCTQTk6amF5PaepDjwfVvLHUkyauZp43FD04
4HBVWpWxX5o8+Sm3KAOd27wo2DJImuiuvjCT68kBqRxHk0VfpclGN8nesou4
nnGLaK0kGQKK9rntPhzQGfBjxM7JkttNzsvkfXE9zy9LvhGTIz8vXXBzROea
aYS8V5cjd9sCNnD5caD6yh1Zj8Ny5HdwPFHw58B0eo0dX74cyRxsbnQO5MDC
3vAjptbyROwRc3TBVQ48TBU6vDVRgThYsvcao4cPy3XrPVEgFYt25cegLSdF
7cWqFYjzMXMPtRAOBGT4LfMfUiB1y89xm17DfF2aq8qvq0h8zmcsjQvlwPx0
XnXdl4qkTfaR6xd0x8AQ17UWRaLRUNjCuMGBpMDBg7VfFEmHUmXMC3TczN+G
GT4lovvhk8y3MMynysjTRkZK5FrgF3/NmxwIvX0y46uFEunV/NHvie7hFj3l
6KhEwq7+SRe4hf1izmVWN1SJfNXl5j+I1i2a7vC8p0S29C50SkAX8Ss6p2cr
kYgbgo3f0fYDHzZVlCmRwc2iWuvCOXBlVX9JTb0S+R/KwMPI
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$31010, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$31010#1"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
X7Ks5c1JNUiCsqNcHS74LthaK7hEFe6cHPaMQ0unTxhf+KMC1dXLdrejxcf1
q+b1qcAoO8LURZcL4fK8zal3VWCDhZXQCQYX+s2criRxVYDX5n1yMQvr+yo7
PtlXGXxc5laq/seFYraEPH+RIlid3sDPZ8yFCfnY1Q875GD8tJ8pjV5tkJY5
L1kOLp9JDo5Ec9O2xWs5ykF/5NBPERO8n0ua4dAnWQiMifm0GLAe3NWcnRMy
cDPh+TN1My7+Dl5hzTdPGniSN0RvoLng82dwzFFEEgrvbhA7v5ELrKIy0x6z
eVB4zL+myYELRifSFD/Y/KqkT21ZudiRCw4b+z9XxExXvk7Qu70Lna1clxL1
ZKby963RuEF010TQls7//laadXjt5N3DhfeCPrGHheeQl3puY/+54HpHeN5u
/cxPvg1tW3bNnQufzilKDZ4QIyFT+ol96MvUX7pQWJyIz5Xk1/LggrLf+H/W
tuJkhWzL12L0Ov9UJakRcRJovrH45T4uTFZ8kaiVWUQEs2grPi8uXLHY96zc
Q5IoOxgc3+/DhcNlAULL3kkTtqaIYR76ZMnFkloFGeI60Tsxgr4ksj+BcpQh
mdHRB3wP4fPwzf++7b0MUSvp2XPMF+vbLiVW8VaWaIlHmJ/x58LfR5tVDz+X
J3rVLxdnHOWC+cmyLsXVy4nN2ayWfvTePfWVWtuXEz+7wHi1Y1y4RTn1ivgu
J4UjyvNz0AVmPQO7bi8nK+WO/CkI5IIgHN6/bIkiWeW/tK8iCK8P8NNZMqhI
QM2zoCuUC0m8hRPTXsrkUovPIpWTXMhkulTHnFYmIyFH/L3R7s1x279cVybJ
nRGGPGGY99+bFwi2KJPJyOtENRzzseGSRfsKFXJnqO2lzykucPIUbz4dViG8
l7v1HqGjyuZXLeNTJXbsj0lzT3OhaFYunpZVJQLXvttdRHdEdkr+46gSp41C
H8rOcGHHtSwVuWRVsuSeyZhANF7/7+oFeo0a8dpNb7FGu+S361zepEZq5lsV
XUG73uouL3NWIz7OO4/pxGD97r8UC4xUI88lAubYxHIBat8v6HmlRkIP5yy8
FscFYSOuY6y9OulUuuf3CV3lZnNI3VudMJpL2pnxXKgpZpteDVYn3eq1V6rR
shYDeYKp6mTlm/eKgwmY1/Xz/0r0qJPYU5/CqXOY9xf8ake/qZM+anggEL1h
K2d1yW91khA9c3tBIhcMrstXPZPRIJ9XzhGxRTvXbZh3VUODGPfNO5CGjp8X
22VuoEGS4kVffkGfay+60cbRIENGi/VWnOdCxXWX6rVbNcj/AJ2Ae40=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$31010, {2}}]& ], 
          Annotation[#, "Charting`Private`Tag$31010#2"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
++65Afx/HKeJJw==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$31010, {3}}]& ], 
          Annotation[#, "Charting`Private`Tag$31010#3"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxNzX0s1HEABvAfcZa36krD5Q/F2TjpFGmtS0teZoektDa325HsFBeHTnm5
O0wy1O+msNQqm8hkOlZaGbnV5CWdl9ykdhFTmXbrh5Jqa57vsz179vnrcZWk
Rp82pyhK+Lf/NpRxMaOiggKp/znBJGkOEU5gWj3UhJVMWATrKPyEyaixjYa9
Fvv8nGJg+6Ucqe9JWL888TZBDPc7BjR4psGZzua/u1Rw+1PTTysaTlQoV5ru
wd1OuZe4Wrhcv2V1VQebfPReRWOwVeq6kfczcPHL1+oby8SfJavZzebImvOM
ZwriOLDWEB/H8OCq9oHW+APwl6ZhO34kPBZkwW4Uw2nP79CMDM6OMTjWqeBd
fWqOOw0fF+tcWXUwW8MfotvgnEZbyqSDYyeUfO0YPPk98UPoLLxaL993eQku
U2yr9LQJXnOv9x5ZLQfO+jUlTPeGO5I7h00CuOmZtSE0ErbnzRtXxLBLzmFp
4Xn4RUpn9WMlPJ492h9Bw7VSUX7bXfiNPM8vTwu3SDYmOetgz4VXQZIRmF3t
4m4zA9dzP6qKFuEHfYJPEuuQNYc59MzPcWBNYMeFEB4sLAq3tBDAj5rDN9AR
hBXy7n4RvEO092KyDA7kSh+O58PXh2RsNyX8LTdLfo5wzWhBAKWCfxTf6nRX
w41z+kFZIby15eACqwQ+Gxd8LIpw93qhtoqwTHJKwbsC927OMIsuhfMzGzbd
LINHt7ekTxPeOdA+7FMOGzx6qroI+7+bdJ2pgEsLp9X8q7CR/3Uqm3BFyfJ9
u2vwZ38z21jCAqNVym3CmnL7wVnCc/sdfHfT8B/nyhFy
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$31010, {4}}]& ], 
          Annotation[#, "Charting`Private`Tag$31010#4"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJwV13c8VX0YAHApZBRvUpKWjBJCSFEe3HuueR2jkhAqFbKyEgkpm0JZSUOk
SGbROFnZkpkiyYwyklXxPv6pz/fDvc55fs/6bbNxMjrFysLCkov/LP2vNbNp
GQtJA8lXeSF97NJweOZMrDpa3ZmmUfRICk7O5EkEom2ZX+w89KTAf0abyW5I
g2gBo+Ul13dB8Yx7Eo8RDWJ/D244uVESds3WK24woUHjC+5rDrskYPWcr528
KQ00f0dZ/AfboGW+q/mkFQ0a/micUJRggwZB5UxJVxpEZYer5zwWpTyEWBdK
A2hwM7XOXJRFiSp6OfWHI4YGeYdUDPFrqcyx+RgmGkq70waOApUsskwqDv28
jTbl4ARUQPAqc5FYGhi56+kdSgRKz0T8pWocDYR2t0XFjAHVO3LEx+UWDf5t
t/lWckudWr2x5G9nEg0CL2vZOXRrULYX/P9lPaBBr8TPi1s16dSQve+XMbSs
lKGquAmdOmt54a1cGg1+1+6333KKTjlougQVoJcTEYsjV+mU6yrrVa8e0qC9
qcP1RzWd8r0Lm+oyaNCk0qUVoU9QsdWLqt+f0OBbfVCLiC6DWvfyz2apLBq0
sE7cjjBjULeyZ1gc0Rz5+41GzjKoxJix8gn0k05uZ79gBpVq8UVvLpsGizsO
K3JVMKgnE6/NVz7D+OjV1KaraFFlGy75iBfQIMl0t870Zm0q2y249xw67Ed2
XY+0NpXYeEOrAB0tqJ5boqpNOQelr6UV0uDiE/cHGmbalPDE+yfWRRgvhbcb
42K1KY+q7V3JL2iQxr3TSo9dh9rpWX2A/zX+vUqynbNbh1r7ofm+GXr/SHX8
shEdikW6m/Meuvs7X9fwjA7V1jvZKvsG80svZjbsP10qgCnsyKRooPwntGYd
TZf6LOaUElJKAy2++HvaD3WpqJa1i4uVNND/nKOudlyP+tv0bj3xjgarFja+
ErLTo+wavWXD0c+PWb0bdNOjiJoea8EqGjxl2t8+HIq//+ZJuWw1/v2QvIFr
+XrUmce0UOtaGjSXvhw6wK5PaQS4CZQ10sDP2MJr+x19KsdPQobzPQ1e7l1z
VjVDn9rk20kYoDN11QoYz/SpWU/w+oR24rG5pFimT2Wf4/n0q4kGLK3iTxwH
9KmNRx+kirZgPuzydbKUZFJTu1t2Xe2gwdTWiSzHDCY1PuoT+Q59dsFi04mn
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
1EjZkl0i68LG0BLtl1iWvLZLf7dSO36fmXPB0vc/39X4wQd9qCat9w/a3Jv0
KEPbpsxfm1uKX3XTBq4OAoZy1NKml85nvfErEt2sprL/F5ph22J1C338RwYx
hv6ef2hFN7qS2lfzHR25vD1d9CMBOyViy/vR8kamuvbosCljxZ6lfEr9+PMZ
euYkl3An2nvM7MYsunDTQa+l89p08LOiWieeh4y99tJ5nvzU7VOHbil00Hq5
FE9Jq638n/D3nVe456Efe30tO4ou5hZem4meFOjjGkSzkF0P49A3T57Klv5M
wI/W3/GhS/mQN2Dohn4/bz9/Ce1PDscv68L+veUThy1a9I6dqhb6U9fPZ0v5
XfVj5Eskev+ruHc6S/kf9lNcuJuAr2uPy0mjUyp+5St9wfrzG+j+jvWlsdbd
1Be9juNbRQe632b6TxnaqXVwdSVaimVOw7CHAFem39sUdMn+hff2X7Efybb5
aaEtQ/zcctFvhJlMOTRrB4vgHHqb9BPXDWgd9+XHr/bi+0YShYPYLzqervyR
+o2AQfPR6Yton4WQ6EH0T+VWjePoLfrcCjJ9BNRd+tWqjrb9vupiCTq2qqh6
Bfq3KD9nWz/Oq/yAJ/5L/e587BPhAQLmey/PWKJVSwXIE+i+x35eKugrxwVv
jaP3cezgn/xEwprETWLcQxiP8uTTh9C0jNg1+ugHe/gGZdCehdwsUejeazFp
HOjPH+Y61wwT8E9Oub0Q+3Ead1u00Hc8j6+nGrnRHRv0L5mj+9VnOb9gP+fa
UW6fgp53KnZ5hnak5RIiIwQYWh16Y4xW9o38u3OUAM7PnLyROC/swti+26P7
5FyczNDJCT7tWei0DMthMfSyQrtcuR8Y70GXLcU4j2p+Emf2/cR4HLus047z
y8JqsVlrHOMlulqpF+dftKPH21D07N7N31PQpT4/suvQOolKYWZo8YRPIeQE
AXteewY3NGO9NhWpmU7i/L0Tt+ERzlORHhnpRPTNnc495miTn2lCn9EmJYkX
edEvuGJ/H/+F+7MSt4gLzusATefHp6cwX7dKtYjhPM83HIx/hD6VFdTbiPN+
8Ljl1RG0EG9/phdaz0fP2uk33k+dhc0rG0gQKNix3nMafz4z8cUQ94kM8a8B
V2cJcFy167B4DZ7PbdupevQfHyXGs2oSevhHTwnMEUB6bPLYjxZcNqP1AO1N
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
NkjASRpGVATk98Qw4CvXysJBdmn4H4KUNaQ=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$31010, {5}}]& ], 
          Annotation[#, "Charting`Private`Tag$31010#5"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {40.625, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {40.625, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"hinge\"", TraditionalForm], 
       PlotRange -> {{40.625, 47.15}, {-67.49999687968338, 
        67.49999994472837}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"i\"", "\"g\"", "\"aero\"", "\"act\"", "\"actinp\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], 
                 ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
gsxi3N+eZW86jHfB8+91TY3lLGiY0wpJkd4OeQ7CzmK1LOh+cH5Y/54UyI01
UA4dOP/e5n0fz+Uj/yWtleUfZEGUpFDSUf2dJGvjp6CQGZzPG574S61XJ/df
afY5LGXD0027KpTfMciLr+5899B8J0c2wAiDfPuXtG0UnVqa5qiykCIbadNe
Z/nZsDlT0Yh7O0XSEh7yxguwQSl4U3P/OYrE2a7fVLOMDWfbcxzfSzOJ7xi3
6yYRNkhN/HyYYc0ieitrRr+LsyH6goKcTIYumRoetN4uwQYtgcECtQJdcqdW
oPEY+vXBS+JUjS75622eNYae+KCeK9evSx53fbGbXsuGvr6tmTYyekQibUHr
gvVsmHV9pn8wTY+MyEH+Ghk2NCXtdbwYpU9uLHSStkR7GcXXzifrE92eSzHJ
6OZjJ2uP5OiT9MjX7utk2UCPfZ8iWq9P9v+0kZXdyIZf1Z5P+7kMyPMC/4Sd
m9nQ84cuKO9hQOKh9Ax7Gxt2xGX2tzANSc75Ydeo/1vTduHHPYaksnKd9Rv0
r82/9T/aG5KfVLC243Y2yOhrORb5GxIDPaOl5+TZEF4ksbYx35AsMOu9UbiT
Dbb7Km9eWm9EPBwXPpNVZIPCF421RiNG5NIdxTx3dG9VTX3ZnBG52X8k/Qma
9Xpho+RiY9J4pPGSthIbdml/3lq8zphscr/Ksd7NhutS1Xr7Ocbkg9emz/Eq
bEi54b5S+6ExMQox4OXRZENIaqfshIMJGQ85qc1CsxZsKuM+akKuXbrhH4pe
yz+zeKG3CekL/f5LQIsNv53yO3rCTYhvRMTXlcCGNu3sUz/yTEhmzMu6TTqY
fzke2aQ/JsQwdmKhK/r8tz9ezgs5ZCxWHO6juQ6Iu84v5hD1OLenOxkYzyyj
S4LLOaTtKv89FYoNV/bE/2iW5hCuGwbhBiw2BNzrvdVLcUjmjZO1keio3L03
5nU5xCD5xoJmdFeU8aCwEYckpHz3NWezwblz0zfJvRyyPS3CzVqXDcdXFwQ0
OnHIwYyXhsf12UAkfkpaBeHzMydC89C/KuVdPl3kkIxM8ZoJtEZwPssqjEN+
3nXTOGPABt1rkRtoMRxyKZtf/rwhG4zEvmkcTOGQ/IcGQnHGbGCspHUEFHBI
j5nE3za0rUroC82nHMIz9ePHChM2PPsEl8dLOMRcPepFAvppn+wPBcIhk/XN
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
7y2a5LvaSho9DufbC8bBxihN8j/52wFN
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$31091, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$31091#1"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
HVhPnKWBfL1qJLZxIO5WJxs8v4Rn7PBRI9FHMrt/oQcVTk9EblYjkdaruawu
zMeQMa9kZzWy82n6/Lvo1DlippVr1IhXJT3r4Rc2XAkXVPNWVSNr8vdcfdHD
hqBTS+996FUl83bOfff5G+bvjF/Ptp2qJCTzfpV6P57nUtnCnG2qpPXerovB
6DlnYqpbPVXJeYHO0Cm0igJZ6OmkSkxzqubLDOD9akQl1tNVScDz3Rb2P9gg
pKz7T+yPCnmh8O3ag1E2tPF6pA2SVIiBRf7JOT9xfiCXPJz2q5BMf9doa/Sm
KFeL6EgV4nXzGe892lX18NueABUywb3w5ecvzG/7Dr/FDipEK2zzEp0/bJj/
Ms2wV06FpLyoTzw9xYaNGaUcq0plsr80qrwNPTU/wO/ZTWUSdkKjV/EvG76e
j7PkXVMmblviuBfQJHIB2/uCMjEYMRYpmWZD6zm9dV/TlEmrbG76gxm8X0rX
vGX6KBPatsAzn+dwYOGbq37j0spksZ3MK9pcDlzY+2uBg4QyEaU/nfJB77NY
kHtVVJn8mlLc0odWiVP13sevTGrS3yiNCHCgc+W5szuGaST4jskl/nkc2CWT
+yivnkYqBYXK1OZz4OTNhHqTIzRicNTtxFb0u9a/H+JSaKRo0c3dRej1NwMf
v0mikUzVLau0xDjg/IuudHA/jYRa3Hqpu4ADB3z5zWEnjWjv9+hhSHDAvknl
P751NIxXeW04+ujx3f8qnWhkyRGRq+Xou7oJApH2NCKUW75rmSQHbkpqvxHi
0ciXu6KzyxdywPfl/N37VtBI7tgdOQtpXM/nneq3VWhEKkbsXzz6OH+8cRtF
I4fn+nRWoxf22fsJL6WRvVILLrMXcWCt8vrl0bI0ss7Il2m1mAPqVsZ85WI0
siBYwtFRlgPWpRvmCY5SJOmXHyMD/UjcQGvFIEWmo+8vbkJrVi8a2N9Hke+p
Wzucl3DAqMx1J/0zRWouPwh0leOAQlHHUut6ihzo3pbkrsCB0XLvXLhKEa+W
uoGL6MWfRzZLXKYIPDV0+Y6ekPr6eriAInMujivvUcTf32s+2ptDkWSfQ48z
lnLAX8hNuziNItucBzTeo10TL18XTKGI1RrH9KVKHGg4bxAbmUQRERVZ9xK0
tMv+yPT9FDnSVTT1lML42LnonQmlyI4mUR9RGgesFnDvpu6giMOTkJdOaP29
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
ftuuQ+D0yBLtRMxnB5VHFrE6RKhDUK4ULVa7dpxxUYcc9zWSq0jC+JQ8PyA1
pEOKww7KPU/G+WHr7rY7h3TJ2wxD+d7DOA9stviTXadHjF4nKqifxHlj+Ljl
lVOGJOZ9Xn4wOur0mIpzmSF52VWhWo7Wv74+WeKlIfH506drmcmB6tqGK8+m
DUkmZbfK+xT2+10ptOMMIzK5a5H72Wyct+4rqg3nGZFqmcJzi/OwnnYKdrD3
0Im48iMVd/Tntmlt2YN04qb7vugSelWn29uBE3QyZi5SZnyWA/fZ4oNnrtOJ
ZuCOx2vPccCFfY/+r5dOjjxgdR49j/NN4FB75ToGWe9VoyxUyAGJhZb3P+gb
E7UFKRvt0EFzvPqbVhiTn/esj51A2+6Of13FMyYZ0q+nlYpwXjDpm7fV25jU
17S8N7nMgTnPtd0GTxoTtn7X0cArHFBN1xM0+W1MpNsKnpWhfxm9VvjNxyRf
kv3+/kYnh7dLnhFjkrjOvoCEEuynxR8bjqkySdXJIcvcqxwQTOv/q+bEJMyp
v5P1pZjvyqWpSheZZO7lh0bS1zEeFTN3W64xSbPLgW2b0OdVT5d63WGS0NI5
b3vRJx8clJt9wSTXvERuzJTh/Nm9y2zFIJPsW1D3lX0D+6Xa0c9nxpjE5v6R
pWnoHpklOXXTTPJNWjJN9ibe/w9Z/efEWES1Vsbf6BbeJxP27FptFvkZ/iEv
Es3RPRqUYsQihJbTUoXWrpAJX2jCIh7RSy2sb+P3P7gUtdeSRfQ1/9tzDO1x
kF9pvTWLTLecv/4WzbnvPvrHgUVy9NUUfco5wGqp2nFoE4sEtvU6F6O7tVj3
IzxYxPTQ5dQh9K0TeTFqviwyjxlImBUcGGz6KJi1jUXedeqMR6Ojf0TyXmxn
kcKjg/pP0I/vzQst38kiESuu+827w4EfxWWfNoWziGXfzlx79H5rs8nKSBaR
yqQ3n0STqG26DVEsEsrX7/wW/WRI+9+OGBZpCD7fIlOJ+bTLYUVDLIvofdyw
biOa3vpi21Aci6RyJN6eQfs1HBBtSGCRrzdr1rejpcYcLgcnsQhbKfad4l2s
x+vCT18eZJGCw6wNHug5q/d+6UlmEb7xwff56MC7vocfHsLz8720sQsdT6Wb
u6SwyINGt48q97B+/O8lF6KXrJLe7IdWSCvuuY2OLH7VVog+fkv5835066IE
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
D6W/KrKlkYGVixnGJ3mg7mqVfrCURv4HMtNa8w==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$31091, {2}}]& ], 
          Annotation[#, "Charting`Private`Tag$31091#2"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
7PZPYkJvcZ51/NZSl0yDZ/FNSRN050Vhg0t4nm885yJ7FZ1TJrdl9WUaZhzQ
UGhHuygu/3v0Ig3PtMaUlN5xYEP0Z907F2jY9/HUumL0DMcWZbmzNOQd1Q8e
R7tZaW2pCqFh9pzJer33HHi7ZMnVg0E05Kt5uD1GO+z8+tHPh4a5wdaZNa14
nj+4ZiJui/OGmNTYvDact36+ynuA80hR1hvKCN0+ZO4kh/OKzWujjgZ0fgjx
tOLR8EB+07LWDxwQ268hHLSOhoX3x1xlPnJAPnE5806ZhkPb7pVZo1dJ7Vwh
vhLzx3uNWSe6pvZcp7s45kvV0osDnzjwVZApMJ/EvHIanfuvHeu/ac8fPax7
z+m7+wy+4PplrylMYV9/FuOaEYquea9smY7nrPeDDvbcDg6sDTrJuoZzU53g
6yDRTqzv9vLJyzh3n8jNHVXoxnmi4/7vdrwnfR451M79xoH1vRJPdBIoKF3z
4ksE+oX4PdHWSLx32qh31qK37nO+cjKEAoP68W6jPg4sC35xqvkIBTduh/fv
7OfAXt/o/gweBY42d8bMBvH3Xx6ruTED5+vLIhNX0b+dlaIyJ9ggUe852YrW
fnblR+kwG55v2jRtOYTx0PxSPfcTG9YurZthO4zn69M4E95DNgy/HBR2/oH9
P+i2XKI/G57NNhG5g+at3bc9zoMNqZtKFvSj5UYVZl1xYsOu20GLDo/g/Pb6
rtkbMzYUhi2QOPoT56Xtoiu9N7LBb9M6hYBfeB8KV3twdgYbdnomrCxDU6fO
ib2fYsHq25OKv9FiWetns0dZ8F68YvUJnHvnnXsptL+XBZtGTNROjXNA/f5x
l9P1LPiX5a0Xgfuk0HvDdzCNBSxu7+NXaB/1urm7k1gQ1mtOiU9xQP/KIZHP
l1gwd9XWHTfQuWmPrh3E+83CG/MOPvqN77+JWzgzgAUmrON9s3CuLimFVk9v
FsR/GTrCQ9fwhqOnj7BAUq458C363USKZIAjC+STU2J+/MF+dEdeeaUZCxw2
i4rr/sW/P3t10fXdLMhoC00MQuu8SNuiu4sFa6WcM4T+YT3x//J6xGOB+4O2
tSboPXsLlhQzLMg3My64gu7oGe18TbFA+7JWuSIfDW1/U8BnKwt8N2QYuKGH
5rP7JjazoPSNRM099PP7b8YSN7JgyjvSaBL9LJT8sNRlgb7Y39dbZ+C9IDjg
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
m5Zoal1k4NFUYUyNJ5v8D+bse9c=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$31091, {3}}]& ], 
          Annotation[#, "Charting`Private`Tag$31091#3"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV13k4VV8XB3BzhYgopKSSQhmSsVg45557z5FERYMMaSAVkkZClFQokpCU
BiqhDBnSTiVKKqKiQlHGDD8lRd71/lPPh3s86+6913evo+6x22GLiJCQ0Cr8
5///84dnCgvZU3BA/NZyzW6WrB3eHm+FZlO7jF92ssRz+J7mUfQmhYZ83w6W
hA4L7CRWUXD5RSsvp50lxcN7k6UdKLjvd1xMvoUl2r9fLlVeTYHIlUxJj7cs
kRkJ8jZwpiDxbnS7TQlLVEcqx/ag66oO1qYWsURrZOqZfHTapaDI4UKWMCOZ
hSbrKHj45fLaK3ksCRmpF7NcT0FMwJeMT1ksGRhZdInbSME6GQf/nkssefvn
U52nGwUtl89Z7gljie1m4+5baN1bSXfcQljy5EWsyH/oiPTRO1wwS/JSbPRD
3SlID7+8VeUgS+IsMqMveuDzk38/SvJjiUNYgKDBkwLj4e5QTTeWvJkk9ZDx
okDz8nErP3OW8P09G6LRQz+SlsmZsoQ0Puit/7+l7CruGLEk55avqqc3Bd4q
n0K/6LMkdkXDgZAdFNz1EQnSWcAS+zOXDYt2UqCirB8oUGBJjZLJTS1/Cmpn
3j2f0iUgb+G41E7051KFPcodAtK0vcEnGy0UTsbj2gWk436AruEeCvzWWWqE
tQiI6LrcvOUBFOQuNvaybhAQkwtaD+0DKVg6vO6f/SMBuaI8823gQdzPCaIz
Es4JSIaVz9IitPSs7ronZwUk26sk4S96r7LmYH+MgJQWrVsXcoiCW9JWjlZR
AvJuXcLnE4cp6N4v41QeLCDSSbKdKcEUnOyZXGW9TUACVUT+lYdRcLbyjLmm
kYCMt43IiR2lQD+35bz0EgGJzB7QoNGhZeNT+nQFJIlqXfEMvWnYwPbWQgEp
20UuvginoOfjyDGhmQIi8Th4+dtjFFhcjBGZISogCTv+Hm6PomCDa0D5r2o+
UTP6L3b+SQqyxY+/21/FJxlC3Ve3oY/b3YwffsonxecaqzvRVI7ncFcZn3x+
WKT64xSuj92ZvowcPpmvsL/0VzQFRcfr5wXH8Ulh6dDfCXG4//esrvuu5ZOb
fX/i7NCp3YlztRz4JGWOsM459AWJjQrNK/gkLHLyxjnxFMjcTzU1p/nEdvX8
0mXnKLCvdRoqWcInX7qdDvudpyCp1lSjUZZPZGaUjDYmU+AVabTR7QlDhO0e
xaunUKAqFyYR9JAhQyHPdLaji+I2bosvZsiHb3Ubf6KrOyQN7+Uw5OrdnlLZ
VAq+l2/jclIYYsbOCqLSKPAwePPryh6GbD0QOpZ1lYKtMhtvL5/JkI4dQc19
aCfB9ftiSgzx2nTgkf41CmytNuyvkGeIj41fRD66XuzMqOlEhvhPdp/84DoF
0ZZRoS2DPBJ0GWZWZ+B5HJlZPv8Zj8RXjS/ruk3BjZjqFr8dPDKt9O8snSwK
4mpX1YZv4ZHzd4aFdqEdhgwqz7jySFJc35MBtJrY05sXHHkkzaXZduQOBWsf
Kme7mfPI7YGyjRNzKdBzSXtTMYlHHisHH56fj+f1UDJXfZkmdwIiv+xEm63L
vheeRJOkV2f5+Whl1zGrpXE08Y24oUAVUNBW+DgvOJwmqgOvb7sXUmBXfUL7
7laaBFbO/ZRSRMF0xW6NcwtpsnBf1fKpZRRocx8/K2dSRKG2Ln09+oKZvlNV
GkWEFn2edAVt25Cs4JtIkYYvg/V6D7GfG41t0o9TJMxOdZcdoSD2+sScS1so
8lFjd+qJcgoeZW/50KVGkZi3CuPjFRSsCWjrSz5tQ0bfPJvOe0ZBq6mJrWO4
DfF+dVDvFPpYqfse4UM2hPe8xV2pkoJfTx5JWm/Hzz+8/USvigJDY8kSR2sb
sv0WFeX+goLXj3Tn5Q1ZE+uwAMXHr7C/htJfWztYkyHdt9rH3lMwfkIuPLwP
SH/P4ehn6G2efmaxbUB6MjUGJn6gYKVGwbezH4C0z91XcBK9+tOJaUGPgTRM
V7E600jBM4HC6bYEIEXjrmtTPuLz2y5VjZkDCX7VHXK3hYJJTs2W5/9ZkAm7
RRs+d2AeJTgNzHlrTnbFF5dqdFJwL/Fh3KZCc/K2yC/dB138K25TeJI5SRNr
8f2DPr5s8r5oN3NiklQqNa0b+13OTuhitxnZ/nSv1YpeXI93zP7rY6akckbH
7ZIBCm5ny6ifljMhkZXVRxP/UNDnmzDg/mcJKRSXyJ4nRYN1acOn7mma5MjX
beEuM2j4NkVQoiQrRvKbNrsM69BwpnU1/H45Cy4Uvrq3eTkNO+MuPHmoqA89
WfWT9VfS4CLWsCwgwgz427/9DERLOBXa8jPM4Oqc4U+l6O8iK/MmvjCDDeeV
7vDtacgdnbDQboo5PA/ZYOe2ioZlU6lJnRfM4YZja3SMIw1Fd2Jd2Mxl4DHS
I/vDiQZJ2Yqoefct4D0lJn/LjYYnQYneswRWUF4mSfWgq9+cSqtcawVZJnKB
i9xpeLTJ2HO7pxWE6cxqzEan6G4NjzxiBdoKJlfyPGiQXTVWzOZbQfDXHQZl
njRIKZ5qrptlDRphdQ5vttNAto97t3Vaw5TRD+HyXjSUfsuUNftlDX/2thQ4
olutJ3SGi9hAjVevSgP6xRUrwz8qNrB/1YSvjd40zK8fm7SZs4Hq2eZ72nxo
eGsi1aJz0wb8H16JG/al4ciu/uxUVwoqLhcKLPxoEBffInoc7zGV8OrxcPTa
QukUj30UlPN/7ZD3p/H+Nr7yH+bq1FoBtWgPDbuuGOoEPaAgr61/yGMvDepz
Vr7TVaLh1yTLtTUHaNicsMBO4wkNbI+jtOJBGiaU9pw5WENDas328g1oODbD
7/F7GnhxZxd3ov0+Ksvr9dJwXvWbhNhhGvSXPFuzV5EHJrqnC02DafBnlN7f
28yDg6ublK6F0SAjryM5b5gHLr/alb6jD+kM9rmO8wAS+5UWHqXhyqK+xDMT
GJD4KK6chZ79MInfMJ2BM5v1lPPDadj9fmVWuzEDGf4Ryk+P4foGm6mrBzJQ
H6ur0h5Fw9eZevr63QzcNzBT0TxJg/NtqXbdQQaS3lIqXujS0DuTNUYYcFNa
r9KLlp59uH5Qgg89l8JVfp6iQT65oFN1Dh9Esj+oiMfQ8GF0ycmctXzQe3l0
hkYcDaKC2G7hIj4cfpdyyQc9EDF/ivNDPlS15s/NQ0u0vfqR/pQPHr++a9vE
Yz+YfvyrWsuHeDXbZe7naLicNg3OdfFhxE/B5eJ5GgL+Gb65piyA8mnXUhVT
aOgtXO0f5isAGfWyOS7oU3K9Jml7BbBB+931q+hV+rmVeQcFMGQ5KXvJRRrk
tuRsKQ8XgKbXzoerUnH/9EbCfBMFcKpkacvpNNy/rqw7amUCWONWoS5xDb3W
311MlIV5kyOdbdFlHVktvyVYGCwSxJxFL1s190i7JAuxU1+OzrpOQ0mqm8kN
eRaqK+reGd+goeFant9LdRaoRa2nvTJpKN6qk3LLgoWpjVeeZKMH2egUDWsW
vhzz/PsT7f460jCRZiGk5fv2sJs0cFY3+NtsWSiN+2GTfAv7ufX7y6x1LBj+
+TtSnUXD9cN5yV/8WRC98UBv6h3sf624g517Wah1PLJtHdp9+6vNnftZ8M0S
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
/musklzfzZL/AT431Uw=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$31091, {4}}]& ], 
          Annotation[#, "Charting`Private`Tag$31091#4"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {40.625, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {40.625, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"stroke\"", TraditionalForm], 
       PlotRange -> {{40.625, 47.15}, {-67.90287923536205, 
        67.90003427597632}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"inc\"", "\"ic\"", "\"itot\"", "\"gtot\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV13c8lW8bAHBZCZmh7HM4zzmlUEmkuHAGJVmVkhGSjJI0KMoIZRapEFJG
SyqRUu5EKmQkleqXkVHIzGq91/tXn++n4rnva9409312u/j5+Pjognx8///T
YkplDp8NG1jNi/ueLZUmW6a8U03RWw/eFr0SI008p+4xI9FHhqMFhLukSfiU
pbWwLRusGopDK1NlyMOpgxnidmxw1r75VWhMlmhNN6xa5MCGk7RnW5MS5cma
6YUvt6OL0xc7zPwnTyymPXZk/t+Xi5MfaCsQz+mZCLXNbLh+I1rMtl6BZE4z
mhhb2CAxwC/d8m8hkZgJ9VnhyIap5h1u+mwlojzz4s8BdJ8qqDw+pUSWzMie
uY/2FbbVPPRaifBmrpUZbGND645+Kn2zMjkx81bQZDsb7qh7nd/tpEJGZ5Zl
b9jBhk3MJQ/5uWqEb/bIigR0susaH/oJNSIx+6zmNfrOxtH4rHI1smR226Ct
MxteF93P2ymnTtxnTxo6urBBcK3HLtMIddI6+/mNpxsbvFcbFk5toBErj9UD
N9BbrKQu3N1FI9V1yfzj6NGt8+XFj9NISab58vCdbEj7Y5mVXUwjKcbXEi+5
s2FiSYS4rySdiBbw539Fq3/NkFxJ0UmE5I7HWh5sKDu1JiB1LZ0EdkgMlqPF
9wQV+3rTiV1EkGWbJxviN4ywtSro5NX3BjeVXWy4+u77Z6MmOjGzZx7xRBdv
84j40U0nKzTb88fQS6fl/5iJahCZ5yaCkrvZIFrnu2e7vQZpnidWydvDBtUA
/YJvbRrEItCzLREduL0iVKJXg5D2x0Nv0Qq1m9SGJjRI8Y0AZU8fNpz7/Jr/
g7QmSd7YFnzClw3H/h0VCrLQJCKlOmdq0b8E7+jv36xJTqieKpTww/hlvq3X
cdckAcNG7zLR2lXX9o6FaBKbM5f1yv3ZUPdy8br0a5rkxczsBr69bLDovi1S
VKJJwN3Bg4cmYuE3oys1ie7KuWffos+dVk043apJJN/6DY/uY8PzmOQ5835r
ktcLDa4vCWTD8m6i6GXKIK0QI+aP9vri51VmwSAfvdv8bqP/PlgY2rmJQfof
BOnoHWCDpbN/w1NnBhHYdqdkXRAbNn6a4lUeZhDRcD75E2gbcU/N7lAGkbq2
6XAV2s3E3rQrkkFUZ4YMeQfZ0DI83zssiUEMLi6ptDnEhplfI/IGeQxi/DRY
PQWdE3u6yfE6g3C+vQh/i963TYHpdJtB7Ax3s7cfxvzgic4XLmcQ/w9XXnoc
YYPLB1ufv68YJGjO+JJ8dMK8iPJVjQwSstgsvh993Ma1YesbBokN7rD2D2bD
wsl+XbuPDJK7SKX1UAh+7+iDXonvDFJo6reqHF0+2p0RPsQgt/c8SvuFPm9c
d/vzCINUlG/bduIoG9wfhUtvnmKQd9vS/jt1jA1PVxyI3yJAkf/Ce0zq0Y9j
ds1dIkyRr9f0LkuEsmHs8vIrgyIUGZtp8UhBpwU0HF4pQRHxdMlvmWFs+JTu
OtWlQBGZKpf1X9CbeElDGooUWfT91g3accyvu1s6HZQpQq2x2puPzh73kz6l
ThHT9tjx2yfYkOEz/XQ9iyIW/O8dxtCLNzPfKC2hiPUSZqleOMZnx97wTi2K
7AipOVKONsuQfmSmQ5FDivx/qyLYkNqnuzVwFUX+fZ2RFoxkg0yMjfRHfYrE
3h5lcNAvdF8UGhpQJJ3dubEWvTZS6NGHNRR5spdcqotiwyvu5aNFJhThGT64
I36SDRe2++g0AkWaBIprNqIdDRW29ptSpOtC9lAj2tRY9pkAmyLCz8LWtUaz
geup/qaLR5GkhEO2cjEYn0W7Z15aUGSh495dW9Avz7wduG5JkSVDzgnv0evS
Dy102oDnU1j3+VMsG96d76oNsabIu069UZVTbPj560S0/iaKuN1cKuSK7n3Y
8W4IHWiqvKwT7XzVpHeTLUXSfH8d6znNhs6X3/502VNETX88mYrDfPTM6Alz
oEgh38DV3f93pEGswmaKPDzXXv8NPdxhGG+yBeNdWa78Ix7rRSV4/15HjM+C
IxWTiWygGWzs37WDIrf/29e0OokNu5oEvD+jDa7t/noEfSDNJdnemSLrjbeK
/0LX3tOHtS4U2eutv+NfMtaLz0DHHDeKlFVM/JqbgvPC9UN1oAdFrg/Pplij
46rLSD86kz5n6Tl0lPiZNBdPikTEzt9BT2XDbEvSwvW7KGLlQFWsPccG60Um
AfTdeP8DW4/tP8+GvBTJS30+FJFQevS7PYMN5owDAr2BFPEKDv9z6yre9+Vl
5TVRFOn3Df0yjGapOpduOkmRPS7BT5fnscGpa/eFD2g/8/0n76OTzSJaB6Px
fufvnP84nw3KnsNFkqcoEnoZVOoLsZ9ujTm3LoEif1PW/pt/DfsXX82Lp+gT
0Qadm9A26zIvcBLx+311896gNbbVVG5Iwvxbpb7s43U2/Ih4NtfmDEVSX/5b
+/0mfn9byA7mOYrIV/xSXXqLDadU72llos8XTfHtRdf57Q2RTMN8TRmuHkV7
eU3Hj6NznL9YzRSxYb2QqFPxBYrQbT5qG91mw5mnuUT5IkWumL2TCkXvU+R1
xKDzmY2tfMVsGP+jxrc9nSI3R5/sELmD+S4pdWUggyLaXx8ar0fn6Ak83JCJ
8W4rVY9Hz976NHwNffdR0VfJu5ivs7d93C5R5MHJLD+Fe1j/LKX2e1kUWXMk
3XobmrYOVAWzKfLIJ003A908WF5vh36yKXFCtYQN+3NCmQPoZ4vCjlH32bB7
cK648GWKFAXFdvmjt9d/Y29EpzeetbiPXrm8UPgsOuBkwQJ2KRsOJ9Y0y+ZS
xKnjTkgceuu863ds0Fyjio4W9ByJQ7Wn0cqjTTd3lrHhYnmj6SR6rtVHmWvo
2a6uY8wr2L/ye46MoMUy+tM3o/+bM/Lf6gdsELmiEXMC/XLHLPs4mlHRtrQQ
XVImeOM5+kfaHLEGdI6MpLREOfavjpVHh9Fx/osOb0abbjiyQvIq9qMXGp8z
0bzPTPpS9E4NbfOvaI1LGUZctFWYwTWth5ivZ5YGOKMNPphJHkArkpV39qM1
9DYefIhepCs6EoGWSNr6cc4j3Ff6RFTPoGe/7TS1RNsNxS7NRPew/QqS0Xt5
3eJX0U3Zh+a/Rwf9DiguRD+aPXFArYINbTJxItfR+ZvjPnihhc+cFv7/358p
PmdShA4KfZGRiz4mlpP3E53836Xyi+jdXtfF1j1mQ/1DD9sEtN3Tkv1R6IsL
DziEoo2VK9/Vob3/apbsQS8+/HKd7BPc9wJbdtqhF7S8ubId7ao/N3I1mm/Z
f/Ny0czx1ZcWoQdi+vd9Qwc+u2Y1jffZ1jX2VreSDRF2IzFv0E/X/TE6gs7Y
kM25gb55YW5uJZp/+/pjx9ER1sp7rQkbGj26tVXQ/teo1nPoJ/enz/di/B0F
l6/5jJ7/ytHhJlrnIUfY7ynOq17e5aVoRTkbv3vofs5f1T7MN+GA7S2z6F0L
rF9dQn9i7Ms6VYX1clMk6l8ORWpPBAs2o40a0o9fR9/9GOmz8BkbdETlIm3R
p85c0C9AP4iWOpaC+R40mJv5A92mXO6ijXbj3eLXr2bD5TfDD2qwfvT/PH1d
jf4RLxLYj/VFc6zXE69hw717C6oPoMXvtaXbo39f9hD5hfXY5T3g1YV2PX/W
/g/Wb1Lrgn//nrPBdtVdryas99/NtQrcWjZU8hWHr0P7NIboxqNj/ZMT8rFf
cF917Fz4gg3So+88/c7jv6+8Wa37kg075l2Me56K//6x6+dD6HGLZwUy6HcP
ZSYr0CX3ExK3p+B57x9hWr7C836Obv6M/cz7Bvv0zjrcv0BL4h72v7bCqdwC
9IrtMYs/Y380z7/+aAgdYMR8zY9WvSw1FFzPhoKQqUcQR5G3aZ82nW1gQ/Cf
dbtjYihiFhEk96yRDV+zI/tMj1Ok+DhTe14T9run+lmMMIqohLZzN6EXc83m
CIVSZPowHPmIbtjU1HU/BPuJv/jH8Wbclz6ZXfrvIEWUtl3N0WzF+Zm6WW6T
L/bjLVvLfdBaggmi/XsoMmkv2lKMbv/Nv+mYN0VarAME1r3Fflq1tiYN508s
e63X5jY29DD7PFJcKTKh06oV/R77n0U7q8COIiODxxJr0dHrY/mkcR4PXmOM
inxgw5pZ6twhnNc9GodL49ClH3bM6Fnh/Sgomp5px/31fdmrMA5Fyv+5bsn8
hO+b1tRg3mqKlFaIlH9GN2U1ZvrjPnM3+I6S2mc2GI+lJiStxPk5zt95GV1i
9jKpBvefzL4834L/2PCGVC/9y6RIWOPAibsdbNCX3hlxGfexkPjU7nF0ssxk
bIQc9ifLddxVnWwQ+HdyrassRfY9SxR7gP4wM5QnJon5WbY87XEXG3Yqm+3U
xf3PLPvwjRdf2dDt0nXi+jiDzN0n0PZfP+53xHGVdx2D7E19WMH4xob0annr
6Be4f5fvv+KHfiQn459dwyA5gh0Bs2i//NyHVZW4L6dXiMkP4D5fUUR/fY9B
vGsOmm4cYoOkf5jIr3QGeaHUf/PRKO6bUn3WZBfuuy/qIy/M4jy3M9g1PaRJ
Qm8Fl7SjZ9y+co2+a5LAs1SP8i/cL16ofgnp1SROO05wL6O9RgIsR/7TJNoj
K+dd/80Gj0ffc0oaNUmrQkbio7/YP44s9yws1iTqu/dc/I+fA415O/eEBWiS
MiHh25piHPhbfqryzDcNcrx7d5SzEgeMaJp11e/pxO1N3cAVtIzL+rJ1rXQC
z3Tsv6OD5s3PedBIJ/xXpmiHlTkgVES/XPKcTqLdYyqTVTjAgZs/n5fQSXxn
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
WCJN/gclzY4/
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$31169, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$31169#1"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
Pp2JXjzq3lQlRoX4kMXJWgt5sOfWotf/TVLA8fWxfd7oM7v2pPkMU0B39Q/9
22jfQ8adZwco0Dr2uG25GA+0iqr1x99S4OoO9av+6A+/E6WgnQIBJfF+99C7
jKz6vz2nAMPXkbpmEQ/27St64VJFgS/N9T2h6LjdqSt0HlPgAVO3uBx93Lzk
u8UDCpw8k3p0Bu0RtNa99j8K2A4KbAVxHjQVVXddKKKA9kYPxWg0JfNd9MMC
CkznvfxRjT4vJHVxZR4FmkTWPhaWwOeLjG8Uvk6BTLecM3x0wy7F95o5FPCp
XWB3Er3VVePY5csUMFb1136GvnGyPHh/JgUkYrqmxCj4/lopo9HpFOjpNXu6
Bf3KWmTw+yUK3IFblxLQx5K337ySSoHoyzSPVvSq10P52SkU2DETZkCj4v5M
WggPJFNA1f6TyC50QIji6xD070ebX6WgzfPdjS3RdXKluW/Qw+1hVofQKSGK
QfKSPDi9d97qTvT+17Fce3TTgKBgJN5/zeoh2mW0hllLxwF8/oJk6/4e9IV4
pedZuL6uscr/lkrxgKonJiKJ67+1QzPGFb1TXcSoJoMC4SUJlrno9cfDTv+X
RYEt1MklX9G9Vu2yH7IpoOTrPLyMxgPmSNY83lUK/GpuJF5o5Yp+3y8YzydM
vYRCtPtHzeAqjPf5M2mOQ+hzi7zXdeJ+6G/0mvGj82DFVGDEtRIKCOe3Pb+L
PvK20di+lAKdIusy/6A3Gq0z2fSQAsG1YutCGTxY4Km0vBbzoxxuh0RJ80A9
fGPwtw4KnL3M2FCNvqCTcValiwIOMxEywjI8UHl/e+hEDwUEyrfej0NTVzOa
WwYpwFk9PHZOlgfdT/pCzYWoQE+2qXmJPhY2HdKwgAqfx54kSclhPlAurvWh
UiGu5LxeCvohd6WljBIVnjH1fbPkecC6ol/0y5AK837frP6EjlXxPSOP9Qbl
S6SZi3kgXZgX6mGB9btRouIRWshQJ9ndngrZ7t8WvlHgQbOryIXySCoEXcm+
IaXMAzWtMeanZ1RYQl/0IU6VB6Nlott/+kiC3bsYvRdohbHu534hkpB8deq4
tBoPDprPfzUdIwliel91ctFxS+UKFC9Jwp8t1aHV6jzI1xxzPF4tCU1xIYwZ
TR6ckD6kYC8jBYenP232Z/LAv2X09+kKKdB3E7YqQ4cy3y853CAFIy2qtrPo
S98Wtlm3SoH3VRe30yweFN7ODpn4JAVOG3sjrrJ5sO6I0mChGA3MU98VtS3H
eijeJpxjTQPhudP3ZPV4wN5SZ0ScaFDlJV/uiLa5vHp7iwcN1q23bRhEFzRx
RCuP0ED386seQX0eWCuOfX2fRQNZ/Taq/ioeRM9zFPmF50Fn5oh0KDpjSX/K
3G80uCAiqUjQFyJS++eO0EC8a5uWxWoePHE3F2+aQ4e50c2mrgY8sN/1dF+Y
Mh2+tTT6X1jLA0Hb8+/W2NLhxpqBkLfo9DwrYRlnPI+uikYqG2L/MfEe7XWn
Q3cQ/8wtNHd12GODQDq0KtReq1nHA+Nru32H4unwyIt0jBnzoCW86J1/BR3m
XexQW7WeB5HtHanXq+lgWfEt8DDaNWtdXE0DPp9CZ0yhVzuZCT1tpYNcqceu
WeBB5pRZ0ugnOrh9iMgFE4ynoNGCc9/oUCJ64U8Uui7oS6X0EB027KlIFjLl
gacz59evcToEC0i9mm/Gg8O6IoVVogyoWaapsQmtJs1zahBjAGWH0eEz6BVb
HPc/ojDgxnV3aQkOD/q6/Ub3yzCgc2O5NY2L/WrL6bld6gxYGvDyxk50V1nj
Sr4WA3wyP48no4X9vmhlMxkg/IuSKsvjwa34VbEy+gzQv7jvtSIf+8HXA6tV
gQGRFaGaTuijsppF46YMaPpyLvgKuvZLgOkDLgNc1j6UUTXnwfvYlG8Cmxhw
26Vl/z50rhld+uRmBkyd6X+Qi772PCB+ZisDzn8Qt1m2gQen7hvE37FiQLeo
ar4n2vTeUaWhXQzQ0lszWYCeWZ/Jl7VhwJNjLpdYG3kQc+TO7hX2DBC7HTxw
EK2/kuOi4siA3a/OrrmDjmM76Qo4M+DXsgdvVmzCfEpX3BXpyoB1O54vC0Rv
2vb+hYobA+LCPoaUov8q21vedWeAUouY3BoLrJf0sNsZngzwnFjiGYpeKH+7
YMyLAaVLVj98hD5zv3pszQEGbAlwtjXezIMDPKviMwcZkJYZdPMoOur3M26a
LwM+152eIuiP55QPXDzEAL1f2RvnbsF+pzu0OsKPARGypWlm6Nc5Pfet/Bnw
1PTZt2PoKIn8GZkABjC8e9bWoROviSg+Q++9+PuUyFYeCEyxmzwDGVBYsaDL
HH0l2TZ4HL13G6voHPruQ8k7oUEMkPm4PaYTPfRGufkLutk/0FphGw/IjtjP
xocZcEz4krYrelGkJTUSvTalfPYmeu6ynH0F6CHNnrZh9BOhy1MEfe2hYJ7B
dpwX2Ee//N+2FhphR9FuV4+Z/f/3lO6N2+rQcqXTav+/X+1BH9VFljy4Hb8+
dz06dM75iR1o9ytFXQO4Ht2ke01p6PnLyt5HoD+rvsnuRddkv6yewfdJL50O
0NyB/dz48HUP9DZz5Q0H0ec8ddMqMR7z3poplKLnGJ8uE0CXe7kPT6OtJhbL
MzGeh/6dqjWz4kHWkahODsZb/dztS6fQvDpbQXPcj3fKrQdeoo8fW5u3Evfr
fMlvE5md2A8mzmmK437yObIMR3RfcnH6S9zvEneniu9of8k/t2UxH/ZPxpxf
sQvnH/OYkCwPBiicvuEWig5bV3BafD/m1+2f4qLWOH8s/t1VjPlnDJJ9W9Cf
Nj7m9O1lwOjLlfcvopOyvTbOwXx1+B3mqLL7/+sTiRbA/KadyF7hiR7/Vt/d
a8uARpkakTvo2Soqq2g31ue6hcXGNrhePYmpRVg/C2IuCdja4vsmC1h0b2AA
oT1uz0bznurkKvMZEJjbk/cFHXeUs2YrhwE9jRrbA/dgfX8/ZnPIGPObUnol
wY4HdPWHhc+WM8A7503gK3SJS+bUIRYDluj/26BozwO7BjklYW0GnLHmjBSg
+VraxiMqmH9Zrab1Djg/c3pmBmgMENcZ6vvnxAODyZU7HEaxX4aLzgVnvF+4
f5cG9rvk5iXK0Wh3I4HrvdgPlQ5Z2c3bywOJ6Ow16h/poFta1i7uwoPwUmvG
7xa8Ho7VKu3D/mUw/LU0D69PzOxzRlcueHbz9FU6vP1YOucaurjaKnl7Fh1c
jg8Yabph/a89xLqTRIeAp1tKdd15wJjZlPQkHK+3kr1h4oHny6nSRv2teP11
vdoYtK70YZrqBjoojm/qq0Wb0idPCZvheXIpQmmjJ8arBlZdXkWHB919KZZe
PBhs/KfAVsDr99+OczmA543L+z3NX2igEG7mefwQ1u8NA5Eofxr0+wob1qGP
1kS5TXnR4KZr/UIRPx6o6n5eud+VBgYWmwrj0JuS79os3UkDS/kdv077Y3/Q
PeBEWUWD2LK9QecDeSBf1dL8/rcU/PodFX05BPv3wEh72gEpqPEhaWVRPHBa
bOC4FyRh7GnC0Cx6aW+/6NmVkqCm4czhReN8NXP5faGWJMR+mPOzFb16YMaw
lSYJ/G1mJt9jMD8v7lK/8ZUKT5fXfVGMxfn6ldal0/FUaBl7pn/sFA/0vvYc
i22jwNvQV81bknhgkVfdvy5OHLI8HSJLr+J8u2x1xlExUXgZcHTl0Xv4/eC6
TdZ/Z9ff2UvZL1eH56HT0Kc8xo/1WsONnL2dmP8rZbq03TsqJdMU1BZ+5cG9
k4np6udmKvPUe6NjJzBekZ/FoprFyK3nxv17F/AhQudytGgKg2yg1w4NyvPB
r3f6iLupErkAj4L5OnwYErMxHe5UIZtjNwkLGfPBaSjheXKIJhmJ9TfhoRcv
cI6uOKVJUk+kh8ehg8k1tY/pmqQ/bvC32Ho+hFWpMxdXaJLQ06c/04EPg95P
jHbPXUZyE57Va5jygTrxJe73yWVEIH3TqU08PsheXKg2naRFctP9686iZZLq
pXZc0yKbMtLnvkA/KdpQcPmuFknOHAy14vPhtvLlgzIdWoSZfdrL3pwPk7wi
vwi6NrG9/szi4EY+CF2/KNqfpE3uFm2SSNrCh/x+r+iOYzrkneXimTb0rRPZ
eX/P6xChP9+/07byoVmvZueiKzrEal3802R0yInayuFyHTLW8OJ42jY+9Pcy
5O+O6hD9jzunr1jyIcppgDTaMYndcfXBj+iEfsmOEA8mOaY5/kZlB65v4Xpv
8SAmafdJvX8dvVNzR0ZfPJME/H3rl2/FhxMTa2FFJZPcpTkNFO/C+7lUXaTI
sci7+7qvh9HXfXv0ulRZRGjPnHo9az6k2AocjWGziNWVnGt30SGt8hfcOSyC
U7Djg918GB2+e8ffm0UWv7y3ZRI9/WyDkkwQi3ACYo3W2vCB75v77+JRFrnw
UEO+HN1v6JG++DyL6PM9Oytt+fCHPF276R6L2H1bWyuwhw/MMiuJO49Z5NjZ
hXdN0NPxH3x+1LJIe9utxGp06sFe7kAHiwQ4DVnU2/HBZJZkVY6ySIYgMRS1
58PhmzmHyBSL1OQmaG1AL9ptPpM4h01oP5aLPkMzvbqW5Iqzyd2QgOpmBz6o
bw/MPqXOJrzjO1bRHfmwzG9vbIQOm7xO0Mvfgxb+vJ9moMcmf2/8iv+Kbszf
82BqHZuc+a9lDtuJD2abufWCpmyiWHk7IBD9oSbgfQuPTUw7vW3nOvNhTvFn
sZytbNLeu+m5OdrmyobaGzvYxO2HFpxDN8UZzHhas8nExPz/OtAx7lviBm3Z
5KTQgNrivZj/Xy7oL3NgEzlKQ+pe9LJzse0qzmxyS/7Gwnz0oXHK2i4XNjHW
iI0YQo/OJq/e6sYmL/T2Da904cOU8Ojlo/vZZK8xxzUMXSIXwvP2ZJOxDSqv
qtDL107O0LzZJHbn3I3zXbEeo59khhxgE2nn3vKt6BDP7PFLPmyS503YyWif
yc+9gQfZZG3w5Zx3aLqTkb64L5s0xUTQVfbxwT5umbsD2uGcfZwHerTw4i1n
9K+0dX+L0PzCOhkZdHSuvM8fdHLBaxKF96OVTPWsc+ODxzPyMAufd/3xmx0x
6KquLQoHcT2rGh/UNaIr5rAFRr3YpKE9ZQ3FnQ95doNHtPB9bHuCbu1C6177
kU/H9/0+uFMpE11CIq/d3ccmEeP65/vQ5vatsSIYL4ogTVhrPx+u+Y95izux
SY746GFf9L6X3f6NdmyyQq71Wyn6c7JvmYENm9So3bH/h5YqOmRnt5NNdi1P
eGHmgfUDF8L0t7NJqPmW0hfop376zBk+m4hZMZdJe/JhiVFuXz/mR5ajWIY9
OvZPd1GQEZs8CXoa9Q3dabjbPHM5m1hG54/pevGh/a/KuJ42m/SfjXM/jO7+
+TwyUJVNRK/zNgt58+GH/cD4XAabpBWrkY1o+7PqrVswn3XKhVYkoieq3jht
mMcmW9uqZBQP8CFccE+MxW8W6em+ctoVnffPUHzXdxbx+xY5cxPd3/bAkNLH
Islz1vev9sH8Wze+MrWFRTQXKVpHoG1/UyLtsf7KZP411qCHrqinNz7EfsF+
VLT9IB/YrXtiLl1jERWH1Ue8fPlQ5q3MZgdg/S8TMyhE1wibDCzZzyKuYz1j
P9GaVa4Pm/awyLVTp3z8DvFB7mjcgc2mLKJ+/71ziB8fHHllg+JiLMKLLlF8
hDZ5LLuu4x+TuG8+0TWNnp1QUDAbYpK8Pt2dkf58cFHa7LDlJZNoUY6Znwjg
w4J6KWfV80yysWu3cCN6oSK16VYUk3jlMqsWBPLBt9lW4Zcvk9xa98owHm2g
+ejxjS1MwvLQYl8M4oNe5yGv8XlMolf1gn41mA/Sq3r9A910iOXZ66396GKJ
axPZ23SI/+7Qc+ohfLDwSzuwd60OuftTZf5N9Hf9tN8nxHTIKvnD08WhfGA1
+DyLLtAmawIU+irCMJ8XcC/8eq1FbNePXBYI58M2ufZng+VaJHRBvZ0pOvSX
/6WIbC3yMNu3sxa9x/RUe6ubFln3vLqxKYIPLaVg+25oGQF1z+K3kXzYz3YS
Uh7TJCmtvpKqUXxou58yJ69Fk/yMOBxwAL07KkxOtECTpL86ZiAQzQfe3QUt
D500yZ+4y0QtBte/qvjwsUYNUjDY/sL3OB/k24XCvRPUCePO+uF5pzD+kRLR
T+arEm973o5taHEJuWSdXhVSPX/zvUvo1Jv3rl1/oEJ899qG6JzG+0Ws8Slx
VyHPpALnWJ7hA1CPW3XVLSWRQTepmfHYb8r/G/19agl5tfSO/2d05U/zAqbr
EsJqud/BPscH46d2uWeMlpAujdpLVeh7C/sVJ34pk1VvPiz5msCHg48T38bb
KpMzxz/HLE/kw1dFt7tHVyqTvuU/PoWi2Wc16nIpyiTh1FT+ovOYX2sMK26c
UyJfVs0Rs0YXiK9aVMpXIsZ9Ij7ZaL07acZWAjh/nBN/MYAON+vODi9TJIOG
dL0VSZi/6Vujmf6K5H+NZLKy
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$31169, {2}}]& ], 
          Annotation[#, "Charting`Private`Tag$31169#2"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
M2iLB03JamjnwDQRuoCGu6n38t7g/h/ufuQZgmZs/LPt//nB3lza3YQO/slj
MoP5JDHa+NC6kIZvJKpJGL3QqGNZOnq7ibXeTcy/sdR+9xH0osSDwkvQryz+
0N5FNMx17OwdwHw+XyPXFVuM/enMF1tLrAdrOQ2DPnRTDr9IBtaL0aUN6apP
aRAJsDkw0k0ROe1d556id5ml3bbDemuMPy/wvoQG18UJbwQ7Mb5/fFzXlNIQ
wWU9roT1m7o/5MNJdEvX3nub2ilycUlCyi/0jy8vPI2w/tdeeKW/vIyG+BuK
grLYL0Sa3t03R7esW6658B1FuNQ/LkpC13E3inzBftPaM9ZClWO8ZjVehDVg
ve+WcNpN8HsduYtjainimK7YHImOazwmYPSKIma8mpu60IMGWbxT1RRhPGUt
cHhOQ9VZq069Sop0Kpy5d+UF1hP/Ji3PcopU+3jwvkXne4zFTz/DfOzwt19Z
QcO8qtncs9g/r9yM1k1DT+yYLTUpxvz797z+5Usa5j/YE/oyjyI3mkXm5qpo
8NaTz7uE/XrmbfUKdjUNWS6pg0nYz+0bPKlr6OVvvKnnCbiftd3WK2vwuc2F
vsFYfL/84UvqFdZnaIn6nwiK2GbSV63raOhrPaj5zx/X/2AyKQ2dJeGgX+FL
EYPUjJIf6Nue42f8vSkilSj8w+M1DV1XAi3GPPF8iurcc+sN9o/cuY9XXTBf
/dxEKxowf2+6VmVYUiTXW0ljUSMNXBdcA0QPU0TSq529By0V5pvvaUaRqQvg
3oF+Fpqpp70X89mRv2P8LQ2egrdv2BhSZPWh5AT5ZqzfIfnWQk3s74xm1aD3
NBiLyBSYcFFkZOhiaDU6yP5u4rU/DDKUrjDK9wHvSwWT6Q4TDNIvd6EgBL34
NNtk6TcGaV2xauvNdjxfbVsrftQzSPHc0QOxnfg8XFh3Gu8PlxoGffK68byg
a/kvqDGI57WI3nG0tWPUJZYC3le267N1PtOwQuCD7RIpBjlTEbqkCG2+Yirf
S4hBrAo1o5710BCjsuj2zKgG2RZ/IbOmj4YB4yVGtvkaZOGZea0fv+H8ibbD
q3Q1iFPE01KF7zTQvFQHQ12DNBe73HdAr6rVdN0sr0ESeLud/6CD93nl6S7T
IBvulC4RG6RhxDDjVNkPdWJbeW7rrh94P8ux4ha/r05qVn97WDKK92FVs/Oy
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
gFrNqq9SQWzoM1nVU/NMAxom6rQDrrIhcj6XsaiOBrR7ttXvDsf6pTekX+JT
h5ioOMcwdMqEZbrOnBqY5dnwN6H3X1U+2P9LDVq/D2/fH4H1HN7yVqMX73tm
fJWHI9mgUrHpvf0zNajT3Vhiexv7u26JU4izGpSO3Unzu4v3Qb/9HjffqsI9
+yM+Bfexf+Z9bmv3VoG3bt463vmYry6TvAH7leDRMWHbVVX4ffzKiq7i8qAy
+oo+1sqGm5Vemr610rDsjqTCkm9sOFjpnQIWq+CB4me/oCk2/BbK69YqXw4P
32zpO7aYA9F3x2x1YhbBdtHK4cHVHLC6lXmqbNc08/ePb5bqEhxIKNBPshud
YiZX8b92Qs88KUtZETnFnL2w78EoWthSdHNV5yQzr73XalKSA7mSqbnJTr+Z
Egk8TTzSHJgyuu6VdHec+VMFnojLc4Bs5nM9yhhiRkCJO0eNAz7qmWSg7A0z
0/eHfej/vUU0YrNwHfPFizWWLWiuUJ5ND2xqmCN0wFYbdRyv97chSLiCuXP7
rsXeGvh+c8KbCqFHTB7TT3cLKHz/tXjMpG5RubPNvHIFHXz/kUx18fcP5buC
ds7n3YLrmdz792PScPlYkOtWNtrY5s7nYNGR8ujLd72C0T4HLX/FHxop7wse
/MXP5IB7/JRX4+eRcs+QkC+iwIENl3qGjMZGy1PD6qqVtuH/u366b0Rkopzr
7s6rO9kc6Nb9MxrlPFWeete16jo698QojBdOle+MvcvTiH5f8nRp6NxUeVTc
oOc+DsZb/ZhJ0I3pcvWEkNOWhhygbt7Vzcv7U26eUmd0ZgcHzLgu9Srw/St/
krNTKHw3Bwz3h8+nuLlJp6nE7Dt034IiTUMVbsL7e2hIZA8Hkp+/403by032
6YXWRqH5c5QmN6Zxk4maxsA7xjg+5bxUmQkP0e7ZP5Noit/ntro+/Mk8YhGo
ONiDHirPLTPvmUcClCc/yO3lwMqW8PMXhXlJs1N0YQpaOr7DrtGRl7j9bT+b
vo8DEj0MyxK1+eSJiNX33AMceFBc8CaxZAHpLKTej6L5U2S9Vw4vILyHuau1
DnLAqNQ4YVJ2IdmXmJT8BB0r0XL4b8hCMqHef7TIjAPas6a5wjZ8RJtj31pu
zgG+w8+iKYXF5ImHW0X9EQ68rCy06JoRIOzAvbqiRzmgtvviRI2BIHkfppV+
GN05VF+9MUSQ/E0bCf2GftC9423aaiGyrdXBnMeaAyNbo/v9ZYRJo9aJUR0b
Dtx7/64z7sBSMjS4f03cKQ5UTdvGmv9aTi5Nat/qRdfsvbnnrowIEZ4nMl/F
lgO10Uq6UrtFyLpVTQMF6CLeLNGvaSLE03B3QaMdB7Tqm/wvHBElfCnsXbwO
WF+v/G9vfC9G5I6s/++0M+ZXyOKjk1PihF7LvyEL/UIlpOPk2lXk+ET3xE+0
YfTlXB7zVST56lWnsy4coO89KS4pWUUUC7usPc5yIELguvwq39VERTjA8LIb
Bxp4HhqYLpckWi8aRe+7c0BlfCTQTk6amF5PaepDjwfVvLHUkyauZp43FD04
4HBVWpWxX5o8+Sm3KAOd27wo2DJImuiuvjCT68kBqRxHk0VfpclGN8nesou4
nnGLaK0kGQKK9rntPhzQGfBjxM7JkttNzsvkfXE9zy9LvhGTIz8vXXBzROea
aYS8V5cjd9sCNnD5caD6yh1Zj8Ny5HdwPFHw58B0eo0dX74cyRxsbnQO5MDC
3vAjptbyROwRc3TBVQ48TBU6vDVRgThYsvcao4cPy3XrPVEgFYt25cegLSdF
7cWqFYjzMXMPtRAOBGT4LfMfUiB1y89xm17DfF2aq8qvq0h8zmcsjQvlwPx0
XnXdl4qkTfaR6xd0x8AQ17UWRaLRUNjCuMGBpMDBg7VfFEmHUmXMC3TczN+G
GT4lovvhk8y3MMynysjTRkZK5FrgF3/NmxwIvX0y46uFEunV/NHvie7hFj3l
6KhEwq7+SRe4hf1izmVWN1SJfNXl5j+I1i2a7vC8p0S29C50SkAX8Ss6p2cr
kYgbgo3f0fYDHzZVlCmRwc2iWuvCOXBlVX9JTb0S+R/KwMPI
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$31169, {3}}]& ], 
          Annotation[#, "Charting`Private`Tag$31169#3"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
fd/4ZTPXMcBR1t8rhL667ntSMnp0WQGTjfkTlBwI+ohun+kI3zCf214Kuimv
Z4Alc/SkHFp+habJVbTZhggLX8z3vhF6fg/6woyKuGOaNHl7h5lmb2Ag1yJR
7ewimkRr73pXhjZ7PE8mTx37szm4RGgjAyIb2n0uY/8sPxObY4N2OxI3moH9
NTj3hn8dWn/EO88N+89jrHvu700MqL2J6YpRoEnZvckRypmBPT3p0WbzaaK0
R7L5IFr0iRC7Dfv//Q+T28KbGeAa+t5fIEMTeLPPQXULzp9g1qjuHJqcjTm6
dAc66rF+aTrOlxFIX3gdLRvitXtEDPNSVNRHuzBwTE77xHkRmqjmjKbYbWUg
9HblnthpioRsFjt4Ai33/rFl3iRFamWUtn9CJ6SpNz37S5GEWHOWpyueT7E7
+MsIRcb3Hn5/aBsDbWOFmWd7KfKJIySd5477QKWkdivO4/Ky2ZxutGf8I1G5
RooULJ0XZLQd89XBn/H8E0WiDNUabqEDR71piVqKGMguvVDogfmYXLv0n0qK
HG7ZzS7zZEDK6cD5iUKKeLvu85xGX5qwO2RylyLr6kMywAvvx+7e9823KKL7
+r/xcvRoswv35HWK1NzNKX+xk4EggV7JK+coohX1wem9NwPvd6VdNIzGfTHx
OVrah4HK6p/5dRF4ngPNxevQ6ZwLEiHhFKny6VGqQyd0qJfnBmF9HGe1NPhi
//5Kvx7nTZE3C833t/rh/hedHVxsg/uCfyFtJICB4TLzYS/czxXnS1Zb7MXv
P5XTnjaTIkrRb6aj0Z7znamSKTYptx7eLb2PgfINgeVfh9hEpmY1x2g/zh/1
+1tvNLNJYWvfkMcBBk6pGntaFLPJsJjlxqqD2L+zfu0x28wmNt3rJORCGaBN
xYsk1rFJdpV3uQvaIZl0frBjE27aCeMOtKLBI0UrYJNTKj9FhMJw3vtbGGdo
s8lSk8SSZYcZOBwjo63XzyKh6xsVLkdh/fr9fX+Es4jrcJvCL/TxO+UZ74JY
BDL7FPSO4ntBLv/HXX8WEfkirFiAnlD3rnXZziKpO0wVi6LxvWV7ZGoJh0Wu
7ftP8XkMA3O27zkwT5RFPqaYKLXFM9ATLajqGGtK7rPNlHSO4z49nOwjEGFK
smo5Sj7oSusjjy8HmxJ3hS1KPWi1hYGhNTtNSXdOtNKfBAbmVVxdXcgxJYK3
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
40GuhcXwN8lx/v8AN6eGWg==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$31169, {4}}]& ], 
          Annotation[#, "Charting`Private`Tag$31169#4"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {40.625, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {40.625, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"hinge\"", TraditionalForm], 
       PlotRange -> {{40.625, 47.15}, {-20.190267943587006`, 
        20.19098227857095}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"inc\"", "\"ic\"", "\"itot\"", "\"gtot\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             FaceForm[
              Opacity[0.3]], 
             RGBColor[0.368417, 0.506779, 0.709798]], 
            LineBox[CompressedData["
1:eJwV13c4le8bAHASCi1llF1IJJU0VO7SN1nRQEiUFMnKSlEoqaQiMxklo7L3
dtvZe89zXnufc1IS6vf+/jrX53qv6zzrHs8jZmp76dYaJiampyxMTP//ldSf
4Rq8SsD+As5uOa8S4N50b2CrIQEhWl5qXr0lUKOkNKmiT0D6M32l+v2lkBl6
szpGh4CCaa40hYFSkHVpPnbqPAExV7IbzRXKoVu21/zPSQKWDNU2bR2uBP4v
XOoRQgQYt7rJzR+og4Up8a1eAgQkcEbZnvKug+Dj2okW2wnoYOXmftxbB64m
A9dkeAh4tj8uv+hJPcjHRO0K4SLA5nP4DbXWBnDg36LIuUwFAf7JmczDzXC4
dnPCw04qTDdtXaNT0wrrY1k459uosCwa+PDZz1a4YWekcqOFCm1PHE2/iLVB
QftNA6ingv/bUpmyB22gmVElT5RSweLZ+K0ze9rBXf1QSEUiFfb0Pfa8+6wD
rDISvNk9qVB03y+h50A3eJzM+qH4mAruIsQXHqNuWNTKs7JypcKu206rp7y7
oaQsyavGiQqKXk0Pb/V2A9e89BUrSypc0uRzGfHsgTXBOmk6l6lw8sPaytSG
Xlj9McKWsosK+x/4eYL+AChZe8d1iVLB3M6DN+HRAHx0s3j1V4gKOzgu7WT/
PABlhzrFzvFT4eG1upd+swNgvCxjWc5FhTctr7kmPAdB4bj3e/OfFHDqlRuI
jR+CW9bmxXqVFIjJ9Mn7+IMCXDOnNqmUUaBK6kiXASsVjt7c6CmPFHCJlFvg
4KPCvuDPpevyKJDWK75bV5EKBrIJvuGJFDhmnHbhpQcVbDY1z5oHUEBALqnS
lpOAs5+qzz4xoUBYxmsJOYFh8NV9rnTGiAI3X+92eCczDDpr7I6sMaDAmRsT
P2ePD8OZ9sqdDy9RwOfer9DXRsNwhVk9+eJZCijMR6vaRgxD/Mc76yOlKfDk
+SqjQGgE9sje5lMaHwK31lEhF/5RsBex5jtGGYLDtLEr1N2j4O1REi3XMwRi
kl8LlY+MgnDgbs1NdUNQWPGBdU53FDqu5bqHJg/BhtWPb8fejcLFpW08TY5D
ULBJx9CEcwz+3so8mr46CC4yg+E2v8bA5JUdk/3PQSjKqwzmYRuHwnctSzKz
g2DrXXwpg2ccguw32LzpH4RzOmKb2w6NQ7fuvXaugkEoP2j44bP9OFxxWDSa
dh6Eiicl1S9mxiGPe2/zhqkBaMhmFjbtmQAiTfAhB3UA1nupL1HGJ+B7zb9C
pu4BkGo74af3awKadfmWeyoH4BKfEk1i6yQwiT7uUvpEnrPpC3tdzUm4+DWH
u1FvAEKzZ88vFk6CyPFeteHCfpAX6C39L2QK7llrVKdn9EP64kn+nM9TUDKa
fcTtWz+UfJ7XFUudgqvHuvtWQvrhuryz90D1FFCTnHsz7fthHe1L9sLSFCS8
UqtckeyH9yFDUpGG02A5dOxLh08fjHy7w97PMwNpEzmT/R59cEP00pS62Aws
cIdnDTj3QYJZYnLa3hloYSmm1Jn2QWfl5r7bZ2bglcetg4aKfSBTv6vY1m4G
7gRsPX1iohfOPOJ4tVw9A+NFHINroBdYXMTV/jjMQvRt18Na8r3AeUBt6Yz7
LHTkrg/w390LO29fFvDymQWnRDVNps29QDkWmzn+cRbMjhnefUTpgY1mV46d
aJiFCvtrrT/ce2AqL+f+DvE5cDJ4Y1Oc2w2+v7JsE2rnwE/918jaxG6I0ck/
Xt4+BxFHDTjPRHVDluAdl5bBOWCq9TSJe9YNt8eWzrQw5mAiUmF63aVu6P4c
K2G8Yx6mtI71HJ/sguCwNZJJ5vNwiDOP/fyWLvhhFMQqtjwPFK5o/SqWLnig
kdU2x0yDJS1/hyO/OuFyuuUrVTYaBB++zsLc1wmb/dLk5jbSQGUkwvZATCeM
C5zSXiNKA67gH4VsCp2wyfLreq3TNJhkZiw/vtABnd2XAxw9aNB5RHQv7XQH
vOT7tv6UFw30xWx5DOQ7IP6B1gzbCxrwdHzYys3bAZvcrBe939Jg7IxxqWhf
OxQuJ8pciKRBiILf9rSb7dA38eE/9gIaHBaX1/1k0wZRmp9lOeg0KL7+e5T3
eht0cQlf5VqggX2t+eVnF9sgwZA3iGORBhZHxas1D7VB9PrPcssrNJiPKFbw
XmqFxlot9qR1dJivthOOedIKwv/d97osQoehT5SVeIdW6A5yj+DdSYd1z/Nr
Y8xaYVJ66nuHOB2WlwwUX6q0wsLrY5dUpemw4Vf4u9X1rRBuo6Dy9xAd/j3u
fxn0tgX4h0uWktToYCl3jX+PRwtgtualg5p0cL9wPjXLrgUSn1BL07Xo0Pp9
lSX/Ygs8v/FtPP4yHd5dr7az3doCWyuf6N+8Rgd+R7s9b4OaQbJHRErEjg6S
bKJ1N/c0gc6rMOukd3SQKKH84GFrgpB1wzupgXRY2+ZwN5dohJtmitqbQ+jQ
Xhl3s/FDIxSYeG668YEOz6br/oMNjdA3+QHqP9OhVlDw3vHZevgonT9Vk0GH
GfVojl/V9RA0kXQ1K4sOLRLPbD7F1INjWsf58Bw6aL1kz6m9Wg9RzDa5RgV0
+CjwU9Gipg4iv6blxZfRgb2WrbnzUy3MmiuzmzfT4fGQs3S0Wy00/Csc4Gil
w0m5n4PGV2ohVcjv1Lc2OvxsKnNL5KoF4VLp5L5OOowqeEa+d66B+t8tJ9cP
0CHJasulinPVYOrP6Hw7QQcp96+rX8Wq4WP9rfqZSTrcEWqJ81z+Djx55wzP
TtPBKNhAiD3lO2hEuSlPztJBuPVC812e79BYOmC4wqBDZm7GobihStCb7zO5
sEIHC54hbtWCSng2at2ls0qH6vdrDQeDK8FJ6tVT3b904LHyVJ84XwmccmJu
GkwM2Mt7sNa+oAJOWs8zc6xlwNuhfNa84Aoor+Q8QCP9yU3+z497FbDQpxDW
ysoApptLh1WlKiDa3V3Il50Bkg1sO+8GloPG2/DlFg4GXF/pVdG3LYemgc6N
YZwMEE3b4qKoXg6PVSpvGHMxoOjCLenBf2Wg4fShpm8DAzKI9pXPlmXwJEIn
6+tmBhhU+6Yrni2DXQ8u917ewoDeSK+6KpEyuGzU8N8f0v4S0ZexvRRKaoRn
j29lgK7w418HlUphtL0m6h0PA6wvl/5z4i+F2wfkWEV4GRDp4lKVzCgBHaeF
rHjSypO6+czxJbDG+f1KEh8DqJfj/gp4lkDJx8UAGX4GPOst3rf3agmAb/qD
WNK5NtKe+zaVgCfLKfk32xmw7YKQ8+lWhK6TgetWSW9+nC/C7Y3wKEBVzmIH
A5j3Nzu4zBbD6cM9DvICDDD+cFhr46di+KqqGBBAeqPV+WI/nWK4+HctO420
7rpHJVcLiqBwZmQuQpABInWaT2NsiiCgy9NsnjSRpXiyV6wIFL6HHDgpxIDQ
XbTfXC8KYXbqdEcD6c8ov5fjeCHsfHI9abMwA9pzXuctzBZATg8XRZu00JEX
Ku8uF0BkiqR+OenSHeYuZ9kK4HmjaNQiaeeuboux3Hx4NV16RkqEAUtFRw84
3c2HPyvNKrqkGStLU3ShfLh7lOfrY9KTT+JTjJrzgGOL3t0Y0glTw6FZT/Kg
R+HqmyrScO1OycqhPGC8neEeJV3msP7UwfFcaDvVuvSPtMWhNQ8Gw3KBn8ep
i1eUAR/e+k0/0MqFZ6FLJ6RJVxWqpq5dkwtHZwRlFEk/O9I+9DgrBzabhEer
kNZIpL+bsMiBHVYKMdqkpYYcidOCOcCSF7tfl3R2gMq4T1M2eG1LUL1Cms3J
LL/8STa0ObLM/v974CrFcUYhG3h+WQlfJL3fZFiOdTILqrpjB1RJL1jGr90Y
ngUHPKxkTpKWe/CIi107C/rs3NftI613sfY6jTkLaFoRTgKkGVvYBWozMyGn
38uBlbQJX6lOoHkm/Pu9sGaGXK/HxPvd2jsywS8iUbyJtDffuaQ/9RkQMmDZ
k0zaUfbdv2D3DOAbmRN7RTomSP+o+MEMMGIs/r1J+uXjV/eiR9LhpvHZe8dI
36mSq9wSkg4X/YMfcJLmJ66dt1dLh37WBP5e8jw/VO8wY09OA8lZAWFr0upB
x3efuJ4GwlGLzw6QNl7P8cKUOw3WbQx6ziDjx4YS5+vlnErOe9tVS9LCRz7e
8pBKBU5w2idGerH72Ov+zBRYczwksp2MR1Pv53yn3ZKhq0lQ/wBpXicDjdqh
JBD8/i+6l4znoyn7bh89kwRVRtGvPUhfuuuwp2J9IgiEi58tI/PDSke9Nyro
K0w7brgkRObP9Z38x/R+f4FPqQMpCWS+Gb/KkP9h+AW+iVhkHCatw2nYQxWJ
hxNi8cnKZL4GH9+1FPIlBmiP430Okvnu+Ftc9SVHDJzs2iUTt40BHYtuNFOr
z2D97/x9XtKpBQ77muWiwfBTNM8sNwOqQ5lFDtyNgrT5Ne72ZL3ZfN8vUuJh
EGixR3wdJOtXaLbSDxnRQDD69F81F+lC/zebWKregU6K4/oj6xnQNB/HkNji
B/TGXYvuZP07mtf8MEL9Gdi8i3g/zELWx1bB/4jdsnhn4+1qxjIdTqn53LOw
NcBGw9FHw3/I/pLS9YQ/0hyd63zMmpfo0L1H6vTeHGfkXO2rjlykg+9nyybO
c96otdedbeMPOhC1cuIiPMF493zdjiNkf7gV4lHQ4xCCgqejNKfH6RDUJXU9
tTUUj6i+L/owRvaXvnuGKX4fcF7o1nX6MNmPFvRM6d4f8eTrHyW2g3TQT/iw
U50tDlPbSuPzyP5lqDP4KOVZKjJFnf3yPJcOx2ccjqzvTsX3yrLvhrPJ/hw3
n2QmnYbVfb7nT5D9k13bXVO0KQ1teDYcH0mjQ/ED/BbHn4EcxlrMGxPo8PuB
eGJrQhZ6Zn3Mqwkn7xtsscGFLfnoFebxYfQRHcTbB/9xiRdgoPeRyn5Xsv+1
8jAMnQsQT6m3ND+gQ9yehsm5HYXI+uvKuxQn8r7wYMr2x80iTF8bX3HOmg4N
1kvbL/5EfH6eqj58lQ6Opw6pH/Upw3VMzrE1h+kgtGPfK+/sMjTJ8cvfQ95f
nm6v6WomyvBvCbuC9wE6nLi28aTB8XL0Wg26emgvHYzrpLoPz5TjAi30wS0x
OmgaWuhyn6/ESKPrKgKcdJBzWteWzlGNx+LeyXT10WCx+Kiv/uFqjDTPe1HR
TYPnkhi+eKMarzZw6iR3kN9b26zF8qpxc1KDwv0mGlwcWnAWM6/BgeLXewbL
yPtj+E7zktJaPH08cZLpKw0kfraHjdg1YGCvh1iYPQ0GLjSrVoQ14BZfYlLC
lgasXq4rYRUNOHLETzn5Lg02qfhJyPI3YlG0Q0ymGQ3+lEXoEMWNePrxvd2h
ejTwP5ngAKzNuCi8zJV/jAZbKjdyrWi2YDGLFm/zn3nYKqp3Uu1GC/pkNwlw
/piHhZGMPD+nFtx77ogCTM+DpnKg9cbIFpR7ovDpXd88fBkczCmfa8FVSoTG
WME8FDG7v9vwthXz529rnnKdh+kgLo6B2ja84htulLcwBx66rvObB9ow/2Nx
6reZOTCKWuxTmm/DWz+eTASNzMHQobrEF1vb8VHAq38G5P3/9DfPG21X23Hd
es2M0Iw5KEmrRKXpdgzktTCft5uDE06R2sdZO1FK1+Xw8tgs+OYydkfzdqJw
iJTs7sFZuL41fdcaqU5ksW0d1+yYhcKrP+4kqXciZ7l7zLPyWciSHLiX+rYT
Ux5m7UiMmoXMvn+PTfm78HLMr7k6vVnQfnFo4Jx4Ny5bpphplcyAQPn+P9KH
u/F48RwxlDUDjImTHKyq3Sgre6XvTsIMaJ5iHY64240XP+jKmwfPwLzhSOCN
9G78XHdWk91qBvgXkpb2KPVgNHfFgz7yvbYD4hnPtXrxycelpsqb0/AkGoUU
TXox0UijwVR/GjoSM5UJ21784yq29rfmNOzzf220zb8Xvx8w5OE8PE2+l4uY
/7X2os2CjXcb+zQotLSkj+v0oery4vvpr1MAJ7n72i/0ozxbs+XuiUkw3569
/6BJPzJsr10I65+EU0UTrN7W/XiwfIMMW8skPE4Q277Fpx9hmpZdnTcJnHe6
1TPL+jEhDCd/+0xCeulVKemDA8jKtjWPZe8kXH/LYE1ZP4iXVn/8l24xAUbF
+mtbeQcxjW9OGYwmwCBJpG9q1yBShbImKrQnIP7s3OrqyUGUPiglln94Alzb
5d58vTeI3olXljXWTkCh0Np3W7oGsaLv1y+OyHFQjqUmsoQNoTTLbjeibgzE
RruX2+OGcM5sx5XrRWNw2M464X3GEO40s5fqSB4DFit7ntX6IeSZ5on67D8G
XiaHnGT+DaGKK9+9Nr0x+DK/qcBvPwVr4pVUXIdGYWtBOFfcawqOU4yONE+O
gMIN1msQQEGhv0E6Er0j0CibztYaSsH75wqn7GpHQKY14erwZwqyrDLbT38b
ATWl0MqsPApeOPPfY+u7IyDrrGvLN0LBK2+ExKOnhmHQXdGhSJ6KTXaTPBlU
AvoqlaTMj1LR4k9LmnALAd77I2Q4TlKxkPd7gkcJAXom93hOqFBR84BO0u4o
Ao7Khitp61Nx/827/sxGBDiH71U64EpFVwepS0QbFTKHPjJs3KmodYnVKr2M
CrvCvLpin1KRhf4u2yWNCkQFyvx7RcXodZvax99QYauORJNJOGmv0nltNSpM
/fz7oauAiumChe1nCykQEhwaGI9UXO6y+Hn/GwX47KNi7Mqp6Ns+J/kxlAI9
S66sc7XkeEK07FZHCmw84x4b1ENFhydT5iV7KWBhY6oZ8pOKz3Zm2j9UGIJv
5unbrkkRmG71n4HTYD/4bPrjIyBD4N6LKwlT+f2wUTVyuE2WQP5ljzStkH5w
pAYrHpQnUE9ncYjQ7geRb6z3Y08SCPk8O0+U9EE8K/XvrYsEmt8dDMiK6IXF
H4HuZZcJNMsdLeF70AvyUuco/HoEulDSCQudXjgkyqecYUggq4KMYDdHL5zf
eto38iaBTOGBfNPOPdDU7+im7UigZuA320mNbtg1JyOg7kxgVCC3iJJkN1z9
djVKyYXAeLM2xSdM3eBxJNmQx43ARN+jA92ZXfDeYSr1wVMCnebNRkoEu+A5
L+3NmWcEKq1+4Xz3qxNClBz02Z8T2OFtQb/U3AnnHsamufmQ83knIBnztBMc
c76ECvsTaLPF4MmzyQ7Qc1Ody3lHoOC275MdZR3gZ110RCOQwJ4U/3u84R1w
S5slwSSEQNndfXwWWh2QsOn8kVMR5HoOt5/VTm+HhdzzMtR4Ag/tNwTF+21w
L03J49BXAg94EJtPaLaBZF1Hh8c3AvvsdhvtFWsDG30b37VJBK7/LZLfXdsK
j359scpNI3Ddt7WiN4VaITm9nbM9ncBLkvpqffQWqPbbVjKRQSD9Z8E35aoW
+Llht8NqFoEHe0+4Ddm0wArfXr32PALDOdlO6mAzHOneRcvNJzBbg51dLaAZ
8n7o5QQXELjzDDEka94MSTv8ek8WEWiV5rK/emMzXPuuepK9mMCsfo+K5Yom
YF//ubeGdH8l0z5VqyYYClZpUywhMMn5Nsuz/EZIkyxUmCT9kOIz6XSjEezN
ZKh+pQR27eCvVV3XCKfGfonVlxG4Iqt9P0i3AQqFfxeblBO4b6tKxaaVevjo
fiJzhvQmjuNc1tH1cCDCOYdRQeDIn/Sglrk6CNz+tOFuJYGtj85c6wmsg3tN
/zQGSe89OyFTqVgHDQvbj6hXEXix6LpKEKUWjo9yBqSQLpXnZ6h518KWJUGz
jd8JzFkj7jQsUwufHD4n3yZ9x+wKr2lLDWjcZ72fSzp1SkOoyrkGOouyS1mq
Cdwcr9q6SbAGOG8dDVAlfaYTHkNpNfiM8tO8Se8zaLTUvV0NkesX+otJj8ge
Jy5yVoP4iL0xjfSWAWc5hdTvYPBd44FADbl+xo7IfzrfIfO48sFTpJ+63HmY
tlQF339JvjEm7Xtdc4tGZBVsau3ydyb9l0k3tV65CtpKQfkF6Uc+BbGHxyth
tU4vJoD06kPjUy9fVUJe9YuCUNJ+S7SaCrlKmMpm+IWQFvBS/zTZVgFh7Dcl
/Uh/GUrh+H2/AjaHLno+IW3WY3SVJlABdL7FLzakVWOzRlqxHJR4v3/UIb3d
Qnwp6mY5iNQM2xwi7SLxcfoKezk83D3Gv5F0p3LLpuVvZeA2dz+GSq63nrk2
76VWGdyX1uFL+f/+4XqltYxSCJvSvO9M+j1HJN0yqBRaH2rXHiG91VBRuvho
KRgG6PL+IPffpqbn5N++Emja5HjjC+kHbTufyriXwN62G8evkX7nyGxrJ1UC
o4eFR7hI72jR2KbxGcHQ+WO2EXneG50SesvOFcOAccPUChkfy+JTPi3vi4Dl
e+KaUNLlg3v7yqYL4Y+D9I9iMr7k96TFab8tgGHm3E510lKdUaozlHxgCmjL
aCHj8W5fcZf1wXzw3bL3XjMZv3+9/23Z2ZELusaFoe/IeDdl8rI02Z4NHh+8
Jn4hOf5oHiFvmQVP2LZf1yPNLqTOxMjPBMvxtEE2Mn9qRRTeyRplQDDLq/J9
ZP5NRAXNpUekwmu7xGUrMj+zpCyJ2r4UkDyX4RtH5m/7pzKCi3zHJagWtnLm
EvgE2wv3FibAgAl8isok4+GC7Lm/inHA4ffzUh5ZD4IFnYKse2NARH7Ir5Gs
FztevS8of/AZVqXs66ZTyXpNkfXek/sRtPPvLdATyXqVcWhm2TwYlsY9pg/G
EFgiveMVw+4QTH6juq37TOB1XqH7BT438WOJDmvvJwJ1CvxlF1ocMbjjBe+9
KAKbxV7O5Ds9w+m06UXbMHJ+Nja3kr4H4Y9tP6Oz35L15u7OhynzsSh9xGFa
9w2BcRE7nTnV41E2mcin+xI4ZBXrZhDzBRNOZLCLkPV4KWiS/7t+An6KXWC/
6EXGU8qb22bXU3Fx59v1/GT9nzJ3CVCoysL6gDOjV6+R8XWdZ+WzcgnaTc9W
hVwl8Mad0mrl0BKU+LQ83WxAxs/xLo+O2RJs3fCU5zjZj/Suxed0hJaixI3n
LvNaBCoPtjsrzpVhfIDgRD+Q8f9u0O56cCVeuqF1fFqE3L+f2dZve2tRu1Og
M0GI7D8SRU2XFOrQk7Zp9I4AGS+XM3P/va3DTA1T+0FecryUNdI8Z+txNbCl
9usGAgfvSa7uTm7AWTZUaPhDxSNSm4MHTjajU3yL5I02Kr5af+pcIHMbjpve
WdfdTEWFrzt1DWTbMFtIr0WzkYp53Po/Nhm0oSclf+f+GiqGuKW/vZjahhbC
uWsGi6n4WPeRmLhxO7bsMbzf/ZWK+VQfi1/ZHRg2sKfn0mMqys3PTPUZdaN0
mFpOHnlf2fLj9/6xp92Y/85wUvgBFW0LWSWJb90os7FIfcSBvD8ct/+V/Lsb
eZTPcVy9Q8XyIWGZDwE9qGhzLOz3ZSo6uZVDdlUvPjopvenHbireXc3NKxUb
QLpp1x1xCSpWmyptYKgM4N/Vu9w6O6lIfb1l11arAeTeZ6eeLEjF/1yyPHZn
D2Aw051TWluo+ILr2f1QtUG8oVn85PgfCj4UyVcJsR7CPJtooYpaClKzhZx+
tVPQNTdC3+07BZunDjtsnqAgr4Km9cEKCh6YlD0stkzBhp5QwdAiCnKZmK/d
LUZFb4afiVoqBUN//xdabkXFuI136k4HUbD4+VFbWEPgNuvYGddr5H3x5FY5
RclhfC3X9HLagIKS7esspY8O49ll/2J9PQrq39+qukV9GO1fJYzKaFPw4Kcf
U2XWw7iQJzCZeYqC9mNZBVmZwyjhl56pvYuCPU9f8fScGkElloT5fQ1DKJd2
v3TrpVG0f3ZR+m3lEDp3Tx58aTqKG+4Gy0wVDeFX3lj/n/aj2Ka63tYveQhX
aEy8GQGjuKc92zHi7RC+lu6QL20fxTd/Yy5mXRhCzfsnAvbojuFYl8mv/MZB
/HP+mNse7XFU4oQGyyrSRQH73IzHsSjnVeu24kHcrV/7vdJ6HPdmPte9kjSI
VQobkk/6jqOvAGde0KtBPMr09b+S6nF06DvQ90NlEO3bXG03n5rAWV6dbTx5
A2gz/cigb/ckPv7TeSgydQBvvbv6lFdhEu9vUawU+zKA4p9MitSUJzGZV3I3
f8gATktJ3Ag1msQvX/J8Sh0H8Bt/tGmn3yRKuHxOY5EbwICz6eIdi5PIJvh0
nWxUP/6Rlzfoxyk0X3qvvRrUj/xv18hur59Cr6XnId99+/F2HienVvcUel+s
ElR/2I869zlHo2hTeFno2Sc23X6UWHnOOSI6jcc26lQYru/HVUG1pVn3aTz4
73G8gXUfth604GM/OoM1AsUavqZ9aO7+8+mR/2ZQhv2qTc6VPjSzvP3a+MIM
SvIeFl083Yext6Sd/Sxm8NxHs1YB3j6UftP7/mnoDB69znVzsbAX53TmmOJ/
zWB86bG/Q2t7MZeuepCaMIv92ht6BZZ6UCs4bXwkexbP9lbVac/24MHbBxSG
Smcx6cbT0aiOHmyNFAzN6ZpFV+2iz5RY0hb3XBfXzKGdiOsc9b8edOQM/pZx
ZQ4D+Tw0Wt260V9E5rHQnzl8YW73ddSuGwU6g8Y0Webx7V6JQbpZN36g3hR0
5JrHPWxelQua3ahWZ0H7KjyPHO//XI8R7MbhaK4TGcrzaLI35NnX/C5sKFVy
OvFyHt9kT0Qo0zsxUt9agmcdDR3mTA/ZjHTi+YTDtXu4aDgd/Obhu65ODDZv
uaK4mYa6m0u5K4s60cpsUlabn4ZpoQ7XWl92IiW7vvqcFA1tOmerfUU70Yl7
sN3xHA2Z7pWWPlLtQB9uPRV8QsPXxvlRLMc7cKd0wEXwpqHli393nsh24Prn
HA4FL2m4bVNkuSV3B/L23lyK96Oh18PR12N97disxbn9UiQNXxZv++Zj3Y4q
4/XNU7k0DHf0LXj+qg2bfLIS5KZpaPjaMkfmURte9LIbOzhHwwXz6qRqmza8
rhSmdJBOQ3se/9ezF9vw0pYLqhKLNJzamic/zNeGV5rW1fSvoeO5bMW17tGt
qNQrW+K/nY4Gw6cdPNNb8M33yyk8/9Exl7997M+nFmRRnOdvV6Hjt3Y4Z+Xf
ggrMt5dfq9Hxxu+krsN2LXjqV8neBS06mspdcrkr24KWeEvLx4COER/sR3Ti
mjH0TeCfAWs67r+9V00rqBm3pxbI6NjR8fF943LwakaTmuiBSns6KgcmsnCa
NiNHY0Plh/t05BSMZjsj1Ix9T8Kyt3jSscWmNuS+eBOGP3oUJBlAx2uv7k3b
Mjfh0n2xbbpBdJQ1YG3SH2zEhmgbQfcQOu74NnJjJaQR40VM6ys/0PGgsPXj
VxyNuGbYMV8oho4/fj/nbp6pR8mzZfq/M+i4R39de3t1PS5J/csfyqLj1/vi
kbUx9ch2tTG1LIeOaQbrrV8a1aO1RImBawEdn24uGNKpq0OmdJuMnDI6/tE4
/E06rha32bMKXWsmvf/RwaKntbj5jbUS0ULHsx2Le8/cqMWIA85vb7bR8UmG
UMgewVo0Dc8tM+ykY3Cl9fYb/jVItdZ9LNBPxyoMafJ8UI3X1Sobx8boOGri
u09brxrDi+n75SbomJ8W6LFZvhovvNWod5ikY9zSBlHbme9YF8+cRp+m4xfL
ZaUI4++oordwpoRGR7/BqqKKU1Xo5zku9HWJjoXrn1l1CFbhzpS3xll/6Biz
wSai93clNmiFEEXLdDwkYZNQllqJoQG3c8pX6RgoOf6EQ5T8bu4fF83MQPbe
q+dLlivw1rGibf5rGNjAUzBm2VWBLnVhda4sDHywLzwp8k0FevKI8KqwMtBY
0j/ac6UcZ5mvHEhex0CXz5//DHaV4+3LfL8fr2cgT0rFvQMZ5chj+o9Lk4OB
QdXKY1l3ytEgiFO8j5OBnQ+9OZQ6y/CxzLsdDRsZmPWQ/dHZNPIek8Bx22MT
A3enbDRV9i3DlZunWfdvJv//tFmyoHIZhtQWnfbaQo4vQ3ukk1SKh0R6q5i2
MXDQzzhh1KsUjQd2Knwm7WjH02NpVIo6t48ZnOZhYFhzt/VFzlJc/ulWZcdL
ft+mTU8nSnDNX88ta/jI9Z6kJq3LL8H8prW8b0kHp05z+luUoPJ6Re1wfgYe
0tKvLYcStJ2tfia4nYHcV2uWp3hLUNPvzYNQ0rvTC0ZkfRB95tzCn+5gYG/x
ytcjRxFP3/JuYJCWIB950mPF6LfhBV4TYCCs8LxvOF2M+EdxSlKQgedOFng+
mi/C7tVm8Wek15laK/FFFOHhBCnxIdI+ZveT1v0uxFycdvQWYqClBzX8emwh
1n2D6jbSRj2uvdGXCnHbMckRQWEGsjXXFIwlFmBmtseDaNK//r6LmDAoQOaL
lIVB0mGnc9Q62Arw0dDXE3wiDNRifjeUmJGPBQLtFzVIS0RFPra9no/8vHoK
rqR7dFxUhDbko5L87ok40jKcvXrZeXkYvwfuNpJW3h/ZpHg7D3f/C0I66dDQ
4uZv3HlozSY+tlmUgQd1dB6ykbP37acOyZBOfhkyc/5uLj66XZ2kTFrv4tA5
T75c/NLYfEGXtJbPp8SP5Tlo8WSh5iZpnwL744m2OfhGTnaHDWnZKVaeGIEc
nC51VHYkTbHda/jiezY2X68840y6vq9DxsAhG99bbRf5//fq75sSeEWycZ/b
3Q5r0nczWJdKarPwtWG2+f//X2SI6Yi+cxaqrv3ZqUNaVczCu18sC7fG7hT/
//zUv+M6rYZMPBOkeOH/8++9+3Uo0SUT9a8cNfr/+nQahvcu7crEx0F8av9f
f0myOrd8UwbyirTz/X9/VhI70wwfZuCxsTs1/9+/qu0RsnYSGXh6td34//vb
39kU79CcjmqBW3r+v/88MkXKt1zTMfuXwDF+0vafm0TPSqZj0QuaO4U8P9vJ
12ZbW9JwvOJVcgzpXbsy410l0/C597rvoqTZP2bO8LSkopnhcHo3GR/cSf47
o1xTUdHuvo8vaaUjnr2rH1Pw1KNipgkyvi4ocfon/ExGh3V3P70lra/Lf+ao
ejKGdJQfkCc9tVyfNc9IxHBXKwkbMn6JFHnFR5cSUafsWCgXaatlrsm5tARM
iLjwNJ6M94dHl1Pc7b7hZIhfZSuZH6LbQy5cm4nHtbJ1m/+R+aV5RyOIWyMe
1USuGHmSbpze15/0NQ4HuYMkmUjvP3zMJOR2LAr06Cv+IPN37ur9mhND0Zg6
edkpZSsDN0znJEmdjMawwYp6HtJKdpedVsI+4TuRc19duBkork58MtL7iMLu
CQvyZL3wHWdT4gr9gDypO6Y9yHqz+1musPltf9w7wmBzIuvXQ3HXMUcRP6TI
CGyMYWeg5O07Rpmpr/H84bG4JjYG/tude8cw4AWu7HrsJ0jWv9Rdosj5zQ3p
IZcNXpP10+55Uo5ghwUsye20riPrsarHbv2Xb+9BB1fkVPlvOm7O+3mPLcsZ
iP8YrHmLdPR4WmqPHh7gOSe6/f1POq5w3fzN1+wDF/puVe2n0zH84Myp9MIQ
sFvZTy0ep+NL1r5mJeb3ELYBOp6T/UOz1LSaOBsGJurMgedH6SiZtrJk0xQO
j9u0HZsIOuoqSulX0j/CjtHU1sQBOrZ7BwalssfB40PH3ze20rFWXEjKSzAV
dFxYitPz6ai4a9dxCZtUcGquOsebR94PrK7KVmMqUIYvpzqT/TL3ba/s1ptp
EBeyXXRfJh3dVNq587+mg1i2is/9JDqyj2v93HckC16NNrI6RdHRcNJSvvli
Pkger9MUJvv9+35Lvyvf8qFTY+LMj8d0fEfJOd+/pgDUVX5GVbjRUX1f5KmB
DNKLsi+NXOgY/d3UMpenCOZvzMvdsKXjdWaxruRuhCczuqrFRnT8eDt47FhS
GeStVRCuO0THq7t7Y6R7yqDq8sZM2YN0VLm8y4aPtRx83p8r9pWjo/FnloYR
o3IwuKh34JQ0Hc1k6y01uSogRHj0g5sIuV7bU1EnLCuB1+tvvcZ6cn1X0n5w
7ayGb43bAs720jBHOfqMg3o1eJY4B9ztouHNA50dbfbVUB4R5vWmnYaKTo1u
T8urYf+fqGN1jTS807m4GGZWAxJRwXSRchre5T5W/iG2Fi5cXp94OIGG9PiV
0zY7G8BKYy5w+wMantv+mnlFrQEEWdfUDzjRMP/C6pjnvQaoG25eiLSn4ZxE
G8WppAG+7DAR4LeiYRX1TfHKtUbYwySZP2pMQzOd4k/3Q5pAdoKQmjtDQ3UJ
c+cu5hZwf9/Ums5JwxZz5eOJvC0wIJFv/Z2dhusVqftcZcjv5w2tulnI+6Ws
5wN23Rb4p/xXcmhxHssFqh93x7fA8H/vmUa75vGBs4HlZc1WuCHUzhEUPI91
FJPY235tkMDe1uixcR7z0KPYOqYNBN6efVDKOo8+W1eqrHPbYPjsmeY/K3NY
Pa3ork9pg0h45X5leg4vxro97pJrhzMrUJH7fQ7fO3zUdWhoB63Tg8R29zmU
E1czoazphLQU/6/nJ2bx7QP7zWE8nSAUuAcbB2dxdbypWUOqE+6zPYpQ7ZhF
HoVJo5DznfB8S0yyZNkszvoyZTaEdMKJuWt/Xn2YRa7+i39SpLvgdp765JLm
LBYEzw9vVu8GB9vWrfrfZtBaY1W18Go3tD1p/G8+agZv5N/OMrbuBp932znd
g2bwQnaR1wu/bsiuvXnhhccM/m1vFLPt7Aaq7Uef03ozuKgg5ON5vQcO2qRv
P880g74U6YFn1r2wZ1tfZ77WNJ4Rrd464dYLXfvCrov/N42b+wa+nvbthTPO
8UrPj5HvvaO8A73feiHiijvtqPg0lmzdWRQz3gsKMld/ayxN4eIJMSN/kz4Q
cZtY3Bc9haryN9PiVPsh0l2Ev29uEvUlBNsn9fqhnJPD9e7wJI4unv6861Y/
gJHRj4WuSSx/73nA1bMfinsCBH6UTOLK5zsP8vL64Z+h8Ibwd5P4VM9d1EZq
AHJjN3lGHprEmTrtkYC/A7DPpspW12ECR3pchgq4BiH9p/PM0q0JFG3buat7
xyCc+zo3F6Q/geJxx+7OHh4EeZX9LpknJ1A4QeOSj80gdIj/hlfsE/jsmZ30
i75BOHyOOyv8/ThqyIg6WyYOwcWNc8ThnDG8E6xN2ZQ3BHlNVx5WfhnDSyeU
Or9UDsHT0he7NcLGcHU7m3bW4BCIPNfNPP5oDPe89J0RWEeBa2Hp+9KUx9AX
Y5Vtj1LgwKt83am6UVR7oOGiEkiBGT7H5w+7RnCLd94fm/cUSKjUypqtHsHi
SIkq/0gKHAuBDP38EfJ9NCtX9YUCFoxebt6IETROteObKqTAS/mI9ftMR5BP
x9VdcIQCVXvOizZPDaNv4dnYiQkKuAae6SvuG0azmpmF5FkKiL3eqBBbP4zC
7Vc5pBcp8HvH/jz95GF07RTt7VlPBfHK0VTDe8NoImX5QHgfFZT37Oj6/pPA
3sxZU9+DVDigLbRTbozAzNUcg4XDVDh1X2XwdSeBr51NLNKBCtpXb0YdyCEw
f8G0b+wCFZx+FyxvcSHw7iP7ZDl7Kvxp/Dwr/5uKJ3/sdzycSoVpiXD+WToF
0d0roDmDCi06ezjfUSlY78HSaJZDhQf/Wp/sa6EgX/6Pt67F5PgFOivnUylI
KH+SMq2nAv3Gyi9JGwoqdylWcI9TgeOa1g2P5iFUYmTwak1RYV0BbS4veQgD
zKQdn85SIbH9uSXhO4SnPZI1+39QocqpVopJbQgz9N9fU2EiIDp4LMumZBB7
if3XlvkIOM2qu5c/cQBj7jixdu0g4HdVht+plwOoN5uZlChEgLCt68SV2wNo
WbNv5ewuAnrPj7lcFh3A2LFCr/37CIifOK37OKAf5b31F0eUCWgcNr0Q69yH
ifvW2V8/S8A5NsbG4kt9eHCle7zjHAGXU/rnK/eRrgqqSNYk4MF4s/TnsV58
ijzK/HoECKwYbwzU7cXu51du1pqT4+37+lRnfw/eTuUW3mpJQLDJ9syT63pQ
515LpY4VAaON065bKd24JOk+WGZHgPbF6SWvt90oaM+tov6AgEIbkx6P2S58
ZsX/0NCVgI5//2aaKrpQ0CXk481HBPiEmtA4w7twbUN09XVPAjx2pP9WV+9C
W2u+T2wvCZjZ7P1kLLYTjQ1yvAZ9CJjaleQV6daJ/s76N1N8CcgP6Rg+c7kT
7z1r5D3hR4D1I85fekydWHrc/xFzCAHH4p5KfjTowJ96X5NOfibA19m0qGFd
Ozr/V7EYG0PAyulbt28OtuFN8eAr7HEE3M5c82I8ow296WPXs74QsHn+2osC
4zb8+G2guziJABeWQ92BGa04RfmxkZZMwLo3JyI/vmjFlL2y1jtSCbjKHeT7
4VorOthoJhqmE3Bykv20CXsrdrzT9niZTcAvnvYsUcMWNFGWVPbKIeAQm7fF
l30t+O/ETmWXXALi4gkOUZYWPG/4fp1mPrk+46MvhxKaseyeUodMATley40P
uz2akfm+0czaQgLurQ1af12nGVkVptk+FxEwbRDU/t9SE1by0DdbFBOgVusl
Y/CpCeNqP9hLIgFKZ2yEtdWa0Mg3Uf1tCQHltScqKKGNKDIYlralnAAQ2pj8
6XADpsk+tgol7cdRpF8wXI+hm5wdt1cQMCEjq1DoV4/SHeouHJUEhBrH6TpO
1aHtYODDh6R9Nkms3RtSh/IPGzpHSE9TNPPqztThtuKL375UERDgt4m7IrwW
3283kFrznYCiGFFxIbVa9Jqu2qBHek6wfrvJzxoslt9mHENapiZOxudTDTJd
qRCcJR2iV/Mu8nwNXntldn5/NQH8XLUvwpeqEdpe/bAm3faw8JxXbDVa/+7l
jiP9dd8BDr2L1bjt+UpyN+n3Bgqc3KvfsbY6po61hgBB90veuV++YyD6W8mS
jhN/k6Om8x0nRV8FaZMWfnKnr/JfFXkfMVW3Iq0mS90nm1CF940Yb56S3l5p
Ne+uV4Xcv0TMg0jLR/81LGauwnW2PZ2fSN97zpI6kViJbf1ulC+kR2Nf7f53
pRJ1Mvh9v5HmdizatIalEp89v90bR/pExMZwelIFejIbN0eQXmLft7lRvwLb
2KXt35JOb2lIDGGpwHVNaypcSQdMNqVrJZfjzIFDtaakTdQTbv7QL8c/Jjte
/ke6/9IJZm+WcuyUkGIVI60xNNXAllyGNhp9yr/J/Vh0MONy1i/DoKPFKrWk
95+I+9e2pgylau/yhJCuO711WjSpFIfWBWQYkx4cfMl97Uop2szMS4iRPvHo
UP4L5lLkVlG7N0iej4iZh2RMQglefB0Rp0Z6QftNhd4/xDzt92GL5Plbzw08
lLuMuGWPm+tH0j+df45PxhVjbJg6/zAZL8ajWfxsWkXI/Tp00I1026j6b4tP
hcjd+jxuC2nTEkZlykIBbqj9eGEvGY9bIrgtp8PId/n6NyfTyXjtYu+/Tp3N
QwPz1NPypCe/8z0vOpWHMx9aYyXLCNh73z5BeiwH1yeoubaR+aAZymU1IZeF
0qaP8CDpkp1cv0SeZOLLnkeqr8n82RX6W0u5PQPPt1qeOkTmV3e1cKWaSzqO
DyvaqpP5mSNZ7zPxOAWrE0X2W+cRkJ0VGBSwlISbj2Wr+pD5zLX9aS2PYyLG
D9z5nEHmv+21G1fjLL7iEwm+H+VkfVgb6r8geeEzGkzx3MpPIyDyLZNQfs0n
vNDS7ZhA1pMzhdu6Dpz5iMaevv6PyHqj+MrNO+FuGNrdECgkvhIwJhpxx9XC
FwU0PPhTyHqVdul0Fp+mN/rZMV11jifzdZe5rZucB46cpWT/JOtdiXCmWmuS
CfqEJNTmRhHgpSzep+juBQoPuO7qB5L1b6/R2VOGn8BfwcCp6x3p/KhhK2o0
+Kvf+X3Rn4DiiA43X4sY4Bk48vrYG7KevH7DHOkcDw5+vPNtzwkw6F+Cfv8k
UPyz1eLkQwJol8qbE6mZECMufcjFhQDHv8w8D2KyIP+PNHuKM1nPMx7OHjDP
BrFzYiObHQiQVR1Quj2TA9QGudtxdwmwqEwdKP+ZD/UvtPTK7hCQsGZZYSin
ABLNtP16yf50rcydnfqgEOjed9YwmZH51z0sFLRaBCxSfuobTMnxeKcmz2Ix
BP1JX+G9TkD7eq+TvR4ICiOJokLGBCRdq0+REisBfm3VYhEjst4NSml2eJbA
/wACDUnT
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$31237, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$31237#1"]& ]}}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True}, 
       AxesLabel -> {
         FormBox["\[Phi]", TraditionalForm], 
         FormBox["\[Psi]", TraditionalForm]}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "ScalingFunctions" -> None}, 
       PlotRange -> {{-0.5871089613704249, 
        0.5871174560794352}, {-1.1329252860360164`, 1.1328957403759725`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"1\""}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], "]"}], "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             FaceForm[
              Opacity[0.3]], 
             RGBColor[0.368417, 0.506779, 0.709798]], 
            LineBox[CompressedData["
1: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
coeJ57Jdg6/+ZGJR85sOA+IN6VOyx34zUdP1qto2Yp/o32c3clDYdv0e31ri
RT5eZ5bMp5BlGOYo/e993aJEB3kpTGt3s+cmlrbTv/1VgMK/Pye5Rsh+FTY+
eHJfmMIXYR+Uq4nPxVnu0FtCYWCHVUsCseP9BcEcEhRK9IwpeBF323s+S11K
oQV7+s954hsy/DKWchSeP7XbbjMxD1/iVmFFCg/7BNwWIH7+6f1w8nIK27nj
JVvJfTK7/mNQqylUGZWWsyGW5SmTs9egUC5i2l2TeN26C02zWhTyCb30YJP4
+amaFDejQ+FpCdETVsSTwoKp17ZTKACOaxWIT2nzrunYSSHXlsDwehKPK7tm
dGMNKGyqljHVJL5ix2rmOEChTPHfqFYSz1W37xYaG1FYZBH11JU4QM7wxcAx
CqVDlXfnk/jP4Q27qGpG4fTWh0tOEVtzBN87a0FhsmWE2xTJl5iw37Z4jsJh
h4VHZP95/dttPRcpfJ3UkRgvyYbFuY+3c12h8L385c8biP8655SstKVwq0Jc
gi7JR86XZx+r3CH34xLnuY7k82q9gVuiLhRua1JSixUlf+/Pe2fWlUKbvwdv
ihP7OZZEf3lEofnrKLHRxWzoHzqe/+gJ2a+kwZWjxLolJ5iHvSm8ZexjnbqI
DQcsh8TrfMj7jnPdu0Hqx/mkEKUn/hRqJMb4lAuTeuQopLgpkEIedvsxBeKH
lnU9rqEUPt7FOZVP6s+WNTES2bEUGvKGvesk9atR847s9Xfkvl/rlQgSq3as
SV76gULjRAf+jfxkPwLRtibJFNJVStP3SP1z9djq0/+Zwg1vnN+E87ABw0+v
vZ5KYeKNRf+lk3o5/NCi9FImhdd8w4KpeWx4d8IipzGbwl281n1sLnK/OSay
23IpfBu37OQfTjbUMH7xsgoo/BwwVM5P6nPqWj2JsUoKrwhZlrBnaUiPaaIk
aiisMu+9S/2iwe7jtZ+bail0Kve8UDNDw45VVoNnGkm8zLWVhE/T8KO9LPtS
M7k/mUMGrlM0vI5YUXaxlZyv5J3fJ3/QsFRV786eTrL/1fd4hCZoCNpqIqnW
TeF2E+lT3TQNR//wdXIzKeS9NTmawKKB4651fWQviX/O9vQdY2Q9ly28V0co
tD5YvnQj6V/9RXIP+cZI/O2MODDcT8P246wFoeMUbjQIzg7poyH44XeNt2wK
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
NWtbMYi7qx7/FA2tgYu+Jx6Kaw+ijbay+9/YGlB+fTp7r+4gvuTh7BrMqoFh
1eVngywGcUrhjsSSwRp4Lxl1rvHFIPrz1Dz+rPsd/HZ/Um6YHsRQ/rZffLPf
4ZeWllk7DuHQQ8q8iKcWJJ9zrZGqGMKfcprqnotrwTJdQMCweQjPGJ2TWb6q
FoxvCvRGsIZQZReejDOrheW/PQR6lg3j9Zx4ZlN6LczJ7J0ZvTeM0680rL66
1EHtussSvJtGMOLXi/bd3nVw6d6Phxv1RlA+Waa7JbgOLlhZPj11aASXqM/Z
iaXUwZuLq5xeXB7Bs7ZvXrcM18GqZ63BD4NG8Fb+hNhT83oYMx7jiJsaweWf
rAKMtzbAV9pgHSN+FNOg/mHEvgbSd5L7e1JH8dqt9Nfjpg2wzlJTuytvFGGu
eXuEYwPUhssEpTWNoqVU13udROLLdnemucYwNcPq1HGlRnAQCHj/+fgY9npr
36kUagIfeTUX2V9jmKUWN/VWpgmkG1/2HZg3jnNLEr09VjVBCOO8jIPgODZ8
rmg9qN8Ee8svs97JjWOszUTW3N0moKIEt37WJc46d757tAkq87Y7bn0yjmpu
BSdOVjdDuKnNcjE+Fl5I277NvaMZDsZvKFspyMJn78LSEoabIeDS9+M6Iixk
bV+nx8PXAlcvDK4xkmShctkbk6IdLdCdWlGyR5WFalY6wvc+tYDj4s56hz0s
/FvenucU0Aqei0308QELi0OGgq7HtILiKr/D8IiFBvFbzll9agV+jwX2mU/I
9x3kDDpZ1Qriredn4l6w8GNyoMpOnjaoMRSQOhLOQt7XL07Sjm2g319RM/SV
hZvSuM4HG7dDtWdKvPowC1VM+ObdOtcOh92u960bY6Hq4eUjxtfb4cz2V9vX
0SyU5lA5z+/dDkcWHTJYPs3Ckvqeiye+tcPxar7Sdi4aXTzVcwI1O2B765pc
HykanxeXzIgIdsKz4qOJYno0dgsfXla4tBPm6YxL1uvTaChyZqPjyk7Q5rSc
fbqXRptAj/ES/U7YMZW7etKQxtm6It+t9zvBCi8aeprRSLG1f+j96ISgZ/6/
OmxovKm3/rRFSxeE3r37UsWPxorHZbXW/V0wc1NB9NhLGtcNWf10+NEFlVHX
ZO4F0lj9YT5/Bl83xMmfqygMoZFf/GKBj3I3cFEOGbIxNFqLbhkPOdENKrvz
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
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$31280, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$31280#1"]& ]}}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True}, 
       AxesLabel -> {
         FormBox[
          SuperscriptBox["\[Phi]", "\[Prime]", MultilineFunction -> None], 
          TraditionalForm], 
         FormBox["\[Psi]", TraditionalForm]}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "ScalingFunctions" -> None}, 
       PlotRange -> {{-0.6271556730643241, 
        0.6271749449038838}, {-1.1329252860360164`, 1.1328957403759725`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"1\""}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], "]"}], "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`a$$ = 46.175441938638684`, 
      Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
      Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ =
       1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
        Hold[$CellContext`a$$], 40.625, 47.15}}, Typeset`size$$ = {
      234., {3., 11.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
      Typeset`skipInitDone$$ = True, $CellContext`a$31458$$ = 0}, 
      DynamicBox[Manipulate`ManipulateBoxes[
       1, StandardForm, "Variables" :> {$CellContext`a$$ = 40.625}, 
        "ControllerVariables" :> {
          Hold[$CellContext`a$$, $CellContext`a$31458$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, 
        "Body" :> $CellContext`drawWing[
          Part[$CellContext`sols, 1], $CellContext`a$$], 
        "Specifications" :> {{$CellContext`a$$, 40.625, 47.15, 
           DefaultDuration -> 4, 
           AppearanceElements -> {
            "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
             "DirectionButton"}}}, 
        "Options" :> {
         ControlType -> Animator, AppearanceElements -> None, 
          DefaultBaseStyle -> "Animate", DefaultLabelStyle -> "AnimateLabel", 
          SynchronousUpdating -> True, ShrinkingDelay -> 8.}, 
        "DefaultOptions" :> {}],
       ImageSizeCache->{415., {54., 61.}},
       SingleEvaluation->True],
      Deinitialization:>None,
      DynamicModuleValues:>{},
      SynchronousInitialization->True,
      UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
      UnsavedVariables:>{Typeset`initDone$$},
      UntrackedVariables:>{Typeset`size$$}], "Animate",
     Deployed->True,
     StripOnInput->False],
    Manipulate`InterpretManipulate[1]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.758872280050231*^9, 3.7588723347509184`*^9, {3.7588723894935484`*^9, 
   3.758872455533968*^9}, 3.758873083534842*^9, {3.7588731505157776`*^9, 
   3.7588731827156544`*^9}, 3.7588732329215*^9, {3.75887328799125*^9, 
   3.7588733474821014`*^9}, {3.7588734270085473`*^9, 
   3.7588734346550183`*^9}, {3.7588736398906617`*^9, 3.758873652184871*^9}, {
   3.7588736931533794`*^9, 3.7588737743442283`*^9}, 3.7589704674030285`*^9, 
   3.758970654121313*^9, {3.7593106524879436`*^9, 3.7593106681794395`*^9}, 
   3.7851628524268827`*^9, 3.785162926348107*^9, 3.785163043538539*^9, {
   3.7852435023740625`*^9, 3.7852435232731843`*^9}, 3.7852437305684443`*^9, 
   3.7852440356513777`*^9, {3.7852441043430486`*^9, 3.785244210015951*^9}, {
   3.785244242217107*^9, 3.785244271118507*^9}, 3.7852443574106984`*^9, 
   3.7852450463135014`*^9, {3.7852456064819465`*^9, 3.7852456296292934`*^9}, 
   3.7852507977379675`*^9, 3.7852509069239635`*^9, 3.785252912158183*^9, 
   3.7852531671287184`*^9, 3.785253210422945*^9, 3.7852532626277757`*^9, {
   3.7852537637628202`*^9, 3.7852538088500366`*^9}, {3.7852541114975405`*^9, 
   3.785254133831778*^9}, 3.78525424249282*^9, 3.7852542771054907`*^9, 
   3.785261258021784*^9, 3.785262076859126*^9, 3.785262163426772*^9, 
   3.7852624801405516`*^9, 3.7852631846830416`*^9, 3.785263302406492*^9, 
   3.7852633631776466`*^9, 3.7852635134671392`*^9, {3.7852635741211967`*^9, 
   3.7852635893176556`*^9}, 3.785263851611332*^9, {3.7852639664179106`*^9, 
   3.7852639873723183`*^9}, 3.7852641204463067`*^9, 3.785264158743861*^9, {
   3.7852641992874966`*^9, 3.7852642276409445`*^9}, {3.7852643182265663`*^9, 
   3.7852643493376245`*^9}, 3.7852644089011292`*^9, {3.785264520063408*^9, 
   3.785264539752267*^9}, 3.785267409528537*^9, 3.7852681749202657`*^9, 
   3.7852697630160265`*^9, 3.7852699982707105`*^9, 3.785534749843243*^9, 
   3.7855385258230906`*^9, 3.7855385721228037`*^9, {3.7855386068082347`*^9, 
   3.7855386238566217`*^9}, {3.7855386555543323`*^9, 3.785538751666424*^9}, {
   3.785538884970377*^9, 3.7855389150766773`*^9}, 3.785538952636283*^9, 
   3.7855390152016325`*^9, {3.785539055340662*^9, 3.7855390954977546`*^9}, {
   3.785539136433443*^9, 3.785539217698493*^9}, 3.7855393426364856`*^9, 
   3.7855393728231783`*^9, 3.785539450376194*^9, 3.7855394889345913`*^9, 
   3.785539530898578*^9, 3.785539562612153*^9, 3.785539596795638*^9, {
   3.7855396441754913`*^9, 3.7855396864201255`*^9}, {3.7855397305300894`*^9, 
   3.7855398483485813`*^9}, {3.785539883725809*^9, 3.7855399593852243`*^9}, 
   3.7856088080241747`*^9, {3.7856103777528644`*^9, 3.785610439922303*^9}, {
   3.7856105990123158`*^9, 3.78561062523814*^9}, {3.785611081511992*^9, 
   3.785611094662157*^9}, 3.7856111436067*^9, {3.785611185347499*^9, 
   3.7856112087623625`*^9}, {3.7856112463653803`*^9, 3.785611269706914*^9}, 
   3.7856115520974693`*^9, 3.7856115908282676`*^9, {3.7856116390026703`*^9, 
   3.785611669542353*^9}, {3.785611722898271*^9, 3.7856117516608343`*^9}, {
   3.7856118269823356`*^9, 3.7856118368420296`*^9}, 3.7856183031976185`*^9, 
   3.7856195360614257`*^9, {3.785619611331256*^9, 3.7856196515918794`*^9}, 
   3.7856197125390778`*^9, 3.785619744725647*^9, 3.78562034267293*^9, 
   3.785620427261402*^9, {3.7856204696110797`*^9, 3.785620508307721*^9}, {
   3.785620633816839*^9, 3.7856206563054457`*^9}, 3.7856207080796957`*^9, {
   3.785621059008577*^9, 3.78562111498225*^9}, 3.7856212132105384`*^9, 
   3.785621249442583*^9, 3.7856213837873807`*^9, 3.7856214152889743`*^9, 
   3.7856215941738997`*^9, 3.785621984088272*^9, {3.7856222144398317`*^9, 
   3.785622224181604*^9}, 3.78562253436259*^9, 3.785830682384946*^9, {
   3.785833321269907*^9, 3.785833343446749*^9}, 3.7858334092447085`*^9, 
   3.7858334501385565`*^9, 3.7858335202649107`*^9, 3.7858335772630177`*^9, 
   3.785833615421275*^9, 3.785833702928934*^9, 3.7858338413113956`*^9, {
   3.785833893784486*^9, 3.7858339303882637`*^9}, {3.7858339806311803`*^9, 
   3.7858339984397635`*^9}, {3.785835258520028*^9, 3.785835355975478*^9}, {
   3.7858353914118395`*^9, 3.7858354047230186`*^9}, {3.7858354547055416`*^9, 
   3.7858355051179953`*^9}, {3.7858355557085934`*^9, 3.785835584397952*^9}, 
   3.785835774140715*^9, 3.7858358081611495`*^9, 3.785835871146635*^9, {
   3.7858359297498217`*^9, 3.78583594903004*^9}, {3.7858360036339746`*^9, 
   3.785836029403308*^9}, {3.7858360714444723`*^9, 3.78583620668647*^9}, {
   3.7858362420794225`*^9, 3.7858363288547688`*^9}, {3.7858363783262577`*^9, 
   3.785836403486186*^9}, {3.7858364743836584`*^9, 3.785836622902642*^9}, {
   3.785836711548108*^9, 3.78583673608899*^9}, {3.785837046439609*^9, 
   3.785837084895321*^9}, 3.785837143225133*^9, {3.7858371768534718`*^9, 
   3.7858371932654033`*^9}, 3.7858374483979993`*^9, 3.786458088301794*^9, 
   3.787691830667692*^9, 3.7876925947378693`*^9, 3.7876927140427876`*^9, 
   3.787692848175523*^9, 3.787693129208764*^9, {3.7876931796920795`*^9, 
   3.787693197649064*^9}, 3.787693234874177*^9, 3.7877732286498647`*^9, 
   3.787773512344842*^9, 3.7877735699769764`*^9, 3.7877736524989104`*^9, 
   3.787774074640188*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"0eea97bb-5187-417a-9b0f-2165303af8cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Pi]", "/", "2"}], "-", "\[Alpha]"}], "/.", 
  RowBox[{"Last", "@", 
   RowBox[{"Maximize", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"CLmax", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", "\[Alpha]"}], "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"CDmax", "+", "CD0"}], ")"}], "/", "2"}], "-", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"CDmax", "-", "CD0"}], ")"}], "/", "2"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", "\[Alpha]"}], "]"}]}]}], ")"}]}], "/.", "params"}], 
       ",", 
       RowBox[{"0", "\[LessEqual]", "\[Alpha]", "\[LessEqual]", 
        RowBox[{"\[Pi]", "/", "2"}]}]}], "}"}], ",", "\[Alpha]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7858372462756205`*^9, 3.785837410137821*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"da6096ee-6a39-4d4a-9d64-8f02f4d3debd"],

Cell[BoxData["1.2403736788776414`"], "Output",
 CellChangeTimes->{{3.785837283263133*^9, 3.7858373180600815`*^9}, {
   3.7858373511608734`*^9, 3.7858373875893126`*^9}, 3.786458089227337*^9, 
   3.7876918313656735`*^9, 3.787692595107073*^9, 3.787692848622283*^9, 
   3.7877732294765377`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"790361c9-9d51-441d-87b4-9c968971b453"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Nonlin", ",", " ", 
   RowBox[{"sine", " ", "input"}], ",", " ", "Linear", ",", " ", 
   RowBox[{"sine", " ", "input"}], ",", " ", 
   RowBox[{"flattened", " ", "lin"}], ",", " ", 
   RowBox[{"flattened", " ", "nonlin"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.78769277083516*^9, 3.787692781617442*^9}, {
  3.7876928136366262`*^9, 3.7876928151101694`*^9}, {3.7876929009332895`*^9, 
  3.7876929049582324`*^9}, {3.7876932180013113`*^9, 3.7876932225842996`*^9}, {
  3.7876932639529424`*^9, 3.787693266793416*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"404a4d7a-5908-433d-bcb5-4c486aba24ab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"75", 
      RowBox[{"(", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", "\[Pi]", " ", "\[Phi]"}], "]"}], ")"}]}], ",", 
     RowBox[{"75", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1.1", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", "\[Pi]", " ", "\[Phi]"}], "]"}]}], "-", 
        RowBox[{"0.1", 
         RowBox[{"Cos", "[", 
          RowBox[{"6", "\[Pi]", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], ",", 
     RowBox[{"75", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"0.9", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", "\[Pi]", " ", "\[Phi]"}], "]"}]}], "+", 
        RowBox[{"0.1", 
         RowBox[{"Cos", "[", 
          RowBox[{"6", "\[Pi]", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.787692938911884*^9, 3.7876930394034586`*^9}, {
  3.7882660605022745`*^9, 3.7882660987736645`*^9}, {3.7882664094069257`*^9, 
  3.7882664213215756`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"66f3a92d-9e28-4d73-bdbb-5b789af8b0c4"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$4626#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
4hITUpRyrv27T/ZaZOOPlRWcv/+/b/Y/sjwjFg==
       "]]},
     Annotation[#, "Charting`Private`Tag$4626#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
FJPUnozfGHW0H9wHHrdfL2ESg94tTtNe/bBXz5F/oIJJHu/qD/M63Q/6Mb6i
a2uZpE1WrYcR3A8LD127lPeISfoaq4NlbvXDDRvtIzs6mYRPtLf9DumHNj+m
GOcHkxhnKh0plWXBmoB0XK6BiU7SQrVWBRa8q/7HaFqHyYroqU8flFiQbvow
7YkWJn/9u92E1rKg4ULdosrNmBQxI5ztEAusUu6L6e3EZBH/D5tpDxZ0KX1V
f2WHCd9Ev7SUFwvOLnE7csARk9HRtjdqviy4dzipccgJk9b32UxGEAvKE3uy
+10x8S+xN8+KZUHEPFFRz+OYsA+QXXvqWMB2OpYnEoRJu02RoHMTC8asegSX
BGNSY5by+FQzC/z6X5oohmByU/c0Sn3BAuHPDuEyYZgYiavrU4MsyB/SScmI
wmTjHJkpwWEWSIhSQt7RmCyf4q9bwmVBaNd24003MPkz1Ku7c4KOx6VvT14c
JgUPY7RvzWdDu6Cy2PoUTJIqzv/Mk2CDii/6U38bk9D8o6UPZdgwyA4qQGmY
OCcYrh9WZAM10nNgQwYmkl4TGno6bDgvPdJRnIPJjPunr5Zb2dC7Job8vYfJ
N4fXuQcN2LBRz81zey4mzUYFatEmbPANdf6al4+J37IDygNObGjTOmGpWIyJ
G0PLts+VDQPWPs3KJZhYXOaPfHeYDd/6FLYtL8VE7WvWjw4fNlSqPVeeLsNE
SuGM6rMzbAjSi43jlGMybbHboTmADdnOEXwNFZh0VQyTulA2NDnwP3eswoR8
qR2rjKDjfRertrya7r/8NfXSaDb8LjsT0EP70sV1N+4nsaFL+LHwllpMvMpn
nmSmseF01VXope0w9HIiLZMNIVr7PM/WYaK199SB+EI2LPG1zIyvx0Qh2DAu
ppR+v7Z8vmwDJsJl0k8jq9iAynZn36T989Pnv2H1bEj8uePGnEZMWLLVmiGE
fj7x0gkf2m2m4W7nW9gwdzBc7w3tyiCHBL82NnhVsSbXPcQko0Sj7dRLNr0/
yeZepB31cWr6RBcbtpW+MnpO+9zijg1He9gQ+Kykc0ETJu577hw6yGKDO8PD
woS2xXnv5AMf2bDIobQmgPa2YtThOEyP/21LyRzaaoOS/LZcNhw8K2H/lLak
zEcd5k825I62RQ3Q/mdc4bF3gg0Pcg8U/6I9HBCWavyPDRJTNU3TtL/ZrvG4
y8cBud62Rvr7lrh8XySgKMgB9tDNvEnabyP+3U6dwwFwX3J5hLbZys+b5EU4
8F7P07SbNmnoeJkoyoHPAnmzVbQ321YdlVnAgXk/fmbeoF1I3RGME+eA2Gc/
HTfayhFX0ySkOODv7l2xhnaSso9utDQH9BLkV3LpfCxssH89X5YDi/c2X7xH
O9Rmx/EIOdp/SIcd7Une6jnCChwYLfES5aftFS6VHrqcA1pam3Qz6fx/Upra
IqDEgfTXYdZ6tF9Zt3tOq3JgnXi9mw09nrt5FXMD1TmgGVZm/ZYe/4araRl/
NDgw9cJhqyXt+3VeXb/Wc2C5g3G/Ol0vCtZ2Xic3cmDrPm5aBF1PN7kgQulw
4G+pgPVgDSYXVkjqf9vKgVXe2VmBdD2O1U52H9HnwErrfoMGun6PWQ16fzag
47nK6hyrxMTmSnkWx5DOp+K/YXO63teO2sx/Z86BSbbot3R6/tRY722KZND9
Ndi+L5KeX4aNO30NrDggFU3cjz/AxDF6fW+OPQc2rlq0Q7IQkwiteQWn3TmQ
GKHrNErPX+nkWWf1wxzYH/ap6ho9vzP4f0v1eXDAIO9rlVI23X7nYIChFwdM
bf882HAXk6HTDaZS/hzQvzVYO0CvJ6f6y2ZaAjnwipT4b06m56dRXpn/BQ4s
NV7xPSSRbl82QX7gMgf+BAeJTtPrkWGt97fiaA6cVdisF0qvZxnTypHm2Rzo
WJ0/9D6Q7t9hOQP++xxA6yTNUvwxqX4h/rMijwOdG0xuYj9MXqT/c1AopuPX
Gem+f4p+3463q0dqOSBzUTH6swfd3ysRz8JfciAlOux5iRUdLy84SL+TA82T
seMDDExO2p3d8L2LA/XXZfRELTAJV3dPtvvAgYlUa3VkgklVm/5Rtc8cCCxY
ML1Dn94PxL+LNP/lwPpxLrqrjElnY+TVPdMcmPumsSlYkR5fT9W5L2c5MKYS
Um+rQK9XbY6CH4QGYJW47FaeDO2wlmlq4QAouL6ueSKCicRUys+lKweguvmZ
iRiXScS+GPX5mg2A06U0iw30/th+i+M4aT4Atmf0j6wqZJKoXYE9FxgDoB+y
6criXCaZn1nyNsJmACyWnv7GTmcS0f1LX6cfGIDx8XNdijFMIvLme8tz3wG4
wjscYe/JJEJNt4tXpg7AtsTGR6+VmOSD/i4T9p0BSFCtKYxQYJLiulFOyt0B
SLscsGabLJM4Vm2Xkro/AGJ39fjDxJiktIh9mq9sAJJC2nse/2YQ59SV2/qf
DoDk2Jr6z88YpMa/oDnh1wAEqh+vmz7GIMd16nvmmQ3C+XzpulM6loS86i6s
MR+E5AeNa4bVLInMie/BRxiD8FtrRttKzpI05aiqtdgMgmjhW1PRGQuySPbG
qYsug5C14dChmVYLUj95cP7EmUHgTJ2dFbOzIPObFm7/lDEI10t1z2/zMScF
e9wyHv4ehLd/T/YkRZqR8RF5iaGEj6DEuJYq1GJMKq2MBeN3fYKYhTdjSyMN
SbBJWHrF0CdYPtE6LGoFRKnf9H1W2GcY97C/cGvpFrJNNzRebuMQhH48EiXU
r0Wclr+c5H8zBDrtJb29lqpkvO36oE/IFzhSriX89bokSRJyPo1VhqFK6cXn
LxJjsIhVmSnQPAx/k8J7qp2WojlBIdZbT34FubOLqsZPayC+POfiQalvkCts
ILy1WBudSim+LvX4G1jvWL9C2EIPNa4JF5H0GgGry+3b1hfuQJKmp9ZeWjgK
jhdVz2+JNUJ961698W8YhbbsdwLzn+xBJXdA5ZMzF/a472uY522OfgX8EnZ1
5cJRyY3iuefN0Wa7+yP97lwoOTulCpHmqF5cvPydBxcuhl7wsMsxR60XWTue
n+LCK8tTjzR7zVGvW9CBsitc8Lm4vcPTyALNXVWfcvEBF9pW/DJ9usgS7RH0
vjBdwoUA7aAG9xWWKIqt7BZQzoU67z9oYq0lkkyKXH26hgtB35vNBXdbIoV5
jjVHHnMh7tCM0AM/S7Rx5E+3xVsu5O/z8t7ZY4n2F2+WXDbDhdkb6Q5XTBmo
yvHPwld8PKByJt5UMBho4dw6scuCPLi08qp8vy0DEaftIl9FeJDyp2xUnj5v
KYvumq1YxANZ0X3PTAMZaOggk7t3NQ+sLq5OPp3PQF7yns/OW/MgiCWSVC/I
RK0t656ut+PBnw3rm6XnMZHiSap50IEHWa427YcXMtGrp6eIyQEe1Dy9bD2+
hD4PnvGvlj7GA80455D6dUw08fJKTmEwDzbPfLEcsmGii2F3Q/ryebCs0S/t
agYTLfATNnUt4oHp90yl7GwmSvE4ITVUzAMu/llTm0ufR822ZlEVPNjt3bLg
VQkTDUm+bhZoouPbZf88lzCR2R0+kdVveHBbVjp8LpuJ3sccflXUzYP7/HkL
ygaZ6GBIe9LG9zxQGf3jZDvERBcOJq3W7+dB3PcQ4wguE5VoaJlZfuEBNp3b
nTjFRIurD0SfmeKBT80ybevFGGXlttj+neaBhmivc6QcRlopaxSD+Sjo9h6R
qlXAaE/QRHH4HAqmfV8J8a3E6LxhzOvb4hS8LllyX3s9RoMvH0o/XknBkc7g
Rs3d9Hn9kUr/bjUKViUr1oyYYPSvLDLnuToFNcqaAnfNMJJJsN3cvY6C+PQ4
vzEGRiZOPLthXQrEf+yPNtiHUdHwstsL91Lg86+MOHlhFJ4W5sKyoODZ99Cn
bB+MDmKu6gMmBWFqytP2vhgpNDSUmNtR8J7D+rzuHEaRMftao9wocLl9xsQ1
BKPDu55cczpEga0Dw+XWZYx2Tmow13pQwD1ZHtkUhtGk29/e5yco2F4iIvo7
AiOPzck/RP0pqPAfdhyJxWjXCF/1h0AKfD8mPngZh5Fihsf5/AsUGJ80+Jd3
C6O387YIm4ZSUBy5KwAlY2TU/1YhIoaCM4/2VI2lY7TipsGg/U0K/rk6R4ff
pfOx+9599VsUSP9KNpPKwqii5MzG/1IosJ9j4Cl8DyPlUGkT4XsUPMpPFjlX
gNHMlvML3uVSEKXa+7yuEKMe7sfOewUUbNq/w/1XEUY37Mr37y6lQNt/ufDu
Eow8xZauXFxBQfuKBRIupXR+H10a/lxFQbK0xJB3GUazGtg3rIGCU5ajP30q
MPrArt1i00SBKF+tmlslRlXxSjMqjymIeHdRaU8VRl4z38Obn1Kg7xZ3+E81
Rqbl9hbxbRSopJs/IDUYqXqQRQc7KGhUGKy+UItR3+uYO4JvKLgmpSLWV4dR
zZUJ9zfdFMjdbrQO/N99oN6B1VnvKUCR8/ZJNGDk872Vd6qXgpIvKstv0zbL
0azYyaIgx14/bWkjRmqOCf5SAxT8UYp6F0tbQHzGYPAjBcIaLu3TtFlPDgmV
DdHj83dR4IGHGNWd63gW8pWClkdSH6toJ6zbFMMcpeCt9TtBoSaMTg6mWitR
dPxao327ae9NFJL/8YNu/9zIiWDa6ns92WSMgv0zF6qK/ndfy9+VfWOCAr5t
LlWvaXMq9Y65/KXgA8P+BP09ixqOZa3XmqagYRHq/Us7UXH++OwsBf9/3/t/
bkjsvg==
       "]]},
     Annotation[#, "Charting`Private`Tag$4626#3"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-74.99999824609637, 74.99999999999987}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7876930182456903`*^9, 3.7876930398570337`*^9}, 
   3.787773230413684*^9, {3.7882660684303827`*^9, 3.788266099094467*^9}, {
   3.7882664127408686`*^9, 3.7882664221630573`*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"61b63374-9a72-42db-9cc1-d3253f4f94ee"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1000, 1249},
WindowMargins->{{Automatic, -8}, {-7, Automatic}},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 228, 4, 67, "Subsection",ExpressionUUID->"e64cb84f-de9f-4b90-a5e9-1ea323c30588"],
Cell[811, 28, 53162, 876, 114, "Text",ExpressionUUID->"64d0d6bf-1eab-41bc-a7cd-251369f4e925"],
Cell[53976, 906, 30151, 731, 2739, "Input",ExpressionUUID->"7405a249-8e74-42ba-8cb9-4ad6b37b789b"],
Cell[84130, 1639, 9746, 248, 593, "Input",ExpressionUUID->"b8b499bb-9d2f-4be1-820a-74f2d72ede84"],
Cell[93879, 1889, 7225, 151, 348, "Input",ExpressionUUID->"7c173ea2-2946-49d8-b3f4-f6b2d745c11e"],
Cell[CellGroupData[{
Cell[101129, 2044, 17202, 382, 1317, "Input",ExpressionUUID->"51dba8ce-d54e-473b-8306-f61498bec997"],
Cell[CellGroupData[{
Cell[118356, 2430, 2611, 39, 28, "Print",ExpressionUUID->"ff7768b9-0bda-4418-8542-007f8f38b3d2"],
Cell[120970, 2471, 2759, 42, 28, "Print",ExpressionUUID->"c3549ebe-78b9-44af-930c-6641214a89ef"]
}, Open  ]],
Cell[123744, 2516, 519438, 9243, 1264, "Output",ExpressionUUID->"0eea97bb-5187-417a-9b0f-2165303af8cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[643219, 11764, 1099, 31, 84, "Input",ExpressionUUID->"da6096ee-6a39-4d4a-9d64-8f02f4d3debd"],
Cell[644321, 11797, 369, 5, 40, "Output",ExpressionUUID->"790361c9-9d51-441d-87b4-9c968971b453"]
}, Open  ]],
Cell[644705, 11805, 633, 11, 35, "Input",ExpressionUUID->"404a4d7a-5908-433d-bcb5-4c486aba24ab"],
Cell[CellGroupData[{
Cell[645363, 11820, 1172, 33, 60, "Input",ExpressionUUID->"66f3a92d-9e28-4d73-bdbb-5b789af8b0c4"],
Cell[646538, 11855, 30241, 519, 289, "Output",ExpressionUUID->"61b63374-9a72-42db-9cc1-d3253f4f94ee"]
}, Open  ]]
}, Open  ]]
}
]
*)

