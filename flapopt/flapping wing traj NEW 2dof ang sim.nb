(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    534203,       9807]
NotebookOptionsPosition[    533309,       9784]
NotebookOutlinePosition[    533682,       9800]
CellTagsIndexPosition[    533639,       9797]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["2DOF angular - 3D ambient", "Subsection",
 CellChangeTimes->{{3.758808037911851*^9, 3.7588080500165825`*^9}, {
  3.7851630712097263`*^9, 
  3.7851630750113926`*^9}},ExpressionUUID->"e64cb84f-de9f-4b90-a5e9-\
1ea323c30588"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQeUVUXW9/2uz3HEBJIzKEiQLEFAUECSBMlBoiJBsgISJOcMknMUJeec
JGcQAYmiAyIiGGbG55nnHbtv6Pf33f9z9jrc29xumm7C2Hsteh3OPadO1a4d
/rtqV9UL731Qp83/93/+z//ploQ/dVr0LNe1a4uP6z7Hf+p37tbu/c6tW1Xp
/FHr91t3LfHeY9xsxL/LPP//X0c9muTz+Twezz/+8Y/vvvuufPnyX3311f/8
z/+cPn36b3/7W0REhN/v9znk9XojIyP5yzX3ueYB/st1vNdKX+ET/P3jjz/+
/ve/jxs3buTIkf/1X//Ff+P9c480WR+JaSJ3x7l/etCVjZn8AYrNY0F31Eb7
ye+iOJR/p4+Kme7/+kNISqEn3XeCPm195H7AEyD96g2QHuCmuxDdDK2YPSO9
ttfdzLFn0C/7lu5zJ6gy9q1/B4g7//rXv/75z39iMX755Zcff/zxxo0bvwaI
/167du2HH374+eefz549e+LEiT179hw+fPjChQsHDx5ct27drl279u7du2PH
jv379/OXXw8dOvTFF1/s3r17+/bta9eu5ZrHjh079s0331y9epXCUfz/GyC0
XnVzt0sX+mt3eDgyQLzCNfcxU1xQeXdLE8JqJVK8k1tlHmyXyRkhYIjTzp07
+/Tpg9BKLBP602hB7ty5H3vssVGjRoX/nGSbGq5atSqha5VARP3hKkaGJjRv
3vzy5cvw+cCBA1iDh0dn6QVsIFaOqsqEJtKdSNZY3gTJfNDVuWsyHx2G3L7e
XIyMAz9FOCSHG1Sa+07Qp8N8UY4PEg6350Mhn57xOGS/2gPuJphvFbbnv7QC
16nK21+BcwsHVLKu3cW6vyiPDPE6BUpx+Pvf//3fKDvA/qeffrp58yZAgkhE
oIIY5Msvvzx//vylS5cITPbt24cp4M65c+e4iU04evQoUOHIkSNcnzx5Elyx
ceNGUMSpU6cIYb7++mu9DizhJ2EPvUIJXPATKszfb7/99vvvv+ejv/322++/
/y4IES1miw1Z16gc4imVSav1Fw7QZO7Hj4Am0n0kC6OkMg+wJv9yCBdJ5J4k
SZKGDRsiVPchQEa269at+/jjj48YMSIME9yGccOGDQldqwQixT6ocLt27apV
qzZ69GiQCbZClu1B1+5/SbGbjZk86Oo81CSEjM1Hd+4Deo93ChrhiRaNBA3+
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
Au+9nganr169SkdQ26NHj8JYRCVoD5nYkw0/iuduJ3XvFU6k+0MaLM2fPz8A
9UHX5U9Nsleo0uHDh+fNm4dbsUNe4jbv/+chreVctWoVTjlz5swjR47E92lF
+YULFyZPnvzGG2+AH+CqZZBiANevX79w4UKAyogRI1q0aFGmTBni5QULFig3
IMznNIlA8A4gCYMVhUbkXo8fP16hQoXatWtXqlQJ804IwB00LkOGDJj6vn37
pk2bFnfsu8N+6XcqPzKwidDy5ctx91oxFxHdvtmnT5/mW3h87Y7iczIt4+yw
eJ0AvFixYgUKFIDVtkSIygMA8FxPPPEEEKt48eJ169atU6cOKLFt27Y08Kef
fhK0sCwawTMwDI9RT8EMHYdE1IxdAtucPHnS65yHCBqBhzY0QWdRk0jnLCRh
eO1VsnXr1oEDBy5duhRuB8E8jWN88cUXVBJvCDhRAmpQFmjQcKXWGA4ePBis
lSRJkooVKyotR0KlT/OXm9o3yTJqVE+hUANjceN8jER9+vfvD/6kUff+FZ+T
40RXAnJoV3wNOPgcokzEY9euXeCQxo0b16pVK2hJdezJnRnuBlRxXgeUSPeZ
pGgETa+99tqoUaMedHX+1CRDunLlyvr16+M98apmXeMrevpPJaLRKVOm4B/T
pEnTs2fPGzdu2IA5xg1/tHjxYkw0RhWHKHul3UJAI5MCRECNJ7106ZK2Ng1v
chUndunSJU+ePETfd3pM8zLamQfAA4DBRTZt2pTq7d69GyNMPIhv/eyzz779
9luKQgflqWPZarVRRzTK/RkF1R9XeP78+T59+gAVBgwY4D46OZbfCuUAraPA
Z555ZtmyZRooEJqiOa1aterRowcoa9y4cRs2bNBRTaAmHX/mc3LPRELdwCp4
Qk9pJ1jQGp0COEQXnn322Q4dOvDr/v37hwwZkjx58sqVKyuLXmOJ6mhb1SKV
EUbSPoqRIfvn29gFCA0/u3nzZr0Sup2agQefc6QF0Pf9999PmjRpqlSpjh07
ptxpvUtHL1myZO7cuVQe7CT9pQ6ff/75oEGDxo4dC2hU1k3CTcVSLEwDyIVP
4Y4N2RAWjAJ709fKrYoX/+5zbeVEtyIbcBLIWrBgQXB13Mq0LbX37Nlz9uxZ
jdr5Qvb5T6SHlvzOgkd0fPbs2Q+6On9qQpv27dtHnE7IRlRI7InpU5JP4pBj
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
NgWvYqCIXOrWrdu5c+eZM2du2bJF4zAJVOH/PKILlixZorM14apiVYz/wYMH
Xw3QgQMHIp1Tw+L8ifitcyLdB7LAymYEzNy5A3OLUjXMKPOIJbHD3y9cuHD4
8OGtW7cuW7Zs2rRp06dPB+jOmTNn8uTJXI8ePRoE0rFjx/r16xM2vvHGG7t3
7w6qiddZe5I5c+ZevXp5Aoe/xG+U5wssGNSpu/hfPlS5cmWiGzDS7Nmz9+3b
d/XqVZoTv2uNH2byOxuF0TVPPvnkV199ZdNAfx51xhgiabt27frggw+qVKnS
p08fYitLo41lIZr1e+WVV5InT44goSAIFQEgRYV5C20qWrRo7ty5g2ZY+O78
+fOTJk0KRNRoFYWjazdv3vwmQLZ4855afs+kXCZAF8BpwoQJ6HWWLFmqVasG
rkOPNFgXHiVqhAowo+NEH06pUyAjM0hETyAzcODApUuXHjt2DNMneyg9etA1
fZQIYwvqrlSp0qlTp27cuHHr1q3FixfXqVMnT548XGjqWaNJD7qmiXT/yMY0
bCJYwEOQI9I5Re7XX39F9c6fP79t2zZMpZDGsGHDgBmoZ4cOHd59991atWrp
2NlsAcqXLx+xUlaHChYsCO4tX748McXGjRuDUtCjbgckOAVNyocmG9wLaUZD
e1ZUrVq1Z8+eIKjLly9r53YdLqNwL76++JCTJdXgiNOlS6czZf6I6dSt/zBC
FDGGgwcPbtmyJShap+NFm/wQhmAjgBwIgZwrlwbtAHujOGHe+v3333mmZMmS
oYAEK41lLl269Ny5cwH5U6ZM6d2790cffdS9e/fly5fbYsm4Nzs+iGrglKlV
o0aNEKEGDRqMGTNm7dq1mzdv1kaCMfLQHQfFmC3zoMjvHMOhmUGwk47e+8M5
NleTQaFHzyRSGIJvRAFITrt27QB4uBIcBFJEAItFkjAIBz7omibS/SObvvQ4
p+cgDL/99htGdd26datXr545c+bw4cPx3aCO1q1bN2zYsHbt2lyAQJo3b67z
3Nu0aYOLx1QCJDDswwNEhIhN1gVmat68eRhS4gsAgLQ42poIkPTv318T+vGb
1Cqjh508evTooUOHfvrpJ0shUIqackEfuJ2/b+RzFjO+/PLLhLdSfw22P5yu
ISEIDiDwu3fv1lYqfte+AeFfFIvkp+DhBx988NRTT2FdheGR+QIFCoRPkMa1
ZciQoVq1aqG++JdffkH10LV69eoptQnkjxpOmDDhxIkTcoUxLoBKaAJ1UCui
jPfff5+o9ssvv9TGdMK0sREhS0S5q+2+7zP5nR1iNaKohNIIZzNnWzjz5wlk
4oXU6chMr1698CAoTt++fffv3+/eMijyHk6AtVg72p+CLsIU4v5vUAJ50JMS
Bq0s+GeA7EQDzUnZfKu7AqE5DzHWJ/QZ/+3kvhm+geFLi/HdWNKdirIJGsvx
wGD+8MMPly5dItLZtGnTp59+KvjRuXPn+gHSziFNmzYFwQIwgK8rV67ct2/f
gQMHjh8/fu7cue+++w67evPmTYoi4rPVGe6sVAEe24DUF3LyZpSzxxGhByaa
OvgDB+F54nVXEPMgEbdvsWUXUbeL3H88iRUAsxw5chDnutMm/zxMiHQdR2vC
ECMkM+SmPVoBD7ly5SpXrtzWrVuVlTp69OjcuXPzU5hCUBxwIE+G5qtoiBLk
vCZA6JrOAjBrZsvQ4oUJcSO0HoOwYcMGm3AJMrYxlmDYzxvdkbUPCfmc3ZvN
Spj3iXI5vj+PysQLWYrgzz//jAPSUZJipiG90Dz2MGSd4paoSNc58hZ7Rjpn
J8Vo6DzOEZ9e1wEN3sAhAtevX//xxx910sfatWunTp2q46EJyUFWvXv3VnjO
Hfxmv379hgwZgl8bOXIkocq4AI0fP37SpElo0Pr16w8fPnzq1Kmvv/764sWL
OvD9aoCuXLnyXYD43M0AYVL4Lo6SC8IWzThHOAcxuxtlTIi4/aDeoIlUSw11
X7iNYdB/Q8nYHoqL3K/bzjOYMmJA6o/doOvBEqtXrwZ7TJ48uX///kR2ANQW
LVo0bNiQcKxJkyagkQEDBsCuOXPmrFq1ateuXdpiItoaBomE//alMe4H/C4Q
6A9BnmIF/E+WLBmd5XuU96R9VEgKi0EoWrQoCvWgq/MoERYDswDrMCMYn4IF
C5YqVWr58uWYCM0Mzpo1C5gXfmM0ADxRANZG0bf7pyCzkMCtiQv5A0mtikEi
Qk5gTKREij2Z1/A6ZHPHsRd+n2sfA62MdocMxN38xaFr9Y2cS4xoR7qsw6l1
nBzIYf78+SNGjCBs79Spk3KbCSvy5s1boECBEgGqVKlSrVq1COdr1qxZsWLF
IkWKFCpUCBubP3/+TJkypUuXLkuWLC+88ELKlCnTpk2bL1++ChUqNGjQgKj/
nXfead26NR65R48eHTp06NixY7t27biDg+7WrVuvXr34++GHH3bp0oXrrl27
gnkEb7DeM2bMANusWLEC575u3TrChO3bt+/bt2/btm179uw5d+6cVhrCAVqh
vV+UqKCFHgYVtFzOUkndOzDYNn2RrtMZFDppXIgXKeQf//gHn1B+KcYN8HDo
0KGdO3cuW7aMelJbUBnAo2uA2rZt27hx40aNGrVs2ZLmc62dPMFy06ZNoy0n
T56kztpAT9sF3O18ehzIAB6Vf/rppz/55BM3YEvQT/+ZScEIfQ3+DE0zTqQ7
EXz75ptvwOqjRo1Cg1566SUsD1ESaihdRphRQO6HByS2aiZ0tP+RACRmtRIB
SSLdI/mcw9q0oMnj7MMfe+H3uPbo0wmJuLD9+/cvWrToo48+ws19ECDCbYKF
M2fO2Aa5dypQ5tETOIgTt045/fr1A34QaBB9cPHWW2/hQ8EGONkJEyYQvxOS
rFy58osvvjhy5MiJEyeI/Tdv3rzEoYULF44dO3bQoEH8BVRkzZq1bNmyXANv
hg4dio8mtPn444+BGX379sVZU1sASYsWLZo0adKsWbO33367Ro0atWvXrlq1
6ptvvlmlSpXKlStXq1aN63Llyr3++uuUBv6pFCAu+KlOnTqAJZ6kkPfff799
+/awgg8NGTJEYzW42kmTJk0L0MQAzQwQVf0sQEuXLqVFa9asARuAdjB6ywPE
NX/hyezZs3metsOEYcOGUXj37t35Cg3kc3y3efPm1atXp87Ulopxjc189913
YR1thBujR4/mQ7t27Tp27Bjx3ZUrV0Ayv/32my3Yl4U0ROQe8UggsjExAMkz
zzwzd+5cw8mJhi5BSRr37bffhj+XNpGCiChA+/OjesD+vXv32m5XiryOHz+e
M2fOs2fPhilEExzuiRijRwKQ2Lh3/E6tJtKfjQzcEhwBIU6fPn358mVtaxZ7
++9z9mKiEPwabnTgwIE6dbRQoUIlS5bEAzZo0KBw4cL8F/9OBBF+ISciDW7B
53bq1AlfTzklSpSghJ49e3Jz3759BP4XL17EFHicjb79rg2jguY4bBcpHXUE
6sicOXPLli21M7YCw3/+85+UpvyT6wG6du0aD2NG4AkgB+bgtbE2YJ49e/Zg
gmjFunXrFi9eLAiBLZoyZQq4QvNHw4cP18ITQEKnAAHM2rZt27p1a3ACTNDo
BI3ir6ZIuAAzAGaAW8RZ3AQIcb9+/frgIn7lGpzDK9znV6GLtgGiQO7w344d
O3YPELyipQA5agLmAZVt2LABnEYHnTt3DuABaDTgoTEx29JKk2UCIZayZbMw
8SR6d+x6jf8QVwJIiNZt6/IHuNPCn4FMcRKnxu6KlEOCzdRaMNt3yzaJxWhg
cFC9MIX4nO3p7jT7Ge385kNCljhhI+13eswXi8PFQiemoy3HbHs8N+bRJOOV
z8nZ89++W5TP2W0vRrYH5QlYadZxchPaIA5Xcv78eV/scr9j2RABksOHD9eq
VQtvq7yC0J1agxIV3LtS+ALpKIAEon78Zo0aNUAROm6PMH/z5s3fffcdnh2g
QlSeL1++0qVLE+Nr0sHvHJ8a6RwT8M0330yfPh3fCnopUKDAe++9N2TIEKqE
J9UoqMEPq0bU7WJszLT8Sc0fffnll/jrXLlyPfXUUxSujRy1bs7AjN85FsRd
lNd1XlLoV0J7UPBMMzI6UkSZG3/7298I/L/66iuCpoMHDwJstm3btjNAXGzf
vh3YsChAn3/++bJly/g7b968BQsWcA3y4f6nn34K+OG/wCFeAZsBloSa4M/V
q1cJbxWgRdx+ErdbXC2WsQ1GPK5tHt2s0LVtIXjv8hYjmbQjPClSpIBplnea
CEgSmvyJxz3cPQUxzX0hrLJly5b06dOj77Es6lGnOyEK/+2phqHm1O4HkT8E
oZmJlk3wuxzxA2jwgyY332TVLYITo+QHlUeh+0oP0AmMN2/e/OGHH7SL1JUr
V3BSwAyib033b9q0ac2aNXii2bNnE3rj0Pkv4TmeaOjQodp+37IL7r0t/sC5
CRSI48uQIcPFixepG3gAVB+0D0mkawNqJZdqeOHGjRtHjx4FM9SuXTt79uxE
98OGDdu4cSOeUW7R78pg5K3JkyenTZu2XLlyuFGdfqUK8DDcANI0b948Z86c
1atXJ8yHD99++637pNfQizuR5o90FgAl4McbNmyYJUsWoM6rr7769NNP4/31
zAOcCwjS3CBsE/6/oeXcqfygO+GfebBKrQbSL8DaTJky3W2ufiIl0sNDsq67
d+9OkyYNsd6Drk4CUii0MPK50trdMCMIfuhhN1yJ1vT5nHUukc7pOVEuqPMA
LfkDJI9z0ICtJPW5dm+Qb8UPXr58mQAWOVy1atWUKVMGDRrUM0A9AkQA2Ldv
35EjR2qRyPDhw7nD/Q8//FB7O2hIv379+hUrVnwnQHXq1MmcOXPTpk31iXgJ
GP2BTR6o/+rVq4EThNiUDBrp06cPSMP9pNe1Pzyf1gJbkNKIESOAImXLlgUs
0UZgldKtjS1BrPv11187dOhAyNCuXTviX8G2v//972AY7j///POvvfYafIB1
YDbb+y4OTdPYKZ+7devWzJkz8+XLlzVr1i5dupw6dQp0lzx58mbNmtFN9yFR
M5FiT7I/AEjEoGDBgoldk0iPNGEqz58/nzp1amKrB12XBCQ3YPDcTkHgxOda
geh+zJLWRNrc1essqXaTjQC4Vyb6XSfm/NnI5zoEHL7hmn/44Ycvv/xyx44d
a9asWbBgwaxZs6ZPnz5s2LBevXqBNMAbQ4YM0XLUgQMHch8cMmHChPHjx/Mw
SADEsilAmwO0fv36rVu3bt++HR+9dOlSXp84cSK/btmypVKlSjr5UaMK994W
YXh/4GjLF1988ciRIzQKJDBjxoyggzz8zgyIhkd4cvDgwbVq1XrrrbeaN2++
ePHir7/+WodmujcbD3IoGkQ6ffp0vXr1MmTIgJJqjIXPlS5dulChQl27dqXV
N2/eFBTR83GbKPQHNtf66quv+vXr99JLL+XKlYte0G6clA+CypEjx4YNG0Kz
yBLpAZINdJcpUwZMkghIEumRJswLARG2bvbs2XErIR6tU9AcSiw/7XfOTLQd
BgQYFCrKCf7qomvXrmnnBHwKf2n+d999h+H9+eefMcg8oE0bwGnff/89rlMJ
excvXsQv2MYLSq7mmkJ47EaAeFH7FRDJqiiIYrWmSSsN5TU0fhJm3DiIJzEy
LQx/7vTfOFNshrVFvsARGLgzeHLmzBmi+Llz54Irhg4d2rdvXyUQgjSmTp0K
IJk/f/66desOHToEb3nl999/D5rckav1OYtc3JP7hnkMPeK4KaFVq1aVK1dW
UfE1ZaNMKmAJXnvcuHHKQEBItJOPMUfV4ObevXsBVHXr1s2bN2+7du3AYOfO
nTMc4r19s5Egh8JXKF8HRuTOnbtixYonTpyYPHkyRYEQYBrSaws/VYhOcIhD
02AvvdO4cePMmTPXr19/zpw5SLglai5cuDBNmjQNGjT4xz/+8fBMWCSS30lq
Kl++fJEiRRIBSSI9uuQPZDvgOrNkyYJpjVshFtbZzEVQzpvv9kxRn+uI56jo
MjfsXRup0IUOu8dIAgBwcASYoAV8PTDgwoULeDGcAvZZATgYg2ssOfaTB667
6FKAABhnz57lgodxEFyDKCift3TiFaEiv4I9eADUcerUqePHj3NBCRQuEKL9
oLRDFD9xn1odO3aMYJlf+QmcY7tFaZcDUA2uGbfCRyn5WoD4lXYBVyzfWPkG
cgduTtrGWV5XhqSb7Oxd94ySu3fcHWFiYHfcM1AeZxsHnysr0vrLHrM8QA0I
IE60ncZqYcWqVatAGhMnTgR4TJo0SVtvgUmWLFmyc+dOWMHzaq99SEJlYb4+
6k55DZqA892e7WPPU5nevXvny5cP3sbXRIPfSVykwo0aNSpVqtS2bdsQwojA
4ezqL/ULgrR58+Y+ffpUqVIF/WrduvWsWbMQEtvb34Ya3G0J+px2KdGMT8+e
PQkc+GjBggVLly69adMmWOcefLOGx22EBC5VqFAhW7ZsHTp0QNTde0FTASBi
zZo106VLR6PUWZ673A4ukRKCLO2KvsuePbupSSJQTKRHjvyB8We8do4cOTp3
7hy3QtxTFbpwn/PrvjC/5j4LWJYc6/3rr78KD+Cd8e84caw3zpq/gAoqiZu7
HCCgAp59z549/KQRD2AA93lAWzqAQPD1vKWtkGyAQqT0QhpO4Cy/r/u2p4T8
oxL+bW8BKql9Jm1UXM9oNcf/DZAOmaIVlKwP/Rag/9femcf5XK7//49TJIka
axzbQ6FCKJSYiCLryC6SLYbQIWMZk+xkLNlmZBk7Y1B2o0ZoLNnLLrK0kHN0
+nb+OJn5fPyev8/rvO/H7fMZY0xjhnpff3we73nP+32/7+W6r+t1Xfd1Xzdm
Mr+0CDmPCgbbKN0ldQbzHPMRbaH+VFswhscANrQU5IOm0H16hnKM1awU36bn
jWdAriGDVbxW2EyS79RRY5sb4Gdf2OtTQkfmRY+z2UqF8CHaSOsYr8TERGz/
eT5auHAhynf48OHgkMWLF69YsSIuLg58sn//fgZLMDIT0kZR1alTp6LEjbPl
j5epXhIsXLt2LRMHvEED0dfiB/oEcDt37lywEHAF5NCyZcthw4YBmOUfS76d
2GbNFw0BTNK6detcuXJVqVJl2bJlGX5+AWw8cODAcePGAacN2DBEzWNjY4OC
gkJCQsyhmS4gyXLSQiS/L7/8cvHixW0LxcUkLt1bJOWCqKlWrVrjxo3TXYht
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

    "], {{0, 89}, {731, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{731, 89},
  PlotRange->{{0, 731}, {0, 89}}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"64d0d6bf-1eab-41bc-a7cd-251369f4e925"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Rspar", "[", "\[Phi]_", "]"}], ":=", 
   RowBox[{"RotationMatrix", "[", 
    RowBox[{"\[Phi]", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Rhinge", "[", "\[Psi]_", "]"}], ":=", 
    RowBox[{"RotationMatrix", "[", 
     RowBox[{"\[Psi]", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Assumption", " ", "Rcop"}], ",", 
    RowBox[{"x", " ", "=", " ", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["r", "^"], "1"], "R", " ", "in", " ", "Chen", 
      RowBox[{"(", "2016", ")"}], " ", "eq", " ", 
      RowBox[{
       RowBox[{"(", "5", ")"}], ".", " ", "Ixx"}], " ", "from", " ", 
      "\"\<incorporate R\>\"", " ", 
      RowBox[{"notes", "."}]}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wingsubs", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"R", "\[Rule]", 
       RowBox[{"Aw", "/", "cbar"}]}], ",", 
      RowBox[{"ycp", "\[Rule]", 
       RowBox[{"R", " ", 
        SubscriptBox[
         OverscriptBox["r", "^"], "1"]}]}], ",", 
      RowBox[{"Ixx", "\[Rule]", 
       RowBox[{"mwing", " ", 
        RowBox[{"ycp", "^", "2"}]}]}], ",", 
      RowBox[{"Izz", "\[Rule]", 
       RowBox[{"2", 
        RowBox[{"cbar", "^", "2"}], 
        RowBox[{"\[Gamma]", "^", "2"}], "mwing"}]}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", " ", "nonlin", " ", "transmission"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Tau]inv", "[", "\[Phi]o_", "]"}], ":=", 
    RowBox[{"\[Phi]o", "/", 
     RowBox[{"(", 
      RowBox[{"\[Tau]1", "/", "ycp"}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "draw", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"drawWing", "[", 
     RowBox[{"sol_", ",", "a_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"pspar", ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"A", " ", "wing", " ", "in", " ", "local", " ", "fram"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"polyverts", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "R", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "R", ",", 
             RowBox[{"-", "cbar"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "cbar"}]}], "}"}]}], "}"}]}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pspar", "=", 
        RowBox[{
         RowBox[{"Rspar", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "R", ",", "0"}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Transform", " ", "to", " ", "world", " ", "frame"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"polyverts", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Rspar", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ".", 
           RowBox[{"Rhinge", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], ".", 
           RowBox[{"polyverts", "\[Transpose]"}]}], ")"}], "\[Transpose]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Graphics3D", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"Thick", ",", "\[IndentingNewLine]", 
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "pspar"}], 
                 "}"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Polygon", "[", "polyverts", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Opacity", "[", "1", "]"}], ",", "\[IndentingNewLine]",
                "Blue", ",", "\[IndentingNewLine]", 
               RowBox[{"Arrow", "[", 
                RowBox[{"{", 
                 RowBox[{"paero", ",", 
                  RowBox[{"paero", "+", 
                   RowBox[{"1", "Faero"}]}]}], "}"}], "]"}]}], 
              "\[IndentingNewLine]", "}"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"FaceGrids", "\[Rule]", "All"}]}], "]"}], "/.", "sol"}], 
          "/.", 
          RowBox[{"t", "\[Rule]", "a"}]}], "//.", "wingsubs"}], "/.", 
        "params"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"plotTrajs", "[", 
     RowBox[{"sol_", ",", "t2_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"t1", "=", 
         RowBox[{
          RowBox[{"t2", "-", 
           RowBox[{"Ndt", " ", "dt"}]}], "/.", "params"}]}], ",", 
        RowBox[{"FD", "=", 
         RowBox[{"Faero", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Phi]", "[", "t", "]"}], "/.", "sol"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "\[Phi]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Psi]", "[", "t", "]"}], "/.", "sol"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "\[Psi]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Faero", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "*", 
              RowBox[{"1000", "/", "9.81"}]}], "/.", "sol"}], "//.", 
            "wingsubs"}], "/.", "params"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "\"\<FL [mg]\>\""}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"FD", "*", 
              RowBox[{"1000", "/", "9.81"}]}], "/.", "sol"}], "//.", 
            "wingsubs"}], "/.", "params"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "\"\<FDx [mg]\>\""}]}], "]"}]}], 
       RowBox[{"(*", 
        RowBox[{",", "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Tau]act", "/.", 
             RowBox[{"c2", "[", "]"}]}], "/.", "params"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "u"}]}], "]"}], ","}], "*)"}], 
       "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"debugComponentsPlot", "[", 
     RowBox[{"sol_", ",", "t2_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"stiff", ",", 
        RowBox[{"t1", "=", 
         RowBox[{
          RowBox[{"t2", "-", 
           RowBox[{"Ndt", " ", "dt"}]}], "/.", "params"}]}], ",", "M", ",", 
        "inertial", ",", "Mdiag", ",", "inc", ",", "ic"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"stiff", "=", 
        RowBox[{"D", "[", 
         RowBox[{"L2", ",", 
          RowBox[{"{", "q", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"M", "=", 
        RowBox[{"D", "[", 
         RowBox[{"KE", ",", 
          RowBox[{"{", 
           RowBox[{"dq", ",", "2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"inertial", "=", 
        RowBox[{"M", ".", "ddq"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Mdiag", "=", 
        RowBox[{"DiagonalMatrix", "@", 
         RowBox[{"Diagonal", "[", "M", "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"inc", "=", 
        RowBox[{"Mdiag", ".", "ddq"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ic", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M", "-", "Mdiag"}], ")"}], ".", "ddq"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
           RowBox[{"inertial", "//.", "wingsubs"}], "/.", "params"}], "]"}], 
         ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"inertial", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<i\>\""}], "]"}],
                    ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"stiff", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", 
                    RowBox[{"\[Tau]damp", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "\"\<g\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"\[Tau]aero", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<aero\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"\[Tau]inp", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/.", 
                    RowBox[{"c2", "[", "]"}]}], ",", "\"\<act\>\""}], "]"}]}],
                   "\[IndentingNewLine]", "}"}], "/.", "sol"}], "//.", 
                "wingsubs"}], "/.", "params"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                "Dashed"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "2"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"inc", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<inc\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"ic", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<ic\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"inertial", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<itot\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"stiff", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<gtot\>\""}], 
                    "]"}]}], "\[IndentingNewLine]", "}"}], "/.", "sol"}], "//.",
                 "wingsubs"}], "/.", "params"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "Automatic", ",", "Automatic", ",", "Dashed", ",", 
                "Automatic"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"aeroForce", "[", 
     RowBox[{"{", 
      RowBox[{"\[Phi]_", ",", "\[Psi]_", ",", "d\[Phi]_", ",", "d\[Psi]_"}], 
      "}"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sparVecB", "=", 
         RowBox[{
          RowBox[{"Rspar", "[", "\[Phi]", "]"}], ".", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ",", 
        RowBox[{"(*", 
         RowBox[{"vector", " ", "along", " ", "wing"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"chordB", "=", 
         RowBox[{
          RowBox[{"Rspar", "[", "\[Phi]", "]"}], ".", 
          RowBox[{"Rhinge", "[", "\[Psi]", "]"}], ".", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}]}], ",", 
        RowBox[{"(*", 
         RowBox[{"wing", " ", "chord", " ", "unit", " ", "vector"}], "*)"}], 
        "\[IndentingNewLine]", "le", ",", "ne", ",", "pcopB", ",", 
        "rcopnondim", ",", "\[IndentingNewLine]", "eD", ",", "eL", ",", 
        "\[Alpha]", ",", "paero", ",", "Caero", ",", "Faero"}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Leading", " ", "edge", " ", "velocity", " ", "direction"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"le", "=", 
        RowBox[{"Cross", "[", 
         RowBox[{
          RowBox[{"d\[Phi]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ",", 
          RowBox[{"ycp", " ", "sparVecB"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ne", "=", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"le", ".", "le"}], "]"}], "+", "\[Epsilon]aero"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"COP", ":", " ", 
         RowBox[{"nondim", " ", "from", " ", "Chen"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"rcopnondim", "=", 
        RowBox[{"0.25", "+", 
         RowBox[{"0.25", "/", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Exp", "[", 
             RowBox[{"5.0", "*", 
              RowBox[{"(", 
               RowBox[{"1.0", "-", 
                RowBox[{"4", "*", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Pi]", "/", "2"}], "-", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"\[Psi]", "^", "2"}], "]"}]}], ")"}], "/", 
                  "\[Pi]"}]}]}], ")"}]}], "]"}]}], ")"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pcopB", "=", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "d"}], "}"}], "+"}], "*)"}], 
        RowBox[{
         RowBox[{"ycp", " ", "sparVecB"}], "+", 
         RowBox[{"rcopnondim", " ", "chordB"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Lift", "/", "drag"}], " ", "directions"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"eD", "=", 
        RowBox[{
         RowBox[{"-", "le"}], "/", "ne"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"eL", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Aero", " ", "force", " ", "calculate"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{
         RowBox[{"\[Pi]", "/", "2"}], "-", "\[Psi]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"paero", "=", 
        RowBox[{
         RowBox[{"Rspar", "[", "\[Phi]", "]"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "ycp", ",", "0"}], "}"}], "+", 
           RowBox[{
            RowBox[{"Rhinge", "[", "\[Psi]", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{
               RowBox[{"-", "rcopnondim"}], " ", "cbar"}]}], "}"}]}]}], 
          ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Caero", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"CDmax", "+", "CD0"}], ")"}], "/", "2"}], "-", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"CDmax", "-", "CD0"}], ")"}], "/", "2"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", "\[Alpha]"}], "]"}]}]}], ")"}], ",", 
          RowBox[{"CLmax", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", "\[Alpha]"}], "]"}]}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          SubscriptBox[
           OverscriptBox["r", "^"], "2"], " ", "from", " ", "Whitney", " ", 
          "2010", " ", 
          RowBox[{
           RowBox[{"(", "2.23", ")"}], ".", " ", "Assumes"}], " ", "Rcopx"}], 
         "=", 
         RowBox[{
          RowBox[{"ycp", " ", "stays", " ", "constant"}], " ", "-", " ", 
          RowBox[{"OK", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Faero", "=", 
        RowBox[{
         RowBox[{"1", "/", "2"}], "\[Rho]", " ", 
         RowBox[{"d\[Phi]", "^", "2"}], " ", "cbar", " ", 
         RowBox[{"R", "^", "3"}], " ", 
         RowBox[{
          SubscriptBox[
           OverscriptBox["r", "^"], "2"], "^", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Caero", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "eD"}], "+", 
           RowBox[{
            RowBox[{"Caero", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "eL", " ", 
            RowBox[{"Sign", "[", 
             RowBox[{"-", "d\[Phi]"}], "]"}]}]}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"paero", ",", "Faero"}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Psi]", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Pi]", "/", "2"}], " ", "-", " ", 
       RowBox[{"CD0", " ", "should", " ", "remain", " ", "in", " ", 
        RowBox[{"drag", ".", "\[IndentingNewLine]", "Need"}], " ", "to", " ", 
        "check", " ", "lift", " ", 
        RowBox[{"sign", ".", " ", "Trying"}], " ", "to", " ", "coincide", " ",
         "with", " ", "2", "D", " ", "sim", " ", "results", " ", 
        RowBox[{"https", ":"}]}]}], "//", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"github", ".", "com"}], "/", "avikde"}], "/", 
           "robobee3d"}], "/", "issues"}], "/", "88"}], "\[IndentingNewLine]",
         
        RowBox[{"i", ".", "e", ".", " ", "when"}], " ", "stroke", " ", 
        "vel"}], " ", ">", " ", "0"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"hinge", " ", "ang"}], " ", "<", " ", 
     RowBox[{"0", " ", "for", " ", 
      RowBox[{"lift", "."}]}]}]}], "\[IndentingNewLine]", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"aeroForce", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Pi]", "/", "4"}], ",", 
          RowBox[{"-", "1"}], ",", "0"}], "}"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "//.", "wingsubs"}], "/.", "params"}], 
    "//", "Simplify"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.785163733169914*^9, 3.785163768788862*^9}, {
   3.7851638219331465`*^9, 3.7851638221495667`*^9}, {3.7851638575914416`*^9, 
   3.7851638656639175`*^9}, {3.785163952461292*^9, 3.785163959194874*^9}, {
   3.785181113450061*^9, 3.7851811849114933`*^9}, {3.785181223420051*^9, 
   3.7851814480879383`*^9}, {3.7851815284493275`*^9, 3.785181574334261*^9}, {
   3.785181607927892*^9, 3.7851818562133703`*^9}, {3.785181897023181*^9, 
   3.785181973204109*^9}, {3.7851820183846817`*^9, 3.785182035584442*^9}, {
   3.785182130927059*^9, 3.7851822788151007`*^9}, {3.785182768706132*^9, 
   3.785182824611698*^9}, {3.7851835377984476`*^9, 3.7851835381465435`*^9}, {
   3.785183574632366*^9, 3.7851838963880434`*^9}, {3.785183935005065*^9, 
   3.78518393938645*^9}, {3.7852369154777946`*^9, 3.7852369276973515`*^9}, {
   3.785237068661893*^9, 3.785237159502931*^9}, {3.7852390830870667`*^9, 
   3.785239105554223*^9}, {3.785239223653453*^9, 3.785239230566188*^9}, {
   3.785239332872146*^9, 3.7852394831645365`*^9}, {3.785239522904046*^9, 
   3.785239527846*^9}, {3.785239574459278*^9, 3.785239590976102*^9}, {
   3.785239663394473*^9, 3.785239765859336*^9}, {3.785239822253582*^9, 
   3.785239852287075*^9}, {3.7852411853333817`*^9, 3.7852412095104837`*^9}, {
   3.7852412747392893`*^9, 3.785241284555241*^9}, {3.785242577855811*^9, 
   3.7852426072696886`*^9}, {3.785242760532243*^9, 3.785242764687683*^9}, {
   3.785243042341342*^9, 3.785243082387663*^9}, {3.78524369984238*^9, 
   3.7852437033492184`*^9}, {3.785243878758131*^9, 3.7852438818282394`*^9}, {
   3.785250588656488*^9, 3.785250591357007*^9}, {3.7852507564570065`*^9, 
   3.7852507638104935`*^9}, {3.785253091532304*^9, 3.785253138847148*^9}, {
   3.7852531795009995`*^9, 3.7852531822852845`*^9}, {3.78525322760236*^9, 
   3.7852532347079835`*^9}, {3.785253269736401*^9, 3.7852533186729493`*^9}, {
   3.7852533499356813`*^9, 3.7852533536194243`*^9}, {3.7852534684496627`*^9, 
   3.7852534710220785`*^9}, {3.7852535409719725`*^9, 3.785253541682535*^9}, {
   3.7852537363906927`*^9, 3.7852537365316057`*^9}, 3.785254209543125*^9, 
   3.785254249221677*^9, {3.7852618005450153`*^9, 3.785261822043441*^9}, {
   3.785261857787959*^9, 3.7852618586202583`*^9}, {3.7852618892287784`*^9, 
   3.785261946037554*^9}, 3.785262059440189*^9, {3.7852620993981705`*^9, 
   3.785262120227375*^9}, {3.785263145319659*^9, 3.7852631460221624`*^9}, {
   3.7852632381337895`*^9, 3.7852632587033963`*^9}, {3.7852633271116285`*^9, 
   3.7852633460395827`*^9}, 3.785263472773306*^9, 3.785263866855198*^9, 
   3.785268139559249*^9, {3.78526972929168*^9, 3.785269729727641*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"7405a249-8e74-42ba-8cb9-4ad6b37b789b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Lagrangian", " ", "setup"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"q", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Phi]", "[", "t", "]"}], ",", 
       RowBox[{"\[Psi]", "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dq", "=", 
     RowBox[{"D", "[", 
      RowBox[{"q", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ddq", "=", 
     RowBox[{"D", "[", 
      RowBox[{"dq", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"for", " ", "analysis"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pwing", "=", 
     RowBox[{
      RowBox[{"Rspar", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "ycp", ",", "0"}], "}"}], "+", 
        RowBox[{
         RowBox[{"Rhinge", "[", 
          RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", 
           RowBox[{
            RowBox[{"-", "\[Gamma]"}], " ", "cbar"}]}], "}"}]}]}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"See", " ", 
       RowBox[{"https", ":"}]}], "//", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"github", ".", "com"}], "/", "avikde"}], "/", 
           "robobee3d"}], "/", "pull"}], "/", "105"}], "#issue"}], "-", 
       RowBox[{
       "349667100", " ", "for", " ", "my", " ", "replacement", " ", "of", " ",
         "Ixx"}]}]}], ",", "Izz"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KE", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "2"}], "Ixx", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], "^", "2"}]}], "+", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "Izz", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "'"}], "[", "t", "]"}], "^", "2"}]}], "+", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "mwing", " ", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"pwing", ",", "t"}], "]"}], ".", 
        RowBox[{"D", "[", 
         RowBox[{"pwing", ",", "t"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "ma", " ", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Tau]inv", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", "t"}], "]"}], "^", 
        "2"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L2", "=", 
     RowBox[{"KE", "-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"1", "/", "2"}], " ", "k\[Psi]", " ", 
         RowBox[{
          RowBox[{"\[Psi]", "[", "t", "]"}], "^", "2"}]}], "+", 
        RowBox[{
         RowBox[{"1", "/", "2"}], 
         RowBox[{"(", 
          RowBox[{"ko", " ", 
           RowBox[{"ycp", "^", "2"}]}], ")"}], 
         RowBox[{
          RowBox[{"\[Phi]", "[", "t", "]"}], "^", "2"}]}], "+", 
        RowBox[{
         RowBox[{"1", "/", "2"}], "ka", " ", 
         RowBox[{
          RowBox[{"\[Tau]inv", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
       ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Llhs", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"L2", ",", 
            RowBox[{"{", "dq", "}"}]}], "]"}], ",", "t"}], "]"}], "-", 
        RowBox[{"D", "[", 
         RowBox[{"L2", ",", 
          RowBox[{"{", "q", "}"}]}], "]"}]}], ")"}], "//", "Simplify"}]}], 
    ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Llhs", "=", 
     RowBox[{
      RowBox[{"First", "@", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"And", "@@", 
          RowBox[{"Thread", "[", 
           RowBox[{"Llhs", "\[Equal]", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Phi]", "''"}], "[", "t", "]"}], ",", 
           RowBox[{
            RowBox[{"\[Psi]", "''"}], "[", "t", "]"}]}], "}"}]}], "]"}]}], "//",
       "Simplify"}]}], "*)"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Add", " ", "non"}], "-", "lagrangian"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"paero", ",", "Faero"}], "}"}], "=", 
     RowBox[{"aeroForce", "[", 
      RowBox[{"Join", "[", 
       RowBox[{"q", ",", "dq"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]aero", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"paero", ",", 
           RowBox[{"{", "q", "}"}]}], "]"}], "\[Transpose]"}], ".", "Faero"}],
        ",", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"R", ">", "0"}], ",", " ", 
          RowBox[{
           SubscriptBox[
            OverscriptBox["r", "^"], "1"], ">", "0"}]}], "}"}]}]}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Tau]damp", "=", 
     RowBox[{"-", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"b\[Psi]", " ", 
         RowBox[{
          RowBox[{"\[Psi]", "'"}], "[", "t", "]"}]}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]inp", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Tau]inv", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", 
        RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], "\[Tau]act"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]rhs", "=", 
     RowBox[{"\[Tau]aero", "+", "\[Tau]damp", "+", "\[Tau]inp"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Simplify", " ", "may", " ", "take", " ", "a", " ", "little", " ", 
     "time"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eoms", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{"Llhs", "\[Equal]", "\[Tau]rhs"}], "]"}], "//.", 
        "wingsubs"}], ",", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"cbar", ">", "0"}], ","}], "*)"}], 
         RowBox[{
          RowBox[{"\[Psi]", "[", "t", "]"}], "\[Element]", "Reals"}], 
         "}"}]}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.785163733169914*^9, 3.785163768788862*^9}, {
   3.7851638219331465`*^9, 3.7851638221495667`*^9}, {3.7851638575914416`*^9, 
   3.7851638656639175`*^9}, {3.785163952461292*^9, 3.785163959194874*^9}, {
   3.785181113450061*^9, 3.7851811849114933`*^9}, {3.785181223420051*^9, 
   3.7851814480879383`*^9}, {3.7851815284493275`*^9, 3.785181574334261*^9}, {
   3.785181607927892*^9, 3.7851818562133703`*^9}, {3.785181897023181*^9, 
   3.785181973204109*^9}, {3.7851820183846817`*^9, 3.785182035584442*^9}, {
   3.785182130927059*^9, 3.7851822788151007`*^9}, {3.785182768706132*^9, 
   3.785182824611698*^9}, {3.7851835377984476`*^9, 3.7851835381465435`*^9}, {
   3.785183574632366*^9, 3.7851838963880434`*^9}, {3.785183935005065*^9, 
   3.78518393938645*^9}, {3.7852369154777946`*^9, 3.7852369276973515`*^9}, {
   3.785237068661893*^9, 3.785237159502931*^9}, {3.7852390830870667`*^9, 
   3.785239105554223*^9}, {3.785239223653453*^9, 3.785239230566188*^9}, {
   3.785239332872146*^9, 3.7852394831645365`*^9}, {3.785239522904046*^9, 
   3.785239527846*^9}, {3.785239574459278*^9, 3.785239590976102*^9}, {
   3.785239663394473*^9, 3.785239765859336*^9}, {3.785239822253582*^9, 
   3.785239852287075*^9}, {3.7852411853333817`*^9, 3.7852412095104837`*^9}, {
   3.7852412747392893`*^9, 3.785241284555241*^9}, {3.785242577855811*^9, 
   3.7852426072696886`*^9}, {3.785242760532243*^9, 3.785242764687683*^9}, {
   3.785243042341342*^9, 3.785243082387663*^9}, {3.78524369984238*^9, 
   3.7852437033492184`*^9}, {3.785243878758131*^9, 3.7852438818282394`*^9}, {
   3.785250588656488*^9, 3.785250591357007*^9}, {3.7852507564570065`*^9, 
   3.7852507638104935`*^9}, {3.785253091532304*^9, 3.785253138847148*^9}, {
   3.7852531795009995`*^9, 3.7852531822852845`*^9}, {3.78525322760236*^9, 
   3.7852532347079835`*^9}, {3.785253269736401*^9, 3.7852533186729493`*^9}, {
   3.7852533499356813`*^9, 3.7852533536194243`*^9}, {3.7852534684496627`*^9, 
   3.7852534710220785`*^9}, {3.7852535409719725`*^9, 3.785253541682535*^9}, {
   3.7852537363906927`*^9, 3.7852537365316057`*^9}, 3.785254209543125*^9, 
   3.785254249221677*^9, {3.7852618005450153`*^9, 3.7852618049458847`*^9}, {
   3.7852619352877183`*^9, 3.7852619378303013`*^9}, {3.785262049200818*^9, 
   3.7852620500145736`*^9}, {3.785262103253174*^9, 3.7852621096136494`*^9}, {
   3.785263447209785*^9, 3.7852634489854174`*^9}, 3.7852635401829467`*^9, {
   3.78526380795971*^9, 3.785263833479515*^9}, {3.785264076495087*^9, 
   3.7852640857027893`*^9}, {3.7852681432932625`*^9, 3.7852681474119186`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"b8b499bb-9d2f-4be1-820a-74f2d72ede84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"wing", " ", "params", " ", "r1h"}], ",", 
    RowBox[{
     RowBox[{"r2h", " ", "from", " ", "Chen", 
      RowBox[{"(", "2016", ")"}]}], ":", " ", 
     RowBox[{"see", " ", "the", " ", "\"\<incorporate R\>\"", " ", 
      RowBox[{"notes", ".", " ", "N"}], " ", "is", " ", "from", " ", "the", 
      " ", "julia", " ", "traj", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"just", " ", "used", " ", "to", " ", "map", " ", "dt"}], 
        ")"}], "."}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"paramsFixed", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ko", "\[Rule]", "0.55"}], ",", 
       RowBox[{"ma", "\[Rule]", "6"}], ",", 
       RowBox[{"ka", "\[Rule]", "150"}], ",", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["r", "^"], "1"], "\[Rule]", "0.49"}], ",", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["r", "^"], "2"], "\[Rule]", "0.551"}], ",", 
       RowBox[{"\[Epsilon]aero", "\[Rule]", "0.001"}], ",", 
       RowBox[{"CDmax", "\[Rule]", "3.4"}], ",", 
       RowBox[{"CLmax", "\[Rule]", "1.8"}], ",", 
       RowBox[{"CD0", "\[Rule]", "0.4"}], ",", 
       RowBox[{"\[Rho]", "\[Rule]", 
        RowBox[{"1.225", "*", "0.001"}]}], ",", 
       RowBox[{"\[Gamma]", "\[Rule]", "0.5"}], ",", 
       RowBox[{"Ndt", "\[Rule]", "45"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"paramsOpt", "=", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "cbar", ",", "\[Tau]1", ",", "mwing", ",", "k\[Psi]", ",", "b\[Psi]", 
         ",", "\[Tau]2", ",", "Aw", ",", "dt"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "4.928", ",", " ", "15.98", ",", " ", "0.971", ",", " ", "26.653", 
         ",", " ", "19.792", ",", " ", "31.959", ",", " ", "97.113", ",", " ",
          "0.087"}], "}"}]}], 
      RowBox[{"(*", 
       RowBox[{"{", 
        RowBox[{
        "4.928", ",", " ", "15.98", ",", " ", "0.971", ",", " ", "26", ",", 
         "0.1", ",", " ", "31.959", ",", " ", "97.113", ",", " ", "0.087"}], 
        "}"}], "*)"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"paramsFixed", ",", "paramsOpt"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eomsp", "=", 
     RowBox[{"eoms", "/.", "params"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"other", " ", "stuff"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ic3", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Phi]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Psi]", "[", "0", "]"}], "\[Equal]", "0.01"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "'"}], "[", "0", "]"}], "\[Equal]", "0.01"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"c1", "=", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", "\[Rule]", 
        RowBox[{"0.08", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[Pi]", " ", "130", "t"}], "]"}]}]}], "}"}]}], ";"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "c2", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"c2", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"freq", "=", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"Ndt", "*", "dt"}], ")"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Tau]act", "\[Rule]", 
        RowBox[{"75", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", "\[Pi]", " ", "freq", " ", "t"}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Make", " ", "sure", " ", "reasonable"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eomsfinal", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{"eomsp", ",", "ic3"}], "]"}], "/.", 
       RowBox[{"c2", "[", "]"}]}], "/.", "params"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"eomsfinal", "/.", 
      RowBox[{"Thread", "[", 
       RowBox[{"q", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.3", ",", "0.2"}], "}"}]}], "]"}]}], "/.", 
     RowBox[{"Thread", "[", 
      RowBox[{"dq", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", "0.1"}], "}"}]}], "]"}]}], "*)"}], "\n", 
   RowBox[{"(*", "Sim", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tf", "=", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"First", "@", 
      RowBox[{"NDSolve", "[", 
       RowBox[{"eomsfinal", ",", "q", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tf"}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"sol", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"dq", "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"q", "/.", "sol"}], ",", "t"}], "]"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"sol", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"ddq", "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"dq", "/.", "sol"}], ",", "t"}], "]"}]}], "]"}]}], "]"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sols", "=", 
     RowBox[{"{", "sol", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Nn", "=", 
     RowBox[{"Length", "@", "sols"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"plotTrajs", "[", 
      RowBox[{"sol", ",", 
       RowBox[{"tf", "-", "2.7"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"debugComponentsPlot", "[", 
      RowBox[{"sol", ",", 
       RowBox[{"tf", "-", "2.7"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Legended", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Phi]", "[", "t", "]"}], ",", 
                 RowBox[{"\[Psi]", "[", "t", "]"}]}], "}"}], "/.", 
               RowBox[{"sols", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ",", 
              RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "Nn"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\[Phi]", ",", "\[Psi]"}], "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Legended", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], ",", 
                 RowBox[{"\[Psi]", "[", "t", "]"}]}], "}"}], "/.", 
               RowBox[{"sols", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ",", 
              RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "Nn"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Phi]", "'"}], ",", "\[Psi]"}], "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Show", "@", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{",", 
            RowBox[{"{", 
             RowBox[{"soli", ",", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"sols3", ",", "sols4", ",", "sols5"}], "}"}], "}"}]}],
              "}"}]}], "]"}]}], ","}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Animate", "[", 
        RowBox[{
         RowBox[{"drawWing", "[", 
          RowBox[{
           RowBox[{"sols", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "a"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "0", ",", "tf"}], "}"}], ",", 
         RowBox[{"AnimationRepetitions", "\[Rule]", "1"}], ",", 
         RowBox[{"DefaultDuration", "\[Rule]", "tf"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.785163733169914*^9, 3.785163768788862*^9}, {
   3.7851638219331465`*^9, 3.7851638221495667`*^9}, {3.7851638575914416`*^9, 
   3.7851638656639175`*^9}, {3.785163952461292*^9, 3.785163959194874*^9}, {
   3.785181113450061*^9, 3.7851811849114933`*^9}, {3.785181223420051*^9, 
   3.7851814480879383`*^9}, {3.7851815284493275`*^9, 3.785181574334261*^9}, {
   3.785181607927892*^9, 3.7851818562133703`*^9}, {3.785181897023181*^9, 
   3.785181973204109*^9}, {3.7851820183846817`*^9, 3.785182035584442*^9}, {
   3.785182130927059*^9, 3.7851822788151007`*^9}, {3.785182768706132*^9, 
   3.785182824611698*^9}, {3.7851835377984476`*^9, 3.7851835381465435`*^9}, {
   3.785183574632366*^9, 3.7851838963880434`*^9}, {3.785183935005065*^9, 
   3.78518393938645*^9}, {3.7852369154777946`*^9, 3.7852369276973515`*^9}, {
   3.785237068661893*^9, 3.785237159502931*^9}, {3.7852390830870667`*^9, 
   3.785239105554223*^9}, {3.785239223653453*^9, 3.785239230566188*^9}, {
   3.785239332872146*^9, 3.7852394831645365`*^9}, {3.785239522904046*^9, 
   3.785239527846*^9}, {3.785239574459278*^9, 3.785239590976102*^9}, {
   3.785239663394473*^9, 3.785239765859336*^9}, {3.785239822253582*^9, 
   3.785239852287075*^9}, {3.7852411853333817`*^9, 3.7852412095104837`*^9}, {
   3.7852412747392893`*^9, 3.785241284555241*^9}, {3.785242577855811*^9, 
   3.7852426072696886`*^9}, {3.785242760532243*^9, 3.785242764687683*^9}, {
   3.785243042341342*^9, 3.785243082387663*^9}, {3.78524369984238*^9, 
   3.7852437033492184`*^9}, {3.785243878758131*^9, 3.7852438818282394`*^9}, {
   3.785250588656488*^9, 3.785250591357007*^9}, {3.7852507564570065`*^9, 
   3.7852507638104935`*^9}, {3.785253091532304*^9, 3.785253138847148*^9}, {
   3.7852531795009995`*^9, 3.7852531822852845`*^9}, {3.78525322760236*^9, 
   3.7852532347079835`*^9}, {3.785253269736401*^9, 3.7852533186729493`*^9}, {
   3.7852533499356813`*^9, 3.7852533536194243`*^9}, {3.7852534684496627`*^9, 
   3.7852534710220785`*^9}, {3.7852535409719725`*^9, 3.785253541682535*^9}, {
   3.7852537363906927`*^9, 3.7852537365316057`*^9}, 3.785254209543125*^9, 
   3.785254249221677*^9, {3.7852618005450153`*^9, 3.7852618049458847`*^9}, {
   3.7852619352877183`*^9, 3.7852619378303013`*^9}, {3.785262049200818*^9, 
   3.7852620500145736`*^9}, {3.785262103253174*^9, 3.7852621096136494`*^9}, {
   3.785263447209785*^9, 3.7852634489854174`*^9}, 3.7852635401829467`*^9, {
   3.78526380795971*^9, 3.785263846861192*^9}, {3.7852639620550404`*^9, 
   3.78526398507434*^9}, {3.7852641063890386`*^9, 3.785264110993264*^9}, {
   3.7852641564011707`*^9, 3.7852641571082044`*^9}, {3.7852641960012693`*^9, 
   3.785264216721649*^9}, {3.7852643149914474`*^9, 3.7852643475935354`*^9}, {
   3.7852644069901733`*^9, 3.7852644070928326`*^9}, {3.7852645182904143`*^9, 
   3.7852645377768126`*^9}, {3.7852681182959647`*^9, 3.785268128246215*^9}, 
   3.785269285445484*^9, {3.7852697491566772`*^9, 3.7852697592097054`*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"51dba8ce-d54e-473b-8306-f61498bec997"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$44049#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{23.385, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\[Phi]", TraditionalForm],
    PlotRange->{{23.385, 27.3}, {-0.13954432105856945`, 0.14068142315013465`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
FVRwYm8FkkwP4AvAXpHzFG5tqUD/AyYkbeI=
         "]]},
       Annotation[#, "Charting`Private`Tag$44096#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{23.385, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\[Psi]", TraditionalForm],
    PlotRange->{{23.385, 27.3}, {-0.23416890001384102`, 0.23410242016024024`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
E0LvmS5LWUuHmw1GVzy2M+GL3qGfkiZ0yApZfPaLORNOrNsvk3acDs42d201
LZhwWtuLj8udDhprmXR/tNg77nvmnnTIa3UbFbdkwqHb0hV5Z+jwUqfhuPkO
JrgK/eTciqRDAM+JzYnogGdNNMcYOqzr4FUaQHdfl9wlG0sHKpzdecEK65mS
EGAdT4eqL2l7inYywdLBMnY4gw5Rzzj6fLuY8ObxqJHqAzqYX2oStkGrPkvd
avaQDnWGfNVjaK7lIdkHn9KhPdpzg8YeJkRvaRC8V0yHZAf+VWfQF5bcrdlM
0uEQI2P2DVo0fexHUxkdenpaXjrsZcKf9f9WlVbS4SeL0L5tzYRq76SDeTV0
0KKscobQfAtD/t/r6OBh6qhqYsOEKFWhWP5GOozsCpP/iY7cEnlPqJUOem23
EglbfB7Xmru/2+hwyv7BihvoKyUrLxd20GHcrVrIeB8Txj5rbxL6Sgejsc9R
19ApR88vi++ig++ZYd5+9CGNsTd8PVjP+YVQ9n6c90ciPk7f6DB1UXThCvpu
1pUVj3rpwFqmdPYb+vr4prwvfVjva4aTjANM6IvUXzfVT4ciSVPvGLTXnsCy
2e90mL1j87sLXWpwgvg5QAdjZRc3IzsmqHecflnxgw5BOQHfL6H/lWtphg/S
gdSNOdKJDlxumaz/kw5cL+981T/IhNuxRQLv0BuMHx+IQBeGBQZt+0WH0Aqq
pQNNf1ry5xm6Ylv9bt1DTOjUqfNYOkSHxbXfai6iFZ21x0zRm63/mrWhA/96
nT+JDv/MW7XWngnrrh9cGYp+6yi1KRT9cElrVRB66Q91qhldJjQUeQy97SRn
neZhXO+mj/Z0dNRf81fB6Cein6xG8f3VZw8ZNqIbr7nY30IL0DyfqDkwQSZ0
/VUVtEVkiNY5tJm6SO9d/J4rQtcf1KHdTCodaOiaGxnKqo6Yb/3uAlZYDxHZ
gtQA9H0/w4EIrNfOtLcra9BukV7/srGecWvaEpSOMGF1VfKmAqy3uOFs7Ac0
z409SZdxf/YWCgquPsqEs+vDn9ji/t2CVZdOoxdUR8SEcH+lLExC5I9hPn4j
GhnYD/sads+dQstoDBjndtIhcd8x/7focScL/mVf6LDSKdLL04kJWTm2PRHY
bwd/3R56jbZI6PiX2UKHu6ceukgfZ0K9TFN0XhMdFII/OZSjVR46MYOxnx14
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
+gP6+tPmtg73EfJ/kPghvw==
         "]]},
       Annotation[#, "Charting`Private`Tag$44143#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{23.385, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"FL [mg]\"", TraditionalForm],
    PlotRange->{{23.385, 27.3}, {-2.362408123506689, 22.927766583295337`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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

         "]]},
       Annotation[#, "Charting`Private`Tag$44190#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{23.385, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"FDx [mg]\"", TraditionalForm],
    PlotRange->{{23.385, 27.3}, {-119.93870380723244`, 120.7407551648144}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV13k8VdsXAHAhQslURMmQDJFIXece1aJM955jjmcKRUKUimRMZZYUpSdF
KklpEErEJok0mKIUlVSKpOH1PJTf+v11P9/PvWfvvfZea+17VDfvcPATFBAQ
8JkhIPD/zzjl/Z5HNnNAdXWEqaobC78OgWQ/+tWYeU+OKwshwwJ1uls4YDP7
13chtMfteJWHaIMYpb4aFxa6lM3aFXw5YDZ7cY0Ymp8geMAfvXWHqhnjzALX
4eA7YT8OZCTTvmVOLJTdXp/tiJ7o6ZfqdmRBe7GweSH6r+UnE746sKAwcqho
3VYOVCZ5DwnZ43oSEgMi/TlwitRG3mRwPSMWii3o81vTbBP5LLx3EG2V38aB
Tw3py215uJ7FyboV6I0Nq3XvWbJwoyrl69cADjy9sHHOKjMWtFR4BWsDOVAr
Oa5YBSwUJIrbH0Y/EH6xZ+U6FjIc08p0gjiQ47FxuYQJC9u/pIf5befA7kOC
zTarWBh0ZJeWo2eZ5qslr2TB/c6cHsFgDozebVhVacACLynDuAA9YJbRN6bH
gqZq5mRvCAemq2tzBzRYOJNkd0V7BweuyimqNqqzMH9UyjMC3VXXM/eUKgvC
1Udr5+3kwBId31jtRSwMOGXF24VyQMlgkWirLAtu1Y6G+egU9yGOmzQL7apy
776gKwXe738tyQIZzd6QtosDziedbz4Sw/mST4g27eaAlQh/htE0A641fx+m
wzFeN8dI6yEG7DrbX2WiP7q4SQu9Z8Dis5juB/SMC7xzZW8ZMFSIfJi5lwNS
Wzs1f/YyMHuPm+iHCA58mV1988UjBmqXKcVnRmH+RDuu9r3KQLmZY9t79Muh
94+8SxgocU1bTEdzQDIgbdC+iIGcpMm779GzZ3ztlT7DwM53Lye4sRzwMl9c
J36YAbVTeXve7+fApKe6yddtDCiUdd3jxnNAnNj20L4MSLbMls1E6/a9FYz1
YmDyV/QN7gEOLDSctnm3kYEuB8/RIwc5IC1sf3SlGQOJ4srbuIkc+EVfocsV
GBjel+9+JA3jMYheseUuH9ykTgq9RtfbFeysucWH5qLMy8vTOXBu8YDAnDI+
nO+Mn3yMHvfodswu4sMmPd9TszM4UO4kf2zNET60vdF6mZKJ+dF/99rIJj5U
Wpa5HTrOAYu7opEu//JgSX+JYBf6hbremqwxHmTtOVeifoIDBz3+S2v6xIOd
Z7MnGtCGvCoxuVc80J4Mz51xkgMn+5cbMoQHeVfp3thcDhzd8/nk2iQexM+7
77ovnwMtq/dGdUjyoI6uDn2ATkwujFsmyoPfPjdS5hXg+TkX1UVPW8O+q6er
bqAPCh3QmjVmDaGW4Qs+n8V88UqRaWyzBp99mi/cznPAZQf368tMazDtS/nL
5BIHCpOfx5+XsMY8sHGZLsN4LgrE/DdsCbVRNXOcbmL+har+aHhrCZEOOo3F
6EavXTIJPZbwc3qmgUM5B3rHh/tGGyxhyO2u+IUKDjxeGTH819+W8FRKt5Z3
mwM6Uea6Ixss4XS0mMaJuxzQO/hbePSEBVBOjd91m3H+Tal3ipaaQ9hb19qx
lxyQ+eGspUqbQUDGS02PbxyQ5a3sjj61Bqz06zO3iBjD+Z+aIRZpq0HnapP2
DEVjyJ5YkbPilD40Mre9LfSNwXZm6gGvURXY3NLyQHW9MaiwWxIFJCfXDVPr
lv/tbAxm/tnjWbQs0X1YYHg7yBi6E+Xd7Sw1Saixmn9wnDFMPC+yHa83IMFN
R6iH2cagttdP2VLGmDhZ+Ujcu2QM/bYyLYNDa8i6Yoc5DneNwSX5dXnwflMy
oLmiNLnDGOy+21u4SW4gKQl6MRs/GIPIxyyHf7gW5KOg/HDLpDFQp2ujLF2s
yIo9vn/1SlFQJXNJ9LcGjwRr937XkqZAiC1fydHlkZJ+28N70Qn310cHG/KI
hjXdICdDAUe3w+vJWh5RVJbRtZWlQDfrrZuPC48INddN35tHQcrUoV2tSTzS
raR0sVSRgmc/fCpL3vOIbHum6RR6Kavybeswj9glirziKVGQ6Renv/gbj7SO
fZMaQrdKC5UfnOIRcr85Um0RBSEnNzYtlOWTkh3hNjmLKTggf8snYx2fxNxr
/2f/EgqOhmflBx3nE6523fJudF2qouX8U3zyK+OK/zINCoyXi/9TXcAnIW5J
L56h36rL7Rm/zCebvpnc1dHE+Y0CQlY38MnaxcWHurQpmJVa09byhU8EomJl
tfQp0JNJ1w80ZUjNmyAmBp1iE+gRY8GQCAvXhA70Wj2duel8hoxJG/0bvYKC
dJmPS9w3MuRN8afedgMKEtW/lk5tY0h9t1NhlBEFMSXx7x4cZkisidnLNnRP
TO0KmWMM4Rbqyy1dRUHy4pEM1xMMKQsWT2xDn6wMTXl5hiGFwiRAg0PBK9LZ
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
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$44247, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$44247#1"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV13c4le8bAHC0jOyMKDPjnPO+lJTznlfcRpIVGkqoNAiRlqKMpBRFQpKi
hEglRb6l47E1haYkiQoNVLTkd//+cn0u13nGvZ5ztH1D3DeKiYiIZIiKiPz/
b5RGtHeSrxkstjyxtfczBSMHQKYT7b5YP0Wrn4LgAZEqar0ZmFYkRy97T4FX
RYzWPfT94E8N+Z0UCNxj303caAZpsx1kfzzCz8cd3BzuZwbVW4TWzBUKgj4n
7twYZAbeaxYu2eRHQc9SZ/0b6LZ87+JKXwpW35J+LrbFDNJthcNSPhQ4HDrG
z0HXvthnmbaMAgPt5D/twWaw1zx+xN2Kgu5lJ2JcQ81AZsam5ojpFKyqPHWU
3WUG79yDnBLqeODa1tKRjB6JXLfhsJAHdv0S1Hu00rk3S6MqeGCiGn4vOcwM
7NJnE/diHkzd4Tnl/W4zmFTePXbyBA+EPPWY5AgzeOrnm35mLQ90Tmft6I02
g6iNTpzz37kwsCd7dVKCGfQ+ui4rNokLnnIZE96gPyscHU0c40BTfvIlo0Qz
KAiQmCc/woELbTF/HqKTlrZUTPrAAR96w+mpx8xAWnylenYTBx53Gb46nGwG
05Yflks7woHyRaWeB9LMwC+w2ylLggMxSvWr9mTjemINwSe+G4BonovHeCnm
48SVW4lJesAsqxummswg1UBlu2yGDux8u0o4+MoMltZb2nrLaMLmY68MvIYw
X5++ax7rVgF74+rk9ZP5oCNSnhQWKgfcKw0cUTU+9KUkBrQcFIM6p4q1dsZ8
mD2HYRMynlr63r3bqG3Dh7/OAuMr+j+rBhhLo1Mr+NB78tHufyskCXUvx6Qi
kA8L2Dci1UXTSChfx29LFB8iBUvPFC5TJ1sakph7qXx4/PtztLekNllmv06q
tpAPwpqp9iJys4jlRXdp9zt8qF/u+HX8hD6x0Gj9kI8eO6Z8ef5ZfWKe6lbz
B73qiAPjd1GfCKJdw/KEfKj9OaO0rFKfmK50efuzig+enRLtU3r1iaG4Q1l2
DR++zYoojjQ1IHL+Vt6fG/lgoR85mPvIgHQbzL4c38qHL/e9WYuvhmTlzK1d
z9FWInFDVqOGpFmhRNGgDc9jt6TMctyQVI4Zh9ejfylxfDiyHHKyzXiR2FM+
fIAb4zeMOMQpyvhtxHM+JK/teXUpiEPKnxkphXTwYZ2Ii6hUD4dQD4LthehN
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
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$44247, {2}}]& ], 
          Annotation[#, "Charting`Private`Tag$44247#2"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV13c8V/8XB3Arq8hMUbI+18zI+Kx034TsUJE0NWxJSsmmUlQIRfaMJClS
yb0kI5RRyAhll75WyMjv/P7h8Xx8Hu7n3vN+nXMuacdzNmfYWFhYnsKP//8O
kgw+eteRitzcd2td4h8j5sMR/zewnerCzFO3McLzJwuhcoqKlN5OCcQ3jBFH
ykOkPoCDPLp2nLgxTjBswn5wnKGi24d0BaZ5fxLz1667+DlRUYOucNVzjd+E
+2TUxTPuVLR/hOmZETBDDO23wF6Ahy2P+6aVzRAOr/k62TyoyF6L1XPyvxnC
9MYdWjr4547NBpdPzRLy0tHL3Z5wP1Tpk3ss54jvB+6FWJ2nIsbrV6n+O+cJ
+4rE28xLVFQb82OwXXOJsGpv7Y0G76+Ialm8ukQYTfCojIA3PJh74V2zROzc
7Pch2peK/I5RBU7bLhMbfA5zjVymokkxISvNwBWiUlkiJPoqFeXIcSlr9v0j
ZB4m+wwHU5EOu1UM/09W8ueVNIe7kVSk3xnZnWXJRYaIvre/kkZF15kER4C+
IMmaY2m3VkJFAU3GI/coYiT9QM2MSj0VfSyuOOnkv430LJhh9Qc3p/SSB+5t
IzNZpAUbwdk2uAGjYBu54UmAmksDFVXt/2k12bmNHFhHdc/5QEWZOaXPp3ZK
khEv84e3NcP9+dEtbEclyU7xu138bVQ0dVXD8pKcFHlx0L5yqoeKHnk3N6+7
KE0qjK25GfVS0X2b6O7FIGmy93fOlmSw9mRQ849b0qTByrTP3j4qOp7yVSkj
XZoUEbulnPqNinq9UnaXN0qTJeavH5gNQr0fPO81l5Ih/3spfiF3hIpEDHj8
y6plyMxKUmoFXMqtqnW7SYa0fX/2o/UoFbn7U3Yd7pAhK9tKFFfB9Xw/+TvH
Zcg7k6YD+8ep6PfBSxmHBWRJFdmrFqy/qCjr9bHqYAdZ0uVOj/yRaSrScFjZ
vzguS/6SCzIsBlPYyg4fmZElvd7InOKYoaKOy1z1pUuy5KUxl9RC8LMPp18a
r5cjw/UXRVZnqUhvr474b2U5Mn1ehC11nopKagPl1NzkyK5jlr39y1S0rzdO
3WZQjjzyZ/qv5goVHTJxfLB/TI7sj4wXiwCHsoadN/lPjhwp77VRX4XvC6DZ
C63KkXNCbg3B/6jITG5IbvNmCilQd6NMmpWGTreUcE2aUUhjtaroU5w0VDmY
55xQQCENDClcJeCeWSfpN08pJO5wM4CFi4YGjPWVv7ygkDo3rF1TwEeb2WXH
KymkXP/gnk5uGqLssqNHt1FIlrtsC6braWhivWVj5wKFXMk+65EIPmxO7d63
QiEXXn/4MQq2fMXL9pYFI3+PxLaEb6Ahm58csZd4MLJ3t2xBJR8NJRQw3M+K
Y+Sr33uO7hSgoaFWp0kdBka+4HjUHgzmLMJOr+liZLH4BtNP4Nx69o8Vehj5
yOizjrsgDX0q/ei9yQQjE1JPC+QKwfMwfOsN7DDS2/Lauy2iNJRVNLcaeR4j
PU+P053BlldpRKYPRrr4WRSXgRNf0m2LfDHyRK5oyv5NNORyT3ctKwAjLf/l
XLotRkNhwrxiPDcxUqmoVpFVnIa+Tyhmv0rByGyfzN224Mk2ZGeVjpHbmYH7
H4N91nt8/ZqJkSL12gEHJWhI4edn4/d5GLk6mN2Sv5WGxhQma1eLMfLyo+Dh
f+B7U+7DSs8xcsbzyNL+bTS0kvvqk2kpRo4sC8v9AxsbD3KeeoWRLaJhvjbb
4X5iPi7PkRhp2nssKg98ZXeLT3k1Rr7PZGSs/N9mLK88azDytdrMh1wpGvp3
5VTW8zqM1Jpv7l8G60b9MtFvwMinFflzVtLw/K37Kt59gOcxOSm5DM5A1evS
mjFSUkBX00qGhhjHs/sWP2JkYsdm4xywxq3bYYYtGHnnVMv5fbI01Ntqv/tl
G0ZyKxVezwZ3nqw72NuOkaFTNx7+Ba+0WqG5zxjpG4C/z5KjIXF97biVDnje
PRLdi+DE8bMsk50Y6c678NuCAtd7ctKwpQuev6WNPQus4fLodO5XOJ/7RZsX
wW6WdcfPdWNk99FbOywwyGv/fppyD0YelDurnwneP/Lrv6/glgk9uwXwihMj
4mov1OvZNndzeRq6ljbJJtCHkTW+f4MzwLtnyZP3wfjuL/HzYOFfvrmC36B+
HM8KzBRoqEGlvy0QrNUYRaQr/P9+msa+gYtinD//AR88Kjmh0Y+RiocMxk0V
aailpqLLF5wtKfUvDcxn86CsGCw5vCz0B/wsp+BaL/jB4055UyUamjKc37sM
FvZ+visNzJFwfW3DANSXdtd6DlzYfK5IEMy95nrWRJmG0qY+2vKAQ98bXU0F
q9Q2LM3C369EykTPgutb7iS3gi/Z/Ms2VqGh54YHd2eCpzd3v0oBP+I4+v0M
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
d0cIweyLjU1glu91MvNzI8T/AP0xU6Q=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$44247, {3}}]& ], 
          Annotation[#, "Charting`Private`Tag$44247#3"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$44247, {4}}]& ], 
          Annotation[#, "Charting`Private`Tag$44247#4"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {23.385, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {23.385, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{23.385, 27.3}, {-58.75389848624934, 58.70413988465976}},
        PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"i\"", "\"g\"", "\"aero\"", "\"act\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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

             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$44326, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$44326#1"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
Y82D44IwN+P4i3p026FMv1+UEPwH9cBQWw==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$44326, {2}}]& ], 
          Annotation[#, "Charting`Private`Tag$44326#2"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV1nc8Vu8bB3DzeZSMMpKVvbOSZ8W5szLLlhQpZSYrlTJDkpCMVFa2Sr6K
JDmHiBSFolT2KFRG2fK7fv/wer9e5znn3Pd9XZ/rSB4/Y32ShYmJqQj+/P9/
uHjE0aTjFBRXOUvnymzFF6IRdz/4vV5pr9RSK+47xYSrnKCgI6+T18ccXuNH
aiIl2sDoS0Bq4I42nG59eYTtJAWVJ6pdu1fwBl+IifUMcacgKy1tgvlLB+7z
M+HsSR8K+j2weyltuAsftbGQewIeGZYSyRXtxp1quXpZTlPQN3uplRX7btz0
SiI1F2y/NMx27203Li+ZvNrnS0F5pvhY+fMP+LDtzUhLfwqy7uQKSyrpwR3r
Mq8zguF9VYeNnz3vwy27O78mg0e3cuzfwf4FN5rcpDIOVrs+P9tx4AuuKRTS
lnyOgl44ey/TRr7gW4IOk8fPU9Ap7fOjbLzf8HplkcjkixSkdTtOQfTCAC51
527QWAQF2UTwP7bXH8anLuQ4JV2jII7B7Q8D6ybwSIFmxws5FOS1rKK1O2kW
Zy484LBRSUHr29V2f4pfxGm2TXMqrRS0EjPY7Lu+jp8dcqyf+UJBq6SCXcmN
zITC9w1vo68UpIMSiol2ZuLrr8Idd8En5WW0fnxiJgzWZoP2f6OgxPM+plK/
mQn+7fHK2f0UZLx/z4SmCAtRaV57y2wI3v+z4EqjPwvx+6lwYNE4BUVrr44b
CLES9+oJiTWw9Z5jt52lWAn75lMdVhMU9Onulte+KqxEfVel4jp4X56ydwBi
JRJ/mg7a/KCg04ewPHYPVkJF+qIF8zQFfRbfwWxTxUp4Jn6RPzJLQRniIgkU
YzZiWibcsAK8q2Ls8LAlG+H3XOoE2xzs3xj1SZQjGxH83TP7Afh1rP94vhcb
Ea23xL8+T0EXQ44EuiewEbkL/CzZCxQktyErMdXORnxyPvB1YJWCqrfhzmXG
7MSRv7PLu9co6Gbw+6CFg+zEwLW07XFgu64IAYoDOzFe89VafZ2CbvdG9KSd
ZCf+bPN+HfGPggoXmf1bI9kJ3pYr1ZLMVIRfI62uPGUnjNUakk+QqOh6Xm+m
jwiJMDCUJVeCU5hZhD9LkAjM6WooE5mKvnNs/kOXIxHaV6y8ssBd18sL+tVJ
hMzAkH4vBxVNmZyKKjQkEUxJLIumnFRUa/g3ZddpErFWcOp0JjiuhIz/9CcR
i7VtIxPgULIXe34wifg1nvI+egsVabW8+zAdTiK+6kqX1XNRkSL1seL6DRLx
7Jf+UU1eKuKJOiPF/YREPGEr6Y4AH+QqShGvIREVwltM34ErOWJ/S9eRiBKj
D9o+W+H5P6fcuJpIRHq2G2/RNioqUC5ZPNxNIgIOxLzcIUBFe3j25PX/JhG+
bj9oHmBNafbqvfMkwjPEoqIafLz3/o2kBRJxrEggy0aQiho8t6fxrZOIA/8K
g69vp6Kwj73pqZvIhFL5K0VmYSrquJttfUGCTBQE3dO1Bz9+zMR3RJpM7GSE
2dwHX21Pj9WQIxP8rXtC7USoqLDdLuqJMplYHyp4XypKRQFDkveFtcnE+ZKI
sX/gMyL9IylUMjHne2TFRoyKNrm2vlqnk4nxVT6Zf+BVe/cr9zEy8V7g8jnr
nVQUIfX2yyljMmH61TmhGHxAttwiyJRMNN+j562B5f33nwgyJxO1anNtRRJU
tJVN9py5JZnQWmgfWAX7kA2DZKzJxKO60j+WklQU+7J7228bWI+Jq/gqeCfH
Cc0jDmRCnFdnt6UUFYmwPa/8d4hMZPYIGReCrVpru28eJhOJJ977H5Smoov9
D5fTjpKJc6FYc74MFV2atRtbPg7r0RfpWwKPJ2SFaLiRCZ/Ni78sZKmI9P18
ldNJMnEso1xoCdwZu3VnnDuZ6Dsav8tCDs5H9sLBeA8yYSdzSu8emFvltUK4
J6z3PzEfc3kqYv715TPyJhNN55Yj8sCfd6U85vIhE5jux7QFsGH3dno7uJbt
vzIzBSpimIf6hp+G9b9JwHPBGlxfrWR8yUT5DY8Pf8H/4u3HnoMVDxn8MFWk
or9aQkpGZ2A/xCX+5YC/+tpJvgSLj61u+wvees3sraYfmbh1v1feVImKMpuQ
ShqYL+Dx3hywNS1abxKcSE2y+gNWHj3Nq+lPJjg2vE6ZKMN5ZThn+ICjmo0u
ZoPPL+CfMsFr16SS58EH/dl6noGDrf8VGKtQUZ5OcfJb8KxQ37Ms8IyVyuYu
sM9AVccc+ImLhEEbeLzwxsj+XVRk5yKAqsDHfE4v3QUX2aj8SwH3aZpwzYGz
jLrCT4Btl2Wk9qtCPQV2t8iB3+FMlLtgOxaWz1/h/U1jv5rNgr039lTHgJvM
a44ZqVGRi43FcUlwdYptRxp4y2xi91PYn9JPM4wxsNH+82164Lvi10u11OH3
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
EjpAErHeqk9He5aLT/21IaGm+D6yK/h9j7Ot+0ESenTTMZDJAPaP+l5slxEJ
xRY6mGKGdGQ96rZl324S2vPaZqluP6z3w4uwJE4SSuE1t60xh/7r3xcy84Qd
caRxbuawoKOshwE07UfsKGzHG9wBHOXrUhZQyo48pUyVF8HGmuTad1kwT7WM
WbQP0tFo0ZSuCMz3Xw4GFY+t6MjuUmfPui07MsvZu+WRPcxLra5EqWk2lPx4
WWMdLMWQEfcdY0M9LdUOZg5Qzyfcb/zXz4aOzajnT4D3GI7pSnSyoeB9snQJ
Rzri75IMyqpiQ/dGuDxuONFRfF04Egtlg++hgZeBx+hINJHEfoLEhkorIi9S
vaC+DmwuK2ZlRb5nq7Hr4JFltUXvFRakSZ9iHQZb6WeMKcyyoNqXtgnXvKGe
glPbE/pZ0Nse+ax+H+g3p/jh9RoW9GutvT76DNT719C9iT4sCL5mWTqD6Ois
6IPfFR3MCB+qjPMMpyOZsUfBFpFM6NMM6yv1m3RkeyU7+HnrKla6c19eTgkd
sUweev/m21/spN7wxbIXUO8tLJwKsjOYrH5+rFknHZ7bGZjvOo4VLRqW5oLb
q7LeidHGMYUH39/8BV913RJawTuOqQiobs3toqPeK0WBO4kxTGui5s6fbsh3
431HFCTGMP1rHRVZPXT0qtzIbPPYCObavdz3+wu8f+TGG5XLQ9jwlbvrBl/p
qDJUcp3JeQhz24tJ3AZ/zkjMmKMOYR6F0ScNvtGRy3B1kervQczvHM/MrX74
niEUw7mPDmLhIrLsekN0lPR4d4N4aD+WdcJSLXUc8vRZW5Lx7j4sPeNx2cj4
//uXNdP472cs+Y2g3O4JOpL+fs0g+ulnLHr3N9EucE6dZtCjvZ8xH1avzbw/
6CjE+PfrLyafsL35l8euTcHvx86HEWd6sL7h6juXZ+iIqf47ZjvVhX0QFN7e
DRZZbdjEqOrCOkxDU6Rm6Wja5DLuFt6FNVbqX20A232X7Yjk78LKot4Hb8zR
kZIIW9L3fZ3YBalJq4t/Yf4+u1mqYfMOEzouxhG4AvO977fjqtNrbFg2bJ4A
t7Hw3hJjfY3d/9Hfz71KR+lNB2zay1oxXf/cqjLw+8M1eM9qC3YyQvrE8Bod
Lb2V+3Cn4BVWma1Yb7UBeRDktYy2NmGXjseX5oB5Ym003RteYoZyU6k/wV/i
W+okAl5inx4+8L7KxEDlCW/VDn5sxP7Vqe1oYGagevX7R/PvNWBmX/YEqbMx
kJ+IvPt0ZT3Gn5PuEgY2WH3iuCBbj/UfXzR9C/7YWjutcfsFFjBZI+nBzkD8
i4Z3UGwddmuZ8S6HxEDWpwsvd/jUYqPb9ZR4NjFQ/+sTHjpB1Vj5l3sCR8Em
unbBj1aqsHM5rMz3wYdnIn2ORlVhm+Wbe402M1Bz+tWrZ9KeYBraxjFhnAwU
vutDfmhbJRZme2DwJxcDcT4pi00aKsdetcp56XEz0EnOggkX9nKMR2djPh0s
kM96TVXlIZYrWwFDnYGikqrc30bdxxoXtqql8DJQbNxUgaZtCbbZe7JmHCxS
cMxWLLkYsxlo1GNsZaAFduuyre+KsNGWQPtR8A02905R+0KMlPkxVJuPgZK4
DAxG4u5hB7jKydfAAnmKZ/Z9y8MyImNvDIC3zWkKPNHKwxS8KIVx/AzEXOgs
XfM5BzNlZL7tE2Cgof1/ydVsd7CUR/72aoIMNPr+aA7LQCb2Rdp08DI4ZiSl
IgG/hflsWZ1X2c5AdodOK564mY5d/3ZEJFyIgTR2LucfjU3Beqz2FHaDn/d7
XuhLuYGJv+JSU9jBQNNH/WVLCpOx8vJ6vU5wg9ezirC669iCVMZbWWEGMtO0
WxXmSMCwjDP2IeBjyx99vI/FY+/DJbykRRjogLT+GzrlCib0Z2n+HPjkh/S8
xqoYzNWjM/QtmCn3oT/vvmhszjLqxllRBgoYcjrGExaJ0ZsPi7SBJ06PCbxW
i8Au03YXiosxkOlBs/HHX0MxfqnRmhbw6bnuJmmZC9iR9Do9UXHY729EYNSv
YKxwc9pbP/BAH3NcRVcQpj1vOLhjJwOtLBoL3fnuh4W5i3v5gs+JsK91aPli
LV8W5hvBO6+L0IzeemGHmorJPhIMNKvLuciV4YblUiNuEGAdIo4ztM0V+/Hg
kIiAJANlGhL+PG7OmKakRqEn+M/jW68v3HHEQtI2qdWDC+z4Mu0ZdljjpuGa
bVIM5DbsyvFS3wrjDKvVcwdb2Qr3PPU0w2znUt4+/7+vjgdfFDPE7p7ytueV
hnor9t6/zQjDjhxmo7mA62erRZOuaGNiB7JEysE/Z5Ps9/iqYv37tP+tgZ94
SNjzlUlh2XveDZrJMJB5RsmZ4lg+zFnR4+Vt8JWJ1Gvy3eu6O8WYi36Ao39N
yhZ86NQd5L0dR5VloFsyf2PpeXfqc9l2e18Bd5zqZ/FTn6k/tvTGogcseHfG
2e8IJy457aYuKwf3/+xyE98qhg8PrG8LAotprK+HiSri97rT/zaCY2PkXYxM
duPHW9Q+bZVnoBx5k7L+swxc+nlr7THw4GFbF7V4PXy03DXrEdjwj8S/8G3G
eMG9lfB/4PhVEzl22wO4W/rN4xYKDPRyWe/Y2WJrXDZexfAuWLLzQm9BpD0+
HtosPwUO1ftzLrvmMF7k77yZrshA3k1W4RfMXfBTJxen48CdqyEKeeLHcXnH
5He94BANq5sRzW54CWpMPavEQN9cSh90ZHvhHlpO55rApm6rT806T+OKCn8c
+ZQZ6CyLqLN6ph9exiO38z9w8oJ/nTYKwr1ZcWYmFQaa++3A9kw7GFdZdBg9
AN7/wFM41eA8/rD/auk0WLX5MP+xoku4b5dUAmMXA6W5DBjZr4Thqq+e+8aD
z7un/e6tjMArHv7craAK9bL2YMF032XcLy9W8ByYq+ePKN/taFwjbedyM9hT
ae518r8YvPKSVf0JNQaK84x0eDQZhwf4TeZWgm3G2mlWAfH4brfLl5nVGWj9
vmd+GXsC/sSsyjgHfNjNfyn2YBJeLbyju0+Dgd5OVfiyUG/iwdyVVYqaDNSE
uwXXKaXiFBazW+fBrjpSarbSaXjNj0tHBXdDP10nR4nKZeC1NYMTVloMNG+y
+TF3wB283r5krVUb+i/x+rfHN+7h89dGOCUpDKT3LnfHC4t8XKFBXOQCWDHc
vNqHqwC/qZxGU6RCfdnkHnuRUYh7MEUFX6VBvuVNBoh8KsH5ypxmTPZCv9Vl
lVezVuDGA+kbeeBbX0gfPoZV4GH8Xdwr4AidEa+m1Qr8e5jxrjIdBhpTVUjk
Xv0Pr7fZ47UZY6AXXjUPzHme4B7r3KNt+6Af3B72bk+swbM0Teel9CCfkr+x
Msk9w7vcY1gugv98LV6owJ/hOl2rEsr6DNTmuF3Ie6kW31b8/eg1AwbqTqma
Vg9/gddZNvaa7WcgWR7nXNyvAZ+NWR/PBwtNSYT2tjXgcs+pC6vgcOWh4Q7Z
RvyG7CP+B8YwnyRi+g/3N+KnVu5YbTGF/AkNc/zm2ITfVes95gYu1Iwym6ht
wjvdtvnVgWu5rN60izbje9/FJfqYMVDujV9fVEeacX+2pqwmsKawSVHJ/ld4
EW3jgag5A01tD/Fcf/AK/+pLrwsC+7R6PVXha8G3Fpx98xa870aOhHZIC/4/
SdyzNg==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$44326, {3}}]& ], 
          Annotation[#, "Charting`Private`Tag$44326#3"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxN0FtI03EUB/B5oQteWlaUVuYsM5s2E8n91VC3MOdUbNhqOEmnc02nJbnB
Ep2zJtpKDe3BmkzRSsUyrAexqZnTdAWiL0pWeCkLhuCF9uCFVRD7/g4cDh/O
+b4chuSGQOpMo9GS//a/qfEtz6iVRMTS/pftbqznN8KFVtpgcDYs7tX6WQhH
Cu4sukqJvK5SflsGK5bvK6UKWGRqfBClgq1qY3qtHtYeGBGpjbDT05Qr9h6Y
SjOvBY/BynnRwMosLK+ZDRSvwgmsobrsHWyHT78cDXLygc1JvZnxLFgyPv6B
wYWtVMyZRiEcbGkO682Hi9j+sgINXDBaS1ka4LSELLfhDjimXeAh6IcXAkNf
VE3B1bqQ0stL8E/ng9bxTTi0OOfqZzrlcOnw5O/yE3BFGPPsBAXrNW2G18lw
2TvtzvAsOIjBp4tV8My1cJ7PPThmYLdfuRGuo3Nt2jfwj1jDlvcYvFY33yz6
CrsMxitZq7B9bg+vxTXS4R7/kb4+b1jOeSzOC4FntOmGIQ7MN0a7dwvhjlfa
EnYePDjfUyXXEPkVl9HQeuL+WFyLsR2WchZKOvvhAG5rJX8SbspOZTUswYck
R3fd2oDL0lLmlj2iHDbk5gvpx+EBYfvW2Dl4Xb/oxoiATw35HlYTrmc+ooLY
8HVahaqagvd1pq/woon9tud3SxzcFJa47s+Bp2Q65xLC56c2/Zhc2Ov5rwz9
BdiU+n6afxFe1W0vtRI++ZZt2yT8MKB7f1cCnLvx5JJ7IvEP1nRmDuHJHK+b
JsLRE1U1Cj5c5GpuMhN+Rtm7jiTBXwojTcWE97YpP34i/AfcowFE
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$44326, {4}}]& ], 
          Annotation[#, "Charting`Private`Tag$44326#4"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {23.385, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {23.385, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{23.385, 27.3}, {-9.415715790757861, 9.41029014354709}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"i\"", "\"g\"", "\"aero\"", "\"act\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$44404, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$44404#1"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
8h9zBgZh
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$44404, {2}}]& ], 
          Annotation[#, "Charting`Private`Tag$44404#2"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJwV13k8VdsXAHAhQslURMmQDJFIXece1aJM955jjmcKRUKUimRMZZYUpSdF
KklpEErEJok0mKIUlVSKpOH1PJTf+v11P9/PvWfvvfZea+17VDfvcPATFBAQ
8JkhIPD/zzjl/Z5HNnNAdXWEqaobC78OgWQ/+tWYeU+OKwshwwJ1uls4YDP7
13chtMfteJWHaIMYpb4aFxa6lM3aFXw5YDZ7cY0Ymp8geMAfvXWHqhnjzALX
4eA7YT8OZCTTvmVOLJTdXp/tiJ7o6ZfqdmRBe7GweSH6r+UnE746sKAwcqho
3VYOVCZ5DwnZ43oSEgMi/TlwitRG3mRwPSMWii3o81vTbBP5LLx3EG2V38aB
Tw3py215uJ7FyboV6I0Nq3XvWbJwoyrl69cADjy9sHHOKjMWtFR4BWsDOVAr
Oa5YBSwUJIrbH0Y/EH6xZ+U6FjIc08p0gjiQ47FxuYQJC9u/pIf5befA7kOC
zTarWBh0ZJeWo2eZ5qslr2TB/c6cHsFgDozebVhVacACLynDuAA9YJbRN6bH
gqZq5mRvCAemq2tzBzRYOJNkd0V7BweuyimqNqqzMH9UyjMC3VXXM/eUKgvC
1Udr5+3kwBId31jtRSwMOGXF24VyQMlgkWirLAtu1Y6G+egU9yGOmzQL7apy
776gKwXe738tyQIZzd6QtosDziedbz4Sw/mST4g27eaAlQh/htE0A641fx+m
wzFeN8dI6yEG7DrbX2WiP7q4SQu9Z8Dis5juB/SMC7xzZW8ZMFSIfJi5lwNS
Wzs1f/YyMHuPm+iHCA58mV1988UjBmqXKcVnRmH+RDuu9r3KQLmZY9t79Muh
94+8SxgocU1bTEdzQDIgbdC+iIGcpMm779GzZ3ztlT7DwM53Lye4sRzwMl9c
J36YAbVTeXve7+fApKe6yddtDCiUdd3jxnNAnNj20L4MSLbMls1E6/a9FYz1
YmDyV/QN7gEOLDSctnm3kYEuB8/RIwc5IC1sf3SlGQOJ4srbuIkc+EVfocsV
GBjel+9+JA3jMYheseUuH9ykTgq9RtfbFeysucWH5qLMy8vTOXBu8YDAnDI+
nO+Mn3yMHvfodswu4sMmPd9TszM4UO4kf2zNET60vdF6mZKJ+dF/99rIJj5U
Wpa5HTrOAYu7opEu//JgSX+JYBf6hbremqwxHmTtOVeifoIDBz3+S2v6xIOd
Z7MnGtCGvCoxuVc80J4Mz51xkgMn+5cbMoQHeVfp3thcDhzd8/nk2iQexM+7
77ovnwMtq/dGdUjyoI6uDn2ATkwujFsmyoPfPjdS5hXg+TkX1UVPW8O+q6er
bqAPCh3QmjVmDaGW4Qs+n8V88UqRaWyzBp99mi/cznPAZQf368tMazDtS/nL
5BIHCpOfx5+XsMY8sHGZLsN4LgrE/DdsCbVRNXOcbmL+har+aHhrCZEOOo3F
6EavXTIJPZbwc3qmgUM5B3rHh/tGGyxhyO2u+IUKDjxeGTH819+W8FRKt5Z3
mwM6Uea6Ixss4XS0mMaJuxzQO/hbePSEBVBOjd91m3H+Tal3ipaaQ9hb19qx
lxyQ+eGspUqbQUDGS02PbxyQ5a3sjj61Bqz06zO3iBjD+Z+aIRZpq0HnapP2
DEVjyJ5YkbPilD40Mre9LfSNwXZm6gGvURXY3NLyQHW9MaiwWxIFJCfXDVPr
lv/tbAxm/tnjWbQs0X1YYHg7yBi6E+Xd7Sw1Saixmn9wnDFMPC+yHa83IMFN
R6iH2cagttdP2VLGmDhZ+Ujcu2QM/bYyLYNDa8i6Yoc5DneNwSX5dXnwflMy
oLmiNLnDGOy+21u4SW4gKQl6MRs/GIPIxyyHf7gW5KOg/HDLpDFQp2ujLF2s
yIo9vn/1SlFQJXNJ9LcGjwRr937XkqZAiC1fydHlkZJ+28N70Qn310cHG/KI
hjXdICdDAUe3w+vJWh5RVJbRtZWlQDfrrZuPC48INddN35tHQcrUoV2tSTzS
raR0sVSRgmc/fCpL3vOIbHum6RR6Kavybeswj9glirziKVGQ6Renv/gbj7SO
fZMaQrdKC5UfnOIRcr85Um0RBSEnNzYtlOWTkh3hNjmLKTggf8snYx2fxNxr
/2f/EgqOhmflBx3nE6523fJudF2qouX8U3zyK+OK/zINCoyXi/9TXcAnIW5J
L56h36rL7Rm/zCebvpnc1dHE+Y0CQlY38MnaxcWHurQpmJVa09byhU8EomJl
tfQp0JNJ1w80ZUjNmyAmBp1iE+gRY8GQCAvXhA70Wj2duel8hoxJG/0bvYKC
dJmPS9w3MuRN8afedgMKEtW/lk5tY0h9t1NhlBEFMSXx7x4cZkisidnLNnRP
TO0KmWMM4Rbqyy1dRUHy4pEM1xMMKQsWT2xDn6wMTXl5hiGFwiRAg0PBK9LZ
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
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$44404, {3}}]& ], 
          Annotation[#, "Charting`Private`Tag$44404#3"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV13c4le8bAHC0jOyMKDPjnPO+lJTznlfcRpIVGkqoNAiRlqKMpBRFQpKi
hEglRb6l47E1haYkiQoNVLTkd//+cn0u13nGvZ5ztH1D3DeKiYiIZIiKiPz/
b5RGtHeSrxkstjyxtfczBSMHQKYT7b5YP0Wrn4LgAZEqar0ZmFYkRy97T4FX
RYzWPfT94E8N+Z0UCNxj303caAZpsx1kfzzCz8cd3BzuZwbVW4TWzBUKgj4n
7twYZAbeaxYu2eRHQc9SZ/0b6LZ87+JKXwpW35J+LrbFDNJthcNSPhQ4HDrG
z0HXvthnmbaMAgPt5D/twWaw1zx+xN2Kgu5lJ2JcQ81AZsam5ojpFKyqPHWU
3WUG79yDnBLqeODa1tKRjB6JXLfhsJAHdv0S1Hu00rk3S6MqeGCiGn4vOcwM
7NJnE/diHkzd4Tnl/W4zmFTePXbyBA+EPPWY5AgzeOrnm35mLQ90Tmft6I02
g6iNTpzz37kwsCd7dVKCGfQ+ui4rNokLnnIZE96gPyscHU0c40BTfvIlo0Qz
KAiQmCc/woELbTF/HqKTlrZUTPrAAR96w+mpx8xAWnylenYTBx53Gb46nGwG
05Yflks7woHyRaWeB9LMwC+w2ylLggMxSvWr9mTjemINwSe+G4BonovHeCnm
48SVW4lJesAsqxummswg1UBlu2yGDux8u0o4+MoMltZb2nrLaMLmY68MvIYw
X5++ax7rVgF74+rk9ZP5oCNSnhQWKgfcKw0cUTU+9KUkBrQcFIM6p4q1dsZ8
mD2HYRMynlr63r3bqG3Dh7/OAuMr+j+rBhhLo1Mr+NB78tHufyskCXUvx6Qi
kA8L2Dci1UXTSChfx29LFB8iBUvPFC5TJ1sakph7qXx4/PtztLekNllmv06q
tpAPwpqp9iJys4jlRXdp9zt8qF/u+HX8hD6x0Gj9kI8eO6Z8ef5ZfWKe6lbz
B73qiAPjd1GfCKJdw/KEfKj9OaO0rFKfmK50efuzig+enRLtU3r1iaG4Q1l2
DR++zYoojjQ1IHL+Vt6fG/lgoR85mPvIgHQbzL4c38qHL/e9WYuvhmTlzK1d
z9FWInFDVqOGpFmhRNGgDc9jt6TMctyQVI4Zh9ejfylxfDiyHHKyzXiR2FM+
fIAb4zeMOMQpyvhtxHM+JK/teXUpiEPKnxkphXTwYZ2Ii6hUD4dQD4LthehN
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
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$44404, {4}}]& ], 
          Annotation[#, "Charting`Private`Tag$44404#4"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {23.385, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {23.385, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{23.385, 27.3}, {-66.98131360559759, 66.867169953935}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"inc\"", "\"ic\"", "\"itot\"", "\"gtot\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
xNhxCN370IVf9BWbrD2hlXghjIFUZx6vvHdsohk+R7gmnIFMs+b2sn42Ect+
MLH2EgM5Nt/4W/6wSfvw7BqtaAbyVqg9EVOkSHS/V9BZ9BXqtqUfiyKW7zr1
OtAvp32y3lIUqa58knsuBs/LbiTt3H8UeRTnfqMrlgH5h9bWCasoEqHXeioi
gQEXXwX1MCOKmK4Auhf969jTknATisxalj2me5UBx22hA2fNKOInfM7tI/pb
5v1JVwuKuPQy25lEBs5GSlb1bqYInL+56nMyA6eC5OJTHSkydUr4x5rrDOy6
O9jJ3UuRfO9TWdFo17YXdS/3UWT5zm2K+ikMdOzlCR7YTxFZDQHhuFQG+nQ+
WtcdosgrpWMNQ+gRaZszWp4UiZTqC113g4FWP1nTKC+K8POW/v2KHvnVHmrg
Q5HxVu9BwzTs71s/U7cep8iDuq70q+ivXJk1YX4UcSsxd/yBnm5u31VwgiI9
GVT7tVsMnOZspHj9KfLc7231SDoDhY/HYoyCKBLmYRJkmsGA+swHeeMzFDHe
m6uXjK6vzVqiH0yRYouLuWaZDOxbNO29NJQid5auu5Fym4HXNv5rr5yniPat
u01j6GDvB5ftLlCkVEVy0vQOA7vV5IMXh1GkbcWQ5TB67N3a9RHhFNmTv/WE
URYDz0J1pbkRFBlkSHoCWlHnT9BHNI9R7F+4y8ARUXd5xUsUCa+bUY5Fx43s
2ZiPltzotvkL+vi6e8LGlymivk0/68o9XM+1dpNNkRR58u7Oq360vt3Mkwa0
wR5xXiYb+39EIE//CkW2H/hi24s+1DdpLBVFkY9fNwfr3GdgtvCiGD+0h3fp
/TC02e6UgFfo3z9V3nWhR45G8qtFUyTkRPScVQ8YePS7/b8TaOGZaa1zaIOL
7p8r0NeCD9i/R29tY/TnxFCEmtd6TjOHgeuHORrr0DkRa3KD0W0Ldjz2RXNF
b3e9Qd8zvPwyHV0TKyag/pCB9yWNQc/R1rL+qwPR4vKzaofRHdcHHNrQwvOo
lIWxFNnPsolQeYT5uVR5vhJ6NLP4ySm09Lyp2SvQp9SVP75EX3GOvsRB8z+8
IkTl4nze92Zy0VGr/3L80KOCHZa6aLlCF+dnaONU7zPq6My1zZGKjxnYoBO3
bjF6ZSW3+Cj6iY9e+Gx0iWnGQD0a/m7b3Y/zM2sSWSSfx0CST/tTgm61Orn2
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

             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$44482, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$44482#1"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
t33Q8B5ey+C8lck7VP8YPf9erYKfD4H/ATJ/eNM=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$44482, {2}}]& ], 
          Annotation[#, "Charting`Private`Tag$44482#2"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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

             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$44482, {3}}]& ], 
          Annotation[#, "Charting`Private`Tag$44482#3"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$44482, {4}}]& ], 
          Annotation[#, "Charting`Private`Tag$44482#4"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {23.385, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {23.385, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{23.385, 27.3}, {-10.791470762674916`, 
        10.787887039001157`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"inc\"", "\"ic\"", "\"itot\"", "\"gtot\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             FaceForm[
              Opacity[0.3]], 
             RGBColor[0.368417, 0.506779, 0.709798]], 
            LineBox[CompressedData["
1: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
pz5fXM2TiYtKFBs9ZpnQ7j63fYUzE1fKFp1ReMCExVPn5t9aM/GRoM/voT1M
eP18/EvWYb5/rjxuyOcyYCpqlKWozcSUfM7n4/w5PKtz6F3a/+Ir5+fgk0CH
T6tV/otezEQnxcJXc1voYDf9LM/gE/+9thyZnvRFiCYxhLe3MlCp/aaQdgMV
VuUvXLWrZmDxy/IfGa8p/DksptYhjYGlN1OdD/4kQ1nx8ZVv3RmoV6910E+j
Eb6LrLBRnqfj0o1Tbpp8Xqcpl3JTqZuOa11rsmVLSaAw/XKpSBUdi5U2ryPR
iPBz39z4bS86WquHLj84QoCJ8EhDmXzEJP3p6SfaFSD8fPvUgDWi0MSfzlmL
MsC4T8RkAcQhXQPdNI8SOKmc1jpvTcN3aj2hlxMKgFC5fovCKAXFxnLaTQoz
oSJYUnrnbQoKh10vONCUBhVb2+3dNlCw5PBDz56hFPjQLsZxP0HGMpKaGlEp
Fsz/OWtlFjcg/f3CwFimHWYunGKJLKvFy56R8p+tsvHc2xuKZ+JIGK2pGfBG
LwelftINzkqQ0NXZJyFMNQ/vjTm4PJImYsr72XP3hIpwp7n/Voo4ASk/sqy1
Uivx9d+TilkFpXitbENsjkodJlhlhc0nl+BAhUrMTtF6FAyJIAyFFeO161rL
tD/U47iP/KmXJwsxwmPWJqKoEVViLdX1vuXgt3Bng1gRGvZKT9xqXJeMv0wz
Sk/x4374+MNck/5EzIgJbulLY6Kat3pf0/54FKp9XLbjJxNb4NFU6oEo7GDn
JmnXsVBk9V73SUkXXL/T5YmBQjNevSMjt/ZcPDySp29QqWMjrX5pPXUiETo1
BW0NF7VivUl7Zf66ZMgUNKW9PNqKCe3ja+KDU6HKIrTPZbAVhQOeLIqJz4aj
Znftr/H5kc7lA05D2U+hayE9fU6lHddYPT3UXpUDgm4nJtCzHf8d0S6S4+aB
WdGrM7bD7RgkIJ766WMRfF0iPPWtnoNX9W8+UPlcDDoiPW8Y7zl42XmdTPDX
Elib5LSKvY6L/T/J9eu+lMGgaM7Fy1f4/Li4NfvYXDm0Kt/zlsrmopFnWM2p
9xUg+NLmzGgrFzNUDsCodxWsGRRSEJDuwKUryxLDx6pgvc9otYl2B9Jjlnt8
dqqGR50WSLTvQPX4cOut5gQ4Gha2+ePDDlTMnbnchwQwfnFWrY7AX295QkV/
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
fFnBDZ2VkOq9IEen+F7gex0nc38VdKbOCigiifay64+OJVfBWsfC+qw2Eokf
vfEPllbDfK6Q5e6XJGoqHZ93ulENfP5nT3a8JRG86i/1ktWw4LL7nXM3if9x
LmtP2FEDPHlXYpV7SWxeNVxl+7QGXrW5EPyUzSoTYdEHKNvOSl6FGi8adf56
yu5amF3qXZ9BxfNsfjnH7VsLiT6bwmyp9YaDr4p87q0Fw6jGVw8ZJAYdSt93
RLEOuksFqvppJG7K3LdK9FEdfJyZTwmsINHqUvclfVYdlBSK8AfmUPn+vPue
S7weblzc5toXR+UXKHNF0qIetMOr0x4GkvjG+EJPdF49BLqPnrJ/SOIHuVWa
zr/qoaUt8XyJDYnHv4/nlu5vAA27oGItAxJtI5QVT7o3QPpNZa89QOJ1jVV/
VegNkGz79tf9zdR5DlSct+NC+JaYZSAsRKJf8Qn/30cR+kS6ly35j40lB3Ys
Z3ogxRHl0drv2JjqtPHMxzqEv4XZcT8q2ehUqdN95A9lc+8j/4tkozRDIXNy
DQ0U+X8uGNxn4/AVjYJLu2hwYO6+jIQeG7tk/FT8rWiQovHEkbmUjdEnlgdq
edCAEHy3rH6QhYfbvv0nHUUD3X3xlyQqWJhV3vB9eSENzjQd7h/yY2FvYsUy
4WYanGMpSEtcZiFHb+noxh4amGbVtBNKLHzzXmvrmQkaaJ4QLx1YZGKsgH9U
x0qKazaW1XvEMlE4NvrI5k0EBFlo/11mxcT4o2uPBewhwGu9bNgaFSZ2n954
d16DAB7Zb70ZfxnoldJZ7KJHwFulr6r1NAbmZZ0aWzQjIECrSfHyEwbS45mC
z+0IkNK0NArUZuCMe4WUvAsBvcZidmcFGXgns1C2yZuyxewOp7e3oZlpuIJ1
IAFi5svqw4PasO1ekIlIBAFF+a6jG8604egPkXcN8QSoHl46rCfQhh5xk+St
NGq+d+Dw1pZWPFx+wX1DDgH+eiYHcjxakVTPXNldQFB9RvHubrVWvN5iJhZc
QvnLrONrf7agaOr5lhPlBHSmLJkwyGrB1CFh38UKApRVKnvzTFswc7MPu6KS
2r98tkqzSAveMDMUt6PsnAneT6lNzRjRcfmjLDV+DbGm98z9Zuxp/Nv5ppSA
ElvV9W3yzVhvz/XicREBh/0/V65514QZ0/yDu/IIkJ3fVHXEpwl9doYHDGYQ
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
KwGpsLNbk+H9VrkW5V11MCMZYjslkwTRlszSmJk6OLTZxzpGKQHeLufZ7VhX
D97rFrXaeGOgRMBgVBsQzP/sdn2UGQILBtOrlMSpd3BIc0A4TAt+TxY9DOht
hNv/1SlU/tTHc7fSp88oNcFy+U7L8/o3cLPOL87fnk2Qs3VWdbuHGzp9klX/
sqEZqod0pG05g3FGc/mH9ostULGyP5OlmYRG/Ko/xn3bYPZrotJts2Rkhvj7
mXa0gWRYz3yPSwoKG7h47VnJgNWPDtk2ZKXhpfM/OLgiGGD7UlHhw68svHps
i0LUUyaY7uQu7ebKwY0lT75XIROOc1Umiorkouly0zTJ30z4krCYxiGfj2H/
KTXFm7IgvzH1qEBcEXpnCJXLrWHDzoujJ9PWFePdjnjd34fZwG0QX78+phjX
Cczf/2nNhp83b6RFhJbgbSGJl7qlbOAkjkk/FirFpYVfg0vfsuFsi9Davc9K
MW6l/E/l32wQDPp9l+5Uhnfu9HA6q5BQ2rZ47/n3Mpy/MHvg4GkS1rydOcRp
Xo7p3gNbxK6R4Pb2UOfKt+UY28rZt+QhCZ8I9+P1xyuQ7XQ94F8wCQqFji1/
Kipw9cTfYO40EnJFE0PqNlXioKCQ+dpyEoCTd547tBJnmxuj1ZtIYK17epe5
UIkL0pd+XX9FgoZxlCOvTRXqRE/pxPaR4B15I6zkVRWeuOqb1/WJhLQe24dt
qtU41mqisO47CbOK4V+PJFTjsdeKq65NkVB4r7dCnLMGh9/EssqmSQh+6Mo4
blmDns+t+/n/kMCZxLuppakGnwkE/bH4TcKul9JDwRtq8Xj71q/0/0hQNKRt
T/aoRaMVDXnykyScfuKq9bO3FptXX9V/Pkrtj4sW7rqnDs0UxqXmB0koWiLh
vT+wDiXS1tvcfkuCZ7NV7JaROnxb11U91kaCiMqA++F99ShUxFllU0PChuQN
Yw9969HKelDpZzYJvmteZL7vrseWq5tFPSNJUL1omXp2SwN2qK51XOtNgtKv
kb5uxwbcK+n3vOEmCQOHIm/ewwYMVhul2+uT8M/eyluSD7HoxvkQhf0kjEY2
2TLPIpYuaUj5K0VCU+qQz4NQxIbnyk1di2wwPtF/ess7xKHL5V/aBtnw7eXd
XKtlNBS8YLqxo54N7hO7ssq30XBoXrXiWzQbHkauWDJ3koZharoLGxzZoG62
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
noD/ATHDDqY=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$44550, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$44550#1"]& ]}}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True}, 
       AxesLabel -> {
         FormBox["\[Phi]", TraditionalForm], 
         FormBox["\[Psi]", TraditionalForm]}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "ScalingFunctions" -> None}, 
       PlotRange -> {{-0.1866265367147002, 
        0.1551724859323519}, {-0.2724946121569126, 0.24296340535542016`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"1\""}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], "]"}], "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             FaceForm[
              Opacity[0.3]], 
             RGBColor[0.368417, 0.506779, 0.709798]], 
            LineBox[CompressedData["
1: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
/zyxpPUegaMJp3fcGKbA/I4L9xUfEbh8jk3cHVMqqNlvc+EnEdgnbu4UlUmF
0tC/u16kEWgaoXA0Y4YKfpOFSvrZBPKmF20qO0KD+1Pkt6lcAj215jTVlNFg
52O5yFX5BGYdqiZLxehwa0fjotQ8Al9EqFnGn6aDxpc9SgE5BD5fNl/TpZoO
u2p372RnELi4aanbMgkGFAz18C89JrBw1kUm354BxpteiAYK6tCESJz1kjIG
eGknrJiM/P/7hpk9B4WYEC/bVfE6kMBPcr80HQ4ywXdVf4fyDUKgo6E229KZ
oNSmeqHLncC5e3qXdo8xIX+z797Z4wSWn3fvMdzGAqemZXIx+wj882NM7VQw
C9aJkNeS9AkMaCjw3/qMBUIH6m2kVQjcl3bvLnMZG2ICWWLCiwj8ai3eL3ya
Ddym190ek4L7Mdh4bDybDUIjd35YvufjHDmLFv9hNohSfp8uZPOxwjHgR816
DvC3iy65V8RHmpbV98gLHHhn+SCIeYmPBm8+BYqNC/o70GWdDV/gBiIcctdx
4S/r4XE5HUF/xeKMl65c6FYPxWgpPor13HgclcmFj0MOb+NHeHhZNLDlRTcX
RtFNaR2ThzFh/JAn0jxwSbG2O5jKw1+bqsKG9/JAXDYr5pQlD4vlbaenynlw
o7t3fN9qHp5/Jzun4QMPysqefHjxg4sHLp88Oy7NB2ed0mXTLC6ekXDTitvD
B0ejET9WAhdLOCnnCy8KfNiJiv/0XLlo2n/ogFYKH75ZbsvZr8vFV6d65FYy
+UB55+jkT3IwSz+8T03gm9dvZ27PSODg6a/jHXsMCGC9F2Vfc+Bg92unrOaT
BJR/t14kpM7BWPXef3F+BKyxNFAzHWdj4CWfBm4qAcb7FJTMK9loSb3WYNdM
gPLzZUslbrDxD3/vv21vCFBoiAx+M8VCY+Jxq9BCEl5EHN6xuYmFFe0W68+r
krDLbdl1Z18WNpwqiTTYQYKGnY3Gpe0spHzJ8nc5QEJd+XbXk5NMlCo8WTZx
hoSq9fQTGjVMTDXL7H51hQTL1uj93ZeYuEhq9Ru5IBIkNn++f209Ex/MFqXU
PiRhodCtDX8/MVAtQE+99DEJZ6fErC6mMvBETWrav1wSxDqElTtsGeijOWyQ
X0qC88/fQ9oLGKhS6mWWX0NC6oWoiUAqHXe0rtT510gCMfdR1PNrdGTtiPYu
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
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$44593, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$44593#1"]& ]}}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True}, 
       AxesLabel -> {
         FormBox[
          SuperscriptBox["\[Phi]", "\[Prime]", MultilineFunction -> None], 
          TraditionalForm], 
         FormBox["\[Psi]", TraditionalForm]}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "ScalingFunctions" -> None}, 
       PlotRange -> {{-0.24951535603643382`, 
        0.2384493319636119}, {-0.2724946121569126, 0.24296340535542016`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"1\""}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], "]"}], "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`a$$ = 30., Typeset`show$$ = True, 
      Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
      Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
      "\"untitled\"", Typeset`specs$$ = {{
        Hold[$CellContext`a$$], 0, 30}}, Typeset`size$$ = {
      450., {190., 197.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
      Typeset`skipInitDone$$ = True, $CellContext`a$44759$$ = 0}, 
      DynamicBox[Manipulate`ManipulateBoxes[
       1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
        "ControllerVariables" :> {
          Hold[$CellContext`a$$, $CellContext`a$44759$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, 
        "Body" :> $CellContext`drawWing[
          Part[$CellContext`sols, 1], $CellContext`a$$], 
        "Specifications" :> {{$CellContext`a$$, 0, 30, AnimationRepetitions -> 
           1, DefaultDuration -> 30, 
           AppearanceElements -> {
            "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
             "DirectionButton"}}}, 
        "Options" :> {
         ControlType -> Animator, AppearanceElements -> None, 
          DefaultBaseStyle -> "Animate", DefaultLabelStyle -> "AnimateLabel", 
          SynchronousUpdating -> True, ShrinkingDelay -> 60.}, 
        "DefaultOptions" :> {}],
       ImageSizeCache->{511., {238., 245.}},
       SingleEvaluation->True],
      Deinitialization:>None,
      DynamicModuleValues:>{},
      SynchronousInitialization->True,
      UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
      UnsavedVariables:>{Typeset`initDone$$},
      UntrackedVariables:>{Typeset`size$$}], "Animate",
     Deployed->True,
     StripOnInput->False],
    Manipulate`InterpretManipulate[1]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.758872280050231*^9, 3.7588723347509184`*^9, {3.7588723894935484`*^9, 
   3.758872455533968*^9}, 3.758873083534842*^9, {3.7588731505157776`*^9, 
   3.7588731827156544`*^9}, 3.7588732329215*^9, {3.75887328799125*^9, 
   3.7588733474821014`*^9}, {3.7588734270085473`*^9, 
   3.7588734346550183`*^9}, {3.7588736398906617`*^9, 3.758873652184871*^9}, {
   3.7588736931533794`*^9, 3.7588737743442283`*^9}, 3.7589704674030285`*^9, 
   3.758970654121313*^9, {3.7593106524879436`*^9, 3.7593106681794395`*^9}, 
   3.7851628524268827`*^9, 3.785162926348107*^9, 3.785163043538539*^9, {
   3.7852435023740625`*^9, 3.7852435232731843`*^9}, 3.7852437305684443`*^9, 
   3.7852440356513777`*^9, {3.7852441043430486`*^9, 3.785244210015951*^9}, {
   3.785244242217107*^9, 3.785244271118507*^9}, 3.7852443574106984`*^9, 
   3.7852450463135014`*^9, {3.7852456064819465`*^9, 3.7852456296292934`*^9}, 
   3.7852507977379675`*^9, 3.7852509069239635`*^9, 3.785252912158183*^9, 
   3.7852531671287184`*^9, 3.785253210422945*^9, 3.7852532626277757`*^9, {
   3.7852537637628202`*^9, 3.7852538088500366`*^9}, {3.7852541114975405`*^9, 
   3.785254133831778*^9}, 3.78525424249282*^9, 3.7852542771054907`*^9, 
   3.785261258021784*^9, 3.785262076859126*^9, 3.785262163426772*^9, 
   3.7852624801405516`*^9, 3.7852631846830416`*^9, 3.785263302406492*^9, 
   3.7852633631776466`*^9, 3.7852635134671392`*^9, {3.7852635741211967`*^9, 
   3.7852635893176556`*^9}, 3.785263851611332*^9, {3.7852639664179106`*^9, 
   3.7852639873723183`*^9}, 3.7852641204463067`*^9, 3.785264158743861*^9, {
   3.7852641992874966`*^9, 3.7852642276409445`*^9}, {3.7852643182265663`*^9, 
   3.7852643493376245`*^9}, 3.7852644089011292`*^9, {3.785264520063408*^9, 
   3.785264539752267*^9}, 3.785267409528537*^9, 3.7852681749202657`*^9, 
   3.7852697630160265`*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"be0f2700-677d-4e00-b7fe-baf92b46893f"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{985, 1241},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 228, 4, 67, "Subsection",ExpressionUUID->"e64cb84f-de9f-4b90-a5e9-1ea323c30588"],
Cell[811, 28, 53121, 875, 109, "Input",ExpressionUUID->"64d0d6bf-1eab-41bc-a7cd-251369f4e925"],
Cell[53935, 905, 24362, 599, 2475, "Input",ExpressionUUID->"7405a249-8e74-42ba-8cb9-4ad6b37b789b"],
Cell[78300, 1506, 9419, 244, 569, "Input",ExpressionUUID->"b8b499bb-9d2f-4be1-820a-74f2d72ede84"],
Cell[CellGroupData[{
Cell[87744, 1754, 12251, 291, 1029, "Input",ExpressionUUID->"51dba8ce-d54e-473b-8306-f61498bec997"],
Cell[99998, 2047, 433283, 7733, 1301, "Output",ExpressionUUID->"be0f2700-677d-4e00-b7fe-baf92b46893f"]
}, Open  ]]
}, Open  ]]
}
]
*)

