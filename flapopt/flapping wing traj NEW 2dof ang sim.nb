(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    644952,      11726]
NotebookOptionsPosition[    643730,      11698]
NotebookOutlinePosition[    644103,      11714]
CellTagsIndexPosition[    644060,      11711]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["2DOF angular - 3D ambient", "Subsection",
 CellChangeTimes->{{3.758808037911851*^9, 3.7588080500165825`*^9}, {
  3.7851630712097263`*^9, 
  3.7851630750113926`*^9}},ExpressionUUID->"e64cb84f-de9f-4b90-a5e9-\
1ea323c30588"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQeUVUXW9/2uz3HEBJIzKEiQLEFAUECSBMlBoiJBsgISJOcMknMUJeec
JGcQAYmiAyIiGGbG55nnHbtv6Pf33f9z9jrc29xumm7C2Hsteh3OPadO1a4d
/rtqV9UL731Qp83/93/+z//ploQ/dVr0LNe1a4uP6z7Hf+p37tbu/c6tW1Xp
/FHr91t3LfHeY9xsxL/LPP//X0c9muTz+Twezz/+8Y/vvvuufPnyX3311f/8
z/+cPn36b3/7W0REhN/v9znk9XojIyP5yzX3ueYB/st1vNdKX+ET/P3jjz/+
/ve/jxs3buTIkf/1X//Ff+P9c480WR+JaSJ3x7l/etCVjZn8AYrNY0F31Eb7
ye+iOJR/p4+Kme7/+kNISqEn3XeCPm195H7AEyD96g2QHuCmuxDdDK2YPSO9
ttfdzLFn0C/7lu5zJ6gy9q1/B4g7//rXv/75z39iMX755Zcff/zxxo0bvwaI
/167du2HH374+eefz549e+LEiT179hw+fPjChQsHDx5ct27drl279u7du2PH
jv379/OXXw8dOvTFF1/s3r17+/bta9eu5ZrHjh079s0331y9epXCUfz/GyC0
XnVzt0sX+mt3eDgyQLzCNfcxU1xQeXdLE8JqJVK8k1tlHmyXyRkhYIjTzp07
+/Tpg9BKLBP602hB7ty5H3vssVGjRoX/nGSbGq5atSqha5VARP3hKkaGJjRv
3vzy5cvw+cCBA1iDh0dn6QVsIFaOqsqEJtKdSNZY3gTJfNDVuWsyHx2G3L7e
XIyMAz9FOCSHG1Sa+07Qp8N8UY4PEg6350Mhn57xOGS/2gPuJphvFbbnv7QC
16nK21+BcwsHVLKu3cW6vyiPDPE6BUpx+Pvf//3fKDvA/qeffrp58yZAgkhE
oIIY5Msvvzx//vylS5cITPbt24cp4M65c+e4iU04evQoUOHIkSNcnzx5Elyx
ceNGUMSpU6cIYb7++mu9DizhJ2EPvUIJXPATKszfb7/99vvvv+ejv/322++/
/y4IES1miw1Z16gc4imVSav1Fw7QZO7Hj4Am0n0kC6OkMg+wJv9yCBdJ5J4k
SZKGDRsiVPchQEa269at+/jjj48YMSIME9yGccOGDQldqwQixT6ocLt27apV
qzZ69GiQCbZClu1B1+5/SbGbjZk86Oo81CSEjM1Hd+4Deo93ChrhiRaNBA3+
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
Au+9nganr169SkdQ26NHj8JYRCVoD5nYkw0/iuduJ3XvFU6k+0MaLM2fPz8A
9UHX5U9Nsleo0uHDh+fNm4dbsUNe4jbv/+chreVctWoVTjlz5swjR47E92lF
+YULFyZPnvzGG2+AH+CqZZBiANevX79w4UKAyogRI1q0aFGmTBni5QULFig3
IMznNIlA8A4gCYMVhUbkXo8fP16hQoXatWtXqlQJ804IwB00LkOGDJj6vn37
pk2bFnfsu8N+6XcqPzKwidDy5ctx91oxFxHdvtmnT5/mW3h87Y7iczIt4+yw
eJ0AvFixYgUKFIDVtkSIygMA8FxPPPEEEKt48eJ169atU6cOKLFt27Y08Kef
fhK0sCwawTMwDI9RT8EMHYdE1IxdAtucPHnS65yHCBqBhzY0QWdRk0jnLCRh
eO1VsnXr1oEDBy5duhRuB8E8jWN88cUXVBJvCDhRAmpQFmjQcKXWGA4ePBis
lSRJkooVKyotR0KlT/OXm9o3yTJqVE+hUANjceN8jER9+vfvD/6kUff+FZ+T
40RXAnJoV3wNOPgcokzEY9euXeCQxo0b16pVK2hJdezJnRnuBlRxXgeUSPeZ
pGgETa+99tqoUaMedHX+1CRDunLlyvr16+M98apmXeMrevpPJaLRKVOm4B/T
pEnTs2fPGzdu2IA5xg1/tHjxYkw0RhWHKHul3UJAI5MCRECNJ7106ZK2Ng1v
chUndunSJU+ePETfd3pM8zLamQfAA4DBRTZt2pTq7d69GyNMPIhv/eyzz779
9luKQgflqWPZarVRRzTK/RkF1R9XeP78+T59+gAVBgwY4D46OZbfCuUAraPA
Z555ZtmyZRooEJqiOa1aterRowcoa9y4cRs2bNBRTaAmHX/mc3LPRELdwCp4
Qk9pJ1jQGp0COEQXnn322Q4dOvDr/v37hwwZkjx58sqVKyuLXmOJ6mhb1SKV
EUbSPoqRIfvn29gFCA0/u3nzZr0Sup2agQefc6QF0Pf9999PmjRpqlSpjh07
ptxpvUtHL1myZO7cuVQe7CT9pQ6ff/75oEGDxo4dC2hU1k3CTcVSLEwDyIVP
4Y4N2RAWjAJ709fKrYoX/+5zbeVEtyIbcBLIWrBgQXB13Mq0LbX37Nlz9uxZ
jdr5Qvb5T6SHlvzOgkd0fPbs2Q+6On9qQpv27dtHnE7IRlRI7InpU5JP4pBj
eEKAgQdE5bVr19Y5Jsqs0HIGGIshbd++PRYVZCL/pbUbOiPe8h/kp7TPeZjP
yZNOnDgR50gUf6fHNJBCgfjiDBky8Perr75q2LAhkKBKlSpFixblAssJWqCS
+Fw87+nTp2Pf1/LmMunyyza/EIRqYMWVK1fwknyduEO5NPcyTSCsRVSLX65b
t67tMAbp9GfuaGjIsiN0TIOGNSzutiZo+bBW1x48eBA8U7Zs2WrVqqEOTz75
ZJEiRWrUqNG2bVtUAxgAsNT6KW1xBioQjLToWBThnEwhctff4yyCXrdu3XPP
PdekSRNwnfu0PiPNLKjOtm7r6NGjpUuXfvzxx7t27codbYrL/fHjx4Mqq1at
Cvrt1q0bjpVPAEK0mRixP0II07RUPB6naYKahulAusTPOJfjvz1lukKFCnQE
UuSP6RwE9bVOjIpwttZRe61kv7PdsfoIFLdixQrEY9OmTfQvYYJhIRuQCb9K
S6QUKZ1fryVUkc7JHXHmQ4KSxzlLhYtz586dPHlSoPo/2+C7E5CC0j90EyPw
8ssvz5s370HXND5JTVOQEl/9a/O/EYFNubU7nN85fs7v7LsVt8IxX9j2Zs2a
YWAnTJignQS0pulOE9w+JwnZd/tZdbERaa+z15xlAdnfMG/JcUe5Et6iXBti
KF0TN4GTdacYhSnQUpXc/7Xy7aZ75DzUjONNsP8YTOJxC/81j6zBfB7Yvn37
U0891aZNGwEPpTLanL7flYYdo93TWxhPEA6Ru8dZdBzUUnltJLBly5bZsmUD
jYCaiMezZs3aqlWr+fPn37x5U8tAeBIsmixZsk8++STS2b/X3XC3DLstvFyt
fLGSFjQDYrtn+ANLfqgkrrNEiRIjRowAsEU6Ry3H2SFqqoL658iRI2XKlKAC
MdxAiCTBnXai6NUchN9ZbOJxFhzpzBRAGl576tSpeKVZs2aBzJ9//vlhw4b1
7dt3xowZdCKuNk+ePNpndeDAgfXq1QNO8CTKaMtVLLXYllrLzhtPLJUF01e/
fn3golY5KRnS8vnhJF+kUwjWQJ6a+tGoy+TJk5E3mr9jxw4d+HLp0qX8+fNT
GQwp2CNjxoz4RFwMfU3UTxfwCRq1ZcsWzTElkN+hazJlylSyZMlQXHq3ZNWj
1TVr1kTasUgxzoCI2xcvXhw0aNCXX37pc84isQWYHucgQo+zMHPjxo3ANlQS
zqAFcM9OBHMrV2RMm+1LCFEEBAYERWnq03thQoKSZUQjXViJTp06Ued777iH
k8y2axRUgiELGdTF58+fVwT3oKscnyRRX7Ro0ZkzZ+IlB8Pn5MajlStXrsRC
YuTHjh2LCCkiCEqqvyvilc2bN+fNm3f//v10CgY2ffr0WEtsIHpqS5zMjxi0
RvsQZm1Yh/prQDjCOc4vzBctUVCT4z///LMNdId5S0PTqozcn89ZYSHmUGE4
M2XKFKot+x9+vNTnHCfkHsL1O4cReJ2Fk2qRO/51F8KTtWvX/utf/0oEZynW
UU4CqiZo4BKABK1XM/E1USG7+8ays2QqcUA4nX79+t0p91gs+uWXXwjwixUr
hsl96623ypUrN3jwYMCn0jL/7RBSVLZs2YoVK9pB6ma93R3qcR29ZP9FBk6d
OrVt2zbtSQjk0JZfAAbcJeC2QYMGyZMnz5w5MzIm1t1tk4NIqI+/rVu3hqvD
hw/XTnSavLDmB0FNu3D3jjUWterQoQMsHTduHP2l2Sg8+DvvvEO7NI7ER6tW
rYrP4qfvv/++UKFCYPjGjRvj8UeNGgUPDdtoNIZyjM+6sCUw0iNuAiyfe+45
gI2SPaQOXPz0009jxox59913q1SpgncDXRDFI97KD0HdeIuoQYNyfI5fn376
6dWrV1PPvXv30teATzgP24FV2r5DGdRCjAk0D4u8pUmT5vXXX7+X4CiIKKd5
8+a07vjx4zHiKOHA06dPAx0BwIYPNYinbUZMsKXmMFNbycFeeJUzZ84ff/wx
wtkFxW0TYhycURCKLNGhYH4NXj20U94eZ0oXKPLiiy9+8MEH+GKPcw71fwxZ
tBvlHBJhmvg/ATLBEOHIcH/EAg+64vFJSpciZunfv3/4ncBjXyD6smvXLsxm
8eLFMUd4QKLd3r17Hz161Lahjpss0U2HDx8eOXIkiAKFwsJjVfAyN27cwMLI
zlt8pxiExwi6p0+fjjA3a9aMv4Rm2AGhlMiYDiTyOgdVcEH9QVY6wyU8fvA4
eztraF0THxZUaruPnj174iA2bNhgI/ZhLJhF+trLffTo0fhrmj8uQPgjnX+E
d5AYG5B2F4KRf/XVV5944gkMUdC3ZNNgCHg7adKkANRI56Dn2PVMNBUW+KSl
+Kl8+fJpqppuCup6WV0wEi6pevXqxIzgAZrDkwBacML69esV10c4J9jS6fSC
8dOmNmyZsDvYN6yiyQL8Zvfu3YGC69ata9GixcCBA7t166YtT9FunCPYCbgS
L1G5XDkVoAn4qRo1alB/eZzYl2/jPL7AAhb0iEq2a9dOG5rJcGlzFXHYUnce
f/xxncuJpB05ckT7owJOkBwd3wk2oPkoPgoFNxBveK4t8v5wDhmXk/IElgXl
zp0bzmsRlnwEj33yySd0HLVCkgkQ+FbJkiU1BEdjZ8yYge736dOnadOmPHPu
3DkQS6pUqaiML3AwAU4W34rIUVuEU/yxXku4MfmrV6+mSJGCHonRAsSeaBH8
BHmuWrUqxkhHjgaFBUl+9NFHkc4GuRGBg342btyoPCKLQbBjGFUCMU1+LViw
gL4AvVuMo52yJPnhW+Rx9rrnybZt2yL8Ou3ooR1w0Jzy5MmTs2XLhmDjiJFG
TwKnPd9/cs++KXKRM6V30F/8CDBMWxTKxCEMmCw06EFXPD7JF1jhjokoXbo0
yOTeC4SNQG7MDq6fwAdr36ZNGwoHzzds2JDYweOc/Rc3WUKPqLBGtqdNmwbg
ee+99wYMGIB3/uyzz2zAQUExITZGslGjRsTUH3/88aRJk5YsWULnLl26VBtF
xjjup2jivwPUtWtXIAQWGO8Z/i3bZgGoUL9+fQCArI3t9YR+cbNUqVL8qoWH
MQ5PSVBpIG4a8867efPmffnll4mwMOmtWrVCVadOnaqjeP0h2YBc02RtSQoH
gpjPf6nS5cuXqQ/BrGZJNGcRN+hoo800FhefPHlypQSgX0Gsk3IRPuO5mjRp
Yvtj83qZMmWAtUTfADB4rsPpcCXZs2fXMTGGPz3ONvhaqgMTYC/ybJNNyuKb
OXMm2Bv3h0CuXbu2WLFiVAyo8MwzzwCbn3322Q8//FCjwfEFSJScc/bsWdxf
njx5tM3IXQESC3uhQ4cOPf/88wjzhQsXhDyFtbTcxg1dAJa0Cz7wExxTX8Bk
HBC4om/fvkOGDAGbESB37NiRHsctAlcAbJqrErozQCLRfeutt/C2YAmbAhNK
SZs2LWGCBlgwm6lTp9YCVR4gBACL4nYxm1Sb3ixSpEiOHDn4iqbJkFWwkFJN
ChcurBMYbfjOPTQXvwQDMR3UJx5HSOAVhgX9wkTEGL9rLAilABUj4Wq4HBB4
Bo0GeHud7YWFbJHYL774QmcfADVhO8GIxjq4ScxFn545cybG9YZmHvk6WBGx
hxtBKc0PlaOntkSdGDpESDsU2SxVKOoLHdWMsS0J2lirZIyS7Hfm95EBPBfw
gxiBLgavNm7cGFVFebkZ4ex4hjBgDfbt23en0iRRoR99qDo3iCIDB8SDFnAH
iGVUnGrrHmfGXpUoUQJ4gAdBin777TfKx+aABzTahu5InO7qQyZmNrWtAU+Q
D1alV69e2FjcjQJwj3OKKzexcgASMBIqrL0XcAoEMuClSGdHuzDf9TkHx2tw
lfoT9IU/kEvOXSPzfBrMoKkBGzTQ9AHXVBi2L1y40LJcwpRpOQY0BCYTES9a
tGihQ59++uns2bNp5o4dO7QgN0j+uT558iTOAoO5detW95SEzB3xF5EythHg
LYFXH8UtbvI6B81TDiAQ57h3716vcyZ1UNN4BteGEGqzNU0cwHMCWCSHdhUv
XpxeHjNmzJAAEeaDDFevXv2HcyqxxzkVjrdat26NPce9rlmzRgMU+i7FAgzo
vtdffx1FJmBHUMEJ1A2I8sQTTxDpo+8aNwudQ4m2U4yB9jfoAdUKpAeIypIl
iwZq7haQCBXz1oQJE3Cj2qNV047CDJpf9jrLUrh58eLFlClTYsrk+NzDvOCQ
dOnSvfDCC3AAIEE5WDZkiQgU1oH0uGPzjO42ojJwiX6MCKyjodht27YhTm++
+SavCB3duHGDYoEcyCR2tVy5cnXr1uUC37ds2TIcCu4PjVBILhx169Ytvq6D
iVWONTnhAAkalCxZsmHDhlkm0r0T9USJYBG2LjJk79kgEkKm+dWrV6fh2lgG
niAqCxYsgG/AP7hk4bBySLComjLjYVQAJ6VZMxj42muvqU8F5sN82ucQ3Mbf
AcVPnDghbVUSi8dZgWXtihf+xJ78rlw1oXosfJo0abBvEc5mwhKS0KYZSvff
fqhrmM9FOhuqmyUJ2qElbvX3OzsOYXbkRGJEv5GBA9aJ4HA07wcIlUESUExC
BjQarGtOBOUlHCD+cpfgdbK/+C627sCBA/JxWt5u48kP7fQcnL927RpQgcZi
4f3OIaTh+8IdvPhch1/Q6m7dulEavLLVARpphz9E8ageGqebbpQbvt+lYgqp
gtIGsHWE83wXnGObUWt3x1GjRuEF3nvvPe3bYJXkeuXKlV27dpX1Cz/5IoZQ
gREjRrzyyivgcxqC1fW6DlaWhLhTVvg69Tl27BiyRDUU/kQ5km94jKLy5s2L
25XLCCOrZkPk4tVMi3RsltlmxELDBIj24vHxIFq/qXc1bD5p0iQEfvDgwVqh
aVp/LypJlZSisGfPHqw0n7B0yqAnNbyPbOTKlSvC2bIJQvuI++D2q6++iiPO
lClTtWrVunTpAtzF1XKBW1Ff+5y9kTHyuANgFSr89ttvKwnTJuK1G+qGDRv4
UPLkyXGOiD3gJEmSJJhldN+GWbQN5p2U14Ys9KsWHMlTBPWaRpsB53ny5AFx
eQJLlu4K49lXKAflorYAy8jAlmiCW/92Dqdzz1ghfsWKFcP14+l033Kf8Fl/
+ctfQMJ4twjX+g6uibZgLAolrhoU0TPoL4zSEIo22Acg4SaI5T1OHruwJcqF
pH322WcYzIkTJ2olF+WvX7++SJEihHsayZTZR4WpJC44ffr0OuxPy5ES1A+C
HOh9/HhE/K0uocLgvaeeegrxixFzCvPDAbiqrUvgCVxCAXEisJSOxjep19SD
8BPmm8fs3r07EJcvgv3gNtFE1apVUSL4Gd7dmO2ikvgsdBNz7XOSmeksugnO
EKT7XOnW8cKiWJIBEp+ziRB2smTJklpQGeZFqYNWlmmNvwl/mLdkc5R0bRP9
sur3CEg0AQc/tedAeHcjS0KwTMTUK0DYzOXLl6OVOE06OlWqVEBQnXxNDQ8e
PIg2EUO5C7FIEKCClQPS8F3lklEHookjR45QWpjtuB8s6dBVrCV6hA1Xv8hr
hOl6C8QExiKcsyqImDB0MEFBlsfZoVHjEviRtGnTwlhzOpbhH16D5Gc1sBDG
mJub0Og0xrBMmTKA/9CGUA6+zJayhvm0qvfLL7/grZAQO4fO3IQ8jipmSye0
qg67hE9ENe5UOI1q1qwZJl1DpuEBiYEfM1Ay6XwIBI5YKsUxTFuo+ejRox9/
/HGiYGpFo7A548ePr1mzZq1atUBcmlqKxyl1rSikdfj9zp07ywKHli95e+ON
N1KkSCEkLyd76NAh0AVig2YVLlwYTEKIhHPnGR1twwMCD+oO2a5p06bRufBk
wIABbdq0uXjxonhrUZWGyEAgsAL+f/jhh1yD03CdZsFUZrRjaH5nBZk28sJ9
a1AldKmCPYY1AKWXLl1a0393xWGfkwlDlfr06ZMtW7YvvvhCK3HU41JY00FD
p0OGDIGfQDLD4TypDFtwBVKnTCr3t3gGtKPRD0O2qgA3S5UqBYozUac+ffv2
xSTChKAK0ws8DICn1ei7RRCU+fnnn2MlDB0Jw1Ax5BCE0LZtW2lTQlvLJUuW
0BaMsyQtXsqkzpj6jBkzIskx7tJjAQWoO2nSpMQs9CZyMnbsWOwSoK5o0aI9
evQQXlKQRWiDhsIc+SP8FBCuYcOGr7322ptvvokczps37+mnn45xQtkGACkZ
MKM53CgnhwHnRRCHR8Ag2ITRfXZeJniS21mzZtFZeGdpU5gXJVR4apR68uTJ
2txAFP4t8+PmASNDtuWJPVm0LsUBG4wbNw5PFH6NudQWmzZnzhwkAcPuzhih
HLq7SpUqyIknsG/zli1bUDEAT1Ahqjn3S5QoQUjC11E6TEf79u3xR6g/GJg7
D+cgSUQgS5/oGGtABKeD0c3b3uktReuWY6BIh7+4ALwG0Yfciqy6sAQgHJ9e
oUIF6YshBwvzw1TS46Rc6it3eszvLNuHFixYQNwB26OdsjfzGGMOieAHspQ9
e3bCNzkUc1U+J6/SnXHhCewzhlzBCpxC+AovW7YMg4A1Dg9Iolz7L8mGI29E
uFh77EbTpk1xrOBwW0ccLfGJo0ePPvbYY0A14MHgwYOBWABIAAnv6hTa+AoY
LV7W5AJ6UalSpTuND6gXiM0J1nbs2GHDX7y4YsUKoAhejw7NkSMHjdVwk9Cp
EiwFGlF2RAubDAodNGgQoAt7zjUGXztd+JycMU/gCBi+BQ7ZuHEjTOACp3Dp
0iWzSBqU41tXr17VthLupkmqkfN+/fqBbQjw/+0cABfEBMk5FSCYxRr4nO3O
7mrKxuvsQ6IThBs0aLBu3Tr6y2YGqfmOAGmsRi0FkoH/GzVqpJFDeTFu0hfg
BDzXhg0bgvROXJLKyKWKpAKZM2fGVakmspAAEpQ6aG8xfQjrxyeI4m3fEiEZ
QR2bQvIGVuvwFyeSP39+6qZA8i5ELU40YcIEJN+OD4ivYgESiCuGVENAYZ70
Oon39CmiiKjTTQh5jRo1lKEKFC9YsKC0UuKNPH/99dcKkGEathp/xLvwbcaM
GTyDGGBM0PHwyxM8TuYkr2AheQXm67+aRerduzcRBL5PeZWe+34evU3KUCU4
A8B74YUXlMUdRjb8gclfDSUlS5YMc4EXhksxDnSYv8OenDlzRoFqjK4hfP2j
XAcjgtg/+OCDFi1aaF/xO71l45zAWgIuLfs1sITlBJC89dZbUk/+ou+FChVS
ooWRzAu6Rit69uyZOnVqbGbjxo0RlY4dO2IYR44cWaxYMVxGfAWe8UsSdewz
/gIHyoXNDoTpRNMmLohAUQQBhubNm+PsUCK4IUAibI8ZVHrb8uXLJVTmypWR
Fd5rE/ACktEdLH8YgfQ56eh8l5CBzqImmkMPBSQ+Z+F/+CmbCGdLIpiDRhiI
koTQdsI9QAUOHTT+h3PEPIL9/vvv4zs0WxSmfCwYj4HTtN10GCZ4nUw/HUbT
tWtXJI1PEyJh/F999VUKQZvC9xp2EreiBEJQKNYPIIqjBNsI78XXCIm5Rfl3
5B+PrIGy0CkbKR3YAOuKj/M4WR9yuB06dNCBue3ataNP4bPX2bnUVtbwGH1B
GFK7dm1CVNAFRgxzhPYRbgDeDANLQkApfw0QtjdXrlxKI1G8rEQU+hpISbeC
Ong9CJBQGj1LFxOc4twt6yYUkIgJ586dI8QjavO4siNiyUnxUOMVyD+wrXjx
4mXLlgULTZw4UdvnEvVUr16dn4TQNFaswRCMGJ1rU5mEDDggDTdpLUxQhSOc
leOKxKVTOtkND060ZafP4Lnwgyh1kEn0BhIhypcvX7VqVS1JU+Utn8fI+MM1
8k9pw4YN04DJ3UnbXRLfpS+ouTbDD28B7orgCX6cvtZex+HrIAe6d+9e9FEL
pXFbnTp1khs6efIkLvXTTz9Vx12/fr1WrVpInaJseSXYRW82adIE/8Xn6H3U
GXRhwwhe1xYB7iOnpea8hYd65plneMUbmGDFxvKhffv28a1q1appUtudoWRb
K0S69s+hZ7FItF3Y0n/78lXLW7CGBzEhMmSfPRM8iEgWrwoSvtP4qrs0sQ5F
rlOnDr6bQAbkKVgVqnTuEE8iff78eVzY0qVL3Ul0UY5niXINfYQOHPmcDUPs
oAQuNB1JUQcOHHjppZfmzp2rkCHakMTiWS149zhpfuIDLwIqcNOaTpKEYH+w
e0GFeJwM/+3bt2PZMIkLFy7EhVETZAwhmTx58tSpUx/OERIJGPWkF1KkSDF6
9GgbZ3Y/ZtKl/9pgGoTKAOZRKzhTtGjRypUr/xHYdcrrbNyxZ88exInYZ/z4
8VoLYOEq9M0338AuLJ77c4qOMWvqHZxvgQIFypUrByYM0xafs6MFHwUhY43V
L9oSJKg5bml065c3ZFEqPwE1ESekK9LZj4tuXbt2Lb1M23FMbdu2pZLz588n
3sGX4e8yZMiAeXEPfXtdW3+4+Q9Uw1lr5YtVLKhp/sA6EVUYJqBrsHT16tUg
PbwhwJtQlEAJQBKGP+oRcMhf/vIXpJRICocLeCb6QA3BNloD4u76e4mMTGcp
k65/6qmndJBuUOsMBWleg/pY9pEuEDA4iRhwAZrCJusnG/RWUI/4IUhwHl+D
jUXj6COlU+pJn7O/Nw4UQcWSwwf8NZIJM59//vk2bdrAQMoBNgNm+C8uEpdq
+4DJ9mrkB19ALyxevBi7DZSyJKWgpsnfoR1JkiQZNWqUPRZ7xrrdN++iFCtX
rkS269ati0YglpgpQCnICtmzjFx5McxgmjRpAC2CYegUSAbUlzZtWklL6ByT
DV8YXNeYObCtZcuWAmxiI98CswH/hg4dqilpNQ25ogsITMDqyuC1scQo1+Sj
6YL9V+cXxJjWdY8ksQQslShRQnPB4WcB7oooClVCtJCxGIG9uklbEV65cgV/
wbv8V5ynbjAcB4RewOpVq1Yh/DKJJg/aJxBRtIFZzA52ycCe1xnAp68B59RK
7BV4mDlzJi4baPrll18qwgL5E5OC4Ykgatasia6hdNOmTeOO1gvYYLjcIhWj
TCKj119/HYS8Zs2aq1evSggjA5nVtCvCWW3nc3K/DYVG3mHHA7dxVko8mqhx
y/DjTiocnInk43fgJ9phGzUYDLDBW0JdlB1gZkOsFStWLFmyJCqGsaIt8ia4
J3oBMyvAbwjN58q7hvlgJ9woto4oBnOK30c1YA43cXMNGjSASxRlDY/WK7nb
YgoiUalfvz51U64RLcKqIMOhJwgYn+ll1BzNJYizPTF4EYbQnBiF+YGQzJcG
ABF+OEYXaK7ZxrcNZhv/vc4mVJ7AztiYbqJs/DLWj8gU8aajwW8oERKOtcT9
IVFoXNTtw1mRgSPaCQpOnDjhrhXFIts9evS4efMmWoP1GD58ODFax44dwyPk
fwcONwcSYP95UTKMqPichVdRDob0OVPz7pAhdJhOzCHcQ5wsHo8ILPCZPn36
sWPHsLrYEMSvXr16efLkKV26dOfOnbHGRN+E9gSnyLBFiKGeiAI/++wzbALh
rVnmaGVVmX7oDh+qUKEC7BUglMGhAsQC4Q8AlePGuTz22GN58+ZFfagSNcT5
Um00F1UiPrKujxYa3RX5nalqQBRhYLQH9UrBIwILN5AEgnewmdc5xJkKIGDZ
smVD7xAJYANGwzaOduusWMEFZjB79uyEfsJX7ieF6zZs2EAHAb+TJk365ptv
wn8iIzAnn8YOt2/fHqNEhAh+wP77XPmi8Aqhwi4hYMgk0I46w0+k3RtdbrZG
h+gUCkc1cB/m6GM/DOXuBZMNuAEQxZYSQRB2UTHMphkiv7O+gJsaTtGRzahG
q1atUqVKRUvxYvw3FJCYskuuKAGYRyCGbdfiMpuy+SOwtS9YsUyZMmPHjqWL
0WVCbIJT8B4V0+Ckcd4+YTbc/V03Gr8rwBZ78rtSJQsWLEgvRzrrKeLrExSI
xUPUQQUx6o7qgwGhR7CZ4EliE0Cj8V+bQMJJemrIkCFZs2alH03S+MtXwJZb
tmzxOYPD9AVKZPDV6wxlEysBvEGtlP9HYGNGTCuAFjOFu9c+Y7ACO0xNEH6+
hUHAKCEqOEGcGpKv2VIewyeipFSMxqIFRDSYPoxSixYt0BpqpTR1XrczoSxH
1AJA28Qv1NxFOTEvP6FfgC4wv9QwPFet4bLVIIFMmTKtW7fOxq4NDyOc1BC0
gAXgL81RRhbNRFWVrnMpQNgfVAAJ79WrF1oDSrFNU/UtEfgHy4xcgQkxDt26
dSM4GhEgOIPuoBrp0qWjOf927YccS7mSfcPJ5syZExmQeGAPYTv1udNbfAW/
iZXD8ErORfE7Khi/ZHiVLiPcS506NWZTQ0ZqgiQw0lkGaB3qc04GxybDbXpK
Y5UIgFIaCHVr1KgBzOYnypSiuT8tz44koIlBmZ98CwADjEEO6U3wOaILai1Q
oEAYTqrXNCyTJUsWABKdxX+V9RHlskgeZ1GAGuJ1JYsGCTz/BaERh6J6hjAp
k4oh7VoMEhFY0U8lCcwBQsQ7XBAllSpVCpVEtqm5zjANsrSSZ53NStM0rGSM
DWqdtABzgSfV2It6TQSepNXhxUz8IQKihhqx13gsL4JnZFhwnTCNzrK+jhfX
QLgBQ6ZOnao016BaWR41EfeLL75I+M9jFlxjLcEPWDYQKe7VMiLu9C3exSYT
GmgmMaj+8A07j1BhuukdfKi+RS/Mnj0bDNm1a9dJkyZhXsRPvzOLwd+tW7fi
lykcww6vCDkjAym7mm6LFpDAyfXr1+fLl69t27Y2KexzjWDfFZk9N8WUbnpD
drWygSNiNFQSM6iQFg4TySKQaFzoWITfyVHXT6BuDBpgtV27dtp+xD4X4Rx1
BN9QcEwl4fyHH36IL0PxwUias4hHX3/vZIaLv3QfdbY4K74+QcmgRAAJ4hqj
4ki5du7cCaiAjY0aNerfv7+h34jAUk2CMvj/6aefUlvwg3yZGTFAKTKsPfbl
ZAcPHkxIqHBYhp2bBC845YEDBxYpUgR7K6NNjAwTqCruHgxvfop3MWX8hC/A
t4JGUAf0pVixYsAVnuFFxIn64Okws2gEJS9atAg5X7BgAU65evXqvwcI449Z
06iCezWcN7C0asmSJdgic5RBzPE5Q+h8HQE+d+6cz1kIHJ6l9gnFMiArLSp0
6w66AIrDs6MIEydO1O6IGlkSCNQcFvzH+CP5WPt58+Yh3tSEvtDQkJyIgBZd
8N5779GPQDIwf+bMmbEV6D6tw5wC57AnXMBDzI6WL93V5LiGdJAQwJKWGvEu
koZj0kmOd+IGoQqmHntlC5kj72F3qftAPme9JIQNgWOoEqyj1Qge0ahWcJhx
toEv85sKA+k7ZJ7+KlGiBBYP34Eq0ddAEW08opk196elLHhYHZvu/on7gNLy
5csj9h9//LEGGfCVhQoVCp/U5A3sdg7zdWY9kkb93Wu4fK5pGo2oaI7PhuVD
RzDgBl6S3nf7gmnTpqH7Mt1/BE7IAv8AgHG76PgTTzzx7LPP4tqmTJmCiSZm
tDQGt/WT/Udu27Rpw7vwyufaYT6oacKECDPhat26dfG2P/74I3qt+QtLqgyv
sFKQlClTYoWUMiHCKeN9OnfuDALHxGEEtHjQH9d9SIKI0rAM+DWEITK6rePN
UODuM2bMePjwYasYxpN+pGJoH+7V0MudvuUPJB0hKhMmTAjNkVAKKMHdihUr
NHxqnh2pI2zUvLnPtf+8gkeN6ILiiDQ1unLs2LFIZ0tYM3dB3KZAfDpo5MyZ
Mx5n7W2crYF9RRzQWhuTSfeTXifZCeVt2LAhboUKiJ/qApXgDZmglKbQX1hm
MAaxHjyHY/aKx0mytbFrNAjLj8UGhxAGfv3110pdDt9N95ls3Ju/cABvi1DZ
DGw8fgU+A/gJymJ0nfqLU8at43Dxg4pxLOFHu7vTC3QfzxDfme3VA/AZmbSE
B2Sb2LBatWpCg5ITysdLYgaR9rJlyw4aNEjAEsHAu/3lL3/huxRiZ6ZHBvJI
ARVYMKwZtgvjj7KglZhilBGbhibCwMKFC2MDKUf2ma/zCQQG1aNi2GECkFSp
UuETJSo2NkgFduzYQT216CDaLvA7e02PGzcuW7ZstCj2Q2fGImQSbcWXyebY
2D6ay9dpNXJOVb/77jtYRMhJK4hKQIC84glk4NvIOfXEYOLc8W5KpxfI4S8W
dciQIXirPn36EJ7QlfgCpR9HBo7fglcEApTAA8Ts1EqAPzRcuhNJMQnzsdtX
Agd/8F+khUgNzoR5kXrmyJEDKBvp7DNj8UvsI033CHMsX4kzuQEJjKX7ChYs
SNd0794d19C+fft3330XjUDw7Ej0SGctmGFR5R/yAAEsfUE/AiyRag1NRDgb
ZUSEnCWK0KJxijTdVcIf8VHwPJgTNM5joKOiRYtyJ8yshHpNkTVmAeiePXt2
fAG4nf/qVE2Pax8tngfz4y804Wu5T+4yIwKnseTJk0d7B5lI9+rVC/EQN3RI
yiuvvIK+Y4uSJEkCH5Ccjh07wtJt27ahmNevXw9NnzAEhZtDc7EVqrwvZEhf
M0eyUUQiWtSGFvAXxA4PZZTCm1Z/YKITwhDxOVotK6GsfjlcYCTBEaYPK2Ts
io0ghSd0EzXXioygAm2UVdKFRSW+gHXK2FEm3uXLl5GrDh06aBI82jFeI4nB
iBEjqlSpgq8MGpIStCCssAkFr7NO6g/nUAOvk/tng5xazKJBZnozffr0AJJ/
O8fM2XRDUK9pWBhbhHWyCMXG5eLARjecNu3zOstC3U/6XbvwgRZAsDDwwIED
cNVmHkONkmbS4fbMmTMx0aj/qlWr0OV/O2fcuAGz+S/5UCWTm8xYpB+HZiYE
2WAXlUej6T5t8B5j0H1XRFEoDg6oQoUK4Ze6SGBgILKBmSLAyZ8/v9KPPU7C
g2SGaJ3oG61s3bq127Gq+0yGBQkQUfpa6cqaWyHYefPNN7W7NbEGJhSjhPxr
DohiCXCwjRqe9TqbHmM2CawwZdQKeE+jCKxwbQgGISfcA7HgEI8fPw7gwaED
S7Zu3YqbwIMoasCkUHNCM02dC4qrachhkyZNCDHcG3cH8ccaNWrUKCqJ2/Xf
YTO0aN+CYCZ2DNZhfGRMpA60FF0oU6YMgi27h5Li73ATPNaoUSM4Zlttm/v2
BPLYASTCLbBahggDBcyAq3YMKOXzaWX78CR8pn81ikX0DYSAdTDcF1iMFntA
wuuE+fgXAI9kY9OmTTgmSg7zIioJmqUTfU7OgMeVWB4Riz3H+JVoenmA1q1b
t337doAZHkdoLTaVvyuyXtZZCQgJqBhMAsL/4IMPBgwYoE1Nwb3Uyj3mY6MN
UnNt912vXj2ARISzzUiE63wuX8h6Fk8gCwvVeOedd5TMJv4AX4HlGENcbZ0A
AZIRA+L6UqVKnTx5Uk4ttEAzOKoAQUHXrl2Ryddffx35R2zGjh1LaIzuE8qh
C1SYkpH2zz77LMLZ5CRI4PkEAkCHonFarSPjD05DzZUwSddQcs2aNWk+3ANE
gfyBKwD78ePHK8WXb+3duzd0c345O7oYIwbG1hYQoSPwUYFw2+ILVAPxQD7x
uQUKFKAy9NScOXNgThiFFfjhcwAD9FRKZyZIhdPLuHJstSHqeDHXNLx+/frg
NKVEBtXK7xzU6w2k+iNvmMo9e/ZoYE1e7+LFi9RNVQof1UowgC70Pjg2qP4W
ebmBhw2O2ai+wQyLSSXP3sAiPiJEbLU28bZQN3Qg1OMsLbfETis5boDEVMnn
2ow62njHRi99zh5KKCZeZvHixcizbV2iGM3vZPKjhsg54TDyrK2xrOa2sN2g
l9TN4yQqWLu8run1+z8y7HeR+74qLJ4oj1TeP35rqCE4XHzevHmDEvWDSFyi
IxAnHP2rr77auHFjnYYQ9KRWf0ycOBEHFKa28sI8QKyEzVQeI1YOWcUyyPOi
U8QF6IW2sFbUyR1NJhog54vY5Mcee0wZJiAKAMmSJUuQeRwEMT5+mf/yFgVi
6NoGCFfOW2PGjFEeGqaGF3n97bff1hlJsvB4bVqaIkUKCgGrm1sMYqNBC8xR
lixZcLvqvvDxkYCxdl3AKoKOqKdGLRRN8CtGEj9O3QxR87we4y9hL/Lvcw3b
ep2pfMpEbABIHtdSiP379+NBiBCxBrJs3sCqW/UFARF+AebwqyoGz3EQ+II/
YtrhP4ghFE7sTI/gHxVzEermy5cvzD5XUYFlX4UKFSLE0+HydARiCSIFk4Mz
MY9aCRveaxw+fBhfgw9VF9PjIDrsg6aq/dHNVseZzORqd/QZM2bgGQEDYDmd
1CbMQFRueQWhMYUyEvnLiw0bNtTWT3Ks4aEXrEDUwZD4GiFVAmSwEBoN2+Wp
+/fv36pVK1Al3ABL4OuXLVum0J4PRd3ZBHkDyxVRmcmTJ/fu3btdu3boKfC+
XLlyCMnq1at19mi6dOkAXUKPESH7pHkCe6wBFTSHbgNKtLRSpUooFzfpX8IH
TApWCOiSIUMGsBBiz7fQXzwprKCZNAFOBgXsnsBORFSSarz44otaE+SJaWOW
yMC2VMRWYDZ0QfsMU4dPPvkkzIvqFFpNLBO0HsdcpAYqw3w6bkSj6MRXXnlF
i0nDPEkFkAEiDiRf+eTq69gP1Eiu4A8WRsvP46MFt5WPkSf007kh92EY895J
CwpA48By3BOhB0wGb/wQIBvo4xqhQunQ/UelaW5yA7ZQMTMsSiyMo8Qah67v
uHdSMidGAA6HeczjLBbQSmGeX7NmTbQAyevs0xt+vzivs6ET7gOvilHFcPXo
0QMrxIXGuPgWFq9Dhw7YWIweVnf27NkYLiUNGiDhYcJq4AewATkneAFjTJ8+
HW/If2FdqlSpTpw4QUspYejQoRjDnj174jv4tCZBMHpTpkwhZGvevDmV4ZoS
5JSJstOnT4+dzJgx444dO7zO/njutpiboybYfJiDWNpIxZ04IISMpV25ciXe
k7ALy38lQFqppFGjpUuXFitWTPuT2C5z/BeY2qBBg8GDB+s4bItZbKhq7dq1
xJsw0OtkItFSwAYNFLg1HK6pAc2qwF6Qg2IrPgSAAYl17Njx3yEbO4cnnp80
aRJdoJG9PwJHCWAnw+SQRAUiQfASX9Q2EdoAFjgKwMCf9uvXL8Zzk2kpbu7A
gQNwFXeD9aCcjz/+WImdPmdD2vgC9n5XhqqG7suWLQvn6UH8LPKmQQB5Sf8d
FlDLlcNwwAO+W4mLsRkLksh9GSBEDr8Mo5B/hFZjYpqFx7mDiDQrh3y+8cYb
IA3ApztbVZLjLt9GCLW+gFfApYCZhQsXwttvvvlGCSSgZbx5hLMjYugICc0Z
NmzY7t27/a5VMESauFcgHEwDK2bLlg0tA+cAvFEfFI0CqSryg2Wg2nQoSE8z
oW7mCwAgWsQd6K9tBhJeViVCmp9CIGER/YWmIPlhFNbiZQHsIF55nVWZCTHM
TpnSXFvxdCeKDGyKjgXLnTs36qytS+4qmvA5i1V9CXNqAwUSfFWuXFmpgPFb
eAKRhjJgLCEzcBTbi4hqKRySKcgnNbFR3EelaW4KA0jcg7oEuUSpKGOo0bhH
8gW2UMBxpEyZEosd5klbNcBfAnOshI6zCQXeakuMsxU2kKU0D+Szc+fOpUqV
AidoikEzjFxg1QFLfI7rDRs2vP766yB/20LEFxjbx1iBurt160YJaCIQrnjx
4tpL8JlnnsFYYWq0fxSBKh5f/p07CBV2T4ewgFKwkLhCAkx4ju8Dw9euXTt7
9uy4QuIvAZLQIMVGSLRHFqZ13rx54lUYh8JPNGr8+PH169fno5s2bdKh8B7n
eAXZVeSfWBI0bisCwDDoMp+AbyYV7sFYgQfCPdpOsOlz5nlpeKZMmfB6tiOl
yRiEA61atWqNGjW0S4wGiGB16dKl4a1SXmOPh+ESNQcl0q0qHx+ERQ3aJzmI
+ARuBWBJMK4Dcbp37z5mzBg8Go4PV0WZ4bXAxmA1gUUXA9gwIPBKQb3fWeEY
y4bESH5X+jFc0gFbAAPiboDcrFmzEGCxztBIEBv1LqyeP3++thuKiG5bhiDy
OEtdkJlLly6hI5s3bwaHa/Mf01aPs5ZEX0GwkyZNSg0HDBhAoGeDnKHTHCY2
WkjidVIFlDwgBeT1ggUL0ll+ZzY2qGkacudDICIbQvEE9hQCnRIKIdhvv/02
cgKQQ3eURASI9QQ21siaNSsyg7QPHz68UKFCOvYuiPNIGiKNqKPIkc4q7PD9
KxESl/4nQGJR+KRWvWVJiaE/RRtXxgvxUeIygoUYR0hkPImnkECQJxhV+PZu
E8DcMy/x1Ij/JQokEjx48KBOE34khhHceR3KbEFQkUZEVJvDuBPe9FgCSUKC
UnhAYsPs2iYF9CUliscKeAKZxkQoyZIlA7VGucZvo26P/iKddGivs68mQEKK
H2pdYyPJHmeXBmVe4a00akG0og6VRY10jrwUIvruu+9QTCU/mH3AgIM9mjRp
gkvV8UOgCPwapuzxxx8vUaIEZg3XRlh34sQJYAaYFtMHRJk4cWLTpk0LFy4M
JNB5pjQKEEJMXa5cOVBKs2bNADPPP/98q1atcIiafYh25Ec+NzKw1IIn69at
axy7Ewf8ga376dzZs2frXEKZAnlMm/HBdDdv3rxHjx6nTp3Ceu/cuRPfSqx6
4cIFNMLj2hHCcJHC7U6dOj377LMSGzlo6o8z0jLnKGcsS93978DmSy+//DLC
oDpIuf4InACVOXNmnRoWe9HSMA5AF3QnG045AJvwM4O8BQJJkyYNzaSnaCPN
RzywXfQppenU+/DK7nNyR7EbwDYKbNmyZYMGDXBbFBXtaMC9k5iv7aARnmoB
4gIngiBpQwYx0B8yA6760FN0q5awSeDDx9oeZyc6YXIlZisz2fJgvc46eo9D
c+fOfeyxx8Cl2bJlA38CY+6UV+Bzplc8rgPIhHBsvST1LFCgQMmSJX2BbWRM
Qsx0qCYoJmBeaTx+Z4PigQMHgr6QUgD/U089BZxAs2h7zpw58VYauOvTpw/w
HriOLoNblMtkn1DbUQqwCmrOVyTPMe7/43d27I90DgOy8cwYh6QinANEggo0
uYqzh/W7Mi6iXKZYPdiuXTtCg2hnyd1kfQ2Kw3xhOjQcGgRIwjdTDycQWjDb
ouGsRwKQ+JxtJD2uM6S8zspQnzMP63WSxMKPjT+0hArv27dv//79+KPQBDMz
CEAF9FGiqGnf+CJ5HKJO4guckbE30nWuhMfZ0MlcXpSTbh0t6vDfzRy937X9
iLIa1Jvuz7kxEh/VngzSfT1M+AZgmzRpkvKmli9fjosnNMAT0S6gDiH2W2+9
ValSpUaNGjVu3LhmzZqVK1cuVaoU/jFv3rwYPS0BUJSkfRiw2yAfcA4lYCFr
1KhBIQAh06aghphJ59fBgwe/+OKLZ8+e/cN1BnG0hIH9+uuv3aceuHko5lPC
hg0b2rdvP2TIEMJbCh83bpwOEYhwDhX1u6awNbIBK3gFNGUmF/rqq69Sp069
YMGCfwf2CbQwnHbR3urVqxOHai9Qv5Oryd/jx4+D6ObMmRN7FZPT4SsZM2aE
w0qKICp/4YUXwm9xBvOpdqpUqaiSzXEohsUaa/lS6Mah0faFxitmzpwJlvvk
k09Wr16tZeBBrI5HEtO0KmR3gNAspAsmwFiT89CvywVobTuIUcuaYgzYLWoQ
qXdsXMX9Id2RysAERBqMPWjQoOLFi+s0LiHYyJD1pKEeVmUKL2nRCqAC0OUL
7O/3h7PXipllhYqwHUimvQpNtblD1wDd0USEBLGEXeDzihUrCjfyCZ5B9RBj
NBHJRzitgdIOqg2QBsVNnz7dmhzjRINxxu/sPOaLRaqkz5nvu9OT9yhaMmhK
WzVLKGbCZwKuMmXKaBeRGCupOqC54L0BAwYA89wgzR/TOvqE05Go2/fXSriv
xC+5Bcbj7HpnyuV2Unb/UcFabsKt4CiJpPr166fzmo1M+CF8KGGm8KSlJccL
6RP4RFSeKFiOQ/Jvg5Dhp+zvM/kDQCjStXhcIG3WrFkE1Da0IhuLfWvYsKEO
lOR62LBh3bp1I9oCaWD3uEBVMYNaZmuDsZY4SrhK4Fa4cGFit+3bt2srCZ8z
jh2mhufOnaPLxo4dG+MJQe7xsVAnZUQhlLlixQpqi7/TNE20htE4QFsmTpyI
Z9cMsm7CCsAtLmDLli20muqBiIhGET/ug+J0/k5QJa9cuQLeq1+/fuzFQGKD
8cyQIUOOHDl0wtHo0aORsdCdWt2EeFO9FClS8FGfk6krzElRQCbNEoZ302Yx
eJg6aLJJbjGW9Y8byc7DcI1Fy2vD52LFihUsWFAptdGGThqolNzycJ06dbSu
JCGCLLhRu3ZtsDoXU6ZMASIi21pyGPvRV/VLRGC/BWSjQYMGGjnU6IFZj0jX
eQ0oVNAhYhGB/XCOHDkC3gYPz5gxA4zUsWNHHYVghgjNJVYCQe3YsSPSOVAS
+vHHHxESKl+2bFlAbFC+66NIluKus+mly7JL8JmYFD7flVTwOrYdvcMWXb16
1T1jGB56JdKfk3AHvXv3xmlir4KWQ1rUgwJiookaLK8gfgFJZOD0CoI4ogx5
Ab+z9Z/lNQWBpQdIZt88zgYONkPhcTb+Us21cIZ4kJ/wBf8VIFwwdvjWrVtw
HgumXYMM4ficFNmIwAaMKDIOfeTIkXZEhcWM4V0z3vPLL7/Ev2vVf/jmxAaQ
eJyNiOW2bCLeF5I6peeF07DkyZIlI04XlJV/PHXqVNOmTRs1ajR06NBJkyaN
GDECF9ClSxcetsn0oEoiHkWKFClQoED4Ae2gamgOAleCaF26dMkb2MMWUAGy
CvMiVa1ZsyaARAdyaTAE+v777+kLbeobvhoGSKKckQdbnpkQy36DPu11EkG9
Tmol/VWpUiU6Ajb677DwylZtQxMmTMDFz5kzZ+fOneEPjIsb8YkDBw6A3ikc
rrZs2RL8s2vXLu2HFstCIp3DT69fv54tWzademaqocncIISjfgwqxIYCYNTJ
kyfBxt99951SbTWWpfVHixYtwqVqLx2bQjpz5oz2Ex48eDBC9SiOkAcRjaKN
sFSLi/3Oqbg0TYeqIBt3lf4kYSMEWLhwIYqvLnYPDSVSIrkJh4jRxmlit/fs
2RP0qzAJIqRUQ5tGiUdZkl/TmTIYfJ2iKztA3W7evInhOnv2LH48vr54j+Qe
tLEZJeXXaVjApvkinIOwldNl2w7rJ2W0apzcChTekxbTL8TjuXLlQpG1Lckf
rq2/w3eBCtF61fBRZywBSYRz4oZINbQ8gaC31Gpv4BjZ0qVLg3gx8vYizceM
Y96JkQcMGAAgITjVbnVa0hgRssUlBg2n06JFi9hbQgkqvG3Tps1zzz2Hb9US
nixZsoQ/v+yPwOFK2F5t5GL7f2KlU6ZM2aRJE/mv8Px3M9NGtDwx5YjeO/md
6TyDJfyFt6+88kqxYsU0MRftbILyt9Wt33zzzdtvvw0mKV++PO/GeyX5ugJw
JBzFOX36NFwdOHAgvXxXobc3cMAotc2aNeuQIUMinZ2IAJ8rV64EfG7YsMGd
txCqNT4n90nzpMpLEYBUTGGhBxXWMJeNvWiERIMkiIr9FM/Mur9EiDRmzJjV
q1fbgYbSWXqKqCF16tTaii323WTshYEUTtdo7XlUIiBJpOgIOUHArl27lj17
diLxoF+9zhF+FSpUaNiwoeU7xaNdVRzHJwoWLJg+ffq9e/fivHDBa9euxch0
7dq1WbNmrVq1wuzE1xfvkWzgyO+kkPlu3/vO72wFaQMLtkOCexjE79o/1u/k
S9gcGUSEnilTJjCJVvRoWxK3dQ1fSUv/CO/EQ2ceo/3JxklsJNw8bLSARFXV
iSGrVq3CbusV887ESkgdXt6G2X3OWj8bZhchGxhJAMmmTZvuatmvemHUqFHP
PvssHop358+f/9JLLwWd9htEfB13nC5dOh2FZnlE/JebxYsX1wyU37WDkNe1
HMDnWnRpgyRuNsa+/nEgiVmEswejpmCGDRuGy546dar/9rPMgl60HYC52LFj
BwYBVJZAeqd0EY0i8peASDOSsXdSEm+tYAK0v/POO+BMJGTw4MGtW7euU6cO
qBLHGuksLY+KbprAOiXSSf+2gSyvK7fTBD7COf0tyAgo0IgxX+shJ9qC1c2Z
Myd9oalzm8hbtGiRHeMbeoJAGPK6si7hHvquU2VjDKkS6SEk94C5z3Wytjuk
df8a5D5MDd1hkV3/ETi+gajk+PHjQ4cOTZEixccffxxUAWkcWl+oUKF27dq5
o4Z4bKMWvoF5UqVK1a1bt/bt2zdo0ID/5s+fv2LFiu+//z6w5OEBJAlN/sCk
D7RixYokSZJoo0gNwjzoqsWF4mZ5zPgjn3jScuXKDRgwQKd+xL40gT1t1rpu
3TrEfty4cdr2P8xbfJfPZcyYMWgYhNdr1qzJfZ0o4XM2Odc8VKRru+DYD+PE
O/mdbE8Nqf3yyy80PEeANEYUG1fiDaz/hVc9evQAJNyHakfdfbwsB6dV+U2b
NgWvYqCIXOrWrdu5c+eZM2du2bJF4zAJVOH/PKILlixZorM14apiVYz/wYMH
Xw3QgQMHIp1Tw+L8ifitcyLdB7LAymYEzNy5A3OLUjXMKPOIJbHD3y9cuHD4
8OGtW7cuW7Zs2rRp06dPB+jOmTNn8uTJXI8ePRoE0rFjx/r16xM2vvHGG7t3
7w6qiddZe5I5c+ZevXp5Aoe/xG+U5wssGNSpu/hfPlS5cmWiGzDS7Nmz9+3b
d/XqVZoTv2uNH2byOxuF0TVPPvnkV199ZdNAfx51xhgiabt27frggw+qVKnS
p08fYitLo41lIZr1e+WVV5InT44goSAIFQEgRYV5C20qWrRo7ty5g2ZY+O78
+fOTJk0KRNRoFYWjazdv3vwmQLZ4855afs+kXCZAF8BpwoQJ6HWWLFmqVasG
rkOPNFgXHiVqhAowo+NEH06pUyAjM0hETyAzcODApUuXHjt2DNMneyg9etA1
fZQIYwvqrlSp0qlTp27cuHHr1q3FixfXqVMnT548XGjqWaNJD7qmiXT/yMY0
bCJYwEOQI9I5Re7XX39F9c6fP79t2zZMpZDGsGHDgBmoZ4cOHd59991atWrp
2NlsAcqXLx+xUlaHChYsCO4tX748McXGjRuDUtCjbgckOAVNyocmG9wLaUZD
e1ZUrVq1Z8+eIKjLly9r53YdLqNwL76++JCTJdXgiNOlS6czZf6I6dSt/zBC
FDGGgwcPbtmyJShap+NFm/wQhmAjgBwIgZwrlwbtAHujOGHe+v3333mmZMmS
oYAEK41lLl269Ny5cwH5U6ZM6d2790cffdS9e/fly5fbYsm4Nzs+iGrglKlV
o0aNEKEGDRqMGTNm7dq1mzdv1kaCMfLQHQfFmC3zoMjvHMOhmUGwk47e+8M5
NleTQaFHzyRSGIJvRAFITrt27QB4uBIcBFJEAItFkjAIBz7omibS/SObvvQ4
p+cgDL/99htGdd26datXr545c+bw4cPx3aCO1q1bN2zYsHbt2lyAQJo3b67z
3Nu0aYOLx1QCJDDswwNEhIhN1gVmat68eRhS4gsAgLQ42poIkPTv318T+vGb
1Cqjh508evTooUOHfvrpJ0shUIqackEfuJ2/b+RzFjO+/PLLhLdSfw22P5yu
ISEIDiDwu3fv1lYqfte+AeFfFIvkp+DhBx988NRTT2FdheGR+QIFCoRPkMa1
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
MjfsXRup0IUOu8dIAgBwcASYoAV8PTDgwoULeDGcAvZZATgYg2ssOfaTB667
6FKAABhnz57lgodxEFyDKCift3TiFaEiv4I9eADUcerUqePHj3NBCRQuEKL9
oLRDFD9xn1odO3aMYJlf+QmcY7tFaZcDUA2uGbfCRyn5WoD4lXYBVyzfWPkG
cgduTtrGWV5XhqSb7Oxd94ySu3fcHWFiYHfcM1AeZxsHnysr0vrLHrM8QA0I
IE60ncZqYcWqVatAGhMnTgR4TJo0SVtvgUmWLFmyc+dOWMHzaq99SEJlYb4+
6k55DZqA892e7WPPU5nevXvny5cP3sbXRIPfSVykwo0aNSpVqtS2bdsQwojA
4ezqL/ULgrR58+Y+ffpUqVIF/WrduvWsWbMQEtvb34Ya3G0J+px2KdGMT8+e
PQkc+GjBggVLly69adMmWOcefLOGx22EBC5VqFAhW7ZsHTp0QNTde0FTASBi
zZo106VLR6PUWZ673A4ukRKCLO2KvsuePbupSSJQTKRHjvyB8We8do4cOTp3
7hy3QtxTFbpwn/PrvjC/5j4LWJYc6/3rr78KD+Cd8e84caw3zpq/gAoqiZu7
HCCgAp59z549/KQRD2AA93lAWzqAQPD1vKWtkGyAQqT0QhpO4Cy/r/u2p4T8
oxL+bW8BKql9Jm1UXM9oNcf/DZAOmaIVlKwP/Rag/9femcf5XK7//49TJIka
axzbQ6FCKJSYiCLryC6SLYbQIWMZk+xkLNlmZBk7Y1B2o0ZoLNnLLrK0kHN0
+nb+OJn5fPyev8/rvO/H7fMZY0xjhnpff3we73nP+32/7+W6r+t1Xfd1Xzdm
Mr+0CDmPCgbbKN0ldQbzHPMRbaH+VFswhscANrQU5IOm0H16hnKM1awU36bn
jWdAriGDVbxW2EyS79RRY5sb4Gdf2OtTQkfmRY+z2UqF8CHaSOsYr8TERGz/
eT5auHAhynf48OHgkMWLF69YsSIuLg58sn//fgZLMDIT0kZR1alTp6LEjbPl
j5epXhIsXLt2LRMHvEED0dfiB/oEcDt37lywEHAF5NCyZcthw4YBmOUfS76d
2GbNFw0BTNK6detcuXJVqVJl2bJlGX5+AWw8cODAcePGAacN2DBEzWNjY4OC
gkJCQsyhmS4gyXLSQiS/L7/8cvHixW0LxcUkLt1bJOWCqKlWrVrjxo3TXYht
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

    "], {{0, 89}, {731, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{731, 89},
  PlotRange->{{0, 731}, {0, 89}}]], "Text",
 CellChangeTimes->{3.785534731477183*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"64d0d6bf-1eab-41bc-a7cd-251369f4e925"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Rspar", "[", "\[Phi]_", "]"}], ":=", 
   RowBox[{"RotationMatrix", "[", 
    RowBox[{"\[Phi]", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Rhinge", "[", "\[Psi]_", "]"}], ":=", 
    RowBox[{"RotationMatrix", "[", 
     RowBox[{"\[Psi]", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Assumption", " ", "Rcop"}], ",", 
    RowBox[{"x", " ", "=", " ", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["r", "^"], "1"], "R", " ", "in", " ", "Chen", 
      RowBox[{"(", "2016", ")"}], " ", "eq", " ", 
      RowBox[{
       RowBox[{"(", "5", ")"}], ".", " ", "Ixx"}], " ", "from", " ", 
      "\"\<incorporate R\>\"", " ", 
      RowBox[{"notes", "."}]}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wingsubs", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"R", "\[Rule]", 
       RowBox[{"Aw", "/", "cbar"}]}], ",", 
      RowBox[{"ycp", "\[Rule]", 
       RowBox[{"R", " ", 
        SubscriptBox[
         OverscriptBox["r", "^"], "1"]}]}], ",", 
      RowBox[{"Ixx", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{"mwing", " ", 
         RowBox[{"ycp", "^", "2"}]}], "*)"}], "0"}], ",", 
      RowBox[{"Izz", "\[Rule]", 
       RowBox[{
        RowBox[{"cbar", "^", "2"}], 
        RowBox[{"\[Gamma]", "^", "2"}], "mwing"}]}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", " ", "nonlin", " ", "transmission"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Tau]inv", "[", "\[Phi]o_", "]"}], ":=", 
    RowBox[{
     RowBox[{"\[Phi]o", " ", 
      RowBox[{"ycp", "/", "\[Tau]1"}]}], "-", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Phi]o", " ", "ycp"}], ")"}], "^", "3"}], 
      RowBox[{"\[Tau]2", "/", 
       RowBox[{"(", 
        RowBox[{"3", 
         RowBox[{"\[Tau]1", "^", "4"}]}], ")"}]}]}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "draw", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"drawWing", "[", 
     RowBox[{"sol_", ",", "a_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"pspar", ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"A", " ", "wing", " ", "in", " ", "local", " ", "fram"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"polyverts", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "R", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "R", ",", 
             RowBox[{"-", "cbar"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "cbar"}]}], "}"}]}], "}"}]}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pspar", "=", 
        RowBox[{
         RowBox[{"Rspar", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "R", ",", "0"}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Transform", " ", "to", " ", "world", " ", "frame"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"polyverts", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Rspar", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ".", 
           RowBox[{"Rhinge", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], ".", 
           RowBox[{"polyverts", "\[Transpose]"}]}], ")"}], "\[Transpose]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Graphics3D", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"Thick", ",", "\[IndentingNewLine]", 
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "pspar"}], 
                 "}"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Polygon", "[", "polyverts", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Opacity", "[", "1", "]"}], ",", "\[IndentingNewLine]",
                "Blue", ",", "\[IndentingNewLine]", 
               RowBox[{"Arrow", "[", 
                RowBox[{"{", 
                 RowBox[{"paero", ",", 
                  RowBox[{"paero", "+", 
                   RowBox[{"1", "Faero"}]}]}], "}"}], "]"}]}], 
              "\[IndentingNewLine]", "}"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"FaceGrids", "\[Rule]", "All"}]}], "]"}], "/.", "sol"}], 
          "/.", 
          RowBox[{"t", "\[Rule]", "a"}]}], "//.", "wingsubs"}], "/.", 
        "params"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"plotTrajs", "[", 
     RowBox[{"sol_", ",", "t2_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"t1", "=", 
         RowBox[{
          RowBox[{"t2", "-", 
           RowBox[{"Ndt", " ", "dt"}]}], "/.", "params"}]}], ",", 
        RowBox[{"FD", "=", 
         RowBox[{"Faero", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\[Phi]mag", "=", 
         RowBox[{"First", "@", 
          RowBox[{"FindMaximum", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"\[Phi]", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
              RowBox[{"t1", "\[LessEqual]", "t", "\[LessEqual]", "t2"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"t1", "+", "t2"}], ")"}], "/", "2"}]}], "}"}]}], 
           "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\[Psi]mag", "=", 
         RowBox[{"First", "@", 
          RowBox[{"FindMaximum", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"\[Psi]", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
              RowBox[{"t1", "\[LessEqual]", "t", "\[LessEqual]", "t2"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"t1", "+", "t2"}], ")"}], "/", "2"}]}], "}"}]}], 
           "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"avglift", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Faero", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "/.", "sol"}], "//.", 
               "wingsubs"}], "/.", "params"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "t1", ",", "t2"}], "}"}]}], "]"}], "/", 
           RowBox[{"(", 
            RowBox[{"t2", "-", "t1"}], ")"}]}], "*", 
          RowBox[{"1000", "/", "9.81"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\[Sigma]amax", "=", "0.35"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<\[Phi]mag=\>\"", ",", "\[Phi]mag", ",", "\"\<, \[Psi]mag=\>\"", 
         ",", "\[Psi]mag", ",", "\"\<, avglift=\>\"", ",", "avglift"}], "]"}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[Tau]inv", "[", 
              RowBox[{
               RowBox[{"\[Phi]", "[", "t", "]"}], "/.", "sol"}], "]"}], "//.",
              "wingsubs"}], "/.", "params"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\[Sigma]act"}], ",", 
           RowBox[{"GridLines", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "\[Sigma]amax"}], ",", "\[Sigma]amax"}], "}"}]}],
              "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Phi]", "[", "t", "]"}], "/.", "sol"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\[Phi]"}], ",", 
           RowBox[{"GridLines", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "\[Phi]mag"}], ",", "\[Phi]mag"}], "}"}]}], 
             "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Psi]", "[", "t", "]"}], "/.", "sol"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\[Psi]"}], ",", 
           RowBox[{"GridLines", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "\[Psi]mag"}], ",", "\[Psi]mag"}], "}"}]}], 
             "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Faero", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "*", 
               RowBox[{"1000", "/", "9.81"}]}], "/.", "sol"}], "//.", 
             "wingsubs"}], "/.", "params"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<FL [mg]\>\""}], ",", 
           RowBox[{"GridLines", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", "avglift", "}"}]}], "}"}]}], ",", 
           RowBox[{"Filling", "\[Rule]", "avglift"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"FD", "*", 
               RowBox[{"1000", "/", "9.81"}]}], "/.", "sol"}], "//.", 
             "wingsubs"}], "/.", "params"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<FDx [mg]\>\""}]}], "]"}]}], 
        RowBox[{"(*", 
         RowBox[{",", "\[IndentingNewLine]", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Tau]act", "/.", 
              RowBox[{"c2", "[", "]"}]}], "/.", "params"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "u"}]}], "]"}], ","}], "*)"}], 
        "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"debugComponentsPlot", "[", 
     RowBox[{"sol_", ",", "t2_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"stiff", ",", 
        RowBox[{"t1", "=", 
         RowBox[{
          RowBox[{"t2", "-", 
           RowBox[{"Ndt", " ", "dt"}]}], "/.", "params"}]}], ",", "M", ",", 
        "inertial", ",", "Mdiag", ",", "inc", ",", "ic"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"stiff", "=", 
        RowBox[{"D", "[", 
         RowBox[{"L2", ",", 
          RowBox[{"{", "q", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"M", "=", 
        RowBox[{"D", "[", 
         RowBox[{"KE", ",", 
          RowBox[{"{", 
           RowBox[{"dq", ",", "2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"inertial", "=", 
        RowBox[{"M", ".", "ddq"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Mdiag", "=", 
        RowBox[{"DiagonalMatrix", "@", 
         RowBox[{"Diagonal", "[", "M", "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"inc", "=", 
        RowBox[{"Mdiag", ".", "ddq"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ic", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M", "-", "Mdiag"}], ")"}], ".", "ddq"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
           RowBox[{"inertial", "//.", "wingsubs"}], "/.", "params"}], "]"}], 
         ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"inertial", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<i\>\""}], "]"}],
                    ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"stiff", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", 
                    RowBox[{"\[Tau]damp", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "\"\<g\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"\[Tau]aero", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<aero\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"\[Tau]inp", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/.", 
                    RowBox[{"c2", "[", "]"}]}], ",", "\"\<act\>\""}], "]"}]}],
                   "\[IndentingNewLine]", "}"}], "/.", "sol"}], "//.", 
                "wingsubs"}], "/.", "params"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                "Dashed"}], "}"}]}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"i", "\[Equal]", "1"}], ",", "\"\<stroke\>\"", ",", 
                "\"\<hinge\>\""}], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "2"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"inc", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<inc\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"ic", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<ic\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"inertial", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<itot\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"stiff", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<gtot\>\""}], 
                    "]"}]}], "\[IndentingNewLine]", "}"}], "/.", "sol"}], "//.",
                 "wingsubs"}], "/.", "params"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "Automatic", ",", "Automatic", ",", "Dashed", ",", 
                "Automatic"}], "}"}]}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"i", "\[Equal]", "1"}], ",", "\"\<stroke\>\"", ",", 
                "\"\<hinge\>\""}], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"aeroForce", "[", 
     RowBox[{"{", 
      RowBox[{"\[Phi]_", ",", "\[Psi]_", ",", "d\[Phi]_", ",", "d\[Psi]_"}], 
      "}"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sparVecB", "=", 
         RowBox[{
          RowBox[{"Rspar", "[", "\[Phi]", "]"}], ".", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ",", 
        RowBox[{"(*", 
         RowBox[{"vector", " ", "along", " ", "wing"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"chordB", "=", 
         RowBox[{
          RowBox[{"Rspar", "[", "\[Phi]", "]"}], ".", 
          RowBox[{"Rhinge", "[", "\[Psi]", "]"}], ".", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}]}], ",", 
        RowBox[{"(*", 
         RowBox[{"wing", " ", "chord", " ", "unit", " ", "vector"}], "*)"}], 
        "\[IndentingNewLine]", "le", ",", "ne", ",", "pcopB", ",", 
        "rcopnondim", ",", "\[IndentingNewLine]", "eD", ",", "eL", ",", 
        "\[Alpha]", ",", "paero", ",", "Caero", ",", "Faero"}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Leading", " ", "edge", " ", "velocity", " ", "direction"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"le", "=", 
        RowBox[{"Cross", "[", 
         RowBox[{
          RowBox[{"d\[Phi]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ",", 
          RowBox[{"ycp", " ", "sparVecB"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ne", "=", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"le", ".", "le"}], "]"}], "+", "\[Epsilon]aero"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"COP", ":", " ", 
         RowBox[{"nondim", " ", "from", " ", "Chen"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"rcopnondim", "=", 
        RowBox[{"0.25", "+", 
         RowBox[{"0.25", "/", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Exp", "[", 
             RowBox[{"5.0", "*", 
              RowBox[{"(", 
               RowBox[{"1.0", "-", 
                RowBox[{"4", "*", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Pi]", "/", "2"}], "-", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"\[Psi]", "^", "2"}], "]"}]}], ")"}], "/", 
                  "\[Pi]"}]}]}], ")"}]}], "]"}]}], ")"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pcopB", "=", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "d"}], "}"}], "+"}], "*)"}], 
        RowBox[{
         RowBox[{"ycp", " ", "sparVecB"}], "+", 
         RowBox[{"rcopnondim", " ", "chordB"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Lift", "/", "drag"}], " ", "directions"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"eD", "=", 
        RowBox[{
         RowBox[{"-", "le"}], "/", "ne"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"eL", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Aero", " ", "force", " ", "calculate"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{
         RowBox[{"\[Pi]", "/", "2"}], "-", "\[Psi]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"paero", "=", 
        RowBox[{
         RowBox[{"Rspar", "[", "\[Phi]", "]"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "ycp", ",", "0"}], "}"}], "+", 
           RowBox[{
            RowBox[{"Rhinge", "[", "\[Psi]", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{
               RowBox[{"-", "rcopnondim"}], " ", "cbar"}]}], "}"}]}]}], 
          ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Caero", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"CDmax", "+", "CD0"}], ")"}], "/", "2"}], "-", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"CDmax", "-", "CD0"}], ")"}], "/", "2"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", "\[Alpha]"}], "]"}]}]}], ")"}], ",", 
          RowBox[{"CLmax", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", "\[Alpha]"}], "]"}]}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          SubscriptBox[
           OverscriptBox["r", "^"], "2"], " ", "from", " ", "Whitney", " ", 
          "2010", " ", 
          RowBox[{
           RowBox[{"(", "2.23", ")"}], ".", " ", "Assumes"}], " ", "Rcopx"}], 
         "=", 
         RowBox[{
          RowBox[{"ycp", " ", "stays", " ", "constant"}], " ", "-", " ", 
          RowBox[{"OK", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Faero", "=", 
        RowBox[{
         RowBox[{"1", "/", "2"}], "\[Rho]", " ", 
         RowBox[{"d\[Phi]", "^", "2"}], " ", "cbar", " ", 
         RowBox[{"R", "^", "3"}], " ", 
         RowBox[{
          SubscriptBox[
           OverscriptBox["r", "^"], "2"], "^", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Caero", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "eD"}], "+", 
           RowBox[{
            RowBox[{"Caero", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "eL", " ", 
            RowBox[{"Sign", "[", 
             RowBox[{"-", "d\[Phi]"}], "]"}]}]}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"paero", ",", "Faero"}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Psi]", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Pi]", "/", "2"}], " ", "-", " ", 
       RowBox[{"CD0", " ", "should", " ", "remain", " ", "in", " ", 
        RowBox[{"drag", ".", "\[IndentingNewLine]", "Need"}], " ", "to", " ", 
        "check", " ", "lift", " ", 
        RowBox[{"sign", ".", " ", "Trying"}], " ", "to", " ", "coincide", " ",
         "with", " ", "2", "D", " ", "sim", " ", "results", " ", 
        RowBox[{"https", ":"}]}]}], "//", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"github", ".", "com"}], "/", "avikde"}], "/", 
           "robobee3d"}], "/", "issues"}], "/", "88"}], "\[IndentingNewLine]", 
        RowBox[{"i", ".", "e", ".", " ", "when"}], " ", "stroke", " ", 
        "vel"}], " ", ">", " ", "0"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"hinge", " ", "ang"}], " ", "<", " ", 
     RowBox[{"0", " ", "for", " ", 
      RowBox[{"lift", "."}]}]}]}], "\[IndentingNewLine]", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"aeroForce", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Pi]", "/", "4"}], ",", 
          RowBox[{"-", "1"}], ",", "0"}], "}"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "//.", "wingsubs"}], "/.", "params"}], 
    "//", "Simplify"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.785163733169914*^9, 3.785163768788862*^9}, {
   3.7851638219331465`*^9, 3.7851638221495667`*^9}, {3.7851638575914416`*^9, 
   3.7851638656639175`*^9}, {3.785163952461292*^9, 3.785163959194874*^9}, {
   3.785181113450061*^9, 3.7851811849114933`*^9}, {3.785181223420051*^9, 
   3.7851814480879383`*^9}, {3.7851815284493275`*^9, 3.785181574334261*^9}, {
   3.785181607927892*^9, 3.7851818562133703`*^9}, {3.785181897023181*^9, 
   3.785181973204109*^9}, {3.7851820183846817`*^9, 3.785182035584442*^9}, {
   3.785182130927059*^9, 3.7851822788151007`*^9}, {3.785182768706132*^9, 
   3.785182824611698*^9}, {3.7851835377984476`*^9, 3.7851835381465435`*^9}, {
   3.785183574632366*^9, 3.7851838963880434`*^9}, {3.785183935005065*^9, 
   3.78518393938645*^9}, {3.7852369154777946`*^9, 3.7852369276973515`*^9}, {
   3.785237068661893*^9, 3.785237159502931*^9}, {3.7852390830870667`*^9, 
   3.785239105554223*^9}, {3.785239223653453*^9, 3.785239230566188*^9}, {
   3.785239332872146*^9, 3.7852394831645365`*^9}, {3.785239522904046*^9, 
   3.785239527846*^9}, {3.785239574459278*^9, 3.785239590976102*^9}, {
   3.785239663394473*^9, 3.785239765859336*^9}, {3.785239822253582*^9, 
   3.785239852287075*^9}, {3.7852411853333817`*^9, 3.7852412095104837`*^9}, {
   3.7852412747392893`*^9, 3.785241284555241*^9}, {3.785242577855811*^9, 
   3.7852426072696886`*^9}, {3.785242760532243*^9, 3.785242764687683*^9}, {
   3.785243042341342*^9, 3.785243082387663*^9}, {3.78524369984238*^9, 
   3.7852437033492184`*^9}, {3.785243878758131*^9, 3.7852438818282394`*^9}, {
   3.785250588656488*^9, 3.785250591357007*^9}, {3.7852507564570065`*^9, 
   3.7852507638104935`*^9}, {3.785253091532304*^9, 3.785253138847148*^9}, {
   3.7852531795009995`*^9, 3.7852531822852845`*^9}, {3.78525322760236*^9, 
   3.7852532347079835`*^9}, {3.785253269736401*^9, 3.7852533186729493`*^9}, {
   3.7852533499356813`*^9, 3.7852533536194243`*^9}, {3.7852534684496627`*^9, 
   3.7852534710220785`*^9}, {3.7852535409719725`*^9, 3.785253541682535*^9}, {
   3.7852537363906927`*^9, 3.7852537365316057`*^9}, 3.785254209543125*^9, 
   3.785254249221677*^9, {3.7852618005450153`*^9, 3.785261822043441*^9}, {
   3.785261857787959*^9, 3.7852618586202583`*^9}, {3.7852618892287784`*^9, 
   3.785261946037554*^9}, 3.785262059440189*^9, {3.7852620993981705`*^9, 
   3.785262120227375*^9}, {3.785263145319659*^9, 3.7852631460221624`*^9}, {
   3.7852632381337895`*^9, 3.7852632587033963`*^9}, {3.7852633271116285`*^9, 
   3.7852633460395827`*^9}, 3.785263472773306*^9, 3.785263866855198*^9, 
   3.785268139559249*^9, {3.78526972929168*^9, 3.785269729727641*^9}, {
   3.7852699615872583`*^9, 3.7852699902755356`*^9}, {3.7856194498325715`*^9, 
   3.7856194866198425`*^9}, {3.785620292632592*^9, 3.7856204176271205`*^9}, {
   3.785621000831133*^9, 3.7856210498957686`*^9}, {3.785621146464704*^9, 
   3.785621189540737*^9}, {3.7856212292364116`*^9, 3.785621241303481*^9}, {
   3.785830618745776*^9, 3.78583062683438*^9}, 3.785831709123893*^9, {
   3.7858334724121633`*^9, 3.7858334949023423`*^9}, {3.7858335584412346`*^9, 
   3.7858335601674433`*^9}, {3.785833642845225*^9, 3.785833650689127*^9}, {
   3.7858356619043493`*^9, 3.7858357311644955`*^9}, {3.7858357783741217`*^9, 
   3.7858357974762607`*^9}, {3.785835833989029*^9, 3.7858358613427205`*^9}},
 CellLabel->
  "In[530]:=",ExpressionUUID->"7405a249-8e74-42ba-8cb9-4ad6b37b789b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Lagrangian", " ", "setup"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"q", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Phi]", "[", "t", "]"}], ",", 
       RowBox[{"\[Psi]", "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dq", "=", 
     RowBox[{"D", "[", 
      RowBox[{"q", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ddq", "=", 
     RowBox[{"D", "[", 
      RowBox[{"dq", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"for", " ", "analysis"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pwing", "=", 
     RowBox[{
      RowBox[{"Rspar", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "ycp", ",", "0"}], "}"}], "+", 
        RowBox[{
         RowBox[{"Rhinge", "[", 
          RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", 
           RowBox[{
            RowBox[{"-", "\[Gamma]"}], " ", "cbar"}]}], "}"}]}]}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"See", " ", 
       RowBox[{"https", ":"}]}], "//", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"github", ".", "com"}], "/", "avikde"}], "/", 
           "robobee3d"}], "/", "pull"}], "/", "105"}], "#issue"}], "-", 
       RowBox[{
       "349667100", " ", "for", " ", "my", " ", "replacement", " ", "of", " ",
         "Ixx"}]}]}], ",", "Izz"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KE", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "2"}], "Ixx", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], "^", "2"}]}], "+", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "Izz", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "'"}], "[", "t", "]"}], "^", "2"}]}], "+", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "mwing", " ", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"pwing", ",", "t"}], "]"}], ".", 
        RowBox[{"D", "[", 
         RowBox[{"pwing", ",", "t"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "ma", " ", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Tau]inv", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", "t"}], "]"}], "^", 
        "2"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L2", "=", 
     RowBox[{"KE", "-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"1", "/", "2"}], " ", "k\[Psi]", " ", 
         RowBox[{
          RowBox[{"\[Psi]", "[", "t", "]"}], "^", "2"}]}], "+", 
        RowBox[{
         RowBox[{"1", "/", "2"}], 
         RowBox[{"(", 
          RowBox[{"ko", " ", 
           RowBox[{"ycp", "^", "2"}]}], ")"}], 
         RowBox[{
          RowBox[{"\[Phi]", "[", "t", "]"}], "^", "2"}]}], "+", 
        RowBox[{
         RowBox[{"1", "/", "2"}], "ka", " ", 
         RowBox[{
          RowBox[{"\[Tau]inv", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
       ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Llhs", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"L2", ",", 
            RowBox[{"{", "dq", "}"}]}], "]"}], ",", "t"}], "]"}], "-", 
        RowBox[{"D", "[", 
         RowBox[{"L2", ",", 
          RowBox[{"{", "q", "}"}]}], "]"}]}], ")"}], "//", "Simplify"}]}], 
    ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Llhs", "=", 
     RowBox[{
      RowBox[{"First", "@", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"And", "@@", 
          RowBox[{"Thread", "[", 
           RowBox[{"Llhs", "\[Equal]", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Phi]", "''"}], "[", "t", "]"}], ",", 
           RowBox[{
            RowBox[{"\[Psi]", "''"}], "[", "t", "]"}]}], "}"}]}], "]"}]}], "//",
       "Simplify"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Add", " ", "non"}], "-", "lagrangian"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"paero", ",", "Faero"}], "}"}], "=", 
     RowBox[{"aeroForce", "[", 
      RowBox[{"Join", "[", 
       RowBox[{"q", ",", "dq"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]aero", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"paero", ",", 
           RowBox[{"{", "q", "}"}]}], "]"}], "\[Transpose]"}], ".", "Faero"}],
        ",", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"R", ">", "0"}], ",", " ", 
          RowBox[{
           SubscriptBox[
            OverscriptBox["r", "^"], "1"], ">", "0"}]}], "}"}]}]}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Tau]damp", "=", 
     RowBox[{"-", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"b\[Psi]", " ", 
         RowBox[{
          RowBox[{"\[Psi]", "'"}], "[", "t", "]"}]}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]inp", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Tau]inv", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", 
        RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], "\[Tau]act"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]rhs", "=", 
     RowBox[{"\[Tau]aero", "+", "\[Tau]damp", "+", "\[Tau]inp"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Simplify", " ", "may", " ", "take", " ", "a", " ", "little", " ", 
     "time"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eoms", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{"Llhs", "\[Equal]", "\[Tau]rhs"}], "]"}], "//.", 
        "wingsubs"}], ",", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"cbar", ">", "0"}], ",", 
          RowBox[{
           RowBox[{"\[Psi]", "[", "t", "]"}], "\[Element]", "Reals"}], ",", 
          RowBox[{"ycp", ">", "0"}]}], "}"}]}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.785163733169914*^9, 3.785163768788862*^9}, {
   3.7851638219331465`*^9, 3.7851638221495667`*^9}, {3.7851638575914416`*^9, 
   3.7851638656639175`*^9}, {3.785163952461292*^9, 3.785163959194874*^9}, {
   3.785181113450061*^9, 3.7851811849114933`*^9}, {3.785181223420051*^9, 
   3.7851814480879383`*^9}, {3.7851815284493275`*^9, 3.785181574334261*^9}, {
   3.785181607927892*^9, 3.7851818562133703`*^9}, {3.785181897023181*^9, 
   3.785181973204109*^9}, {3.7851820183846817`*^9, 3.785182035584442*^9}, {
   3.785182130927059*^9, 3.7851822788151007`*^9}, {3.785182768706132*^9, 
   3.785182824611698*^9}, {3.7851835377984476`*^9, 3.7851835381465435`*^9}, {
   3.785183574632366*^9, 3.7851838963880434`*^9}, {3.785183935005065*^9, 
   3.78518393938645*^9}, {3.7852369154777946`*^9, 3.7852369276973515`*^9}, {
   3.785237068661893*^9, 3.785237159502931*^9}, {3.7852390830870667`*^9, 
   3.785239105554223*^9}, {3.785239223653453*^9, 3.785239230566188*^9}, {
   3.785239332872146*^9, 3.7852394831645365`*^9}, {3.785239522904046*^9, 
   3.785239527846*^9}, {3.785239574459278*^9, 3.785239590976102*^9}, {
   3.785239663394473*^9, 3.785239765859336*^9}, {3.785239822253582*^9, 
   3.785239852287075*^9}, {3.7852411853333817`*^9, 3.7852412095104837`*^9}, {
   3.7852412747392893`*^9, 3.785241284555241*^9}, {3.785242577855811*^9, 
   3.7852426072696886`*^9}, {3.785242760532243*^9, 3.785242764687683*^9}, {
   3.785243042341342*^9, 3.785243082387663*^9}, {3.78524369984238*^9, 
   3.7852437033492184`*^9}, {3.785243878758131*^9, 3.7852438818282394`*^9}, {
   3.785250588656488*^9, 3.785250591357007*^9}, {3.7852507564570065`*^9, 
   3.7852507638104935`*^9}, {3.785253091532304*^9, 3.785253138847148*^9}, {
   3.7852531795009995`*^9, 3.7852531822852845`*^9}, {3.78525322760236*^9, 
   3.7852532347079835`*^9}, {3.785253269736401*^9, 3.7852533186729493`*^9}, {
   3.7852533499356813`*^9, 3.7852533536194243`*^9}, {3.7852534684496627`*^9, 
   3.7852534710220785`*^9}, {3.7852535409719725`*^9, 3.785253541682535*^9}, {
   3.7852537363906927`*^9, 3.7852537365316057`*^9}, 3.785254209543125*^9, 
   3.785254249221677*^9, {3.7852618005450153`*^9, 3.7852618049458847`*^9}, {
   3.7852619352877183`*^9, 3.7852619378303013`*^9}, {3.785262049200818*^9, 
   3.7852620500145736`*^9}, {3.785262103253174*^9, 3.7852621096136494`*^9}, {
   3.785263447209785*^9, 3.7852634489854174`*^9}, 3.7852635401829467`*^9, {
   3.78526380795971*^9, 3.785263833479515*^9}, {3.785264076495087*^9, 
   3.7852640857027893`*^9}, {3.7852681432932625`*^9, 
   3.7852681474119186`*^9}, {3.785831869007831*^9, 3.785831870271266*^9}, {
   3.7858329219017763`*^9, 3.7858329347845373`*^9}, {3.785832983264346*^9, 
   3.7858330065270085`*^9}, 3.7858335037219863`*^9, {3.7858336604094815`*^9, 
   3.785833664118662*^9}},
 CellLabel->
  "In[473]:=",ExpressionUUID->"b8b499bb-9d2f-4be1-820a-74f2d72ede84"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"For", " ", "analysis"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"compareEomTo2D", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eomsanalysis", ",", "Mm"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"eoms", " ", "for", " ", "analysis", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"comparison", " ", "to", " ", "2", "D"}], ")"}], ".", " ", 
          "Also"}], " ", "comment", " ", "out", " ", "the", " ", "rcopnondim",
          " ", "line"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"eomsanalysis", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{"Llhs", "\[Equal]", "\[Tau]rhs"}], "]"}], 
            RowBox[{"(*", 
             RowBox[{"//.", "wingsubs"}], "*)"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Tau]2", "\[Rule]", "0"}], ",", 
              RowBox[{"\[Epsilon]aero", "\[Rule]", "0"}]}], "}"}]}], ",", 
           RowBox[{"Assumptions", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"cbar", ">", "0"}], ",", 
              RowBox[{
               RowBox[{"\[Psi]", "[", "t", "]"}], "<", "0"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], ">", "0"}], ",", 
              RowBox[{"ycp", ">", "0"}]}], "}"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Get", " ", "all", " ", "the", " ", "terms", " ", "on", " ", "the", 
          " ", "LHS"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"eomsanalysis", "=", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"eom", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"eom", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"eom", ",", "eomsanalysis"}], "}"}]}], "]"}], "//", 
          "Simplify"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Mm", "=", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"eomsanalysis", ",", 
            RowBox[{"{", "ddq", "}"}]}], "]"}], "//", "Simplify"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<M=\>\"", ",", 
          RowBox[{"Mm", "//", "MatrixForm"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<M=\>\"", ",", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"eomsanalysis", ",", 
             RowBox[{"{", "q", "}"}]}], "]"}], "//", "MatrixForm"}]}], "]"}], 
        ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"CoefficientList", "[", 
        RowBox[{
         RowBox[{"eomsanalysis", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"\[Phi]", "''"}], "[", "t", "]"}]}], "]"}], "*)"}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"compareEomTo2D", "[", "]"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.785163733169914*^9, 3.785163768788862*^9}, {
   3.7851638219331465`*^9, 3.7851638221495667`*^9}, {3.7851638575914416`*^9, 
   3.7851638656639175`*^9}, {3.785163952461292*^9, 3.785163959194874*^9}, {
   3.785181113450061*^9, 3.7851811849114933`*^9}, {3.785181223420051*^9, 
   3.7851814480879383`*^9}, {3.7851815284493275`*^9, 3.785181574334261*^9}, {
   3.785181607927892*^9, 3.7851818562133703`*^9}, {3.785181897023181*^9, 
   3.785181973204109*^9}, {3.7851820183846817`*^9, 3.785182035584442*^9}, {
   3.785182130927059*^9, 3.7851822788151007`*^9}, {3.785182768706132*^9, 
   3.785182824611698*^9}, {3.7851835377984476`*^9, 3.7851835381465435`*^9}, {
   3.785183574632366*^9, 3.7851838963880434`*^9}, {3.785183935005065*^9, 
   3.78518393938645*^9}, {3.7852369154777946`*^9, 3.7852369276973515`*^9}, {
   3.785237068661893*^9, 3.785237159502931*^9}, {3.7852390830870667`*^9, 
   3.785239105554223*^9}, {3.785239223653453*^9, 3.785239230566188*^9}, {
   3.785239332872146*^9, 3.7852394831645365`*^9}, {3.785239522904046*^9, 
   3.785239527846*^9}, {3.785239574459278*^9, 3.785239590976102*^9}, {
   3.785239663394473*^9, 3.785239765859336*^9}, {3.785239822253582*^9, 
   3.785239852287075*^9}, {3.7852411853333817`*^9, 3.7852412095104837`*^9}, {
   3.7852412747392893`*^9, 3.785241284555241*^9}, {3.785242577855811*^9, 
   3.7852426072696886`*^9}, {3.785242760532243*^9, 3.785242764687683*^9}, {
   3.785243042341342*^9, 3.785243082387663*^9}, {3.78524369984238*^9, 
   3.7852437033492184`*^9}, {3.785243878758131*^9, 3.7852438818282394`*^9}, {
   3.785250588656488*^9, 3.785250591357007*^9}, {3.7852507564570065`*^9, 
   3.7852507638104935`*^9}, {3.785253091532304*^9, 3.785253138847148*^9}, {
   3.7852531795009995`*^9, 3.7852531822852845`*^9}, {3.78525322760236*^9, 
   3.7852532347079835`*^9}, {3.785253269736401*^9, 3.7852533186729493`*^9}, {
   3.7852533499356813`*^9, 3.7852533536194243`*^9}, {3.7852534684496627`*^9, 
   3.7852534710220785`*^9}, {3.7852535409719725`*^9, 3.785253541682535*^9}, {
   3.7852537363906927`*^9, 3.7852537365316057`*^9}, 3.785254209543125*^9, 
   3.785254249221677*^9, {3.7852618005450153`*^9, 3.7852618049458847`*^9}, {
   3.7852619352877183`*^9, 3.7852619378303013`*^9}, {3.785262049200818*^9, 
   3.7852620500145736`*^9}, {3.785262103253174*^9, 3.7852621096136494`*^9}, {
   3.785263447209785*^9, 3.7852634489854174`*^9}, 3.7852635401829467`*^9, {
   3.78526380795971*^9, 3.785263833479515*^9}, {3.785264076495087*^9, 
   3.7852640857027893`*^9}, {3.7852681432932625`*^9, 
   3.7852681474119186`*^9}, {3.785831869007831*^9, 3.785831870271266*^9}, {
   3.7858329219017763`*^9, 3.7858329347845373`*^9}, {3.785832983264346*^9, 
   3.7858330065270085`*^9}, {3.7858330819961247`*^9, 3.7858331447841687`*^9}, 
   3.785833279240972*^9},
 CellLabel->
  "In[123]:=",ExpressionUUID->"7c173ea2-2946-49d8-b3f4-f6b2d745c11e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"wing", " ", "params", " ", "r1h"}], ",", 
    RowBox[{
     RowBox[{"r2h", " ", "from", " ", "Chen", 
      RowBox[{"(", "2016", ")"}]}], ":", " ", 
     RowBox[{"see", " ", "the", " ", "\"\<incorporate R\>\"", " ", 
      RowBox[{"notes", ".", " ", "N"}], " ", "is", " ", "from", " ", "the", 
      " ", "julia", " ", "traj", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"just", " ", "used", " ", "to", " ", "map", " ", "dt"}], 
        ")"}], "."}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"paramsFixed", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ko", "\[Rule]", "0.55"}], ",", 
       RowBox[{"ma", "\[Rule]", "6"}], ",", 
       RowBox[{"ka", "\[Rule]", "150"}], ",", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["r", "^"], "1"], "\[Rule]", "0.49"}], ",", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["r", "^"], "2"], "\[Rule]", "0.551"}], ",", 
       RowBox[{"\[Epsilon]aero", "\[Rule]", "0.001"}], ",", 
       RowBox[{"CDmax", "\[Rule]", "3.4"}], ",", 
       RowBox[{"CLmax", "\[Rule]", "1.8"}], ",", 
       RowBox[{"CD0", "\[Rule]", "0.4"}], ",", 
       RowBox[{"\[Rho]", "\[Rule]", 
        RowBox[{"1.225", "*", "0.001"}]}], ",", 
       RowBox[{"\[Gamma]", "\[Rule]", "0.5"}], ",", 
       RowBox[{"Ndt", "\[Rule]", "45"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"paramsOpt", "=", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "cbar", ",", "\[Tau]1", ",", "mwing", ",", "k\[Psi]", ",", "b\[Psi]", 
         ",", "\[Tau]2", ",", "Aw", ",", "dt"}], "}"}], "\[Rule]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"4.928", ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "15.98", "*)"}], "14", ",", " ", "\[IndentingNewLine]",
          "0.971", ",", " ", "\[IndentingNewLine]", 
         RowBox[{"(*", "26.653", "*)"}], "16", ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "19.792", "*)"}], "4", ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "31.959", "*)"}], "28", ",", " ", 
         "\[IndentingNewLine]", "97.113", ",", " ", "\[IndentingNewLine]", 
         RowBox[{"(*", "0.087", "*)"}], "0.14"}], "\[IndentingNewLine]", 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"paramsFixed", ",", "paramsOpt"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eomsp", "=", 
     RowBox[{"eoms", "/.", "params"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"other", " ", "stuff"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ic3", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Phi]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Psi]", "[", "0", "]"}], "\[Equal]", "0.01"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "'"}], "[", "0", "]"}], "\[Equal]", "0.01"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"c1", "=", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", "\[Rule]", 
        RowBox[{"0.08", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[Pi]", " ", "130", "t"}], "]"}]}]}], "}"}]}], ";"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "c2", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"c2", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"freq", "=", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"Ndt", "*", "dt"}], ")"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Tau]act", "\[Rule]", 
        RowBox[{"75", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", "\[Pi]", " ", "freq", " ", "t"}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Make", " ", "sure", " ", "reasonable"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eomsfinal", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{"eomsp", ",", "ic3"}], "]"}], "/.", 
       RowBox[{"c2", "[", "]"}]}], "/.", "params"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"eomsfinal", "/.", 
      RowBox[{"Thread", "[", 
       RowBox[{"q", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.3", ",", "0.2"}], "}"}]}], "]"}]}], "/.", 
     RowBox[{"Thread", "[", 
      RowBox[{"dq", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", "0.1"}], "}"}]}], "]"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "Sim", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tf", "=", "50"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"First", "@", 
      RowBox[{"NDSolve", "[", 
       RowBox[{"eomsfinal", ",", "q", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tf"}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"sol", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"dq", "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"q", "/.", "sol"}], ",", "t"}], "]"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"sol", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"ddq", "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"dq", "/.", "sol"}], ",", "t"}], "]"}]}], "]"}]}], "]"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sols", "=", 
     RowBox[{"{", "sol", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Nn", "=", 
     RowBox[{"Length", "@", "sols"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Period=\>\"", ",", 
      RowBox[{
       RowBox[{"Ndt", "*", "dt"}], "/.", "params"}], ",", "\"\<, freq=\>\"", 
      ",", 
      RowBox[{"1000", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Ndt", "*", "dt"}], "/.", "params"}], ")"}]}]}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t2", "=", 
     RowBox[{"tf", "-", "2.85"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t1", "=", 
     RowBox[{
      RowBox[{"t2", "-", 
       RowBox[{"Ndt", "*", "dt"}]}], "/.", "params"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"\[Tau]inv", "[", "\[Phi]o1", "]"}], ",", "\[Phi]o1"}], 
             "]"}]}], "/.", 
           RowBox[{"\[Phi]o1", "\[Rule]", "\[Phi]o"}]}], "//.", "wingsubs"}], 
         "/.", "params"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Phi]o", ",", 
          RowBox[{"-", "0.6"}], ",", "0.6"}], "}"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<T\>\""}]}], "]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"plotTrajs", "[", 
      RowBox[{"sol", ",", "t2"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"debugComponentsPlot", "[", 
      RowBox[{"sol", ",", "t2"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Legended", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Phi]", "[", "t", "]"}], ",", 
                 RowBox[{"\[Psi]", "[", "t", "]"}]}], "}"}], "/.", 
               RowBox[{"sols", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ",", 
              RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "Nn"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\[Phi]", ",", "\[Psi]"}], "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Legended", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], ",", 
                 RowBox[{"\[Psi]", "[", "t", "]"}]}], "}"}], "/.", 
               RowBox[{"sols", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ",", 
              RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "Nn"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Phi]", "'"}], ",", "\[Psi]"}], "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Show", "@", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{",", 
            RowBox[{"{", 
             RowBox[{"soli", ",", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"sols3", ",", "sols4", ",", "sols5"}], "}"}], "}"}]}],
              "}"}]}], "]"}]}], ","}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Animate", "[", 
        RowBox[{
         RowBox[{"drawWing", "[", 
          RowBox[{
           RowBox[{"sols", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "a"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "t1", ",", "t2"}], "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"AnimationRepetitions", "\[Rule]", "1"}], ","}], "*)"}], 
         RowBox[{"DefaultDuration", "\[Rule]", "4"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.785163733169914*^9, 3.785163768788862*^9}, {
   3.7851638219331465`*^9, 3.7851638221495667`*^9}, {3.7851638575914416`*^9, 
   3.7851638656639175`*^9}, {3.785163952461292*^9, 3.785163959194874*^9}, {
   3.785181113450061*^9, 3.7851811849114933`*^9}, {3.785181223420051*^9, 
   3.7851814480879383`*^9}, {3.7851815284493275`*^9, 3.785181574334261*^9}, {
   3.785181607927892*^9, 3.7851818562133703`*^9}, {3.785181897023181*^9, 
   3.785181973204109*^9}, {3.7851820183846817`*^9, 3.785182035584442*^9}, {
   3.785182130927059*^9, 3.7851822788151007`*^9}, {3.785182768706132*^9, 
   3.785182824611698*^9}, {3.7851835377984476`*^9, 3.7851835381465435`*^9}, {
   3.785183574632366*^9, 3.7851838963880434`*^9}, {3.785183935005065*^9, 
   3.78518393938645*^9}, {3.7852369154777946`*^9, 3.7852369276973515`*^9}, {
   3.785237068661893*^9, 3.785237159502931*^9}, {3.7852390830870667`*^9, 
   3.785239105554223*^9}, {3.785239223653453*^9, 3.785239230566188*^9}, {
   3.785239332872146*^9, 3.7852394831645365`*^9}, {3.785239522904046*^9, 
   3.785239527846*^9}, {3.785239574459278*^9, 3.785239590976102*^9}, {
   3.785239663394473*^9, 3.785239765859336*^9}, {3.785239822253582*^9, 
   3.785239852287075*^9}, {3.7852411853333817`*^9, 3.7852412095104837`*^9}, {
   3.7852412747392893`*^9, 3.785241284555241*^9}, {3.785242577855811*^9, 
   3.7852426072696886`*^9}, {3.785242760532243*^9, 3.785242764687683*^9}, {
   3.785243042341342*^9, 3.785243082387663*^9}, {3.78524369984238*^9, 
   3.7852437033492184`*^9}, {3.785243878758131*^9, 3.7852438818282394`*^9}, {
   3.785250588656488*^9, 3.785250591357007*^9}, {3.7852507564570065`*^9, 
   3.7852507638104935`*^9}, {3.785253091532304*^9, 3.785253138847148*^9}, {
   3.7852531795009995`*^9, 3.7852531822852845`*^9}, {3.78525322760236*^9, 
   3.7852532347079835`*^9}, {3.785253269736401*^9, 3.7852533186729493`*^9}, {
   3.7852533499356813`*^9, 3.7852533536194243`*^9}, {3.7852534684496627`*^9, 
   3.7852534710220785`*^9}, {3.7852535409719725`*^9, 3.785253541682535*^9}, {
   3.7852537363906927`*^9, 3.7852537365316057`*^9}, 3.785254209543125*^9, 
   3.785254249221677*^9, {3.7852618005450153`*^9, 3.7852618049458847`*^9}, {
   3.7852619352877183`*^9, 3.7852619378303013`*^9}, {3.785262049200818*^9, 
   3.7852620500145736`*^9}, {3.785262103253174*^9, 3.7852621096136494`*^9}, {
   3.785263447209785*^9, 3.7852634489854174`*^9}, 3.7852635401829467`*^9, {
   3.78526380795971*^9, 3.785263846861192*^9}, {3.7852639620550404`*^9, 
   3.78526398507434*^9}, {3.7852641063890386`*^9, 3.785264110993264*^9}, {
   3.7852641564011707`*^9, 3.7852641571082044`*^9}, {3.7852641960012693`*^9, 
   3.785264216721649*^9}, {3.7852643149914474`*^9, 3.7852643475935354`*^9}, {
   3.7852644069901733`*^9, 3.7852644070928326`*^9}, {3.7852645182904143`*^9, 
   3.7852645377768126`*^9}, {3.7852681182959647`*^9, 3.785268128246215*^9}, 
   3.785269285445484*^9, {3.7852697491566772`*^9, 3.7852697592097054`*^9}, {
   3.785538474804677*^9, 3.7855384812477183`*^9}, 3.7855385189985633`*^9, {
   3.7855385626121855`*^9, 3.7855385662395616`*^9}, {3.785538601860875*^9, 
   3.785538671427971*^9}, {3.785538871632335*^9, 3.785538909036092*^9}, {
   3.7855389463657703`*^9, 3.785538946443622*^9}, {3.785538996298153*^9, 
   3.785539013899557*^9}, {3.7855391273264093`*^9, 3.785539209008417*^9}, {
   3.7855393350449324`*^9, 3.7855393651778836`*^9}, {3.785539442555038*^9, 
   3.7855394441299467`*^9}, 3.785539483284238*^9, {3.785539521251288*^9, 
   3.7855395227811527`*^9}, {3.7855395551847734`*^9, 3.785539555422123*^9}, {
   3.7855395893291893`*^9, 3.785539589949419*^9}, {3.785539636192365*^9, 
   3.7855396769178057`*^9}, {3.78553972259588*^9, 3.7855398435198965`*^9}, {
   3.7855398777105055`*^9, 3.785539954121219*^9}, {3.78561033198108*^9, 
   3.7856104315554953`*^9}, {3.7856105924933624`*^9, 3.785610618959749*^9}, {
   3.7856110746210976`*^9, 3.78561108814141*^9}, {3.7856111337757998`*^9, 
   3.785611138201707*^9}, {3.7856111763604455`*^9, 3.7856112032749205`*^9}, {
   3.7856112397351365`*^9, 3.7856112637734766`*^9}, {3.7856115446899896`*^9, 
   3.7856115449683943`*^9}, {3.785611584275441*^9, 3.785611584356102*^9}, {
   3.7856116328821845`*^9, 3.7856118315286884`*^9}, {3.7856196069008217`*^9, 
   3.785619647460866*^9}, {3.7856197076804085`*^9, 3.785619740585253*^9}, {
   3.785620220584257*^9, 3.785620286772295*^9}, 3.7856203291213646`*^9, {
   3.7856204645278873`*^9, 3.785620503571483*^9}, {3.785620595294875*^9, 
   3.7856206516223783`*^9}, {3.78562070093008*^9, 3.785620703179044*^9}, {
   3.78562108390994*^9, 3.7856211103944044`*^9}, {3.785621343166565*^9, 
   3.7856213761699677`*^9}, {3.7856214080899544`*^9, 3.7856214104346447`*^9}, 
   3.7856215894350953`*^9, 3.785621667110781*^9, {3.7856222098792725`*^9, 
   3.7856222197106028`*^9}, {3.7856225296821537`*^9, 3.7856225297917056`*^9}, 
   3.7858333152064767`*^9, {3.785833834000317*^9, 3.7858338359457874`*^9}, {
   3.785833878396678*^9, 3.785833925023576*^9}, {3.785833960324053*^9, 
   3.785833991089741*^9}, {3.78583525264093*^9, 3.7858353505219145`*^9}, {
   3.7858353845036736`*^9, 3.785835399633337*^9}, {3.7858354498533483`*^9, 
   3.7858354994134316`*^9}, {3.785835550896733*^9, 3.7858355797900333`*^9}, {
   3.7858359237897863`*^9, 3.785835943243043*^9}, {3.7858359959208937`*^9, 
   3.7858360237849255`*^9}, {3.7858360655689564`*^9, 
   3.7858363164565797`*^9}, {3.7858363712222834`*^9, 3.7858363972293186`*^9}},
 CellLabel->
  "In[898]:=",ExpressionUUID->"51dba8ce-d54e-473b-8306-f61498bec997"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Period=\"\>", "\[InvisibleSpace]", "6.300000000000001`", 
   "\[InvisibleSpace]", "\<\", freq=\"\>", "\[InvisibleSpace]", 
   "158.73015873015873`"}],
  SequenceForm["Period=", 6.300000000000001, ", freq=", 158.73015873015873`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.7856117181236324`*^9, 3.7856117472842274`*^9}, {
   3.785611822556508*^9, 3.785611832420286*^9}, 3.7856182917107253`*^9, 
   3.7856195327693353`*^9, {3.7856196079095793`*^9, 3.785619648254488*^9}, 
   3.785619708792785*^9, 3.7856197412604027`*^9, 3.7856203389831967`*^9, 
   3.7856204236524086`*^9, {3.7856204658232155`*^9, 3.785620504456672*^9}, {
   3.7856206300565457`*^9, 3.7856206524465322`*^9}, 3.7856207042580476`*^9, {
   3.785621055133337*^9, 3.78562111132628*^9}, 3.785621208968561*^9, 
   3.7856212459582443`*^9, 3.7856213799968123`*^9, 3.7856214117513294`*^9, 
   3.785621590169964*^9, 3.7856219801292534`*^9, {3.7856222107186995`*^9, 
   3.7856222205164337`*^9}, 3.7856225305327187`*^9, 3.78583067394069*^9, {
   3.785833315873413*^9, 3.7858333356725883`*^9}, 3.7858334021011252`*^9, 
   3.7858334420789747`*^9, 3.785833512397271*^9, 3.7858335734542665`*^9, 
   3.785833607230345*^9, 3.785833698609768*^9, 3.785833836742333*^9, {
   3.7858338882462716`*^9, 3.7858339258768277`*^9}, {3.7858339759716606`*^9, 
   3.7858339939847393`*^9}, {3.785835253678414*^9, 3.7858353513484545`*^9}, {
   3.7858353863596373`*^9, 3.7858354004402275`*^9}, {3.785835450593163*^9, 
   3.785835501284029*^9}, {3.7858355518192444`*^9, 3.785835580440194*^9}, 
   3.78583576868977*^9, 3.78583580327425*^9, 3.7858358663136873`*^9, {
   3.7858359249027925`*^9, 3.785835944085446*^9}, {3.7858359991182756`*^9, 
   3.7858360244895754`*^9}, {3.785836066640252*^9, 3.7858362010708904`*^9}, {
   3.7858362362322903`*^9, 3.785836323514908*^9}, {3.78583637307673*^9, 
   3.785836397995373*^9}},
 CellLabel->
  "During evaluation of \
In[898]:=",ExpressionUUID->"dbe64012-b833-4c81-ac92-4e4b23264cd0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Phi]mag=\"\>", "\[InvisibleSpace]", "0.547815205960248`", 
   "\[InvisibleSpace]", "\<\", \[Psi]mag=\"\>", "\[InvisibleSpace]", 
   "1.320017638529303`", "\[InvisibleSpace]", "\<\", avglift=\"\>", 
   "\[InvisibleSpace]", "175.17312934938326`"}],
  SequenceForm[
  "\[Phi]mag=", 0.547815205960248, ", \[Psi]mag=", 1.320017638529303, 
   ", avglift=", 175.17312934938326`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.7856117181236324`*^9, 3.7856117472842274`*^9}, {
   3.785611822556508*^9, 3.785611832420286*^9}, 3.7856182917107253`*^9, 
   3.7856195327693353`*^9, {3.7856196079095793`*^9, 3.785619648254488*^9}, 
   3.785619708792785*^9, 3.7856197412604027`*^9, 3.7856203389831967`*^9, 
   3.7856204236524086`*^9, {3.7856204658232155`*^9, 3.785620504456672*^9}, {
   3.7856206300565457`*^9, 3.7856206524465322`*^9}, 3.7856207042580476`*^9, {
   3.785621055133337*^9, 3.78562111132628*^9}, 3.785621208968561*^9, 
   3.7856212459582443`*^9, 3.7856213799968123`*^9, 3.7856214117513294`*^9, 
   3.785621590169964*^9, 3.7856219801292534`*^9, {3.7856222107186995`*^9, 
   3.7856222205164337`*^9}, 3.7856225305327187`*^9, 3.78583067394069*^9, {
   3.785833315873413*^9, 3.7858333356725883`*^9}, 3.7858334021011252`*^9, 
   3.7858334420789747`*^9, 3.785833512397271*^9, 3.7858335734542665`*^9, 
   3.785833607230345*^9, 3.785833698609768*^9, 3.785833836742333*^9, {
   3.7858338882462716`*^9, 3.7858339258768277`*^9}, {3.7858339759716606`*^9, 
   3.7858339939847393`*^9}, {3.785835253678414*^9, 3.7858353513484545`*^9}, {
   3.7858353863596373`*^9, 3.7858354004402275`*^9}, {3.785835450593163*^9, 
   3.785835501284029*^9}, {3.7858355518192444`*^9, 3.785835580440194*^9}, 
   3.78583576868977*^9, 3.78583580327425*^9, 3.7858358663136873`*^9, {
   3.7858359249027925`*^9, 3.785835944085446*^9}, {3.7858359991182756`*^9, 
   3.7858360244895754`*^9}, {3.785836066640252*^9, 3.7858362010708904`*^9}, {
   3.7858362362322903`*^9, 3.785836323514908*^9}, {3.78583637307673*^9, 
   3.7858363997583103`*^9}},
 CellLabel->
  "During evaluation of \
In[898]:=",ExpressionUUID->"ebdd0b19-fdc9-40e9-8817-9ce43a5e3e5c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$138434#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 1.4498573944033402`},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"T\"", TraditionalForm],
    PlotRange->{{-0.6, 0.6}, {1.4498573944033402`, 2.205162668355576}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
g17V1ykUljwqvuNaJpfcTNnZNT8V1t94bXgwlUvUJh7FW4PfqFdNGiVxyYrS
SHEGHGh6asGPq1yyTmfLIC8Nzo+SquMD/lxivCy+jJNBYaMnER1d1lziK2my
uymLwoNZ6XE7Z3LJ7zpZ+3nZFE64slfKfwp+713o+m8P+JaZj2X2Hw45PuZ5
sQ/sFLJA4903DnF/F/14JIfCByIqvYT4HOL0qE1J+Q6F18Z32X/K5BAL+8Nf
Pe9S2EDtY7TwFg7hyGv9uQ+2mFOwiF7HIea83zOhY+Btf8Pbz63iENMdoUoX
CincvJF+176YQ4x07pgnFFGYPtX3cLUQh2CRwUekhMIz4vzu271qJasLz1yQ
fgTP/8ubd9eylZzJ+s/UCnyUhSOkTVpJTbLtwkRwgdl9cXdWK3G4tLlo8WM4
P7JUZ0qsbyXXDo53ri6l8KcS9/jP81vJ0LwzOrvKKLxsBjUfFbSQRydP94VV
wPlHE53lZDQT/W2n0MxamL+ZudNNexoJPvw7wBC8wr3u1lOqkRiGHC8PBu9T
EfJK1m0kdL2rnkAdzHOTExc1pRqJ6e59ulPgNPEwhxsvX5GDhzZr/Gmg8Gtx
Z+WSNa/I+eBJyW/NsJ97/iy9N1ZPaquCurmv4ft+95hvtK8l+7f1Wv35ROHV
r5e+jv1dSdwKjQvH/kD+6/gdX7T9AeFIXoy+I0rjV+si6k4OxhPsKWtSJE/j
MOa9Y6RRNtJ8WvQlejmNzdX7jQVePkEqopn29Xo0lsmquxsXW43+ow/bFRvT
2DV8xPMD/QopnfzqPgg+PdY69t3uFWq9fcJ/9U4aVzLKqz74vEIbxINuFIDF
Oh563c58hWY2pnTkmtDYxawr1GvqFUrZ/dr6pimNO9p2NisUN6KmA0amMRY0
fjO29sUl8WYUFNlqxwE/0+lsilNuRusq9nhIW9K4haeVfl23GSUvdomIAldv
iQq0t2tGLu/ON4Rb0TjC3jxDu7gZTR8ppy/Y0PjUQPdQlUUL0vZeg3xsYX2D
BR/LqVbU808msxTsXuSaK2beiqIixoSmwLuPS101tm1FP7KrGkL20/ibWMyL
Ys9WlNduaZNwgMavAz0SRBJakZrBKY8yexqn/gy58PpDK5IXr7ohcJjGPkrr
7kyf5aDauOxpFjhk0Wf27BAO8lsafigMPOIg9lEqioOYLZYa85xoPBj7XPlv
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
         "]]},
       Annotation[#, "Charting`Private`Tag$141372#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{40.849999999999994`, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, {-0.35, 0.35}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\[Sigma]act", TraditionalForm],
    PlotRange->{{40.849999999999994`, 47.15}, {-0.34187947266522767`, 
     0.3418475415674843}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
6GJLqIcyFlwK5oE3/Vnjq6zY+MXNnfGaP2B+OSz+Z/te6D8oIrP5K01E9v6e
e8kW1lMv1HJ5F8xHL+rqesBbHWMfTHXQ5NbGtLPL98P9n3hmvYf5g7V4g9Ad
cGZJwfSZVpoENrkvJAcgX0e3eD1voknfNnrxp0MwLxiGXP9XS5MKVKeo6Qj9
VCB6UAXmn9bByqu+4PKBPw1N92gyerFEvhzccbmiKqCIJiu/XZFFTmz8I/VZ
O7lDk+QM36U7jrCx/mHOHp08mjh/VxJzPcrGS9xVPtXC/LXoetC/bDeoD0pD
zgYRNFlr7n2mDxzkYzeeHUYT6vfRvyrubLwzvl5MIJQmQTstpwrBwa5dQ5VB
NOmfWj1Z6cHGKUxkpYQ/TSqt2oc7jkN9HT8oaOpCE5e5Wr1ivmycX/Fne942
WL+e+007wZ5DAZltJjSZ/2DT80Tw4r/81rM4NCk4rJu/wI+N+xSGRPdspclQ
JfYW9Id+rCSv3LmFJt4+O+fynWTjl3PyRu3X0iSYdlcfOQ35f9QtbyNME/Oy
YUX1IKhfne+/qs+niXziicUeYIPry4jAPJo83eL7axBcoUPcrgnQRCD99LP+
YDYOmVku6DfOI2d3xO3tDYH33xfVUvyWR1Iq8s68iWDj8JZrZodDecRuKLpm
USQbrxRZsrn1FI+sVXQW2gv+KL1ns5Efj7yIUk7rBbMj46z5j/HIr13X7o5E
wX68EzZSsoTrBzK5i86ysYbnDZnOFXC9RKLe3njoT6Ml6hNVveQ35RGaCT6S
JKR/sLyX1AZur+0Ffwne6FNZ3EvseEIWRxPY2LdWe6t9bi9JKYhxPZkI9SP8
W75+LFyPwzIyk2G/fk5mGO+G6z18f/am/r+/JQ5bdfUQ09e8IvmL0E/SuY+W
ve8hr9XMXA+BV5a2yLa96iHNA0rcHrBHn3Lapic9hHu4sZqbxsbzHU3fJl7t
IWN71BK6MtjY/Kfn6psOPUTekF7RdpmNuRvsok0+cMm1y2Y9S66wcYLutOFk
J5coT5Wm7QGT0tszl5u5ZHV5wvxW8PaiX+FvnnLJRq0tI++z2PioK1f9WRaX
bFuVVtGczcaXNC3zf9pwiZ/I9t1vctnYdaPkLu/abvKjXuKQ+A2oRzvG09ZX
dhPviJ5j1mBhrtNrpribnPjlGcmA+6M0x5WvdBP3D+fLJm7C+QySrVnp002c
Stvl5G/BPKH6bZOIXDexOOQ46HkX6scy7WYHly6iXngqQqwU8qD/1iya20FO
5R4zt/q/FwxV5DZ2kNpM22UZ4OWGSz+VPesgdjF6RQplbHw21fRoZX4HSbb/
06VezsZv7tWLGPp2kDHxU1o7KmA+FHt6YsX8DlIaEMjEVkH+mu6b+qm1EwOj
k2hWHbyf190Le8xaSV11aO+7NqjnkeVLl9k0k/1GtNXkABvPXNLZn8DUE7fC
bYW/JqH/2Xu4HQp9QppFIs/fmkdhveWCC95dyybYU2J70VIK52+6+GVTfyFa
87joy3lVCrM+B1ze0/gMKc7LOdSgS+H0V8W7bh1+i45RjgfvbaPwtLGjs/7x
FiQXMOg+Ak4O5Mo+DmtBTXleQepmFJYMt5PVTG1B2vND/7sDDs7Z+17gUQua
9fpyZ/52Cvcvs1irL9CKLu9u23PNnMJN2tpTMymt6M0BU/MUCwobn20ejb3b
hjR81iNfWwrXMhHHv9d0IN6/xTnl4OX2IwsPtHWgxPhfs/+C1XbsXFQx0IGG
blS/jNpP4QCbCaVdQp2ooMNyb/oBCptyK10/mnciZcOTHhWHKMxdX3gtq7UT
LZ1f/R+fI4Xdo6fTV3d2obqLN2ZY4GPqyHfkcxfyXx53OBYcuMT4v7xfXah1
i6WKuBOFfw6J5w9LdaMUz08lK45QeP1DzZa2Pd1oQcv8l9RRCq/zW2wi2NiN
+K5a/Ip3g/cr5OaVlXLREevnb1+DP2dXmTQ856KXohtvLHCn8HHXGem3TVx0
MXSJRTy4OCxgS/EgF6k5dNw+50Fhr5jhGq5cD7Jcecgu7jiFHeyk256H9aCb
t11rY3woHP1A0LkA9SJhp67LdeBEapuolFkvOiFr5jPPl8IqgVc3++/tRVsS
1irGgJPnpH4X9uhFTZ4jgdF+FM4t8whLvdSLfmv6rYsKgPvfsvi2ZLQXbS8P
TQ0/Dc/rvWrP4xQeOnNn6epqcHLrzd2Gl3moOPvek3/g2tL05vs3eEgylu4P
CqKwr8mRnf7lPETvw7oBwRRmCzmN2PTwkO/Uvx63EArffZOpbipOo8uGISp7
Iii83eHkDkcrGr3Vkqq8ADaStsjfZkMjfpWiXe/AaoqVymsO0MhZlBe4MxLO
3/eZ0HZHGmnQhq9Noyh8ZUy1usebRjVhMycMYyjs88hsX3YSjYZqgitUzlF4
rOxdIF8NjWSX+OS4gW+NvfI2r6PRtiMucUVgnq6MS+pLGuXPsbTdHA/rmWS/
U7CZRg6U6h8qAfbzg6xZcg+NOure6TonUbg+OUxmxQSN5i6tVyoAxzwmo98n
abTJ5cn8YfAFmf6v5X9olCKY3+mXTOHqU9WH1/MxaIdpcGDUeQor1LBKqoQY
9OylyqPcC5CXrRd8j8kz6Lu03LXP4Jd/pUKeKDJI0U08dm0qhSPUVo0LrmBQ
sPBfmwfgwUWJa2NVGKSz/d2v5xcpXFcfdXq9BoOcL9fR89Lg/EQlu1BaDLr4
rbLeDHw0xfXrno0MGovPy3gPplVfvzykw6C7b4J0PqZDPtaEZS/FDOLKeSuq
ZFA4L8rh6w8jBgl5HhV0AycpR/9r2MogFxGLjjEwz8r96iEOg5bvVDkpkEnh
3yad0VrmDMpoai5TukzhXxeLMs/ZMihou+Xiw+Cx6twXvP0MOlzf4pkN3rns
vIT6QQapPW1fqXCFwl+7Y/Qe2THoSVHPBdksCj8PGjgR58SgnDV2I/vBATum
Iu8dYVB0Hr3tP3CwZNBkkzODdl39yC99lcK6dm6S/K4M+pD45bhUNoU/qF6R
VPBgUK2Q26u9YCKg+WupJ4NuR39blQZOmT4QsPA4g3zPjPRIXKPwmzTH4/0n
GDTPc8JMPIfCj+eKaOzzZdC3L/55u8FPHd8MqPoxqOnIL4HzYGKYGjoOzjw4
9Uj0OoUfeEicDAxg0Nod/KoLcyk8Ycvnb3qKQWIN4RHbwfs1H6z9Dp5gzead
Ay8ZTRZOPc2gKv15aUI3KPyO39T5VRCDrpef/W4KVueG/7ALZtDZjUI7YsET
+jmNI+DdaxfOFrxJ4fnldef5QxiknZ9oxwHv2B5xLgIsrSz2OBps9yJxki+U
QX0yi73n5FE4S9F1+zC4Pj31DQusckPb5FAY7P9iydWRYOfnu7gNYH/hZbRA
PrxPRuX4hXAG2cZkbjEG54SbxI2B0SzZ9DDwwO1U3vYIBglOyZvz3aKwp+qq
oR/gb/7ZtxDYo7O13DiSQc1jSnNCwN+MpY/FgzMHlSv/gqtPO+cujmLQGeeb
UgYFFGboSbwb7PhBxScIPIvWGIwDmxy69fYxePZF7q2n4LVdampTYJ5dfewY
eNHeO1F6tylcSJ5fUIxm0M/mdUwgOG1ddvM2cNeOIv1HYPEBjR1eYNKgkfEL
vNnPVCwVnH1NlGNwh8LnmvvSHoJDA4cnwsA/RfTa3oEPwzRRC17+vL7rK9h4
9R1L4bsUXvhnYTFfDINW8J8T2AWOfxpxBL4/o9mdrsWp4I7C7Nny4L57Jvad
4AU+7ZmrwC/OqojKF1L44f60jWvAN+3nVjmAf+rO7v2/o3U+ueeBm4hArir4
qFiNzDdw+PCTFCWwyeeclxpFFL7vGlcqCV79NCzQD1xi8FRGECyUYa9aAX43
evvtBDzv4HHUPgM2Ec3s5oFfceSjt96j8JykLvNa8B2FvxvPgv8plW+8BY6f
7P74Glxue/zSWbBHY0XKomIKdzErY53A5nmXjPaCb1SOixqA14ecHM0EK4v9
0RUHi1lbX+WBP961XdwH+9M8d8lflxIKx5XZzz4DLukdv30XPIbbN1DglNJ3
tmPgj/UOxsJgK+fk8tP3oV7NlV77//OyyfD40afgnJQWeROwpKS55JwHFB5q
uqnAD25/IeybCL41FBV4DM5f+ZXB5e/BLcNnv0iDM/wamqUeUlj0WsjF+v+f
55Ux66+BTQp2vZUB90QKfL1fSuFdhWG/cyAfVQeYS7/Al1ZqhhqCszY+NTEo
o7DVi7LMdsiXfV/wzVpww57khwLgj1t/H+4sp7D5MpMbBpDPGpkOMflHsF+Z
UsO1kOfc8VLiALaY91HWHOx83VfuG3j+utOWeyH/XwRGO2YqKKx61X39zkAG
jVT371R+Av119sSNQag/0S92ezuBj5qohtuDZRsqU3PBTn9/zGn1YdC2ppRO
5SoK22Ttlq/whv/Xa+i4klC47Mu0sR/UM9upNP9V1bD+HkvSH7jB+dvIuaL6
gsLN2cLHgw4z6L+8vMG1byBviq/7F5oxiG9A95UbeHWy5IK92xjktOr17QLw
97aBV1dMIX83Rt1V30L/EjFSWGvCoMoc3ZEVjbA/HE11Fhv6x5VX49LNUE8a
lKMcEDxv6si0YCuF/0sw6d63gUFXQjeLfuJCvdcbDJSSZtCMjMrW1T0UVrIw
+bhhGYMOlUkGeIBrOy8W7FzKIPnhid4J8JH9/qZRkrAf+x8UzuVROMrJLeKz
OORXW9NclYE8xUTkxAtDv/imluD2CeqdbuSFzdM0EjgrXV0Eviz71UtvCvr5
CqGJcfBIqMtufejPK2y/HAjqh/5VojDX4BeNcuvy1iYMQD1qjumH7+/oRo7y
68IvkPdkba/+rzAf2MgLjw1Bfo53LzvcRaMqhcwSzWG4n2tg4a5OGrX0L7H1
Aidkls8YdtCIz2/hrVHw3gsmL6TaaLTv/DQ1MkLhtX7uyY9gvhB62RX+7TsF
33+D2Y/raeS+Jf1P/wTk10Fz+upDGoULLM5Z9ZPCkYd98u0f0CijIdHUGew1
R+qmwn2Yd6yjMz6Bq+Z3xGTco5Gcr5923ySF9Ydto/xuwzx1x9Kb+U3hZ+83
Ondm02i9vNhg918Kn6nNidGIo5Gx0Zc+xRkK60j/bk49SyMrp2e8I+CGpwbZ
P6NpdLLAt3UEPL2uqbQkgkbPtDufzuLj4GOP63YuCIbP78xJXyPAwXtt35sb
HYfPh25kn57LwSHLM4Iv7KZR3PWF+Ck4cN38oqs7Yd6r7debM4+DrYXa2/J3
0Kh6wSWNJHDFk5nJYlNYj0t/Za4LcnCrycCcq0bw+eLasZdCHKzxgjlDa9Do
6QebbGlRDs7qcrj6YQGNso327TsEXtdtykoWolFI9j7xHLBJcpW/niCNDA/Z
Rq4W42ClUQffyFk0etK530VnEQfvQP213HEeqmg6pLF3MQeXBr/SW/eahx5U
OT09L8XBz3U2X9YL4KFUuSOBreAgwXalAi8e8gk6orVsKQcP6Cq/WuTOQ1p6
zrnZ4FMGs9wa7GEefnj0bNEyDs7cmiHWacpDhXeO7Xojw8Hpd63jfKR5KC/z
BC2oyMHT57TEHB/2Iv2VfxeYgLX1FBr1inrRu6JY3RjwUiW970K3etFMTU7K
HCUOLo5TMk293IusRlpYAsthPTy6i7ZF9CI+lu6tqRUc/OhSfoHRzl5kM8Tv
PazCwVJiXyY2MD1oOCAxa50qBy95ndi/sKsHRQjIvHIHv7ydfJH3rgcVSm1U
/gre0hIhc6ymB802dm4bWM3BWzd6Gcvk9aB7aS/1mDUcbJ8UOfjlWA+ajy/M
alnPwbsjdQ8u+8ZFmauCI5ZqcHBVwfuLGh+5aO3Co7MOgj9s/+pt0MVFu7r0
ZvWDk15Rc3XquSjN94PAL03YX+cHc+5d5yLlW5oCshs5WFY3RSXPhouQeBOf
kw4HxwtJzkmp6EZ+fQtmxjEHu6rzKQcf7EKVP8O/bzDi4PuCsdPXLLrQ7Pm/
+3zAquKKfyo5XSh13adX42CzhtoDrZpdqMT/yaVxY1g/Qbn4pDldaETQc9M4
i4MLBE6Lq97uRK7rGt3HTDjYyjThBm+4Ax30P989uouDLfeL391s0468a9QT
1u/m4P8qK/sUzNpRtPhrQ0/wvv+U/WYM2tG9wrk5X8Fh5Utzsla0o9kDp136
LThYPEhM3224Dd2xdp7otuLgg+u0hLXD29C0zhbROhsOXr9G5mNGTivKnOoz
vmLPwY5e4qwvte8RE5IUluXFwdsfBxS3R7xFud9Z14PCOPhp/qoXN/leIGQb
GvwcXBcTrSLXUoO6nj22FgrnYEOdefwReTVINFVrQQa47tsiLznzGnRKW9Hv
fgQHxzVfuJeU+RztPD1FDUZxcJ9r6/5gjWfoz+ySQes4Du4V+SGEc6pQqsdQ
TRZ4fPYoy5Fdhda3qV79BBa7+5vj9vkJcsq7aulzjoP9Xa291NSfoEbThMrE
eA7+XODYcqz8McpNdEl8kcjBlT8D4hXryxGavO6yIAneJ1lhTb5rOeqy4xlb
giU1N9dLCZcjUc29kzS4uUOruWhHGTr1fqv9dDIHRxnZjNY3P0QS+iF6W89D
fts5lmneD1FRboVEHHj0uqj9jsUPUZ+fZoNUCjyPveiuQKsHKKTX/fohcHee
cvbwj/tImpMffAO8yea1j/nF++hB0Ufrb+CajB7+S5vuo51LFbQ2XODgDR9s
wt62lqD/AVecT5k=
         "]]},
       Annotation[#, "Charting`Private`Tag$141419#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{40.849999999999994`, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, {-0.547815205960248, 0.547815205960248}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\[Phi]", TraditionalForm],
    PlotRange->{{40.849999999999994`, 47.15}, {-0.5478152034482343, 
     0.547750409723277}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
yaA9Mopa2tdpXMPZ83TCjEH/A4fbZmw=
         "]]},
       Annotation[#, "Charting`Private`Tag$141466#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{40.849999999999994`, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, {-1.320017638529303, 1.320017638529303}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\[Psi]", TraditionalForm],
    PlotRange->{{40.849999999999994`, 47.15}, {-1.3200172253788494`, 
     1.3197308038462738`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
/67/9/t6/7v+P+S/fxA=
      "], {{
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwl00dPVVEYRuGLBQQEa2If2BVFrIA6USf23pWiYAFiiTVRBkZsgAVUjIkm
GmPH2Cs6VYdgxS729g/sPjsOFt+73m+f3Mu553TMWT5lWb1IJBKFXv6cqR+J
VGIjn4zvlr2wzS4GZ3UdUR0uQobupViEVq4brTuu64opuh+8N4p5I5zT9XRu
ru46T0MnXQ2PQiZ/xVOdyeO3+Sbemo/hJ3g3jOTr+GN5qv1PORklPBbD7Ffy
avm8fRLP4Dd4nnxATpcnyUXya7mzc/fkesjiM+1Kwk6fJufLd/RL5EPyZn0b
eay8xTxpl2NW8O7yKHm9vMes5WvCGX7MnObaX3IfFPFS+0yzjB8w4/hwcxUv
N2v4CvMoP2JeCL+XmclLzSr7fPMgP2gO5pPNTbxOLpTPyl1cd9+sjw26bLtZ
4fP5frPOPt0s4DvNu/ZLzcP8kLnFvq05jm81T9nnmvt4D3m0XCg/kdeGvTzd
Nb/NFGzXx2OE3Wp+T75o35tn8Zt8SHh+dA94A8zjb/hWzEA3PNQ3xHy7t3wb
ZuKPri926Bvjkq47HumikaN7x4vRzmeO153W9Qz3QfeX9wv/O0/AZV1yuE+6
W3woeuge8xjk8ve8BO2dm6Cr1CVhti6i66/bxRNxJTz/qNU1wgLdB16KDs5O
1J2J+v8uzgnvpW6Arow3wdXwLOOJLhYLdR/5dswNr6TzA8Mzo2+Ka+E5wVNd
HBbpPvEdyAhfz/lB+t36Zrgefgs808Vjse4z34lMNHA+NTzT+ua4Ee4Pnusa
I0/3he9CFho6n6bfq2+BKl0fvNAlIF/3lZchG9HOp+sr9C1xU5eCl7pEFOi+
8XL8A+xQhsQ=
            "]], PolygonBox[CompressedData["
1:eJwl1EdwTXEYhvF72ShB9C5CrEnslCipeg0zLBhtESWIFJ2xwGAMxqgJQdSF
NqOXhOg9dtgq0Ynef/+xePK9z/udM/ecc89N/ISc4TNqRCKRKLr6c6BmJLIf
tfgJixe6VFTwbMTYJeu36lqhm+4pb45cXs23oDZO6qp0abjCp6Ke83vpt+la
o7vuGW+BOfwT7+6Y6fwG38rj+Qh+mHfGQL6IP5Lr2J+SX8rpuMoT7SfqLvJp
vD7vzbfzcfI6uU24LzlfrpR7OO653BJ5fIzdavmzvoccHtJNfY5cEq5f30Ee
Ka8wj9hNNjfxLvIgebG8wXzMC82DvNSs69zT8iv9Qp5hZpnLdRvNa/ZJ5iS+
yiyzzza3h3sIz8a+gdmHLzOL7Meb63nb8LzlAvmhnCuXyrvNns57IbfC0nDv
9mPNNXyL+cW+p5nD15q37Geau/jO8Pn2Hc0svtI8aj/F3MwT5cHyEvmJPFc+
JMc454z5WpeJ6+E9s5usK+czeCzvy4t5OyTrqnhrFPCvvCi8Ozire6Prhxs8
B73wMnynKNR/48Xhe8c53Vtdf9zkM9HQ56Xod+ji0Fv3Kjw7zOXf+Q4kOG6U
7pguCQ105/k7eQBu8Vlo5LjU8Ix07dFH95q3wzz+g+9EJ8eN1h2P/v+txeou
8PfhncZtPhuNHZemL9HFo6/uDY/DfP6Tl4T7wEXdh/C+4Q7PRQre6ttjgf4X
3xWuE2W6j+G7wl0+B6l4p4/HQv1vvjtcB8p11bohuMfzkIb3+g5YpP/D96AJ
Luk+6YbiPs9HOj7oO2Kx/i8vRVNcDr8x3TA84AXIwEd9ApZE//9z2ms0Q4Xu
Cx+OSl6ITFTrO4X3Wh/FPt0/oaGazg==
            "]]}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[{
           PolygonBox[{{939, 941, 50, 935, 686, 892, 480, 644, 850, 316, 444, 
            608, 814, 188, 278, 406, 570, 776, 98, 146, 236, 364, 528, 734, 
            49, 97, 145, 235, 363, 527, 733, 48, 187, 277, 405, 569, 775, 
            96}}], PolygonBox[CompressedData["
1:eJwt0rtPUwEYhvHD1SATIKiLwA5ogiCoiNINFigsLiZyUQlQlMSwaOICDCZG
g7ZlghAGSMpdR1B00JVNJ+0FnFDkL/B3osOT933e7zRpTlvbPx6N5QdBkIc3
/zNVEATLSOonmDBWeSiHVj6MT4jYf+Kd/RRvwQN8RIf9EG/dinkCf/DIVmnL
4gq/jz3csh9g217EG/Q1RHmN7xK3HeOh7Ywtg2Z+ns+hjZd67p5tl/fzS/wD
n9b79Jv2HLZ4oX1FTtq/2Z7qXXq9HtcH9VV9Rvbw6oJ/72deLvCY/OL+Qo7y
q/K3e1I+57fluPszWcHTaHJf5Ev6hNx3fyUf84g8x1/qd8J3r1/XT+tDPrfD
7/KL/D2f0nv1dnsWm5wGX/Uneiep01Po5hf4a/fPfCT8HfkvHuPl/Acu87M8
gWu8xDOD4fvEDVsGG/bw/zKLI4zZygzf0cgHwu+KNnsa6/a/HPtJIg==
            "]], PolygonBox[CompressedData["
1:eJwV0LlP03EcxvEfh/4FKB4IKKatzi2jblUR1HCUtrroYAcTj4RBUKp4xcGw
QAwMLEIIhY7CH4ABLzpZDyD8F2DLIfjq8M7zvJ/Pt+U4fedB5/3qIAiqMIZc
TRDMYl2/aTxAwYNm3oQbeI41pN32seLeyPM4zN/gvK2M67azfAqX+VHf/cy2
ipTtH77bT/FWfQFpHvFuzlbgj/hFfkgf1m/pr/VzegnXvJuWffai/bEe11v0
Ef22Pqm/kpf4EZn1mQk5we/JT+7vZIbH5B/39/ItT8ike1buyW+2hsrP5Hl9
QG7YR+VQ5W+WMT6uZ/R5PaWHK/9bn1vhD/kFXlv5vRDhf9HhfoZ/QJzXeTNo
W+R3eZT/5r18F19tJ3lU/4gkD3mTs9XwlwjbttBue4pfSNh38MV+gs+gmr9A
yLaJq7Yn+Ike+zY+24/zNgygiG57Gctux/gV9OMHuuwlLLnV8/9FSE1w
            "]]}]}, {}, {}}, {{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1:eJwl13f8TvUbx/EvWSFbiuyRGTIzUhkRSSpSyCp77y0yyg5Z2SIUGUWKQplR
VnaKskJFw/Z7Xo/fHy/X9Xpf57jv+5zP+Rxyt+hcv1OihISEZfckJERdkTgh
4RdNZWzgLVEKJ+Xp0VF+iU8CTfjEH6dkj2Mjb4V7/V0V5VNlWVBa9jPPgPiw
y/wxx7Tn2/hknoPX4x/xoniGD+CH9dqElfrT+ip4QTCcfyUvrm+u3yB/nafk
lfg03lQ/Qf+Avqq+p36iupd3Uxfy+WoZ5/2iz4ghvLN5I3V0/D3qH+YV1A58
nLrdvJM6l89Rp5jnVJ/nI9WPzVup7/Fi+tr6gfoj+t76Jfokzlml/ip7Ai/K
R/Cv5SX0LfQb5W/wVLwyn84fRFnZKZ4JXfif/D3kclx92XLZI0gqW81/0z+J
Tbw1yuG0PDO6yv/iU5EMa2RnZE9hM2+D8kiOT83OxrXEFt427iN+ld+PbvIr
fBo+9F1SqJ/Jz8mr4RveDqnNHpfPkGVFBdlvPAu686t8eqwjrJWdl1XHt7w9
7nN+FflMWTZUlJ2J+4we/G9e0TEd+Q4+g+fmL/AVvDjq8EH8qD6l+Tr9BX0N
bOUlzVvGGuMdeBr+BH+fv6afqH8ofpe+l36fvpLjzuofRE/+itkY/T/ySvpO
+p3yzvp58f3lefQv6kepn8QaVqfyEvpn9YP1k9RjvI+6lH+gpnLu5/rf5QP5
0+pL6kjZFHWb+aNqKz5a/dq8nfp+/Ia4NuZp1Sf5MHWWeTP1XZ49rre+t36/
vrv+A/2CWIfOO6fPijfjt5u/qo6N9an+a145niE+Xt1l3kWdz+fG55vnVV/i
b6srY42r03hJfV39EP1xfV/9Mn1q56xXL8pqYnvsSWavyzbFs8jT8af4bJ4j
9iPZeZ4Nvfl/fFasHXwhuySrhR28M6rgQtxT9JFf47PjvuNL2eXYk7CTd0F6
n1c1nn9ZzniGZb/HtUNffp3PQT7HNZCtkj2KtLIN/I/YF7CLd0UGx1WLayTL
Fc+r7CLPgX78Bp+L/I5rKFstK4V0so38z1jT+I53Q0bHVZfPk+WO51l2iedE
f36Tz4vfga9kf8V6w27eHVVxWZ4LA+S3+Pz4nvhadiXuFfbwHqiGP+S5MVB+
my+I74FNsquy5/A974nq+FOeB4Pkd/hCZMJm2d+yeviB90IN/CXPi8Hyu/wD
ZMaWeMZkz2Mv742ncUWeL/b0eLFhkXI/vpH9y+tjH++Dmrgqzx/rWp4Ii2VL
XMcs6rfy/+Ldg/28L2rhAWw1uxZ7OA7wfngGD2Kb2fV4NnGQ90dt/C0vgKHy
xPhQlhXbZTd4A/zIB6AO/pE/HM9qvA+xRFbAd3tZtoaXjr1QtoPf1DfEIV7a
MW/INsc+EdeX14j3Hs8T91z2Ly+It3iSeHYc04V/p19q/jBvxD/lrfXT9WXi
furf1E9WT/B+6kd8kfqQ83bqb8kHxfeM36SOkr2nHjYvo7bmY9Qt5u1jH+Kz
Ym+Oexv7WnwvdYF5c3VSrIHYp/V99Af0PfSL9HWd859aCMPljeXj9En1VfRd
9bv1yxxXkL/CP+NlkV22i9/WN8IRPjjWi+NqyhfK8sVvll3jhTGCJ8NHshz4
TnYn9n0c5UNQDzmRC7vN78Z+iWN8aVw/9XlcNyuCkWbJ8XG8s7BHFv/Qaiw7
rh2KLM6rFe8BWf5Yx7IbvGi8R3gKLJcVctyrsrW8XNxv2fc8EZrwE7ysY9rw
b/iwWM/8mbiHvACe5n35wVj75jf1xWLv5vfGvmfeje/RrzAvzBvzdbyNfoa+
fDzL+qH6n/R5HfeDPjGaxlo1eztm8nL6tvpv5R30s+P+x7Okrx33VV1s1kKd
HM9EvBP0/fTvqj/ynnFM3LN4tzr3lv6ReNb4O+ZN1PF8hpoy9lq1O5+gfs+7
xnqLvTPeyc4vojbh76ifm7dVZ/KZ6mOx76jD+El9//j3X+w7ztur3hP7lew1
s5fj8/lU9aR5ebUdH6tuNe+ozol3mDo89gO1Tqwz9UPzluqUeFbj3aXvrz+k
7xVz/UvOua0Wx2h5qtj3zXrwH/QrzYvypnw9rxDrR7aPJ0Ez/jMfgQaxv2B/
PD9obvYLH4mGuCMrEc+uPDVWxT6BA7JkaCE7xUchm898VrZEViiug+wuLxm/
nd+H1bJicZ1kX/CKKCg7yJOjJT/N38ZDjqsrWyorHM+rLP6T8KhsHE+DNbH+
8aMsBVrJfuXvILtjn5MtkxWJ5zVeD7JSsvE8LT6NtYxDsnvxuuw3PhqvxiPp
+NKxZuTp8FmsExyWpcQbsjN8DBrH13N8GflEeXqsjXuBI7JUaC07y8eiCZI4
vmysaXkGrIvrg6Oy1GgjO8fHoSmSOr6cfJI8Iz6XPYJjsvvQVnaej8drSOb4
8rF3yzNhvaw4jsvSoJ3sAp+Q8P//GzZTk8d6N5tilhlfyErghCwt2st+5xPR
HCXxkzwdOphd5O+iBVL4uyrEu0B+P76M7xufI/uSV4p9jb/Ff9YP0C/XL477
7Nj/AaOgv2c=
           "]]},
         Annotation[#, "Charting`Private`Tag$141513#1"]& ]}}], {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{40.849999999999994`, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, {175.17312934938326`}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}, "AxesInFront" -> True},
    PlotLabel->FormBox["\"FL [mg]\"", TraditionalForm],
    PlotRange->{{40.849999999999994`, 47.15}, {-0.03777963921581409, 
     542.5725472698927}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$141561#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{40.849999999999994`, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"FDx [mg]\"", TraditionalForm],
    PlotRange->{{40.849999999999994`, 47.15}, {-428.90385162543265`, 
     429.16462953113756`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV2nk0lG0bAHDJK1S2NqmklGSnsoztwizMWGZkTxLZJWRpIWuKpEiSKMoW
ylJJpdwV2SkVkrIkRUSkJPRd31/v+R3TzHNf6/2c825yPmThys3FxXVqMRfX
//9b+qWvpdmHCn4STZ+M1YFszDaRWHaQCnxb77g5rQGSaF/py0InfMh3qv2u
R7xbzgk1otffTNS39tUj0nd0OXW+VEj89jP6qrcuyTiR8eapHxWmBSzUl+7T
JnGrbN9XBFJh8Tsdw0A5DeJs2PY1K5QKmbkPvnV3KxKJqyvfN5ylwnzjG1Wb
GWGwHjpQ2pZJhaz0Cf53rbuA6tJ/UvAq/vuUU1eOCKmBat/ePabo7WtN1o2Z
q4FQtzVvE7pHKjRn90s1qG8xcnhxjQrqCcdFBdvUgXJPnu9xNhUcm9pnJp5r
woaYn/sKc6ngcTbmuuVpHVi2yH/XMHrZzxVHep7pwGzYmIBMHhUUx+20Fed1
oCNk6F4uWu6cwm0Ff11I9O5amp1PhU6Jd02R1nrAtbvq/qWbVEg/EGgsfQZg
cFOM0MlbVDi3RMFw304DaJ3dq9GAnlWS7hViG8CD1+r7l9/GeH1/9zTd2wAS
T34rv4im3X8uoHfdANSHLazzSvB84VK+1csNIb50U2ZdGRXyZMKfB38whMC4
v7VLy6kQIsBl/PCXIexzfvvdHG2m3vvorRAVdq6Mgy507HGmfoo+FT6ETHz6
eocKot4uBYo3qKCsVy0rUEGFXu3Tt+scaSAudnm3GZpd7OUQEUSD/34EhCaj
W2uU9YUSaNB9XbpV/D4VXBpTC0oqaRDNm+gvV0mFI+Iaj2aF6NDR4lBp8pAK
Wzr3N9ypoMNxh1nauSdUcChQdTcaZMD6/U4DrWjxShuZxJ8MqHJ9cUKwmgpV
dtu8bvEYwZxv8v2z6KUWIh+PbTGCE5Gy2xMIFayC3PY4OhtBRJ79srhnVPBf
ortvY6cRSBaRgnq0Vnr69+WfjYCUSNP4nmM9mkTydE4awaIHk2Gn0NcNw1bP
LzeGqKb48ZM1GP89ze6ZBsYQM/GwPeoFFSTvXOCqyTGGLdOSh56hA49vrPQr
NYaaP7FLueuw/r4/uvDjkTH8t3g3NRIdkXZAPbjdGGJXfbsXXo/1aDafVTlv
DNLiHItq9ILQ4287+JhQJ3H/+8L//XrF7vOiTOCTid52ooEK2ga7F8akmRBH
WXc5tBHr45p+2WNTJsjqRe6qQhvYTYoL2zCh0fDLq7/oe7JyJnpOTBAwvSNw
vIkK2RWxV7QCmJCwjxV6tJkKhLFPtiKFCYkxx/cFt1JhdbDz4852/L7PuuaP
0LHPLdvTu/F5aNx6XG1UMPnww1txgAlcS+Ik4tHDpuFp7RNMCIhL/ZD5kgql
PDvf713GAsERu5YBtJbjfu1+URYUMTc83vaKCiIRNNqutSwYXJqTUYYO/xBz
2n4rC6wSy/bUtlNhpYnejWEtFkx+D2QJvKbCYPdG7l36LEg019AyR2/tPbeL
Q2fBC+Fq8XdoNdcsyhI2C5z9owQk3lChfa19SZ4lC/69os06o+djXututmOB
xoXmd6Not3f8jAf7WfBm6lyDylsq+Jp5/3vtygJ/y90PgtG2u7/lEE8WFK7q
TuPqoMJr47KnYv4soAdnnqahv34sLIgLZMGnDqcj8eiG1DNtHSEsWJ/2xWZl
J9avMO8WkRMsqJwpZNihqdUCpgsReD47X/Wr6AnBJVtINJ7vgcq2T2jJP0Wf
9sTi+cSnV8t0YXzF+ITbT7NA9ngl70H0wqVoFakzLKh7f/xXGfqeSe8b87Ms
4Mrk7tB6h/n6Oz6sk8SCjPna2gi0fFlXPNcFFmg6xt2rRY894F2WncKCjicm
uQLdVLg98llIMpUFARuFL5qjr3eKDwZcwnxFvI5JQWvrr2Bnp2G++lID36FN
FJzO3bnMAiN9+wMS76lQ6a8vWJCO+cveYOmCdhhV1wi7woII7n7DAnSeG+8R
lQwWbHDJ2TGGFjxRrv4c/fC5u5RqDxVUk0/2KWeywHqL3IoQtGLl8vdH0JMx
37mr0A/uSJy7jD73uWyS6wMVNv1qd0lCy9ODBmjo7mW967zR9Xka7fHomUKr
CzLoA0vmnrahuU45f3qBv7fIo7ps5Uecp/rn82noq/VR2Xbo8r8PwnLweSnb
6UlX0ZZeAryf8DwdcfyRn9Ch72cHuNABI81+Mr04T+QsHsxjPARZ550OolPz
pZTfYbyKinazy9F3h1omkjGeK410F6bR6+eSTqlcZMGJQZlizT4qjFx5mleK
+fgascI+DN1g5NS8IpkFFhsWljxFu8nezLU/z4KqB1/v8fRj/Xe/bopJZIG0
9WsXI7TUxm/dSQksmE0sqG5Dz1I2qu7G+jggd+HgigGcJz5OhBfrp7UubJ0N
2uZZ+/MrWF/ZXLtDPqLFltLfemA9GgXMK459wnjwOj+9FcCCcsGvPcqDVGhW
uigRegjrt6g9PhBNTYVaRR8WjH/KH/qL3nmkk18P+yPVyuKqwBAVpLUyjLis
sf4mtU3M0MJnLIpGOSzwStw2m4RuvB/2ipiyQKduzmrtF9wTYVQeCRrWi0b+
cpmveB9wU+u8osoCs7dJj7zRzVq8ayoUsF/8Qz1L0JmZISl3ZFhwppBTqzaM
5zFb6mEnwQLV9XOhtBHMz4TAaA4f1ts/9qjzKBVenouoju1iYpy10vPQqwqK
bwvh/LLUkDYaQZ8G56mTTUzY5v/3hv8YFS5E3fqg9oQJrQO5eyK+U+E9zyHz
pOtM2PBitjFzAudXo8Wee25M0E70H+1B1/OEeLnuY4KD9dfl63/gPMldYs1j
y4SMobfsdHT92a0vlhozQXxJWUfqJD6/lbGLvCwTxIzcB879xPn1/fSntq/G
sLLx9Z/IGdyHXNrLem2NYWcyc91T9HL9uXa6uTFY2j/V5vqD8aFJvbpKM4YL
I7fDT6BfXjWpkVQ1BtGl8f8dn6VCSqaJj6OAMQibgEjgHM5/JevhrPtGsLS1
WMaNiwZ/uTV7Uv4zAunJiMxC9FraT87wDAMMVluJjqNHEpIs5EYZcMxx/m/I
IhoUSFYVHm1nwMh307Y4bhqklJfobrrKgAah8aBbPDS4fCGxqV+FAac4Ks9/
8tEgYM7A3o1Fh8Vv7+2NFqFB1Ojvby6mVHizZTX9Odo+bt/UMx2cA4HBiotF
aeB76dQjKUUqMFeq/4tCl3gdvNcnSIXk3ZVZUStoYP3zaHFFmyFItj/8FLmK
Bl5e9Wln2Yag01btGbGWBuymeQtbBwMQ3ChpQdANqblhD9B9vhEULnEaKO5U
fiZNNYDyJ32bAR06Y+L+YaMBxAjqL41AlykWbFgzrw/WjtlT1Wjt8axC/mF9
kLm9qOcfWv71bPLQhD7Mzu+v0VtHg071Jx37PulDs+mz4nC0SGx2zuBrfbBv
rhk/sYEG9+8IOSpY6UNIQ0NQ2CYaNE4ULza1B1htxVlfhc77kUPRYwFU9HU9
m0WrmRyodtcG+Pn7i9CRzTSYPaTsuG0jgJ80b2GAFA3CRhQ1ohv0wCva4KP7
VhpYnpPTbRrRBX6hxpg8tEaF3auaNl0oSOfIfUZn3UxU/3xXF4bKnI44S9PA
cJMXPTNCF1z6Toju3Ya/p53FOy6uCw46j+gW22kwJz+7dHaPDvytNxg7j64R
q1+6j6YD6ZaNF9rQfQu3D25S0oEu73d9JrI0GKBwLt9arANW6b+PMeRocLt3
rZF3qTb83Bq+KRYt23bzp12GNqSU8dbXoEdN7/8pOK0N7fWrVhnIY/yP0Vm2
ztpg9ntHibYCOkMzJ3GtNoxFPbI6jn7oEqMtz6cNCYKGcw/+//c/7wvlfmtB
41YLY3VFGvT0tETrd2gBw9Lvk4oSDRYntE64pWnBUO/vOD90Wy/taUOcFsR6
hyuXoBvlNp88e1wLaqISw+SVaXBPcamospMWQFnxmm0qNCgMqpMrVNCC92lJ
It7o7kShuD5JLQiOCF5agp6Nkta4tFILbpnDPzVVGgSWb9ymNk8BI/Wtf46h
j6j9HV4xSYFBCYGpJ2jnhKf2Nl8oIP799RB9Bw2Ex0ynpV5ToOJtZV88+ry+
yPn7DRTgPM7sbkUfj+x9WEsocDrBvdV6Jw22mwpPri+lgFSgSX062viS8XK7
Ago82aPy7CN61nnOdTaLAtOyf++57aJBe0jN2sALFDgv2ldSiKaEuW5hn6WA
/GzNze/or3nJTWmnKFDXf/OGqhoNVHwu/TCPooBzQ2JmMNp8f07e4TAKLJQe
vvQQLaE64DdzhAKX02yTFtAx4TH3+gMpsDNC54yBOg28Fb7+UvKnwEv3zSdj
0RsMtj74dJAC3uZLwhvR6wb+i5r3ogCv+ugRQQ0aVJnOd4V5UOC6xKsAC/TP
fgmGqxsFdHgrfFLRwetX2dw9QIGusXS3bvQH46F13i4UCHwb7iShSQP/71dF
YpwpIPT4gL0z+oGR7MGF/RQozDG2zEMX/iz16EbTEhTNRtCN+8T0xPDzfYdX
GClSMN4TM3KV6NA9M/oBaEedFO+H+P1rDD9oVaCf7m6ibHSlQLnss12z6J3C
qzqH8PnMRPOVdLVooKMx6S3iSYHhP2e2R6G5F53JT/emQEy/n9QLNMVGzSrS
lwIbG6w2CGhjfqg7AmsxPg9LKWvM0NlrGxe7B1HAOm2jSDI6bcBgsdtRCvwI
51nagZ6afe//DOOf4D7MI65Dg8/lxCwU8yNj3rqwF+0kyHX5AubPUSJt8jNa
6H1dTWcyBf78Fza6XZcGm/mVOv+lUSBlbP/QQbT1876giGsUaKqS655Gk8dl
zfG3KOCWI/xGUw/nw8cGnZX3KMCdMN0ShrbQX35ruooCGnuqn/4HeJ4nyT+q
WyjwxiAH30posCX/zlRRBwUOycbdO4sWC7YeGumlQN4fi5ur9GlwtLny/p4p
CqxIGzq/1QD7P8kojV9CCw4U2SwcQIfWznVWymhBxZN67xx0meDR0ts7tMD2
cyFdypAGpm2SO32ZWpChemhOkkqDXNmADGns1zFan6cTWn3H4dCpU1qga8fp
vIYeVdjV9N9FLegP31EuQaOBZIPnhl8lWiDd8tt9PZ0GSr58/YNftSCkz+Pt
HrSKaU9KFc6P+ql3BlfQ4Sf9aS95tcFbvGqDOIMGtlwjZXlbtaHUPeL1GiP8
vGNaw7yrNlC4+fVWMGlgcj7yYdMPbTiz6lixBVpf0XGHHo8O9Mh8W5uMPnLv
m8PQah0IN2/5KczC+qtYs6JJWwdqMpIKBU1wP6itlv4dr4PvzeKrBcxwnzaW
uTYo64Kzj9wYlwUN7rICfzld1YPS939u0dC6nauX51fqwTyz3jcefW9jYIT4
az1I2+46sWI3ft+opYshD0DL0NUpaUsa5Ix0CDygAGjsF501saaB8tru+Jgi
AEHrP7yX7XGfN28V7kvXh4d6dZIqLjS4ft0m/M4NQ/DgVf0oHIj1NRfzOW6C
AckP80+0RNNA7lZBf9V7Fuwbi60RiaFBrCrM9XzD+7Wkm4A1OmNQ6tvkXxbU
ntyS+hH976vzk3/rTGCGnX1r/CR+3mO5WuYeE9j3Jb1H5DTuqwrToTtdJiC/
MpFije/5fRe631xvMIU/9IMR6eiE3mxhvS5TeHHU5MVH9OnImnUtQ6awr1fA
wv0s/p7vH70ni80gufCU55FEGpSaHN88qW0GfyAyLf08DQSTJBtjis3gxcHA
Xx9TcL+dfDLkFm4Oxs29JRIXaeCaFxspd8YcmmVZno7oBZ1wx75Uc3j1ZVPP
B7R95vdI8dvm0LO/7WlPKu7nqf2fWt6bw6SV7NnuNLyP1PbaC4qzIejuRbr4
ZczHr4+0gxvZMCO6iMsevbq89dLzLWyYb+sMeIfu6vusb63EBj7mSduudBp4
xvBIilLZIKHbJ9WRgfHO1k94582G7AzWh1WZNHDr3rP6ph8btvytSLVC6+/T
MjoUxIbtlWf536InTk4H9Z5gw05VrfHXV7FeDh17ZJrEBqZ06sNXWbiPZr+d
trnLhpaYRYEi2TS42mctllDJBvYnHwUO2rqF71JFFRussgyzXqK7p2+oj9Ww
wUn8x8m26zTYqHy6u/cNnk/QhNOSQ4MXlq92vppkw8/6lY6iufh9P5k6Rb/Y
EBD9wcsG/epF2I0js2zwm/GN6Ue3SyyzHlvEAZ+BpPvTebh/5UXGtIU58C3D
voaSj/PUrzm0dAUHvGykXoWjr3QdXrxmDQc8mu+O8BfQYK9f3NOqDRw4UNG5
QeImDQwa+S94ynLgk1+WrAvapyPN57ACB5zlPNUL0MfmLvceUuaAU9YsW7UQ
zz+8ah+ocWBP/IYYehHeZ0dbHHT0OdBNHTp/Bv1xT65KtyEHbP/dznyJ3jJI
lfekc8A6EO7bF9NA1PmC214WBywcXUZ8b+G8ItvvZ1py4JWY/O876Ox0alSj
NQfYr38uxg6F1k8xa4dtOWBmFLsh+jYNgtK7Tvx14EALt7lsPfp0/yK1cUcO
mDxeo768hAaHJUPPvHHigLHqTfYltM2mlZ8OH+BA/aj/3h70kpaxFgU3DtDz
KV6bSrHexc/LvHPnAHV9c3QRen3dtoXF3hx43pFyfgK97GirbbQPBwyS9mbu
KqOBUa1/+9RBDgDveEU1uv3EmFWBHweqyf3nPOV4H9W4yhr154Du8YiXxmjz
Tm/rTYc5oD0hMvIaTYYioxyDOPCosPuX2B2831K0z7kFc4DiemOxIzpA8vep
fSEcUO/eueEr2rHy+YotRzlQkTK/XeEu7jvj3qRx9E7zF2oBaLMVQu1Fxzhw
h/+c4X10reT9BtvjHFCtsWHPoVv1FX1/octOSO7Vv0cD5vzjuzGhHFDWHPaM
RUPs9eTFYRwomSoLbkKnlArMB6AVbx+LFq6ggdTQmuF29LEcLzNL9K7JpplN
JzjwIt1+bRpaJdqOxxktmsQcfI8OYHAWXUDvO0Up2Xgf76vmeD1GF4fJHnNB
P/ovOrcOPXNYnJaPDpe6pt6EpnoJCH9DixYOn69Gn3ea7VaspMGMe0leDrrH
eiQ3AF1JKQg5hpYx7farQBd7i/2njw40bNSaRa8VHKLP4PM+1XzIq/uABv1D
wzuz0ILKha8i0Ype4y800PbS6Rm16KAHd38+xXjkrY9353+I9Z89ck8LPSl6
TNUU7Zi2kzsP46fL7zV/Hn2tSuYVFzr+n139G/Sy1+biJhj/jmnjC2KPaDBI
2/r2FOZHalTT0QH9WGrNnztHOOA3sH17FjpRIjbsJea3qmvtz0/o1Wdq7T5g
/i1r/8R5V+H9SI38qgvkQNajYcsStLBxb24u1s9o2buNU2jtw6lxhwM4cPLq
g3vHHuM8ubmoqfcQB9pTbkY8Qb+5dHv1CV8OSJy5zOJ+gvPb9XPAMqzXipCj
/XHo977mGn88OcDt61ncgl5SJnzOxgP764BdiEg1vg8MhLzKxf74wtZcfhl9
jfvKtIgLB8Rk/2gUEBoMtfut274H54fk8OJRtMie2Qu8dhwoXf2uVekpDU42
Wn18jf1rvPjBgfvoN0dCmnUssH56jpx/8Qz34SYlhpkR1k+7xx6B5zRw2X7o
1E0a1k+DrbQZmm9YxOmnAQeK7mlUvUUr17dU2epg/hNnvgzW4Hy46c3Zo8IB
Hf0jeovraKB59oyl/mrsR5efYQboLIdVBe2i2K8n/aoi0SF3QkOshLDfGzw0
uerxfco18qgSH56XY7djHu3DKr+48w/O5/2Ubb8bcV9mfPEO72KDc3SFq1oT
1m+XXLg0zusDuao5Qegbmx7XP2ljg8ew7KafaLdi9dFnL9jg779u3Y9mrNez
PRNiuB+iIucEv7XSoLm1w/fPGTbE3DhiKtuG+8XCJ608lg2xtT/PeKKPxQz1
O0SyIZ5/jO8r+k3ty8aYYDZcSPrA/fklzjcqT8kmJzbkZD/59bGdBndOpEac
VWZD3dOIj+0d2I+UJ0I6CebwQs/eb00nzqec0F0PQ82h5vEObgf0bqsXq1Ye
NAfyYGjrZ/TbYlNuR1NzeFhmcvB3F/4d6g4xl5lDcbbY3Lr32F/n6MUx0WaQ
FFm61rUX4+EXe+2sjSmc/xdXdBM9tnn0dI6hKSSGueh8Rz/6M3g2TckU4o+u
3h/SRwOeX/sXiS0xhRj/0IK4ftz3+8uVgu6aQPB+I/XbnzA/oN58i88E9uj3
Wf7+gvnkd5p0ucQE4W80e/WvNEjd1MrfFMGEmpSifSHo019nX630YoL812Cv
3+hnIcPZbG0mzCcuj/g9jPOqVyjSq9cYrvVQin5/w3pRmZ5WlTSGTyEXF82M
0+DMhkjZkAQGeN9m3p75jffnF92LaldQYfRCp7/6DL5fZTTu+fbLEHyPHtgV
jO6Qc1g9+84QAqgnqqbQLufmVr66ZghHussav//B+GYdkvOQNYQY3rVfBv/i
+8WWKLqZlgFcdfyy8dU/fJ/o6HF8YQLwSjAm6eYSOsxxlo76eWsA+K40KRGj
w8qQuvPC61aB3KOS4SQZOkgktE73ZW0n9jHRdR3ohLPT9AENWRJvapO7bjsd
3FToPtkvZclI74JTLrq1SOuM5T85Ushj1lUpSwfl4dJBbztFImM2+qJXng7M
Jxy71HAVIt0vk6OgQodhw5YrsTxqxLpwLjIAbfL5hJgmS43EHn657z5aqW1p
0v0kNfL5vyPr9FXpMLI1/tBqCXWSI1uXbLmDDg9rhB+Z7tQgUoGukcd30eFO
VM9FFWsKkVxy3bFBkw4/C2ue0310yYZlmbPLKHQIULziZleoS8RF0lLZ6M3b
Ti2R+6pLVq5LbO1E382NLOV30SP8Ssd0h7ToEG3+svmNLJBJawuJxboYn/eL
Upau0Se1edwftQ3oMHZyYiL1jQF5VjR/NAJt3KI9u2PcgJDSmVU1aBI61F3I
b0gePvxuyjLE74/eWLpV15Dcbu1+bEelw9TmyXiTXEOS9qs8M5hOh2VliUvp
PlTiRXfZW8qkQ8b7rgmZHhrZEDLiM45OPKj903aCRl7m+4cqsujwZMBTyJWH
TtT4I64Uo6UCk6ki8nSyuDnjXYEJHZqeC9+6f5ROMjgdVtlmdOgoGg5XE2QQ
86i9rn3o9Itnr26WZBDuO4OBG83pcCA4UW9EhUE8Vk5dyESnp10YXWrFIDs7
hdovs/HvQvKKaZcZpMXB2CzZgg6v78neallnRCLOvtz7Cs278rXOITkjsvOJ
zUHh3XS4JBxFG6UYkfSNbgmJ6JmZQ9lH7IyI20BUY7wlHd6xlT6/SzEiC+5V
9GhrOlxVMH7wgMeYlKUZWj9DvzmuLSYsakwONDS6LrKhgx6Ls85gozFplH0X
E45Wdhv11NQ0JpfGpp8dt6XDXl57epC3MVE+rKQXaE+Hf7fCV0s1GJPefyuu
V6LL8gSeSb01JokJMzzz6Kv7Xb786TMmY7lPG0/uoUO70vt86RljUti12/qS
Ax0slykkn97CJHauGg/eo8tTNSQ0lZiEb3L9esm9dDhWybWFaDKJ+9Kh/gJ0
/Mrn9zlmTLJF98jBh450OFm/viU6iEleNzq8XECr7183+fUEk0TZ6O8w3Pf/
z9u2bjnNJP1+An+a0EPw8aVkOpNcvZER88GJDho2YYnyVUxiqhz5ZdN+Oohd
KSlh1jDJXJUr0w3tbUN/Bc1MsqdDUXgc3VK4zODeeyYR4396hcuFDtk18lvI
DJPUXcxdoKKPnLY4f+0fkwRvjt8fh16af9vRhpdF3mrt3iZ6APMzetGOvYJF
kn0/l0u50kHgRo+TpxyL6P9tWOWB/uYnuEpQhUUmTt0+UozOcdl5LUGNRcyz
Q3R3udHBqHi76xp9Fln2hr+R7k4HR2WnWldLFnnk9F3+DJqdED7fbcsiXmPt
59rQM+1nrsnuZZEG3gwrWw+Mt+Plo3auLHLkQkRlBjpQR7RXw5NFZCRd1/Wj
f/1x55/yYZFYTcV+T0867N9eunzmMIvseiFKvY227oxbaxjCIoMWv/Mm0WkX
hMw8j7GIoQ/xOe5Fh5qOcV7jCBaZnMlpq0bTg1q2L45mkesn41R5vOkQ7HPl
8uWTLMJ1zWImAV0Rf6t6TzyLuNo8b21G58Y8feGSwCKNQjtzl/ng8wbyLDFN
ZBHl+pzjJuioA3ypa86zyMWIVRYJ6Eu5I3HPk1hkViNWphl9/u/uP+wLLOL0
49fC0oP4e41H/lansEjtTfe3LLS3/toC4VQWkXXuKjpz8P+/F7nG8BKLnBM3
jmpC+72Nc7ZJY5Gf7Q9sl/rSYdeD1Ouml1nE7oysEgsdJXH5x9Z0FnlieOW/
M+iCCEGvPrTU3NKeRnQG/6JtYVdY5PTd0HKBQ3So/d17dw793WfsNBNtohqt
uy+DRXZvddwXjw7uaWvLQVd+aN3ViB4s0YtoQUuk6i0T8KNDPu2f+zt0tFnp
gDHaZ8X3a/Xor7ybHsShb7te1b+CNq1OOteALrS2cuegy0O43fj96cDzTED+
G/7+GuXD2sZomV2eRR7o0K+fROPQ/963LGrE5+/PshyuR+/2MjIRQtPtaqv5
AuhAW3SlQAPPXyyilmqEZopQdtExPiKNeT6n0as0TEQ0MH7BUWsM69EZ4oUO
ghjfHsrptXyH6bBR66N6A8Y/r8jzxSl08hFvqTHM19ID3Rl16MkXcMka8+m3
nnV4SSD2s9u4cy7mW+usvOQptJuFg9wU1kcWLfPXC7TwguveydMswruwvIU3
iA5d/87pdMayyEvf8aOxaPmTU8ctorBetzmxX6BPvhVdPRzOIum9L6V5g+mw
+r8NHa5hLHKAXf76JPr5jSdGokdY5I9KkMLJEJw3V02KKFj/jiOfF9eie76L
b+bF/qi5bt3Nc4QOH++GvK3E/klcoXEqBr35UGnKG0cW2Tw92xd9lA62IrI/
vpqzyKlb3vefo/V92h7/YLHIqGvP2cXH6BDqfvjmAINF7nc8pkSj/er3O4bp
sYhJZURK1HE6VL6K/HlZgUVOFIttf4q+tKXO/J8Mi5RllT7+h368prLGbAuL
rI7rGwoNpYPC5muJxeIs0mcHmiFhdPgysEXTA+dN4N9/H7zDsV7/JcWOvmOS
vPFLAYXo/KrnJ/69ZpJ3n5SWDKOPyBmJL7QwiW7zPmW3CDoYfh2ve/IU529m
dZRTJJ7fn/KXU8AkGbrh26yicV8M9LMG/JmkVXVN1QW08t+SgCdeTLJoWwm7
HS3fFydwyoVJ3IR6j5rH0MFZuGLXR0smUe7TbTY+if2ue1zhphqT1EQu+Ome
ooP/34gLXb9wP9SEPdx2hg6q1f5t4l7GZP2qw9e90UX0nfvH9xkTpqtHfAl6
9ZDiolIrY1Lw32579QQ6HG6PuTENxsSZLjNLP4v9ZdGyK321Memqa9d0O0eH
GFehIbEnRuRZ47YHORfooBMhVZe3wCA/xDdkf0UnuBuPLptkEElv0Tj5FNy/
xx9v2f+ZQcKWztveRdtuSBF408QgGibtM88v0qFZcPO15ksMcqslVOPTJczn
6oJBGXkGSXv56v6mDDwf3/U6LQadhJrsXrEfLdr4/JuNJp3sr3/jm4UePLLi
m6scnciSzq0bMzHfQaEZVkJ08rjkw4X1V+mQ9zq/ObqDRgYShw+tycL74/m2
g7bONCJvukhmeQ72n7PynIA/lVQ3KKfNFNGhl+5i03TMgGRlCzF0irGfN+vX
Ek8DEnH0+3QkOkBioLfK1oAYbC/evfQWHb5PhU01qBmQ2tPbhCRu432u+3uG
zpQ+aWJIxBqWYj1Lyhl99tYnnbVLAxPv4j6epSyedwRSmTmy+TW6ssHR4ZgZ
kLSghldr7tGhr9gzZasuEPutp5Sy0bDtxRllCSAfYri//f//G4oeGa4QeaxH
Phn+2f+ukg5ZFI865SZdUrOuS1jiAR2OeoNC5y1dkjNVUe2MXv/w0sKmJF3i
diNwwyiaucM5cbWdLhnmnuhaeIj7bPt3Rd9vOmT86ZD5lsd0qO4nLYs36ZDY
Wk7AAbSo11/7MQEdsr6hKiUHnXf/5m3FaW3CfJn8bssTOsw/o6jmNWqTnI+6
Llur6fCj8tOY41FtojVw86QrellnCX3WVZu0f15ZkIsuuHHo8ISFNvk3OjK6
leD9Ibqe1qOgTez/pgZLP8V5IcSKq/uiRX4sLLrshv4qk31CvVOLnOY++CgP
3btjw/TiOi1yj9+Qa9szvE+bajy+nq9FhMXG47Y9p8PA4YJHmw9qkbx19sXu
aG3Z1JfH9mkRnY21rfloWkl9jqqFFvGSvrJCpgbj7RAk9UBDi9TuZGTK1GJ+
7dY/3iagRRw0yqs90Idv+gsc+kchk1obBgrQV+9eNBKYxvu64ZT09hd4n842
rjTtp5AKuqOxJ5r75KbEhU4KMWU2eN9EB64NylzZRiHHONdKt9fRwb1nL3/U
EwoRsRJ47YluDdrc31xBIQW2QdM30euvKzR6lFDI230simw91svbxauLsinE
x6XCwQtdeVAi1PIKhXC7bwovROtcd6u2v0ghyr6/n8s20OHM7kC+mHgKqfN3
HvJCB9uMyhWepBDHoBa+InRZz6T7jkgK+XlEQ+4buqIocNXKMAo5E3rDVK4R
54X80mWmRylkc4SgnzfaY6+JcW8QhVRGH00uQvuOWGk2BVCI+anBu9/Q4hlp
xiJ+FDIUb94p14Tz5fqrr2UHKSQ08eEfb/Rg32Ic3RSyInnr+mJ0qab/RR4v
Cim8eF53FD3RdyH2vgeFwOW/TvLNeH/c3eDwwp1COjPcon3QC0+WismjfbNe
5Raj69tPrfrqRiE8Odr1o+j7vE4xs+gr+fkj8i2431xoKS74ea4vmk3e6BqH
vB4J/P4D0s1FhWiDny61Cp4UUu/qmDCMdnr5NvQ8Po987oSPTCu+79RVqTB8
KOT8YJSpO7rUS3uFhS/GS2qVYh66R6ovthTPa+uSL/gZXRf/KcvxMIVUXdcc
l2rDeVHRre0QjPUx0NTmjFbjRNvexHjGbHIszUYnKKX/oGG8vzpNnO9DC069
+U8V82GSFeW/8SXeh++8Tz6I+SrtXWnhiC5+ZJA6E0chKzfmq2aiF7Fjlr9O
pJCezKYp8VdYj2qxV4IuY/w+7H1jhwa5N4Oa1ygkZ/3E3TT0e83u08a5WD9X
VgavbqeDA5+dL7OcQl5251lbocM4EUFaDyhkp7imegpailHmHEIoZC5t74zI
azpknnoT1Ib169Q13sVGd1UN7/2G9V2zJurBOfS5+4HOln0UkpCad2z5G4yX
95G5uR8Usj5lfI7vLR3su3S/xYppkYjXkR8Y6B1hDpy3m7XIoOjKJ7FoQyZ/
tIeCFilO0gjn6cD7ucZuq72GWkT7XOQirk46MNQrf0cEaJGs1hUDuuiV0TEL
0ye0CI9g3rMwtFvm9oHMM1qkOaEx+i8aZC8/KsnF/o1fwfu7C+/vSW2eoz1a
hDTkDu16h/s/oGq7/TctsoVfoy4QHRv/gu+/WS0yesrh9CRa64CY/3IxbRJ6
MlfgezcdPL/XBNZZa5PMCHWhzz10sBEW3vPlozZZWLfNcPsHOoS02bUfntQm
jvdXhxxEyzzhf6LLq0Mkvk9/nEarSWsrxyvqkKt77t7m7cX3T6ZeQGukDslS
UzGT6cd+0Vn13XyHLrk+KnvW+zPeP0/xXDmP8537tPjTEvTDgObyxk494iwl
MD2F5hWenFGe1CNS9sMOoUN00CzNflS9AkhOXb782S/4vtU1GC7IBJJ7fUvz
7WE6XIvTZfo/BJwvEksnx/D9IaCm53KBPnmyMb1c5Tsdzjr2vv5boU/eDK2y
90dzYhx9vWr1CVfQ8psTaHvXRKmDA/rELmmOPj6O9eckepN7gwERaOyOGv2B
8/oeRcUoxYD4aF2aHZrGfF7TShKNNyRKEsIj7+fpcLHRr2o4jkbIgG2WuBAD
RHK3HpmfNCZZ+nZ2jmjdjtmJL4uZJDzLTvQ6Wtu3+mPTSrw/OdrHbBdmwL3d
5tRIvN88frfHQ0OEAVwuq3ivHWWShy8dla1XMOBXOE9w5AKT3H1ygCStYcCW
7nqh4UUmJGWD69G36J42Y+42ERNyONRVda0YA8QizW4UbjIhqhS3nCz0H89B
BwN9E1J2z/10yVoGdH6sHB8PNyG3i73YLesYULR85I7SXxOSn+7XxyfJgBzv
Foc9X02J9tb5ZUbof0q0ZbXTpqS9JE7zFNpMqdVj82IzslBzPfm/TQzoe6FQ
e3+DGbEcf0Pl3syAgKcz5kwLM8JF1bz5V4oB61asNv5TaUZsxxYFfN/GAKtU
FcP24+bke0jiVQUZBozkZg9EnjIn0dzrmnzQU+EumzZfMCe31+zc8g3tFEbW
7yw0JzwGbh1ftjOgMHB+V2anOSlNbaT0yzHAK/n5ubI1bMIPFxa/UWLA7iNi
6ms92SRdOixaTJkBknRjWZYvm8gvd1+8F6105zcj4DCbsLspi4fQYoMKndfC
2CQ1cIB7RgV/rz5cNCSJTbbcVOFev5MBd28T62X32aTi3LooJzTx/txw5hGb
GAX/x52LFkl3fPGvmk28Dd8tUtzFAJO8Q9SaejYp/xCxCNQYMBd67ubjd2yi
J/qS64AGA3KlN4l6/WGTlzMPIgrQT+slOTLzbOLce4NrDL3t7xXpbi4OiS0O
4QrWZMC18XWHxPg4pJm+kes0BeO/IYO2sIpDHBX4I5rRiVVaRTZrOWRixdQ/
YS0GGETJ8+Ss55AV/S/+XUabJFr4r5LiEPvjvv+KtBkQ9Kd+n70Sh4zutw2f
QKcmm5xiqnLICSODfzt1GLCVVuuisItDslet/vcYndxYuK6JwiFfSx4vtOli
/dpfyXWlccix1PwTK/UYoMrtcmGEwSFLw5IWbNEu53Wm9zM5RJHputD/f7Om
praZc0jQ4LKFKWCA1N6M4OW2HFL1K+rHDn0G7DN5fpnLnkN4+P8MHkY7Wnl7
f9nDISkKn5um0C7Vt3jO7+OQHr091TsMGMCe9XjK2c8hUhavyg+jl04NrV7i
wiHlwY8vT6HPePIFm7hxyOzpHWd3GDJAJiU6sMedQ/Sv3Iw4jLao85ve58kh
L6svuk+hdUdH3PV9OGScz3fXFJUB6cTG96A/h6itG5TZQWPAD6/M3rQAjI+C
/frD6Ez96Zz7hzlE0IK+eAp9lzPc1RrEIdYHqn6p0hnAebDj54tgDskMVh0J
QC8wDi4uD+EQ+SsSrybRl++1f3M6yiGBt1JqVBkMqLb4/WjLMQ55VC1QGYCO
Spw7+B7N3R5RVI7uXE6bjznOIczBX1cn0ZRt2103hXJI8i+fZFUjBiT0/coq
RXfzfToZgFYe+1GkGsYhm9fZHS1HbyneHZmP9lRo85lEm0iz1gud4JBSPZqT
qjEDmpbNh3iiZziPdgegT9+PPleBhgMqjHJ0tdT43l/o08H5lEl06ST1o0w4
xu/0BkVVJgNiPSKWmqHXXLmwKQC90zu5zxXteIt/VTk6JnK/rR86rzqcbxJt
2t5w8CD6+6vpvyosjKdU5rq96F2D3uP+6B0XGwv00KG/+gfK0OqSrXyr0DV8
th0/0Gt1/E/14PMsW9faoGLCgIG5CqlUtKUC9bE/uqIntUcfnaH3sLQM3dU6
V9qL5//EUc75gW4zbLh2CC17IO+SiikD7u94lf8D4xcQvP6MPzp928c6V/TD
08knytDTBrcXmjD+3Ff4An6gbU1/Mrf8Px+3TriqmDFgdZVNkS/mK6n6p60/
emtVoEQR5ldysE/vB5rn1wr1Wcy/xy/rHSrmOI+Ppr5bhi7ha5H2RwtovD4t
gvWiq/Bg+Q/0vaeLlvzA+orVU1qkwsa/y19pb8L6a+Xk/vRD60rp5qRhfe4N
Tno/gf6XHGLBdwifv0bxrBKHAbcNxOTKD+K/F23W9UXvubko0Qzru/Q27/Vv
6Hxhs2+OWP+1czd2y1rgvJD82t+O/dHN1P/PE529VnOPJvYPz5fjHkPo0CaN
9R+cOWTtrrXiW3czoDZEe2gt9p9idEWTC1r6/YFnRtiftht/KPajI/7bVRiK
/Vts4zb93pIB21UX/6ezm0Oe5i7OF7digKJ5voIAh0M6prJs7dAWhiftGsw4
hOv8+0cdaL3m++UbcH5Y1rOjXlkz4NklEyUJ4JA5DS2hOlvM9421lqHbOUTk
VBf5z44B5wRrcz2kOUT6bVAAFa1X5/eWjvOO7V/69imac16tpgvnYc7NrRlV
9vj8s9bP2EIcwhIX3l7uwICMwED9sz/YxMnjVvcEul5Yb/jCGJsEVjATlPbi
fnJok0gYZpOrFifHi9FetCk5Tj+bTMbP3st3xPPUelxWeIn75u+gQaYTAx78
GeVSLGKTotxeRj9aaMuy5v5cNqky7zbZup8BfBlGh2Ky2OTjjTbrW+g72bFH
L15kEymTh16PnRlgKWO17+sJNinOOJf84QADKiv5fS3M2OQxPf7SJlf8+6kN
n38w2KR1IibDFf3mwTR/hD6bTFCP5Y2hHfK3WnjsZJNdYwcezrvh/LaMOOex
lk2e6FAGNngyoOCTz6wxMSdtX3Z+2Y++8f0zw6HMnPQlKY3mom+KTi4xuW5O
uIe2/FLwwvvBZr1Xz6PNCSNRSEDXG/tT/uymlTRz8vLjoIrjQQY0/lvlu/Op
GekPPxd51R/P4yl698A1U1JgtXr2A7or+vXeg2dNiZ9cZsCGAAa4/3FRsz1u
ShY6Cl0y0CEkNOCNtSkRV3xBSz+M+8/x6HL3ZabEomeOPzWIAYZBJ9J/+puQ
ZxpeyWeP4v3o68CJt9IsEif4Q6AF/f6MV6WsCIuwB0Oilx1jQGDARI/zXyb5
eO5k4Bm0h+qalaFtTDI7lGUddxzrfSTg6O5gJtlxsVP8ZBgDnvw+5nrtiTHJ
+UG9ERqJ81pVuoePYkT07CPCnqN/3jbtGthgRLqfPbIRiMJ9jiWevsiICKWo
LktD6/IdE7pRzyDH1CSD7kQzoMrk7a/1VgxifvwvfeQkAxR4vLe9dqeTWZ7y
EZt43Nf6n53mAqkk5eBYzVV0ruDomRpLKlHqkLn2GT1Ify3vu5NKDuRf2334
DANOlS04uk0Zkjbjs1WJCQzgrzsT9P2QIclJ9EisTcR5p30zOszFgOj9vuGx
7BwD1vhc2+yrb0C69/Ua7EZvzPlUabDRgAipWP/uQ4PmsE9atz459trQae48
nndefe0fc32yUjucYpiE+1XohtdyBX1SkvNwZTz6lY7uNK+APhkMUmlYk4zz
zinIv/A5kPCPPjcc0T7hO59aZgERZxSE5aLfiHnxfg4Fcrfkk80omvo02W+P
HRBzsY2qOy5gv72zUqrcBeR/3FLbNQ==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$141618, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$141618#1"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV13c8Ve8fAHARpZSRIjJCqLQoq/DBPefce7JJJaESlVEJlT3ii1AJSTaR
UWgK8SShrSVpUUZD0bT5fX7/8Hq/7jnnnud5Pusu3rnfZjc/Hx9fGP75//+K
vs5HDz05sLp85tNrXCWikGsmL+LFAYHvy+MW/ltMEh2qvDeiLyrdfLgzfzHx
eHRC9D7am4gsKZpQJKpXDK2bvTnguazWd2qHAskIyXhx+wAHruofm+mlKkNi
5295c92XA33LbsiPKYiSnaZPPucEcUDyTnBo1OMhI/ksyTf3EjgQH7Gr38Z8
Gdj3ulY8yeTA7HDRswe36wBnV1fU3CwOjJV32ayP1AHNzu3bzNERl8t3D17Q
AdEOe6EH6FZvO6lFf3Sg5RHXsSmbA+YcYWP/WF3Qv6Yx81YuB0jDPSPZCj2Q
O/bHueQ8B7JUpLp29q+H7sXHRKMucmByrKLn1RyAx6Pbde+hA9TNehYqANx8
rrNjziUODDYUbTdbDZAY9e1yCnrl4vDUCBsAnS829oXlHKAm51JaqQBxFYsz
mys5IOXlp5AtYwyrjeqXzbqO+zOoGXBYygRkpM/aWqDTkxa31KiagOBPn6Ak
9PCO6ncD60ygI0/1scwNDvTsDLNXszOBSKHEg8urODCjIZJ+fsIE2h45VplV
c2DziecDctNNIdBxlDpRxwELeaelIZ2msGiHy8fHaL+2dcfb+02hdndTyNx6
Dmxco/BcZcQUxr2TbiSgXxVlyZ8W50BI+LKl8YQD4Vr8/U3GHAgrdBCJbeBA
faXHSALu47HB6mcRTfi+QXcnr1hRoPJXcX8Duiaypsh6GwWNI9Gz+Zs58N03
6ErXbgoEBWw54eh6d2fh1wEURM//di20hQNy66LMlhRQEKsvezboPgf01N7Z
6/2hIPFYoLP/Yw4sPP/zXFAcDct6DC1r0EWajpKayTQ0U/xGfE/wPOiP0e2Z
NPDNiJWPQzscXho+XEGDT2zqu8xWDlRuevM+qo2GTYmV2+4+40CuiK7sB3kG
FqX1bZZ8xQErB6kHLwsYqBouYbaiM4PGz9WVMbBpq7dOFjqU97v27FUGEmX+
LlBv54CxpLCcWiMDfJn8betfc2BaiUx69kcGunPl7Ha94YBw+dhTcTkulJba
Wl3+wIGD76TELWO4IMk1nPyLDp2hdC4wkQsh3eplep0cmLv2/u6MZC7YyE3O
uI0uWnn2W3UOF0YTL9Q/6eLApV0NU55VXOD6TKz8/okDX8pEE8t7uHB57ue3
q7s50GVZkLXkGxcWlT6L80UrWO4tPTnIhYFPRb1j6OGBhM/UGBdSN9lkzerl
QP6bFetXivGgW7dojvpnjAfRzjg+XR5YvDxV44Ee1XLqerCBB1UHg/aWo1v5
RgbijXlwvMT6rvYXXN/sKNdBlgeai8aDqK8cUD8XP2iwnQdhU1b9O/s5UOHI
q54I5YFc0+j9zEEOcJWdr7vU8WBD4sH+t+jzXi3tNbd54Gj/ec6inxxo1qhm
RO/yIKP3pVU6eqDCZVX2Ax7IzKhsS/3FAf8LRkqu7TyQ5rp/PPGHA3V667zj
BnmgK/Ze4An68ZnoRO/fPNjSbrdk7l8OHBLQitv4jwdn9pjsiUe3fC3QHhzj
wYJYuR8x/zigUi6wpUeIBcn7z0fChznA8K80j5ZlYW0SK3sb3eFaqjUux4Kd
w+0NfCMcWFuzNdRDkYXTXy+FhqALVg27ay9hQWJ2nGDgKAds16XtDVnJgpgZ
iPuOc2B3h6X/eyMWVkve0LyCPt0ccvaHMQtWb1fY/UJnpcYUDpuycMJT9syB
CQ5w/hZnjTIszE34t8hrkgPn+FZ/uW7JwuzHZepufBS8qWztlXJiQfVXWGYJ
etbisKc/nFkwWbBJYgD9kR5YVr+DhQCnibHD0ygIVW+yNtvNwtcf5k9i+Sm4
ya6JWujJgtA8Jc5jNJ9Q+litFwtKOv+qJAQo8BPqXeWwnwWH0Ky8c+im3UYj
4T4s3BMd8Ls4nYJrK9wUYo6w0K115+tPNNReTxk9ygLfljPO2oIUHA+9KuUe
yIJujhGvHp1WuGb3yhAWLqw+ueipEAWWyrKahyNZ+M96zZ0/Mykw2/qgfySe
hTw/QV09YQoyp/ecEU9koe7s67JgdEvP617lEyz86wpPFZpFASn4maJ7igU3
n2d7pWdTkPPiiqFyCgsRqYXvHdGHTr+YK57KQlZ1gG0uGnqzHo2g2/iVDZaJ
UODiErKhNo0F6vQhsQ1zsM5cdP0kmMGCyw0mKgz95eqIxkN00BvZ0Ub08UiP
8oRMFq4qN34yn4ufr/wdyZ/NgspVyRvOohQkiCl7X81lAdo/Ly9Ai2zRDt+U
x4LjeG3OZ/Ss720LfqGTObvjDopR8HZf1g+5AhYEXl7bHilOwc5jM2yMC1l4
obKAvoN2fV6ufwNd6Ou/UkACr98hcXRpEQuspM5UBNr7QJakwAUWFrme6WtA
v3+bEbYP/ePK0BP+eRTUH5hyfoxOsq3KiUBbNpWmHi9mwTVfOrYB3W/ZOt6N
1v595CC/JAUnNs/5o1/CwuskPZMIdO1zrytv0SUfzy5rQN8ft49TL8X90ByV
4J9PgXvLR9GDaMVn1Z/C0Ydm23KG0b8Wyz68jd4R9XeaThkLjQcDr05bQMH+
naXHfdCpt99kGKO1P9//XIJ2F98QFY4+4HNBsROtuyPD6zb61pNUfYmLLMyq
HN80TYoCm6w+A2P0JatbquHoONNBuVR0WI6c6G1073ED4Vq0zWDwEJ80BQ4n
ZMfeo1Xg/QdAN0e3jk6i/50wbAlDJ2vniC66xELLh6wKgpa2eADa6PRVU2l8
C7Fv3U1MMUd7hjqHAzpBR3n+TrTBk/q9Yei762ubDqHnKijaEPS/7JjKCHSn
d5g+nwwFc25df5uIvlzXqQRoFUdfyzT0sbnGs8PQ0Ur9Ytloe6fc3/XoF8Km
6vlo9UvT3k6hTz5LyShAj07saDSSxeeN2fn9//OH5g1loegZCx9W/f/+rEyl
lHr0Pe9g77PoA98jgqfQ/uyRzJNoE4NPu40WUUCZ3DeLQs9LMLUIRcdTRyMP
o7vf5mvXo0t847nu6Osa0xWm0GlRIvl26Jgg1xlGchQcfDV11gjt8LBxIAS9
KthtrTpaY9GS9jq099S6o3PRkx5RZBJtG7Fp/y/c79aanguG8hScTbsk9wKd
O5s+FYKefWv18Ston22FR+vQJvX3606iOaVCOyfRaRKu9R7oz2yzZogC1qPQ
Dyay6Op0Ndk6NF8i/XwA4yX+638Ck2hrh+cbG9Cr47gvghUpkP8SKLYDffje
Pb/gxRR8SJqfH43xuWCT9aJa9PYkQxcz9PXO9oZRdK/cfnMx9J+hPtEjShQY
PXZtTcL4P6AqVOKjTEHWQ/HFkZgvopcTrCrR17LuzliPvmQwf2gAPaoWZvET
8+27nQrHS4WC9QrG87ai90WavHdfguvR65BZgPkrLHr/WCHa/HVN3m3M7wvp
1st70CCvUuWB7q10ObJTlYKjwpdza86zsKszRGK7GsbXl5tCG7FeOBrU0DZL
KUiyCi3SwHoz1mLy/SS63+9f+J0cjF+7+6efoHm7YcNWdLvH606zZRTUlSvu
Csd6tSl9KIBZTkFQ0qHRRqxnFkNa5RtW4PkV2KjIpWP9qiyTUluD+afnL7oi
iYU3aafEPdBPCt1TMrDe+of5zy5HN78u3zIbfdESprQ1KQgrbj3fi/VZ5sfz
XlqLggVGijXJCSz8XTZ2zW0dzm1qJ848jcF6UsCzK9TD/jTv65xO7Afz0npP
LjGhYOKmqWruXqxPpZsnXdFKvFti43vwfOpaPArQC88vSbdHb+kpoZVNcT/s
V/83y52FDM3944ocCjpq/1zzcsV++GjIfRGN9TZRu0AR+6E+v7DRPBbr0Zhg
+2o7Fo7PDyizQe8sdSkPtmXhrfq3hUloGdsLU/dsWAi1fPRHbCMFhr2y03dY
Y/3KOFUy1wzX5/FlX4wF7peOzIJZFhTUsHPn1HBZ2Om5/DufDcbPmnyd3A0s
VLwZuUihi169jGtZz8IE2+Idh54bpDD4Q5+FtKW7B+fZUtD5e3O3rh4Lj3qz
fqvaUTD/cfjC2+v+X/8kRs3sMT6+1j3Nxvlhrv2I0FkHChQWDgiGKOD5321u
fod223RHIFyeheK1qTFK/5+r16XkReB8wpmnNasMfao57ko4zi9HWz3n1DtS
kP5k+lVvKcx3tnNejxMFMzMDL/CJYj4ZNSuu2UXBldqtSn3jPHj5tTbbF71V
QOJjDc5HgymX5avQn6wKHiWO8mBJf+YiI1cKdFK0pFYN8+Bkmq+0Oc7x52NF
xrbgvOX2c7HYXneMj5XFqyy+8EA8P2gqx4OCvUOZ17Oe80DDwiekG11jamK9
+hkP6BH3CTVPjP9+g+j6Vh4EWdqOXUKHNnwobXvEg96xpUO1XljvUrZt72vm
Qa3dqx/t+/F9Om4JJdbwYI+Q5nsxXwp0M+S7H+bg/PfuSqslmq8i+JJqNg+E
r667k4gOjRt9EZzJg5IdehdE/DD/bxSpqKTz4Hst+Mz0p6DnnoeN1Wke+Byy
FOI7QsFhqdohpSgeBHd6rhwIxH5Y7rTglBvOwzd+KK4MomD3gTfxCa48kE88
MM8LLf8j5X70Th6Q9b7DX9EwY07Mfice8J8JbOgNpqBi7oywhfY8iDGPs38f
ivstd2jiPocHSdVFIY8iKWi3sJgZpsAD5+/RjeLHcL19YUvbFuF+KbrNskez
hTK1ajI8uBulkvoevYS3feEtSR4MW+VeHIiiQHEk83u5MN7fl/5WPIaCZazI
5fJfXNCQTNS3j6eAoxrf+4lwYYT2CktHO7/wEk2/xYWmo2ZN79FFQ0Y1bDUX
nD/MsnFPwPqdMzvo3BUuJJX8t/dIItZnaeE7I+fxfghPSz9JQYrZuk15sXi/
l++/98kUPFxpFLnXjAu8hx/K5VOwPqku0D3P5cLDZRv3OqFbJ25ueMPhwtO+
xW/foR94N0hrG3Bxrnly+20qBeXOqjaFK7jwa9OyhI40rAcx5zz2zeGCvGGn
clsGBcK++3TNWxjIzdj4bn4mBbLfVp1vvMOAytj11E3oFY/f+ayrZ2BpVYLw
S7RzyTNxgesMrNVcP/A8C/u7Bh1pns8Aq5pa/TQH56kxnmVaEAN+c82sH+Hv
zJNBhxIfLWXgT4ukk8R5Cpbef+HyXZkBn8h3+zaj56+6Zjgdfx8eGPY+1oWO
X/Xz1wIJBjw/nrrxt5CCcasDC56M0OB6/ZWcfDGu79YDofBmGmycdn31vojv
+8SkK2cbDU+lNYauoFd2tCQm2NFg9fyPAFYMCCq2/LXfnAYLbrRc5CUKtt1l
KuYb0cDTLLY6U477MxM6Pi2mAYQGrtdXYn34JhMY3oPPuRQQKXYd5wv52V/8
MS8DCvZZ2KG9bjTwrcC8b0p3WJiGLs407X6Fdcf5P/1yhRsUaNYJ983GOnrS
ZbRjZRUF/GIXmr9h3/wlEaBpXo3PKffbE9HBgeuHj3bF1lHwKDBtbQuHA/ze
e8seoaUq4yQE13PAwnXrYfF6XH/65/h1azjQZ6U35yzadJ2L1kE5DkgvG9G9
QDC+JZWsbf6aQsDbIyebGjD+BSaYq3mmYGB8xEigmYJsl94bt36bAOz6E2yC
Jg/2VC7+YgImUQdqw9Gy5ef4A96bAH1vjx5fC/YPmU0pM+6ZgIX1Vq0J9Jso
0c6UTBNw2aGvNnSfAq0VhdsCOCYQET4+99tjjEfvoXqINYbm22Hvn7VRMD38
QOmbN0bQZORwQOoVBRLiloxBnRE03tLid0Sf/ObkGZ5jBORm75IedF7JJbbS
1QiqK828htrxfPyKtcq/GUJZrvS47BvMj6J7Icp/DOBUeMXC3R8o8PzjcWTs
x3rYZtxpN9SH862YZtjrBB0Q+0Y56HymYPMsy8CDHjrQmFzqfBjtZ2/t+5Or
Axqf/fcNoVNHizOKBXRgInFO2NAXnH8bt4aMH9aG7Lf6pUPfML46pNXXO66D
T4dTpg0P4P5WOCZmz9MCj0vspeEh7OcBvp6i0RrwdO6xU8UzaEh+/NV6g4kY
gLekWbk0DSd2DHgHLpcny2vKv5xSp0Ep1CjkpqwmcTgW2dyGTirmjTxjNEmc
+ebzsktpcODePPj6kCb5+mHS5Tz6U0RKbNkDTVIy3aK9ahkN+8D44u4ALaJu
0d/0QYOGfhmRqKHna4lql3rBijU0yJIfkVx/HaI4I8/pnh4NEWu/CHO8NxA5
kcxREX0aypO6/0Sd3kBkxNNSrdBLDDKSS6s2EEnZxMev0CFpttG5/AZEeFWA
Ye96GtQHnTetSzEgv+xt5AUMaQhet35a31VDcreQ//0GExpmX56l9t0bSEPp
xNEw9JGflyYvhwIhFcPzG9F+F7R27D0JpLr6h/lGUxqe54uVFFUCufS449ZW
Dg3/kjbE7/0NJO3f5Ux/moah49XrJw4Zk330ru0VLA2/+wPdTfeaELnDXz0H
0AN3rZ+KHzYhrUUHg1ZupEFu8Izls2MmRFs47FwZus9/ZtTSHBMi8DDj9QUz
Gjqyr9asbjMhGdZtm3ItaPjzelQgz8iUPHLkWSTZ0KAyrnhz3kwOCUto3f4U
zd9e3aUiySFr6zZ7idni+hYWaKsrcki6glt8InqF6+B+QV0OcfsYcT8O64rC
bYkDMu4cMuleS0fa0xBT8+xIZQOHrD60ysjXAZ8/pWRavp8iH6bm5VWhbXga
nv0BFEmMH54+gR5aq/B9YTRFvp+/fT8K65b2Upl5dAZFStpt7c840pDSXFzz
qZkiKoZHvKqdaJDRqtBav4gm0sK3z/HtomHW0/+YlJs0aU45P8lBq1y0He5v
oIm/UtyOWHTuuJC49kOavFxvqybhSsO0qbDcjPc0SfLuuay8mwZWmc++lp8h
Ii+E79PuNDQzo6MWXIbwZdsMx3vQMHyfe3z2PYbs3nzn8UP0+M6PPsqtDLkv
uva8iCcNvRU2D1e9YkhK2HybePTGtoGRJT0MWbazvfS4Fw1xAXPpWD4usV3i
5By3n4bj85K6tdZxSWHp3qb/DtHQ1ahm55jKJbNdOzKa0cM5Vz9JZnDJgUUb
D83wxefH2knfyeWS9Qkaiv+hnwUtTOO7yCWt3gNHo/1ocNRZKjjtDpeMrPFb
EXWYhh+3+9YqfucSs6qw5IhAGvTdZcYW6fNISJn00tvon11rSqINeaQyp+LW
FLra9URynwmPLIjt7A0KomHbRhE4sZFHOreC3uFgGtbzqfzxd+QR37Gpdx6h
NNg/8+koD+KRwoEzPiXogZiMhFNhPPL606oZX9C2Dq1zPY7xiOFD59VuYZhf
jmXZgvE8MjOzPsIlnIacqafDr9N5JMMwVG1TJA2eb5L3zrjBI481pWpPo59W
C+juq+aRaWrlVs/QXYvXut69xSNuoh+OWh7D/NxnPuLayCOrOw0f8qJo8Jqe
MYd9yiON4ZMHDP/D9008EXvlC498bwyuVjtOw5bh7BUwnyWL5h/K80BfXPa1
4K8US9jde+LK0eox8bvyZVhyQdDWQSeehvZXsl19CizZSauP0glYP8Q2CyxY
xpL25md6bidoaLliyCdmwBIh6ZbFJWhVSfVnFkYsWbfnlvAP9L4VnFPRxixJ
mnnhtd9JGsIGEqY6KZaY84KPRp3CeF7qe93EgiUN99VuFpymoXJMb2PDdpb8
lJHL/YxeruySl+zMEkUPiViNZBpe136IctnBkuDZE1uuoqNnP5PucWWJrtmz
4TspNEjseh6c58ESt4zmzhmpeB4iaxgTL5ak9Ne2bEQfb9P5+sabJb/ii9Ke
o5dXRnwaP8iSi4+CdD+doUHatfLiv8MseSvno6iWhucvr2zpdpQls7zdZ3qg
C7L0F7QGsGTPXJv2X+imz2P6ScEsUbJUO8KfTsOolG3P0wiWpLU+vbE4A+uF
TV83Hc+SIDPbeTvQtle9mtgEluxoeeGdg64qOS3GJrJkGXm1RCGTBhGXk+P6
J1lyq/zd6UVZNERuvyrQd5olecudB7ahrx04N9qUzJLook72HLqz7WRKXgpL
rLI/TZPJRl/Vfml2hiUfE7/sl8qhofuVCOudzpKmWR4P7NEdJ8RXa5xjSWl0
v2oqWuuc4t8etG/IwDvJXBrsimv0zDNZMsP770aJPMw3vbUB37JZ0v/Fv8ga
vSevc0lsDktadw/zn0Lb2ml+U8plSfr2sZui+TSk6419YPNYomE+TX1OAQ1Z
ac6GXgUsEbsXEWmGnvoSENmP/suZ/uE4OpGJW7TnPEvqNsxInXWeBlG30+52
hSzJr4r5yUPnBIir30XHrJ1lHot29YjfqlnEEmuNOdNnFmK/+OmvwX+BJdoX
Ep0Z9KeEXW9d0TIqYjXRaJETtEwjult2no9gEQ2xb145Hilmif/shZ38F2go
jtFqriphicN/6etN0C09vRV8pSwxElh0Jhzt2K2/k0LPHJO34Cum4eOFQN27
6H7/nGIjdMtT4sFXxpKnvxYLhqIN7O0jddHpX1VqJ9D37WYGZaND3AqlDEpo
2Oq31+MxetdHtUNB6L8eBdtG0Vyn4sc16MTCl7bKF3H/OpYtG0Ofc5LaxkOL
25dF6Zdifl0KP+KJ/vd0RddRNKdg2ZV4dId5+Yab6LmrVSVK0PX3VqcNo09d
O5bRiM7JFWUMymioGS3UeY8OO/rjbzj6WWTgyT/oHTiNN6Fzun+Xz7jEEpOl
ZbazL9LwuHI8SwqtPO04vxW61yvYTQU9/fXeymT0oO8W0ZXo7gquy2t0ce++
vLXouzFqovKX8LxOxKvrogtdhOp2ol+2OZT839G6PZ5F6MnNQmu00e5ijbL9
6GSxlXdXo7mf8+6vLqdhRPHkfnX0UhJ+1A+d8blfVw49K81FvRr9+MrYUlH0
1/1GrybRifIHN07ieh4w8tGmFTQ0hE8v/IouU5hYG4P+fXyfyQt0/NCbTw/R
xZGWS2vQXk+qk8Qr8fz6rHZloy2Kzhrb/98JY8Nh6FWhRwbT0ZWk65czWmzz
5uwP6L7a9K0b0E+F5k/suYzzm0HDie94npff/y69iDYQUTjQgE66/szhF/qQ
m8aHZLSd28mqwCuY/ykDcZrodYb73QnaW8OjfQLja8ECiwWCV2mgrs1ta0K/
ujvbNxG9dsKX3wZdlflV6Tla1CDWWBKd5nfvqdQ13B9RD+sX/4/nJf+tykXL
Bf0WsEC/O8b/7cp1Gi5VjZ5Sx/ivc+w6O4zmHzuj3YH5kbWWcA1uYL2WVP0W
i3bpDi5sQqc7xud9wnz7ZDqy43UVzpPxUnLhmI+Nsu1i8jdpeHtzbJ4KuuD3
9fqdaOPl2+3vYj675fvK9aPf2HM7+NFf+AfbJ6uxfiX8zN2Xz5KB272WKrdw
HryiK/Ub60v0XWsfV7TI8mN3o9CL7tUmF6A7BGxtpdBsa9JrlToa2rR/KOpk
4fe9N9y1pJ6GOrF3M/dl4HrHUv1Vb2N/e3V1KicN428tk6l+l4b5PSef7sd6
eq6o6KvGIxrcIvUMDUJYwten98AD3X2OGS/E+u2q+rC0BD3ZKrVZDK1xftBT
/TENemI7ersCWVKbpzeg/AT7n/zBsDDsB28zH/yWeUrDq6azCmW++L7JA+Mz
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
BU2t0wzclqdTEuyVyP8Az/Isjg==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$141618, {2}}]& ], 
          Annotation[#, "Charting`Private`Tag$141618#2"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
BGwUmNvW4v4Xe/HKJbp4Fw2d0BkJuK+/gRUVnj/aKERD/+RWs27928RyUr0H
t4rT0Nb3T4PKT9EjbZkNdkNwSY654dAVetRaHKN5Axxbx+Kx7z492qzJSGSS
oKEBnhJ7s1Z6ZDX7HWeQpCHBP5eDzxozIDpcM29diobG2f0e7tHfgo7/pved
kaMht7gy52hzJjRzKf7Rbnkaan2c82X+IhMKZxD64gEur2reF5vMhIr490v/
At/bDGtDvUyIUf/cjwkFGsq8qD3R6saMSpIbtIaUYL3Hsdev41jQNpS05fse
GuJMMW5aX92GUmWDwgVUaUhjWHG1Q4YVKW932XIaXGicunXOnBUd7dbaMg6+
uYd5vTufFSX7DTOs7KUhYeXntGQ7NiSdt5dBeD8NiXKeODj9nR1h3M10Tho0
ZBFqI6kyx4GaV96E5IIz4od707g5kePAM7rf4I7e4xO1ypwoqvASXYAmDR3Z
OnIszIETfaWK0UVr0ZCcog9L3ldOZHvN61+BNg3p6/hFN+dxIf9R9s0FREP/
ZUXefBLCg94thc3t04P88MkVPJrOgxi3rY5eBO8yKSIkK3nQ3d1jXxbA6rKn
mvb+x4NKA94/WNCnoXiHsbtrbrxodqvXgQWchj6EPb9neYoPue3+5jFvSEMn
t8c7s57mRyUYxV7NiIZUXo0GnLrOj1bM31r6gudXvd62P+ZH0QE5WvPg/MfO
jroj/CibCN46b0xDSkK36n+5C6ARc9XMORMaqotp3vo9Yhc6HZDQ8+coDRlI
rch9aBdCvjUqcXvMYT8T4iovrQuhKO6vul5gBQOTpWMSwqikiDnjF/jAuP3k
PU9hxDhxzXXcgoZ2u7XpsW0VQYXHzi32WMH+UlUClnFR9FfjEEf9cRq6ECO6
3n1BHHHd6CSZTkD+eU92X4gUR7Lt/r44mG1nVJLQQ3F01Kek/QNY/mB+y+s6
cZSZJ5P2zpaGjFWTzJnEJNBhQU6F0lM01IM+jzJ8l0Cp66P66fY09HrJ0WTz
iBQqyBqgDYFlBTY4s89LQZ/uNpFxoKHnt7k13COlUP+zbzbPwfKeM4xmb6WQ
lEnl+feONNRfn7hxSV4aFabdTuxzoqENln9N3ltlUJWO1rCIGw25a17UvTMg
i4aCb4c+8qGhMMOnT/bMKqJc651rfWDWa5+KojiUkLdSuq+ILw05t2Ff1/co
oc0f+WfTwC+ds9yQjxISVKmjpF6kIZzov7N/UQlZ9P7dluxPQ30rKs2tDLvR
R43ziXFXaKihk0dK8cAelDmHPwsMpaGpsWdVj9b3Isw2JKgavC/J59xfLjXU
/fHtMdYwGrLhm5XzlFdDHHfV2FPAEqEJLTes1dDVg+L+L8NpyBxXTn5SooaO
XFunTkVCPd54Rmd9fh9aYyydOhZLQ18Mjw9Z/tqP7nr+rnkE3s16+vfylgNo
zw/5x2PgTLWVxkLhA8gp57HlxZs0pBPz5YGh2QH0zSjuXfwtGuK6asBBKT2A
MuNd42vjaShgsKRyf9BBhC0/c2W/Df3plYVIR/JB1G03oG8JTpvNOhBdchBx
7LVZHgRbuoaP840eRFfbDOz/3qGh4BCd592H1RGvdrCWQQINZf+9qzjjrI6K
Myt5Y8EKSZ5MHCHqaNR/72f+RBoSefdF4HKZOgru93h2Blz0ZGWOaFJHgrTc
oCzwn4gFN95JdVRWPHJsGvyrQPSI/xYNdERATG1fEg35TvJcGBbRQP8Dmv68
ug==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$141618, {3}}]& ], 
          Annotation[#, "Charting`Private`Tag$141618#3"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
dXuOdhyLDEo8wIP+7synZR84mr5JYawFPSNEu1npE0c95iV4qnrykJhwZ5HH
EEf/NmQ6xqPVv6deERPiqdKCSvbyQby35utM7lDh6fr3vyfGevNwsFRkvcUm
npYb740+i/fSQyOrQw5SnoZJD0nUom+HqezuquSpdZdvsJQfD5efqzKra3na
GhnqdRptcu/sI7Emno71JG0OO8LDX1uRe4rfeLrwQqNSqD8P1WddYtO1BDRl
iEk+GsRDVK68MgQI6ErbQP9H6N4lqk+WhQhoU3nJFonjPLwrdP84L1xAZWIM
peLQnmOH1vRdEFC/JerehcE81AU2WjRmC+jaI7+4T6E8pN+ck+z1VkA/dS7R
MDjBw/mHs/1v4vtsiJXnL1/0+hrnfx0fBLRYtS9P9CQP4vHaz1T7BXQmbZim
cYqHk44zjP4JETo2vuDTlnB8XrGvU+3w/TrGtb8iEe0buL/vhQ6heg3aV7vR
EdUlOYv1CHVKu7rh4Gke+2tRY6MRoc/J2dKIMzz0u0wO8hcQurfgSewbdM8T
8aRQK0LHK48/oHKWBwWjBptAa0JNvvjNykQ33lBxX21DaEqES8TjCPx9ZIY8
u5vQlSPJLlKRPGyZ9qevfS+hTXZt5hvQ5Qc6xd3dCJUx2DzSjn7RHCW005tQ
v1cW9r/P8aDXKPn62nFC5UyPmVhE8RBwpWO0LpTQvJRiuXC0uf28GQOnCO3y
NqhWjMb3ioaDq4UjCT3Wuj95B/r4sD0zEkWoEp/un4oOYq8qtcYQWpTXueUL
elv9x6rbFwldO22G4cLzPNDUKUzQZUL/D3QPNHE=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$141618, {4}}]& ], 
          Annotation[#, "Charting`Private`Tag$141618#4"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {40.849999999999994`, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {40.849999999999994`, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"stroke\"", TraditionalForm], 
       PlotRange -> {{40.849999999999994`, 47.15}, {-69.99123200914443, 
        69.98115339795002}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"i\"", "\"g\"", "\"aero\"", "\"act\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
Pz2gdrU=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$141697, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$141697#1"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV13k8Fe8XB3AkikKoZJddtnuvewcpJ+7cKwkhpFKkTVKJKJXdt0WKFImK
iBCtkopHlFKWNoqylKVUliKy/s7vH17v18yYmfOc83mGmvcep61CAgICW/DH
/3/f7GmvfeXHhZrYonP3N1FEJcNOec5uLuQZRzn8QMd7lPivQue+XlIxfzNF
JmQ0yk+gZ2h86OSgd9WelqxBu5XX37VHN8eOb5rtz4VnyvuXbETbwPabNuij
15Zae6Pv/3sjcOz/zn349//Hte4sX1ONfqh/CRzR5/zyMkT2cCGMladghhbW
WvCbRl/vVomSQwe0RVjFoN3YBwP68Pk6Un4lVqG5h/hdpWhHp3VfZ+zlwp6D
rKYj6DLxpyxr9NiGSWsKbfDUODoSvePWYe0eT4qkHU17V4Fe7nXlyCm0uOks
TcF9XOgu8rfSQx8a3B8E6L+smQGPN1LkW17b0zB0TUPKLD7azWfVgnJ0QFGQ
UPUGijxTur9tCi1KTa9fhjZpWnx/WQAXQPjmvLz1FJG2HXN7hG683xW1zYMi
ETO25Y6j159+a1a8jiIDj16Pmu/nQuTB0uUT7hSpM7p+4QH6WK2V7i43iiz7
Lts7iq4xmTk7yZUiBZnh5qaB+HzxQvp31lLk+Hz3lmK0kc0P43fOFBmtq1zy
F13uWzi30Yki244ZHWYH4XGzB+p1ayjCHRdRuovumJsydMWBIgId9zxvHeCC
jXvYRIMtRfakqhUNoHseDwdFr6RIq/OpaaNgLnzNv6xoaEORh898rhSidVrG
fm6hKXKgQOZLfgjW00Ho6DpLinRtDWP+QEfalXPLllHEReVHpN5BLuz9dpix
yIIijMQn6tfRi5yfH7plSpGfwfu2XjvEBQtrh4pdDIp4W9d/u3KYCydL6peI
qlGk1j0lrgv9iuM+ma5MEVN/L2O9I1wITflnqatIEYkLf4LvoJ2uz1VWWkiR
0r6Fos+OcuHeTLcdh+ZQZF7qZs0f4VwwPlnwfM4whxwu0n1hFMEF897HIT8G
OaS76rdfILqa3HxQ1schj/qj706iH0T1jVl945Ad9HVrqSgu7Gp3aHzSzCFk
YNCLHcMF5S3qg5mPOWSJyMOZh9C0TpH1qwcccl4h+noZ+nZas2fvPQ7x4y0Y
5Mdy4UWG7ZRwIYfIpZmHe/zHhRxPf8e76Ryyhx91Kew4F9w/7tGePsQhypdk
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
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$141697, {2}}]& ], 
          Annotation[#, "Charting`Private`Tag$141697#2"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
G/ATpcdRka0NRPwXbn+Ck4lwccZ8jUYjMWR32cloFROFZuY9PyfURNz02U13
52YiHdOPeZlfm4nQpLWIBAsMR1iabmwh4qqHNLlWM5FUBY9EmHELUc7/eMd9
8KXdJnJRzS0E3+NliSQeJpIvyuYPt24l4l5Vz9TzMdGJ80H5ex3aCPK76TNx
ASYa7vK8XpbbTjzTOX3aHHz/5RT5+mM74f3stFAi2M29PmxiqZ3QNjcLUBJk
ojhKRM9ugw9E6ecz9urrmag8aM6fa+QDUdxqvuOkMHhqcp614yORX2ZNhosx
kab0TpWQ353Eo802tzrAfNbpp/bKfyauediobdrIRLYHlHiVjD8Tapq2yc/A
WhWHP3bnfSZevbELztnEREHkv5HQa11EdtalY00STLRb5YrUF/avRFrslV4e
GSaSjM5oXX2ih9CSX+bXBwcrHRmMCuwh3ueEaNwGGzsKHbAs6iFWKhMjuGSZ
6MBiR2O7YC9hPPmBxiHHRKcLlZU93XoJNppG+iKFiXQ7rzeeNuojTMfZr05s
YSL7LZXL6hL9xMSNsIRtikz0wqk4Mk+9n/DnkGhwAA/eXDt08GQ/kS22m/oT
nF2U3NgW3k+s0rX9OKzERO5d/54z+QaI3Kh6zb6tTGRW+yj0A9sgwYsecn5Q
hb+fay77umqYiFXw9N+4g4nuThRE/FYcJlTW2nGeA2/wetmy58gwcaxLk3MI
bPHHX0w+apiIcvnOsbCTiQ5OKsk3KI0Q1PSdHJK7mWib5bzbGdMfBCHUymat
zkSlTyR3cHz4SbQuFPm8AKvY8v3YsvyTsOpJYhsHn3G+L+CmMEYEZd1gu67B
RI+PsPcn3xojGhnSbMGaTBQSNpq2WW6cMHN3+pepxUTpJUp6I+4ThOsA/8os
YqLLjVEX6zOmCNZvv+ldOkwktIab6yc5Razi/TNwDew1JHqb+mmKeLRtsGEW
nKZjtrafc5rIu176eFaXiRpe2A4/NJ8mJnmc9szSmOjCzt7+uY0zxMVtLQ4z
+kx0UedGwPGkWSKXoFuoHWQixs7ogGXWLLFwvMToKnhHq/ho3cdZIvh6muYM
+GKp2Xwl3xyRir15ZgyYyGXR8vUhlzmi//iO5OnDTFQXrTv9+cgv4tz18C9T
x5hoT1h++LLkPHG1cvs91eNMtGvn3tZ0zXkiSKhR2wnsM1Un5WU6T+Rmcyf+
BGs2c2569mieWDXsbj90gokGZi/WtK1bILJO2f76YsxEy3/aT2xf84dYUt8v
UGMK8fMhJb9ffpFYf7uT5DrNRLdaB73kDy4SCh2uV2lg2W11wzEOi8Qx59yO
crD1+ZAa0fxFIjldPo5lBvl55tT6K/Ql4pC4oFLeWSY6tOfEmxHnZSJ2cUA3
3gLuj23GZnz2H5GZ0sPsA+/68qnknSAbYh3tOixvCfH25pLx6y1sqDup5eRL
8Dfu8G9/TdgQ5XDxpVIr+P/uY12q+WwoK+5+xDdrJqq+blxofIMdlR3Q/L75
IhMl/asqvbOJE7UM7x62BBvcnG2f282JesNVx1LA2YLGowHHOBHHEPX3tktM
9LNxvZ94MCdihgnwaV9mIlPObBmpP5yotXtgp7kjE7U8qBuJ/b4K9Xnf901w
hnjazp7V186NXphs+PsNvOeUuCx1hhtd2Rp/dfNVJrr97sneUMHVaOVjxoU4
sPX24IPlR1Yj8e3V9NhrTDRVgMS+1K1GJ74u8Ua5MpFqcw+tpJYHVahfirh3
i4karadY8718KHmaluThC/mj8JFucEMAEWY+nu/AyH1FNSJRAHVVlJzi84P6
dS9o6F+TABJ4pMYfA94x/vpripAgctsr4/ran4ma98x+a74kiI66LzJGA5mI
Z4ztz3Wp9ejvqrzRU6FMJJoZ2bA2Qgg9chyvTAA3qrZ7VqcLIdWPik8HwU3M
DJF75ULIOu2p0bU7UO//u7Fdb1oItRy8xwq7y0QKgbXZR44Lo+Qw+7CqMNif
jdSlHGERRMwn2fPfZyKJ79s+bVcRQV3ne3SNwDpVbTOFNBEksPPkfC94+903
Z8ZcRZBbu57F0gMmaluT1FvXKYJEtLw19cKZqGbbt/yYaRGUk1wsEgrmSW64
eYVPFA247qwTi4D6qBY1qqEliry7HZLMwaqZavJbTUSROPOFZwo4llx9keok
ivJz+k+NgWWSO9zlb4uioxul1XY9ZKKOUmnK9mei6H+wxWnt
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$141697, {3}}]& ], 
          Annotation[#, "Charting`Private`Tag$141697#3"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxNz2tI03EUxvE/GVk5nNFCEZobVApGcwZFUW3eyRbeQsXyglqMnGa4WTin
0+mLvGxO92KYU0tjhuZMy2R2W5lj0lyW+aLFXDW1RiMraKIVFYTP78Dh8Hn3
Pez8C6lnN1AUdfLv/rtDS07rc1Esn/o/IdcETFoxrMwaKzlBuMiqok8R3jNy
LMVcAndUdcyaSuErOzLto2I4P8b2sbsSZnYy7JZmOH2xcMimg13sOnr9LVh6
ZjVO9ZDoq5Pmlk/D/f1pycPz8M7J1SndMuw3PRB2jopbt8/ru9mKbfAli0Ui
Y8P82wOBoVx4u3axZXc0nC8K91CpsJFnZnELYOGmSEeAGG416qusCniyWPzD
oYEl/oIUay+8b7BCETAKH426zPMxw2aT3PFyDj4d5TzlXYKLBhMHV7zwjH+d
+qZvPP4rYQgMQXD4uOGTOgxm+V7PsRyCz8cXZA8lwhFlHJ44C6a6UleaimDB
mFxTK4U9EzJjaCOsfTFzj90BP7JEaFf64S+mxaRdD+Crer17rxXWyQ/SF97C
fZlMv28emMMMcNt/wY/fZ3YH0xPWrW8vdW5mwVv4bT6zHFjiov3+zoezy9X2
5WS4fc0VrcuD31Wrajovwr1fY3sqa2Bellz2lPCbJ+MZW2thuiaSpiVccYAl
GVHASdK1eHc9vLpx2J3RAGuKPROdhDlzYV0LhAv1XWlljbDtePN9ZRPRqxQq
nymJXm+PkKYienPno9MI07npXifhilcxeT9bYMaR6sMxatjQa2Q0EHZJuJbA
VrjaIerJIRyc0Ce7QfiO4UPGZ8JJQSGR+9vgP5HzFTQ=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$141697, {4}}]& ], 
          Annotation[#, "Charting`Private`Tag$141697#4"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {40.849999999999994`, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {40.849999999999994`, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"hinge\"", TraditionalForm], 
       PlotRange -> {{40.849999999999994`, 47.15}, {-23.3787710070944, 
        23.389411936257705`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"i\"", "\"g\"", "\"aero\"", "\"act\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV2Xc4le8bAHApJUqOVVlRRlRCyowbZ5gn4yVUREiRkFIiEmWlSCIUZVTI
6EtIeZQKGSFCKiOjRUpWxe/+/dX1uc5x3ud57vW8V9IuR63cODk4OA4u5uD4
/79FI31NjV504G3SjAxQ0iLrMs0kVxyhQ+foYInuD00S51DubYrOqVth9b5Y
k3g2XVrVgN7AqfU5U02TyD3QtXzpTYfk5t8+uzQ0SNqZtDc1PnQwvP1hYJ/G
DhIlbPeuzJ8OWbnjK3+LqxIXw5bRjCA6jARxjmat3EAkbwi9q79IB92X8TBu
IgO2w65FLel0MDgfWeF0TAfoB/oj+G7gevZ1uZSU64Bq37495ugvUe2PR//p
wKoe26Wv0CYd7s0LF3ZCXZPR3hc36TDNKUNvu64LWqWbuR9n0oFpJUe89wFI
hE863cumw/H876llPgbwSTp8VUQBHXatns+8v5cJzXP7NOrRV22dP20LZkJF
u7rzyvt0YI9sbLiRzoS4iK8lV9HNq9VLZD8wQf2zlW1OIR0k6dU2s/tYEF0k
nf6ymA6NawtTk+yMQFmvWpGnjA7lb3auUNY0gdN75xiXntDBsacoceKOOYg7
7x9oRp82NjjAXWMOVW4vzvBV43p3tYQv7TaHv94JDy+iR5r4+59ws+HMWUWF
WILnk6udq3eQDaE5DiuintLhRkqRuabULgj/UdkW9oIOzuvCc4P1LUDmt9TR
p2jlR9qmLDMLqJ09z8v5kg4VUh0vFu+2AK7F1vSz6IhiNWLnZQHnhb+WhtTR
IepXMV9MkgVEaYmlBDXQ4ck1y6Muny0gLvy004lmOtz1fxbtHGkJikO6ux6h
U/5G/u1MsISXDE49jhY6qNx83aafbgkcy6Iko9EHrdTuzxRbgl9U0vv013SQ
Mcxr+dFjCTZxxXuet9GBdrNM54+iFYgnj+wWeov5NV9upvbMCspn7rHs0aGZ
nvNWjVZgY++tfgP9Ss5n/GCHFcSJ/hbZ2EWH/JRivZMjVsCRztmp3f3/9f+4
L8JrDZ8yJagD7zDe221eN+2yhrw8a4uSj3S40+R4IrbZGoSMdOd/oxvK7j2o
67CGM5825mv20WFotHR0otcarCTml9WgHzpH24h+tYa5uDvVLf10eKqf9D1n
KQVGfv+Uvg/SQVt4dOuCJgUlfKO9yp/okGtpECcAFIjntUX7o49yjNTxMykY
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
gPwyGQ==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$141775, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$141775#1"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
SySIPVVOTz8f6+Pqt7mWc1TyPyNmiGQ=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$141775, {2}}]& ], 
          Annotation[#, "Charting`Private`Tag$141775#2"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
HRBzsY2qOy5gv72zUqrcBeR/3FLbNQ==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$141775, {3}}]& ], 
          Annotation[#, "Charting`Private`Tag$141775#3"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
jtFqriphicN/6etN0C09vRV8pSwxElh0Jhzt2K2/k0LPHJO34Cum4eOFQN27
6H7/nGIjdMtT4sFXxpKnvxYLhqIN7O0jddHpX1VqJ9D37WYGZaND3AqlDEpo
2Oq31+MxetdHtUNB6L8eBdtG0Vyn4sc16MTCl7bKF3H/OpYtG0Ofc5LaxkOL
25dF6Zdifl0KP+KJ/vd0RddRNKdg2ZV4dId5+Yab6LmrVSVK0PX3VqcNo09d
O5bRiM7JFWUMymioGS3UeY8OO/rjbzj6WWTgyT/oHTiNN6Fzun+Xz7jEEpOl
ZbazL9LwuHI8SwqtPO04vxW61yvYTQU9/fXeymT0oO8W0ZXo7gquy2t0ce++
vLXouzFqovKX8LxOxKvrogtdhOp2ol+2OZT839G6PZ5F6MnNQmu00e5ijbL9
6GSxlXdXo7mf8+6vLqdhRPHkfnX0UhJ+1A+d8blfVw49K81FvRr9+MrYUlH0
1/1GrybRifIHN07ieh4w8tGmFTQ0hE8v/IouU5hYG4P+fXyfyQt0/NCbTw/R
xZGWS2vQXk+qk8Qr8fz6rHZloy2Kzhrb/98JY8Nh6FWhRwbT0ZWk65czWmzz
5uwP6L7a9K0b0E+F5k/suYzzm0HDie94npff/y69iDYQUTjQgE66/szhF/qQ
m8aHZLSd28mqwCuY/ykDcZrodYb73QnaW8OjfQLja8ECiwWCV2mgrs1ta0K/
ujvbNxG9dsKX3wZdlflV6Tla1CDWWBKd5nfvqdQ13B9RD+sX/4/nJf+tykXL
Bf0WsEC/O8b/7cp1Gi5VjZ5Sx/ivc+w6O4zmHzuj3YH5kbWWcA1uYL2WVP0W
i3bpDi5sQqc7xud9wnz7ZDqy43UVzpPxUnLhmI+Nsu1i8jdpeHtzbJ4KuuD3
9fqdaOPl2+3vYj675fvK9aPf2HM7+NFf+AfbJ6uxfiX8zN2Xz5KB272WKrdw
HryiK/Ub60v0XWsfV7TI8mN3o9CL7tUmF6A7BGxtpdBsa9JrlToa2rR/KOpk
4fe9N9y1pJ6GOrF3M/dl4HrHUv1Vb2N/e3V1KicN428tk6l+l4b5PSef7sd6
eq6o6KvGIxrcIvUMDUJYwten98AD3X2OGS/E+u2q+rC0BD3ZKrVZDK1xftBT
/TENemI7ersCWVKbpzeg/AT7n/zBsDDsB28zH/yWeUrDq6azCmW++L7JA+Mz
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
BU2t0wzclqdTEuyVyP8Az/Isjg==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$141775, {4}}]& ], 
          Annotation[#, "Charting`Private`Tag$141775#4"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {40.849999999999994`, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {40.849999999999994`, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"stroke\"", TraditionalForm], 
       PlotRange -> {{40.849999999999994`, 47.15}, {-83.51586793300068, 
        83.56008199830949}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"inc\"", "\"ic\"", "\"itot\"", "\"gtot\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
PSPr4zz+aoOSjfoJ9jScJyOeON1U0oZrL1+VK6bjeuhO2daZa0Kw5Q7RPei8
hO/PZQQ1Yc+zN76Z6Pi7N9fXvdYALdKlKp+B+RKWfmbAWQNqinuTZW5g/1UJ
ufLOXR36478eWZGJ1wdVVxhaqYKO1RIN/mycl19WxPWXKoBQc3iEJfp52WoJ
ylMBpulLP8WgJQIP7BOWUoDH65el8N5hgpQ6XzL1Rw626/Av5c7B9XhV5/nj
JJ6X+ST72PMwPlmnBltdVkBtM3VttgDncy45ndW3eSAzS5C1oZAJn/Nns+0N
uSH05Nh0GPq4zwXts3VcsEmzcAffPTxvlQeZyPRxQOMFdUG5ItzvrlcP583m
zZ6z5M5tLsF8P9rDLvDyrVlXI9+x+IdMOOBxs/kgxUEqMr4pvUb3Drl6HQ5f
Sq4FNr9aUYrnzU1xo49ecRJn1fP6WejRiOfCPR7cpDeS/ft/ZTi/hWXZe4bw
k4HNf/a8q8D9m/UuNropSsbrhm1UapggHXNTPfawDDnXuN1/P7o6hcztHZIh
Ms3Vl7PRJ26ELl10lSUWL5PeqTzGfrvjd1vJFjmS/dF0n2otE35n7+VQ5FEg
znMpx9XqMJ8phdcXShXJ5OKSVA+0627fv85fFMkFdp+qHHThacayK1JKpJRn
M5t6Pea3YPA++zNKRIg2flH9CRMGWyNjf5gok8ZVrAyNRjwvWQr8lMxQIa5G
D2o90WMfZnoqn6qQKRPZ/jx0UsmjoJ5xFaKw+aea5lPst7vMBc6BKjm1/WaJ
ZhMTstz1Dyi8VyWU78wTrWYmtIv93bpvRo00Hd07fAht3Sd4KoemTtwCX3AX
oEcaMs4fWKdOYoJvW2m3MGFY8l5hyEl1Mhxt06X9HPM1d7xN85c6uZ6b+03n
BRNWrFcs/Phag7CNrHvujd4mtUHu0KgG2a/WWnAXHb7pLlsClybRuTNxWKMN
+5uAoN69tZqk+ta6ceV2nAee29dYX9EkCv3P2/eiNyk4rG4r0CSRim4lWWhb
s2mnqTpNYpkZflT+Jfaf0Bkz7VFN8iHj+U+pVzjvfabf9jfTItC7681OdDA7
PNfboUWyZSYeXkP3NAbbpHpokcPXxY5LdGB87vvMDI7VIvPXds0Kv2aCl+Pe
L3FvtIjM5fF57rdMeLEgNfjUQZuEvg7rZaHZ5MHhwwFtMigi9vgc2kb71Vzx
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
S5SIDU3ecGUy9r8nhjE144rkf+uKdes=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$141853, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$141853#1"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
rZD8nNtjPE/qa3dk+S0ijWXivvFPcT1Drju6FC0kRem9S+rRZ+QWiHltWkhS
/CpqFZ+xYbHuMm5OjTJx0Dy36ha6b3PNm+39SqT1DF/fk0I2nD+2ypPoLSA/
Nk3v/6+IDUsVQ5Mz2+VI6cImitoLvF9l6vNqBcmRrLFC7gH036pifz8FOeJy
21e1H11Uz/6zd4cs+c033DRfjPnk1d3joU1UMvSmZ/vSV2ywSqWdcjSRImfL
rL0PoWnN9Nf5mZJEpaLkcha6WfDRfxskJMnWz4n/LX2N8Xi+YfJTtzjJattw
UJPLhmXv83htHosSk+/3og6jy0WrZk11RUldt1xONlqJVWN/6I4I+dff269J
2NDW7PVD5bYwcfh7xX/ZG+y/V6txS6EgGZnnveaCvtF53PcTCJJoPo+Xd9De
hScnwj4JkGeim3i03rJh0/E1y3QH+AllwVCM1js2pC7hbB9m8ZE7Cx3yXNFT
e1Iu53bykvWLyqrvop8NGGyMDuMlR5ddl9UuZcPJZGfViDc8pMyQk65dhvfB
xeEijiXz3L1Gj7lu6ImrMu9/ys1zR01Uv+egDYW10vROzHEXbxpbtvw9zter
f4f56llukPXNguXleH6T935MHZzmUu3E6o+gE2R1eRe6TnNzdvlN3EPPizz5
K/pjivvVaZuxzgc2mHX0KbzpnuTqe06+06nA87XRN5xX8Q+3/MSBnqPoHcnl
2dF5E1xHv08i99Gm4a5p71kT3Ljg2xa6lWyoalRYtztinLskXMrLHR01+WJp
ruY4tyjyZOJ99Plsk9vWVWPcntjtjbofMd5O8Payxhg3OL542h19yu9NpPaX
Ua5soqZKHrrEx1GZP3qUC9f+OutVYb6vDbA/OT3CbUxziTyG7jsUM9RZOML1
zKjNzkOvKOy6tT1ghHv97t1evU/4/dk/ZRq8I1yen+s+uqMvrnnZHfNxmHto
WdX9XHSn9Wjgm5Rh7ofDjud/o4/dMdMocxvm6mUPH9OuZoP+131RF02GuZe6
Iixc0XxP1NcvpA5zxzXkV95B9yREeb+sG+KWZK4b0qjB+i/C93jtpiHu4u8f
aw783zE+m2X5h7hn1B0LbqFfzc19Hykf5P5yHr7Ugeb1KBcpTxjkmmdEnFj0
Ge/X1+rgrPMgt6BdzsYRrSq4SUbDcJArt+guLR2d4ZIhkCAxyA10XCfbguZJ
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
iEZPwvUAxUebfXjJ/wDOqABM
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$141853, {2}}]& ], 
          Annotation[#, "Charting`Private`Tag$141853#2"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
Pz2gdrU=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$141853, {3}}]& ], 
          Annotation[#, "Charting`Private`Tag$141853#3"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
NPkfXeVZ/A==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$141853, {4}}]& ], 
          Annotation[#, "Charting`Private`Tag$141853#4"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {40.849999999999994`, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {40.849999999999994`, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"hinge\"", TraditionalForm], 
       PlotRange -> {{40.849999999999994`, 47.15}, {-25.377843524119108`, 
        25.39332822510537}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"inc\"", "\"ic\"", "\"itot\"", "\"gtot\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             FaceForm[
              Opacity[0.3]], 
             RGBColor[0.368417, 0.506779, 0.709798]], 
            LineBox[CompressedData["
1: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
+c2COQv+Bztjce0=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$141921, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$141921#1"]& ]}}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True}, 
       AxesLabel -> {
         FormBox["\[Phi]", TraditionalForm], 
         FormBox["\[Psi]", TraditionalForm]}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "ScalingFunctions" -> None}, 
       PlotRange -> {{-0.5478152034422711, 
        0.5477504097610009}, {-1.3200172252447737`, 1.319730803790641}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"1\""}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], "]"}], "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             FaceForm[
              Opacity[0.3]], 
             RGBColor[0.368417, 0.506779, 0.709798]], 
            LineBox[CompressedData["
1:eJwV13c81e8XAHCbhoySioZKQ8kokdJRkgoJiYqEjKQIKcrXSlMoUUbJ3is7
42Tvvfe695J5ZyHV7/P7677er3vv5/OMc55zHglzez1LDjY2tixONrb/f7LU
hf4ziCGjRwP7T259Brjd3nnHN4GMt6vbSvR1GGBz7pVxSgoZ/ywm+X3WZMC7
2Avyfdlk9DuVff7AGQYYCKxjFVWQkXeL5wsJBQY4pp248HGMjJf2rdX22ciA
7Ik5d0kyGcvC83OihRmQoEq5lDhFxgWOR5q4jgHxlHfF/gtktAyeFKDyMGBn
lR/X8AoZfxSXK8r+osPdbtNzXiIUtLH7tUG6hw6PtkvmWG6i4IbM4693dNBh
UDjFAsQoeGxl7xWhFjroPPr5sH0HBbO4/tKnq+kQMnZk2OUABZfLhJ//l0cH
kzndVq5DFMwx2zFm/JUOk472A89lKbg57U2UUjodlPWP7burQMGgTXtuTMXR
IU4vWiDnJAV7Kqjs+4Pp0B/ErTKtSsGa2px6eiAdZvfUXRdRo6BVXdnqb350
+JDjf+2CBgXbHswtqj6lg8KnTwOHdCgY+kyvWtaJDu9T5YTX6lLwl+4Jb8o9
Ogz5eYsM61HwSfWzqlBbOoTn2TncvEJBcSbv9KIZHWodxleGjCkoYnpvNPQS
MT7Vh1JeNyjof+TJ9JAm8Xzd49yiNymYNsO/fbsGHcKOZ6dtsaDgRd61QqEq
dLDw1bj/4hYFT9QJd7Qp0cGe1tA0ZUlB+b3ttbxH6DBQcfSklw0FdwU8MLoj
RYd75sHnCm9TkDlQ9/OjJB0ygjp7J2wpyH0hv61iBx1s2nIfCd6l4N2dXGeF
RIn5D1l7CN+jYEha0sRhYTrIu29Z5rGn4MFw52p9fuL9r02VaxwoaDzWaPGa
kw7qq678enefgoLtD3bG/KXBw1wlUV1HCvJVuB0qWKLB978zwexOFORh9r+s
Z9IgWs/GPpZwQ2XA0f4FGjhu/RZ5zJmChnl+RyenaaBZz76rjPBzO3xNI9NA
oMKJpfyAgtEZAkpLozS442C0PoEw6a6pyt8BGnQdW+vK7UJB3pJXn9h6aPDG
99/OK4S7BqyvsbXT4GNBHn8o4dTDNQ/+NNKg9mi9QjNhoWtOtF81NMgzp3xg
EVYQlmtZKKdB1acGWYGHFPS9iILkEhpInLv4ZwthBfme/J4CGpR8v7K8iXC9
8MHqmmwaGFqO7V5FONH1jkpuOg1c3v11nSGeFy6psv1LEg1ux7T/RMIWa9Xu
voilwXl68MdnhNWNN++/F0kDVs97YyDs537lsm4YMZ/onarTxPz4hV5T5YJp
MPjNVfU54by0U/8EAmmwEid+fSPh/Mi/XjOvaHBrVdKbD8R6yfwCt0pfGjx/
29q1mrD5a/cfYZ402EM3knMg1nvvn31t9x4T60sR+1xD7I9mYZq8qgsN1GV5
twgR/rfsICBwnwZfQ8VjtIj9VG5usxm4Q6yHiFxXKLH/Hx7XhdiZ0YB/9INb
ChEfUh/+3ZUzpsGmY4uSGUT8yDUK1TCu0KDviu4LvzsUtLxfxXlfiwZP+fVO
WBHxlr2q68cBDRq0HzWmyhHxqCn46QrpFA0sRFz1I60o+Nh/oVZbkQYTPw+z
nSLiOcksv/WvHA08Y84ldhLxL2H61SLtIA1i7iVQ2oj8cG9xleHcScwvWZVr
9zUKjp5ydXu7lvh/h9JrZyMKtgiYWb7ipYGH3r/OAiL/vle0yHtx0ECx+F6m
uD6xvtUCj2wWqXBu6NgzXU0K7uH4WrqVRAUdl5idqucpeFz8VSv3CBVyeVW8
dxL5H9awqn6mjwqf+8Cv/DQFwe+oS1YLFV6BWY/9MeJ8Gi4u21VEBYemio8r
RykoPHd7++9cKqQmnJNwP0LBR61ZNq2ZVDAWa351VYaCzTVf0TmeCnXH7w95
7CbW+0fry9i3VFCLDkz0WUvBGXVW2xdrKhRSLe5or6Jg9VkrQUNzKmy9bLdm
DQ8F38h2n1xjQrxPqmja7B8Zm/33293Vo0JfTd6N/2hkNGzoXb1ZhQpxkf2S
zh1krGKJXecXpsKR27z61v5k7Lj7ndTuvABWXJwv6l6ScWLx6iT99gI8qLC/
t8OXjNzH3/9YZ7oAxsHHTVMfk7FaKuKH8vkF0H/2DFRsyKjFK47mWxfgudbk
y7NAxsCwkWFq5Ty0a4yuESWTcD70mdZfwXkoWro5KDpCQopS/oYI7nn45HWB
zt9HQhm3I9kKy3Oglwic/Y0k9POj3DGemIOpbMur9GwSjsWe/Pgwdw5MHi5z
7vck4bnwdXsmjOZAQf70kV5BEupYaQ14RMzCSs6ru/N8JOw/IPb2bcAsaLrD
3CIbCfcvOKz97D0L+a1aY9PUCbRzqVBPsJmFrUvJT9VaJ9DNf5+p25FZUDCd
FWrxm8CLu3ZNb2+YASq+zvX7M44uFVvWazGnYUf1xxA/HEOPo3M1OxR+wKXu
a3McG4aRLZqrqyyZDBM1tV77T/SgYueH0FGdMfgV76+eH9mCXLOKZ5tzewFP
fz/926oFs/iPRJLe9IKx7uSvE4daUEqxOohk2QunPm3ZVlTcjNUmacpRIr2w
buQNd3pfE+o//PVnrXMPXEr08mtb34iiesVmKQe74aDSzg0GfrVY8sdN8a9f
B5xNjmfJXq7FBrqmyhnzDkjtGqJsFq9F3csbx5wUO+DatMEOkdQaNHk2Lh44
1g5G5kf3lDVWY/y/J0dLjrSDOmlU0lGoCkvlVJm07lbQTDfL80ktw84jk9+P
b2yEEs48kVTHMtRzCXZJy24A7pZdUr+VypB7kCtw/lIDvB/4HCNY/R3b/7Aa
R17Vw5mN/jnmlYg0pl/n05VaGGD1wZazxWjWWcsm1FMFyrSSugdhuXhXbX3J
g+5SCPpuxll3OBePyTRqA08pNOlR3L405WAlb/b8N4USwMas+HGOHFzKue/d
EFQElZtmxIacvuLUot8tG60CEDS+JMoxno4yh7nfaWVmQYhh9me1ihi8HlhQ
oLX7LTC/1rG93BuDnzN2GbstvQaLOcsjf/yi8avzF26+JF9QdDv34sH1KMxp
3S39ks8R+EI/3E/g/4xau6Vu/dX3xJvzS+41ssHYaXZV0aj5C/qYVZy9vOM9
sk3z7PlsFY22m+S/3RQOwloPKc6t/2Jwy/SrkJU/gRghk2NaKpuA294Gby+h
vMSk+hvaJiFpWGOzlrrH5AE6V597WHQkF115MjJeFd/H31Rnx2McebjTY/nW
ai07PB86RqpsycPg0oM7l42NkZWn/JD9TgHyW+n/x6l0DR5+EDHhiC7C95sj
nF8veQD5usaaML4ypHCUciu6e8H49hc/39mX4Y29lhnli96QxRWR9bq7DCuE
0prFx3yhIqugwy22HB+7HbZ4+vA1cG466ammWolC6VkeP0fegU9qbf/WhzV4
z/bByh+XIChbhxr9AzXIt9mJ0b7mPTw1/k0NUK3FxZUA43+HgkFI7a4deVUd
8rGZaEVc/wDs0yGXDkXUIzPXesV97ANsePeKlMTWgL+PnNpy0fIj7HyqmSxm
2YDxHgclq6xCIYlrv+6odCP+V+9i76sbDkn80j0TpU04L71n69macEg51fSd
Z1cz9hfoFqw/HgFnD3Auij9vxi0eh2Vp4p+Asr9xSkKnBYf3rTgb1H+GsMNB
4qftW/HxkgKtffILVArYzMv8aUOOj7kyVzdEAaN9ILjmUDs6dLAbCKhGwe/x
mFNXbrajSftRPtHgKDiw99Bqo4p27HrccW5UIRp+2NbI/njRgYaj5X3yxtGg
y+tad+RbBx5rM1mq94qG/2ZklVxmOjBszju6pz4aQsJjefu1O5GTZ6dPxuUY
0FldGSQh3IU37hw3efIgBp7F9v8VVevCVMvbpbHBMZBgHLCf07kLO3/6ZK3v
jAGr1MJj+V1dKBNolZF3PhbELT1K3n3sxorhtv13tsTB9Gb3MytivaiWWWd3
7EgcLOyU1Th3qReN31idd9WOg+WJ9Y1Pn/bi/MMn3sb/xcG7+E9tzbO92JVq
GcXbHwfzwcmbY4r7cHRJthMX4sDl/vtH9tQ+PHHo+HUu7niQO8Zx6cDufjyl
dHyb6qF4MK7Km3V43Y8nPn75r/txPNxU438ve3UA14QXVZ73j4eiiQe2D/wG
sDi61sT8Szy8UFJpSsQBDGw+phxYEQ+JieL1/ZKDSJVx9pTnSYBF2osCG9og
npZ/81vUIwHmYdp5o+8wZnKerj79JgEO5wjxK+UP4+/KK+2q4QlQcepS0tkf
w8hrMXyuLC8B7r/VCZXSHsFv5qeEt84mwB8/hh/36lEMa3s1aUcUlfybEpPr
WkZRQ8uT6ro1CZ5s+D3zUnccXcc++tXvT4LJfdmMMutx9L+/2lP+aBL0Lxh1
UN3H8XtYl91FnSRQnWHxHE4eR0etExkj3knw++2fonMcE6gVnTnxkZoE82aj
PrmZE6h0hCzM9y8JEgWs54yqJ9CPVXYxlj8ZVm+XnqYPTOCBgst+NgeSodKl
1X81Lwnb3llywO1kCJRRlqg1JqHUxRdD2xaSwUX9obcrDxk7dyYmk9hSwFGm
7flTMTI+s1TpnhJOgXLOyFlfWTI2TfnPZiimAF3wed2da2T8xrjUpvs0BR7/
99K3Io2MBok1tbs+pkCT+bHjXuVk5HubbXQ8NQXMhyyOK/SQUW9PXubJrhQI
CPMR8mQj+vrEMoc0qVSwS07v+ELcWzZ9UXOpUE2FbS/jwgWtib7WzOGNpGEq
JFS2hbs8puCqtNWk1qepcPaY0QnJWAoa5fJe6p1IBSFGY+VaFgVv9+sfUc9K
A/qxY2qcwZPI2DAvU9ycBo+K9cEjeRIN9v05HDqbBmOCvaELOIm68U9PvNif
Dow7eWZp05OYax5++mJiOmxLTOX8BFMoWFTIWvctA5Lm00YuTE5hZcgij9Jw
BhT1xXetWZlCqfaEbzbsmXDyVdKaMsEfeCmKWp+yJxNW66yS41P+gV3SseUj
TplQHT0vv8rvB6rsFjmvsDkL3pGcMzqlp/FfXWX49KEsoHS6kHpPTeNbJmtk
4EwWfBC3VG0zmMYzgwscTvezYJfYMevP7tN4S39l9FFTFqyxyDiX3DiNklMZ
HKvefoV18XESz21mUDdfxfld8lfQiBITb3o8g2evtrlcq/wK3lKn9/IGzOCr
N0658YtfIefbBVvD3BnUzml/d/hWNjg17f3Phn0WL51mxCtq5IBeXUCe5odZ
vJf99Lr0rRwQS5L3epw0ixmLxX9ueuXAm5sc+ZFFs7imlnXNuzgHWg8cN60a
mUU9J88nGQq5cKgnwsN37xw+nXaY/n44D6Y7j8325MzhdtXNxz5dzgPuqbYu
7eo5zIh8dK3gQR7Me3dtLOiZQ7t1GTIpBXlgZLs97PbyHHad9N3y9FQ+RMZH
eKvCPNZPNQuuMi0ALqs9ZcXV87jmcMD3Lp8COPL42auHPfMoMd/1diyxAHYX
bvqwZ2oeu8c+BOQxCmAlO8nZbNUCum66VWXgVwgJFpu2XtBcwCjZkmM2dd8g
RFr8L7lxAZM1GiqyHEtAYPu6q5EWVLQbdU8wiCgB9XefNIptqbiX3TpPproE
Jr+P83Xep2LpQLzksy2lgIU67EwPKjp8fTPwraoULhXPFrLCqXj001SF2Prv
sL5kpf5fOxWfDz/tffm8DDppnrZSKjSktVw9lxlZBs08h4O/qNHQ9ZBrAzW/
DMTE1T2FLtDw8sbccZwqAxqfUvDEFRp+WVY+GKxZDnO1EsnnHGi4ZzJDTXhj
BbD/NvsrEk1Db7x5ja20Er67q2kUstPxN6XweMxAJXzKSa/m5KPjn8A0qvlS
JWRZd3OeW0fHszMBL5UUquBx3H85JVvo+OKa0W3l9Co4UXR2wOQwHU2K0lWf
x1WDWbFElIMFHXesS902X1kNp6OCEq7cpuN/O1f5OZCqYaOr/82j9nTsCeTH
ml01MKBmMznuRsfSg4/2lcTUgAfHoAL1LR2DWLgrM7EWeBx2nR4opWPj9AmX
qrpa6JzzkjCupKNzzwcKc7oWNufQE7vr6KjNvqc0SroOksLfpBV00vG+j7a/
bE4dKCk8fCI7Tcc3x5XN1lbXg7KaVcr8egZuFApf++93I7xuNDSPMmdgd+SH
kqKtTdDXQt7AY83A8tPeCn7QBP3hj+Qs7zAwSkVG1ManCUJ4jiQIOzMwzBso
fGubQSvur5uULwPlnP3tene0QE3/vkfa8Qx88M0jq0qtBfb6RkUZJTNQp5ln
V5VVC+R298rcSGfgBZ7BHcupLUBNs3A1ymOgkrpmnfjWVuCfu1m4qpqB7krk
Tb9TWqFAtyn3BomBL+3d81ZKWuGYRtpawSkG3tIO8+NpbQW5ce/KohkG1vBV
JcozW8FU68oVDgYxXt6Dq2dOtIGKAv2PJjsTe7xFn7e0tMHibjeVNnEmTomy
OleW28H64ZuJaB0matXceuYu0AGP14h0jegxMWjn3k/cuztgUttcauMVJo4Z
+SUc0O6AXx8j2eyNmcj5T4LSGNkBf0xe3GizYWKoaY6H7tlOOMMuyX7Vk4nz
l3hiTl7vBAnlkZMHfZhIFh7tlnPohGu8fBOLvkzc97Brk1RYJ0wUlZj+95qJ
tmkvw0znO0FbSOywcgjxfCMxroYPXWA2EBLwIJmJf1l3y9eldUG1Ee36SCoT
M9sMpQzLu+AU7fP70xlM9L3OG86a7YIIG5IWK5uJ3NFCrlanu0Fy2HlyTQkT
FVK/l3DOd8Oplotqf5uY2H9GReY5Zw9o57tt/NfCxFktpw7+zT3Q12xiutTG
xI3/bC7vPtMDkWt2GfR3MXHu1c6PTmE98DnQnqw9xMSDp0MWfTV64W4Daq5M
M/HwAYpqo3EvWLbruLyZZaJei/a+DY694LM11nTTPBMjd5e7JEb0gk3AEUcx
GhObyds8R2m98JjxL7P7JxMHc2/JyPH2QVBazIzCIhOvqxmWeYv3gY5f1Kz/
EhOblr8c2qfRB9sOlKgfWmGiILdZiGtEH6Sxld3fyc5CVKGUN2f1gWCuzYoO
Bwv3NvxYv7umD+4GLBg85GRhWltiRTOtDyQUJN2yuVmo4ppXKKHRD9I6LQlj
q1jYE7LV9oFxPwymMOuGVrNQN/vtf7X3++G09/3KjjUspJgWO9pF9EN+sotG
Gj8L9RTGRhJp/aDxIjlpoxALD2nm8rF4BsD7tt3XMcI/xcfbQXwALjkyP8UL
s1D9GvxoPTsAp8R7d27bwMLEmVtcosYD8Gn139JWwt/JtBvX7w/Arm//qbmL
sDC3OMhhOHwAgn7rrKncyMKluvKf4lkDICr/SveGKAsFot5cu1o9ANJOdF86
4fnYaaMG6gD8jdEken8WHpeyKWfjGQSjLPWaV4TXShklHBYbhG9cnhU8W1h4
ZVzS6636IHByMj7PEr4n9v1M8bVBaNe47HVFjIUhreoSJPtBSOHRuPGNcMJn
nr98voOw99ZtxU3iLKzX0CqXChskukGTdQ6EA75eMzifMQhFKnWkMsLPp+0/
36ochM/ZV4r5t7Jwakfl0yd9g8Aoyg7RJxye8nIhcH4QXh989yCIsD/3XFUU
5xBUNCRcayKc1rxhIX3TEHy6lK7Bvo2YX4OEXoH0EAyZW5yUIXx28lB3yekh
2BH+QtWQ8FcZXXM0HIJf3hM6roSl+z4MFdsNAUewyr1gwoUn1srkeQ0Br8qt
TymEX3TXqqSEDAFfz76RIsLGL99aHkkegtw0pewqwixJt/TCkiHo0a8zqyf8
47sN1/G2IcgfM5mtI/y29pR+AWkIvts+uVxJ+Dz31DO5xSFwX0kLLyTsFnri
dfyaYQj99F9FEuFg9u1aotuHYVDLvek9YZENd3N95IdhD9uJIjfCHuyc2TPq
w2Afo+N/nbDp5SJZnavDUCl66ZwiYR3avS3pdsOgLt87zU9YWZR1nc9zGLYX
+T4cIdbL88auMZOgYXhnt7SQQvhpYVNwevwwUGjdBk6EvyoNnzjVNAzunXZU
OrE/jlwkHp/RYXA68nhfCuF7h+MykDEMaXciL98gnDL1TGv/lhEwCmQF5BL7
30o5tumK9Ag8HH0ffZUwS7HpvrvqCBxq2J25SMRPYVSCe5HVCBgfEarYS/gF
hzNvu+sIHDCgN+QT8Wd99kDzuN8InNZv6j5NmH1Sr4z+dQT2/g1dOr+JhWs4
m1fV/x2BpfaL8eJEvH9eXLWrl28Urqin0J4S+TDNuV/gnPAoeJ//rD1F5IuK
8Ln92yRHQd2u8eSX9Szk5orTir4wCoVKvse7BFnYawjly/qj8PlJqepGwv6z
pbk6JqPQMjliqSfAQuGZu/Pz9qMwWVogWkzk84Z3af7swaOgk2ara0Dkfylf
4MCJz6NQucbtjT1xPlDCrK84J4zCzyinpad8LIxyW5XeUzgKatNXb0fxsFB/
sKzp3vAokGJ+jX8hzp9Lhebi3XvGwLPw7MZi4vxSjdecCJQdA25jhoEDcb69
7pO+f1Z5DP5GeYhs/8XEE4XdGVHaYxA977ndjsnEnMRd10Wdx0BP8kd6JXF+
3nhycCXefQwyjFRUtOeY+DzZhk3u+RhMGhqbt84wsfhSE9uRsDEIk8t4Uj1F
nI87dj8jqhbsOqJ1xnGcOJ9fB5IN6sZALcFnoGWUiXv9t6pntY9Bz/rTEvtG
mPheSr3DgDwGN7/drawdYOLCbFPH5dXjoFM1WlrfyUSrRxGl2/XHIU6BpNRZ
xcQCifuWYsbjIKpYtH+4gon/nAvPC1qOw9U/HcvjZUR9EPgURnYZh11zoReG
iPoj3+exTiVsHBrOZS6/z2Xi4p/kzvcj42CdM+2yPpaJwxp+RdumxsEgW5PW
GEXUr1iunVHUceDw1vD0imSihIsSBLBPwK1jLj8GwphoKLHfWWDXBGz5M3f2
ylsmNr75mBR8awJ8ak323HIn6h3bifTNdhMgVjtpveLGxPqamhchThMgNNLv
H/iIie0LdWFu3hPg6AQfU52YODA1LTcTOQHbK0Wmsm8zMTZv3zGrvgl4Ervw
i92AieJ7W684jU6AR6cg6SrRHxSr3il8NDkBGdViE2lE/+DV37DfjjUBFlV3
JC9cYCK7dVUpU5AEa365r7kMTGw93b/a9ywJ3vbqTGTsY+L04r4rwtokkPYs
NKyXJPoDjhfXPuiTgGR4lH9sJzEedmO7FzdJcHvvv7OcW4l+YBV7DbcbCQKT
Zs6KCTExXLiR3SqFBEeOqrFHLDLw9S+FHm9eMuzsj4lgVjJwk11v98BaMuxW
/RibVsZAw++llAPCZOg96X/HopSB6ST1LVniZDh28dipqnwGnlS7zKMjRwZF
Dqcr5kS/9rpGNLvdiAx+p+494QpgoGuH+7VQEzIk5unkvHrNQL14oy9XzMlw
2iW2i/8FAy+ajc3k3CGDyLdNI6u9GLij/FTFP3cy/H1AMxh1ZOB8Y0hI7Rcy
3Ex+uuG3AdEfth1YYcWSoTYqe7OuHgN3+zQGb04iw55kS7nYiwx0fFKoqZZF
hnNp16NPaTBwQs5XaEcZGf75WrReVWJgWdPFN0vDZKBj7VP2LQzUvFSv9nyc
DLu8Vw3s38jA85K3GlZTyPBbj/2OjjADKTutjzJmyXAy+P2pd6sZeFWH2ntu
mQyFhxTX/FqmI3ntp6sc6ymQVR8rCgN05Pbo2LJ/IwVoLfuHSd10zGbkPVDb
TIHd1bp+z9vpuFjxYEhvOwVMuTuTK4j+2zeivmBAigLO/8pPihYQ/fijL68/
S1NAICE8MDabji3F4hWXZSmwXUB19FAGHT9ahp4NV6DAdUqmj3I8HacFR6kB
QIFVDVGSh94T3yuXHJs7RYHOQ5aZMQF07JyfzFU5Q4FztmsvbnxNR461IbIF
5yiQPq3SSPei4wHV1DfCuhTwXJe15SVxv4gWJjXz6VNg3/ujPpO2dLSmNovQ
L1MgZSxEWM2Kjo7C/JGfjIjxzrzMoBnTEQturjYypUD+xdDd0hfoOFUyPUG+
SYHgOw94HqjT8WXHkVArcwo4cdMkvqnSMaPP1EfVkgKuCXXrTijS8dmn4PRQ
Kwr0moeTHsnT0X2TQjTZmgLZTNbKV2k6xtwVajWwpcCc0s8/23bT0WhiL7vb
HQr8kp2cvrSdjkc0rk8F2lGA679fOz2J+1VKjHdNyD0KNJe0P+kWpCMnW1ee
rz2FuI+XRv9ZQ6y/ELumtQMF2DasFd/JS0f7rKu6HI4UMKe2CVr8oeGo7e2i
IsIHnVUDPRZpWCu3+Zu1EwUWz63YhjJomL3l6XkeZwpk1NKjM+dpKNXRZfmB
MLVhjXLVDxpWRV1YI/aAAlYx++V7SDTcaSVz9C1hH6H9bygjNBz/ODa+RFju
zJgWo5+GaZot/AYuFJBq3uX0p4uG8vsfZkcTjvpSzM7dRkNxdcvWccIXuByX
VzXSML9G3EzkIQWeuHKZrq2h4ddyC3NlwjkZh+TWltPQ+eqONl3CpLQ4x1Ul
NHz37kLydcJZbZskuQpoWG04O21IeKle7sLKVxr+eiAReJbwbMj7CVoaDbmS
vUSkCAse/Gp1PImGXnRiIIRLxxZzvGOJ+/KMjk8TMZ4TzzJbaiJpeLjMzvoN
YZEX4gWrw2kYLDdhdYpwAP2xvWYIDUtfpXr8IOb7wnbVr5dvafgtpSXDl7D+
gd861X40NOcyY4kQPsLp85jtBQ11g70vhhHruedSs5uSDw1ZCxaFwoTjVrh1
7v1Hw8dHTx/xIPZD6snFpShXGvaL2ZSMEPvFU1vj1uFMw74Jaf0jhE8av+nk
IO7v3BZLjCf3KcB9JI9X9g4N2dOeXJom4iGX8+FfHzPi/0y1VQKEv17aU5ls
TEPKnEzNXiJ+vj+1tm4xpKHhHiltBSK+NPdEXBC+SMM1t3OEpYj4O2Pq7Sd7
noYfLa73ChPx2SMwmqF1hoaDSpw3vxPxSxrM+fyfMg1feDju8CXiO1N3+c57
BRqKktyGVIj4X0/W35YoS8wvQfnCayI/zG6mK9TtoaHYA6XBYGMKWPjOq9OF
afiPUnZv+RoFlsPH9X7x0zByVGdJ7yoFWLoXNJf5iPjbb84aMSDiJU2bffkv
FWkKZ31vX6QA+K8PHp2mYsCcTcddLQoY/c0W7CJTcb6Ve7PVBQo0HON0rxml
4o2f4a/lz1Jg/ANzf3w3FQsPrYgeV6GA7QUB0oVyKl57xXtgRJnIB3155qES
Ktr7/lB6qEQBHbfNS4IFVKxa8/ycz2FiP8WmxpvTqPh4IUt3zX4KVHY8PCUf
SkXRzD8Cg0IUuLb7iNMHeypufCew0X0dBS51UJ9P36Zil9huEcE1FChWyzx+
/BYVo9PO8K7lIt5Po3p2GVHxiaXJ3+ssMmSPH3o2d4qKnywWcm90kWGryG7f
lPVUDFq1IWBHG1Efzq0L6uWnovTNkcDORqJ+MbaqcvJR0ZPTZOv6SjJ0azfM
RS8uoMDbouppoj4M3Yj6El23gNflxTj4XpPBNSi8rdh2ATtv8Vya9yWDkmDA
q/obxPerLq6t8STqn8RBlw69BTypmEjScSGDWDp5tFt5Abn0XJPwJhm2BTqM
x6xeQIU/ZVbih8kwLpNlZpA0j9vmarNZTSQolt5hvnpiDk/vy5i4XEMCkZSZ
A3ndc2iaN1qW8J0E4lzlW03q53Bpr3TcvmwSWLVudIjImkNhKdXmDx9IcNRr
4NWoxxyaXOjZKH+DBM3PbPSfiM1hSF/IN7/xCVi9ZWJp7uIs7naVbY+vGwfT
qf2uP+OmMW59POm53igUxe5y+qQ9iYz2XvXNp/oh8ZWjgfaxCUwqe6Wu7N0B
tehk86FgCIVNXUsTrDpAOor790DQEM4+D6xdp9kB910cO9fYD+G4QJBg/foO
8Giy2SctOYSf57T4lmLbYWqfyE/nwEG8pJonZFjdBoxbBfXrLAbQWsfrgCRP
KwhdzdTetdiLbINKqgV8dXDXX8/k1mgHQmXEwTONtbBDTJgW9bUDt8S+/DMU
UAtnvJ+EVj3twOOXLq89KVoLmq8OquM+wu7qghV7auBycivtiX07sj2UlvM5
XwVzol1DUoutKH/8w9L+mDLoGzn0ymWuAclBwdxjt8tAS+Lzy6TXDVhx3P9+
qWwZiHJldaXub8ANamGZC6XfYV2qlIykZT0WqG3OefYNYcj6wuGJvlrcvXmb
8sCZYijw8bnZ8K0KeSl95y2ScuHgseq44IJSTDItmHC5kAupNqg4/6sEJ0rX
vP09kwM3rb/t5FIswdPNpidMZHPg0e0d7rY5RZg8GuYQV/oVvscl/ZNPLUCz
O8srKaQMuFybwKMR+BUvMnclix3NgB9XLklXNGQhvaw4NuhFOuifJFvw8mbh
odrRgVjZNJiqiujsWkrH6aUn6PsmGdrL2fdaNSai0NKy78LjOLjs3mpQV/IR
P6l63WwZjoX5vd+890YGY8Znh6Ndp2PB2qtoR4/HOyy0PZJutC4G9OVpZvb/
vcALtkvyVtlfoJa/38L1tjwUnz571uruR5BlZR5ccAmFWq+8dWJXP0BQ3m+3
mc8RMPJxe6CqRgjYcqV/uFkTCRtm37pNSL2HPbCS0bE2Bt6e0LBPFQgE75Of
OqLNkiBGJq6+I9IT9rx9xZpdlQ2Per6yn1BxB9uWp1+8KNmgd3aG5HLWFQYX
+Y/sr8gBno4q3p7H9+EQsoJSn+SBqG1lglaAGgzIi+ffohaCMO+Yie4jV4zO
2pHTYvcd1PezklbKnmD1YN+fuwPfoY+etFeSzROvNp5tWHuhDM5uTpZ8Ie2D
bh7rys7vLYfWVp9jOWdeon7dv86ssQoQdvmu6KDwDo8Py18sN6gBA5/26ZyB
d3ju1OimfZU1oNhes+6yRxB+l5Md9ZWvBaU0UfaK0vc4tlb62l6BOjh7/unn
1m0fMN5wM4lRUw8FFVUmvpkf8D/5Qcc1Rxvgx524ue/wEc+i99+NsQ3Q7tbY
NXQlFKObGsX5PBuhtrenV9smHN8XxG1SV2yGbo726HpKONKSVA4uxDbD0m63
bcvmEbi4zsH5pXALGBmUBgRf/oTf3tu2+c21QFEI2d5yayQWCm+VMGtrhZjx
pCQnySicYh8MqnjaDn9imm+0X4pCwY8RQzb57aChrP/Z9HEUnnJS1uGabgd/
qW51oeYovGzhwrtVpwMCL3xY2GobjYudBfZtmzrBuu2MnGpANE5pPQ7dpdkJ
rwwFVRKzo/EeamTauneCo8jhswbL0fgq/7FAz1gnTL6c1b7vEYNn38UG7U7u
gmGtbYeEI2MwI8F255bBLlAvWjknWBqDZ5Q/uHOu64bIdU8iZJZjcNY9WjDr
fjcE3X1DOXcnFj+TPDidlXpgIvnxjYeH4/BaN+u4e0UvhLL+Jp65EIcy6Q7m
X5i9ECx6rSXiZhwesF64mSvZB5kfwyQXX8dhsi245Dzvg13FhvmJQ3E4LuLH
x6XZD+q19rObaXG4yVeO8fVxP0w/Obb1IFc8JshJjuql9sMd+aAnKvvjsVye
38SSfwBCEv2Fje3j8fk7G+X25gEws5EvFPeMR5Jsvh/PvwHI+GApFBQYj+c5
jXcekBkErcNi88mZ8RiRlFd6JmAQUvYtltfPxaO4QseN/ItD8EVWUZdkkoBX
nMuNX9QPg/3qAOUR2wQ8QdnqVb84DCECBbN5DxOw8dRhvZU9IzD0krnI9TYB
KTGzBYd8RkCs+riIQXkCvj7Qetdq6yh8rd6f90giEc+Yh6U5dIzCsE3egUPS
ifiTv91/zfQobN6fpjSilIiOn0+2fWIbA2ODizzHLyXi4gXzm4nSY+DNX6u2
yiMRVxrVVy4/H4MnGD/oOJyIB98lSfAeGwejLtWspOlETB65oi+iMw7iIyrd
rJ+JeO3lWb8txD2+/m39ZIdAEr4OC2Fb/XYcooXl37WcTkIq/2mHJ8Q9PbKi
+9zP9CQ8uN34Y0rwBOQczx3dV5KE5Qcu7d6XQtzTpUs1njUkYRP3Uafw7xOg
tMZXsXoqCUXq1TStZiYg95vMgqtkMt56Ue/lp0qCw/VehZGJyei0wrNr0w8S
jBsFL/5XlIxvmFoilf9I0P5egRzbnIwc98Zmbm0kw8e2A6/rWMn4p2de0VeN
DOtXcdsGa6Rgs33fLHwiw38Bkb11ximYwH8l+l02GW6kfvql7ZiCynyfJPrr
yLD/9u/Q859TkG2/1X2Nn2SIW+UcfmA5BbWa2bjCib4rWIhjcFkoFUXWeOUG
3aJAmvtGqoRUKu55M7nZy43o+1JCzzy+noqzoWTqsXjiXnBPysmpPBWdg54G
7vpD3GNcX+5Rik7D+jWxHp2JkxCo6HVkFtPw4AEtZdHSSdDk9TrPPZyGgrZe
3hc7JmHNQz7922LpmDXqlh32h/h9l9DAmvB0NFMOu5mkOwVX0w8lnU/PQKv0
PPXPv6bgQI3lqYj2DPTOqGXuW/sDKhOf15j8ysDFZOENiTt+wFeZX32iEpnI
e7I8wuf8D9hdg6/872Vi03hBUkbYD5CK2cGptiELXwUVGvUrT4MoiNm+3peF
Y+H9hle1pyGOTVWNVyULixzSZJpNp8GmkjUZapWFzetab4U+nQb5qA/rZIqz
8GC2RlVu0zQEVCx0Hb3/Fb0YKlbcN2ZgQ7rHUvWLr2i7W8x2zH4GYgf8Y/y+
fMWFhn9Hsr1mwCw18mdB61dcIxMpphQ3AxR7MZuPh7Nxi9eXdTUzMxDNPj3y
jDMHk6m8UYsuszD6/F+x27Yc3G5/+IPsi1kY+XTsWdyxHMw0SFa7EToLpS5n
d3xxyMFBDcOisKJZUPDW33NgLAe5xQv5Pv6bhaPzHLOxjbkYLtV6OMZ3DorZ
btHuNeXjrhVNH+bLefhX4momS8/H58OaAwrh86CRJJd3WLQAV1vz/7JNnQe+
rjBRNvMC/Jxg7pzZPA/8zTz1GcsFSA3kvJkovACCl5c/2yh9w/JNjMoLHxfg
eZrrgIbZNywUeJ5dk7gABl/fDNq8+oZszz7pKBUuEOudIOowRFg3/hWzbwF+
OnWnv3tWhLRjexzt+Klw+QL90XZyMb7TXqTt1abCD/v0/o3CJahqec2D04AK
tMrJGzpQguly1J5eYyqQDSsifMJKsP9s1aSDHRWMDgpZ/9IvRZOBO3evvKbC
5qWR8D/tiLJshrY/a6hAKUiaeOxZhnWTFMrTEzTY2X5K70lYGd62d3B8qEYD
ZY5BSlhOGWoqmM1YXKBBooSStvyPMgz8ExQtZUSD4nGbxFr9cly7jkvY3okG
Cdf3+j4/VIF3zeL1OxJpoDg0ybS4UIHtmzeb3sqgwWDQULyJVQU6VN3TWsil
wWVzRkDi5wp8rkepo5fTgBSjlxgmWInXknlOZA7S4L/AvZfGlirRMHbnDS4B
OtyxCln9SrQKT1S4yh8WocN/10iMiwpV6CBiOXRdjA6RsSd5pe9XYd4n+Zyw
vXTgsgsSUpquwuJL1/SagQ46m1bffDRWjZJcOwvW2tOBp1hJeR2pFnt3ND8f
q6WD4a6XeoMcdej+S2HzXBMdXl4bCv8uUYc5x5uOM9qJ3wvccGwwrcMs0kf5
hUE6pFsEr0wO1uFvDeW+OCodFNfleUoN1GOm8MZoflEGsFG8vU5ONqLM+bfr
Kk0Z0J7gOZTE14SpnsvkHbcY8ML7Y+Y+qSZcuNym+siGAR4nJ6/fvNuEJ68Z
emy8zwDZF7ckc5lNmHKZJSLkzYCXPuJjwzwtePexjunfaAa8ea8SBRGtOKJb
fjV/lAE271ufBWe0Irt3jVA2iQG5zadYzPJWtOZjaCZOMSD9mZhk649WPH63
U92DyoBmXpselmIb3o6inB/5x4DSyEs+811tqJ+gbme9lQkjlMy7nT/a0Put
nuzvHUzg8g/4Vv6nDZUGfjm92M2EL5N2MgWS7VhmUuoacIAJDxYKb3G5tKOA
dI67zjEmRCd3Vglu6kAvcZrFB30m8FxSS3M62IEZuQLbKq4w4aL2jaIh1Q5k
u9ZkOHWVCediQparb3dgieDLC9tvMuGgbUv9TFEHdvpekwU7JnwTeOZpZ9aJ
Ka0DEho+TOhUjdqt5NKJcSmxk6ufMWF9HnfUqted+IybIVP7ggnQjo0lOZ0o
xFI/L+PPBH3ZX0E2fF04yu2RkPGRCYMiX7pzMrvQQyPC3DWVeL84RNtVduHD
x4yAtHQmnDluarCvtwutw29tGcxkQou5/76Uf13I3y59bl8uE4Tt+P4bvNiN
4t+3r3cvYcI2ranEoblu1PxxsWlTExM6PE1PNrD34MXOLHZGMxNCuGreFon0
IJ2rJqymlQlGs5N7YlV6UGu/1h/TTibsc+Gnv3vTg7Ptiu+1B5gwwTq6r1u6
F0+ovgsRn2LC2nTeCMqpXpzdOWr66QcTDLayhy4a9CJoKX7cNMOETZrXR3f8
14s7Nv82+jtH7N/T356ezb349Jy27HMGE6Q0nm0JH+/FgCX15wNMJmRFhHzJ
+9mL47ue6Uv9ZEKe9exu6rY+7Nkvr5O/SOzPoYgBW/s+fP/48Iz/Hyas7pJP
e+XTh5Wbdbjy/zLB9ujhhuQPffh0XUpo3z8mnFybHz6Dfajv039iHQcLQO3t
1buC/fhV/ruHAg8LThmrXn2zux9vpt0PluNlwWRBJ2eaUj+eqt0us4+PBRd3
j/DN3OxH9YKXdK7VLOAXyI0wzerHfcmk7if8LJh5ui1QpKofVZSKtp1fx4IX
m0tD6nv70Tb0+n5BARZ8oNu+lWMbwG53mdf+giy4dc/YdGL9ABriU5K6EAtC
H2kxg/YOYPnFSa5FwrGWb/bQLg6gxMGjkVrrWWDS/T7ik/kAXtW7JrZAWHOs
+vU5lwEsTfpt7reBBbJ235+HfhrAnyPqV/NFWOB/wKtTcnYAZ+rfcLSIEvNT
vkqv+DeA0n/EfmtsYoG0y6M50/WD+O1fUG0RYaOVAOm3yoO444HMZNBmFthG
vtDcc3EQq6TalBcJm0rULRaYDeJz+as2hltYkKQknt39YhD1Xypd4RFjwdBn
qVCziEHcKSe5+Qrhr76Pvv/IGMTu3p1FXwhvveMtYl8xiMmXfVQohDecqHxK
6x7Eo3rhUXvEWfDqcuGyw/QgvrlSPmVG2M1j0GLuzyBeL9bb8JHw4M+EVCuh
IeT7miRZRzjVIrhscPcQdinu3cYiTBnaGqCjNIS/tx76J7aVWP/ZQnbUHMIm
jt31KoQDfce4D5gOYful+57XCHOuW/siyHEIZ0947XIkPHw103nRdwjtK8ty
nhLOPc1bcDV0CNmSYxTeEW71lT6ZnzqEd33CEsIIq2c8ZAh+H8IvI+JrPxNW
oChXWnUMof+F2FsRhCmkxogCyhBuuJD2NZhw/aLPbZ7lIey+lv/rJeFHHPkb
L/EPo8TcGQVXwjkPSgKDdwxjvdmAnQVhq6sLFd2Hh3EVL+eXc4T1NeIi1msM
o5mIRuu+//uuEq/WtWF0SVX4x0nY/TUH1ePuMDJbTA/1E+uxjmWiluE5jHdu
XTVNIWz4Nm6uL2gYDx0sDHpIeLrvyMC/+GE8Urmp6SThhgHrxR3fhnHxywZ+
dsIHFcPlVJqG0XCNlkEpsV/Ua4+SrBjD6IuLXFKE3dWGvzvxjGB37Df7XiIe
BqqK4x5vHsHn53R/eBHeesD85WMYQTm/HIFqIn4can7cdNIbwfS5Cbz5fzvc
ybe0HEHdV2m+P4n4E00nvTv2egQ/LdKN1hPWz01XzY0cwVvTBtMBRPw6/Xgv
IpUzgm+WGr7xEN5azmj5OziCiW9/SkwQ8R62usH7Bm0ED+1SLDlHuPiX0JMB
jlHcuSPmSyKRH880bk3sEx1F6yzV84ZE/lAF9v46LzGKT7O2ro8XZsFm91vK
1gdG8dfkk0MLRP5xXA3YGgKjWCuvZuFA5Ku7re9yhfUosrFr8ckQ+b47a0m6
6v4out95EnVpLTH/pw+lyx+PIqgFRdqtYcEFgfEbGQGjmORt1xm0igVlm9pl
DPJHsVr7pnUkNws+Ks5bHy4bxcrnKvfecxHjF6vh428YRR6Ti/M+nCz4G7xe
/+vwKLYMON3SYyfihactvYJ7DAvv3HFMW2FCvHFh22OBMXRdd8fP5TcTYve/
XT60eQzp/HVHlJeZkN15U/rZwTEUeP7weNYvJqgMLZf/1BvDlpjTd2/QiXrg
1fbd13gMz3z7fnaFygQ/YSMLAasxXLkXW/l+gQnqHtOWwq5jmHdvpCB3lqgv
FaH83Z/HsKQ9qT2fwoS+kyZDSoljeI1Sse0AmQkmtb3U4KwxnFMU2xM6wQSW
yduvJyvHcGlsr6PlKBP+S3508fyPMQwtndbFPiYEnHhvpiQ/jn8Prm9wayDq
I19+W6TyOG6Wr79dVMcEhzd5n9jVxvEuPTr8Vw0T0hXkd+Xoj+Mqk4py80om
fL/xva/DeRzLkhwtuYj65hr/KIGVO46NejeUHqYx4ZNHtNnfknHUHNVWdkwh
6l3KrxG26nHcU31z0SaJqEdH7nEyusYx8Mm97PNxTGhlNxt+xRrH3p+Me70R
TDg6mtnreXgC6Z926Ui/ZsJNT4XHEscnMF1FQ5dM1O/VCtIXi05P4Ad5ReVQ
or6LL20169edwOHoKw1MLyaE3i1XqbKfwB7PtqOPHzFhz4+VRfXkCfSXd/hY
c4sJC3ZX3uduJuH6jRWT95WZENwee0pegoSrvr7SvqrIhL3Bx4Xj9pHwsnYL
z4kjTGCYzczZKZLw+ICrD0OamB8HVf3pZRKezxZdf0CCCWc3NZvU+JHQ+UHS
MvIw4Wn3xoYvQSTs2EC7d4OTCZKPNsfYh5FQ8sqTB4tEP8VfccdqLoGEk+pr
z29fYoCenCaHTTkJV1TKHirNMKDFR5SqwyLht4DTphHNDCiWPzTg9puE9x8c
amLVE/0ftccrjJ2MLQc712jWMCDkjGlPPj8ZM+7Urv6BDLhjt+/JbUky/pqy
eMzIZADN3zEsUo+Mlm9avdXfMWBB58Z1ISMy3n2eVGfiz4CI/K2HH5qQcczE
aZvjKwZIG3b822ZDxuaTP9gCiP4y2jVzcegJGXNPqAmHORL9471TxgteZBz5
74Nc0D0GxLVJv2A+I6Ow4bcnL2wZgOQ64f5AMm48uS/O2pwB27JcbnwLJmNE
RP1L3RsMqNzmquUfRsYAielExWsMyNB37jCIJKONzQGeLVcYwBLdMi0YS0YL
adm4RV0G/A+pCdZL
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$141964, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$141964#1"]& ]}}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True}, 
       AxesLabel -> {
         FormBox[
          SuperscriptBox["\[Phi]", "\[Prime]", MultilineFunction -> None], 
          TraditionalForm], 
         FormBox["\[Psi]", TraditionalForm]}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "ScalingFunctions" -> None}, 
       PlotRange -> {{-0.7020392367724108, 
        0.7020700765611585}, {-1.3200172252447737`, 1.319730803790641}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"1\""}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], "]"}], "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`a$$ = 40.849999999999994`, 
      Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
      Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ =
       1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
        Hold[$CellContext`a$$], 40.849999999999994`, 47.15}}, 
      Typeset`size$$ = {450., {190., 197.}}, Typeset`update$$ = 0, 
      Typeset`initDone$$, Typeset`skipInitDone$$ = 
      True, $CellContext`a$142136$$ = 0}, 
      DynamicBox[Manipulate`ManipulateBoxes[
       1, StandardForm, 
        "Variables" :> {$CellContext`a$$ = 40.849999999999994`}, 
        "ControllerVariables" :> {
          Hold[$CellContext`a$$, $CellContext`a$142136$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, 
        "Body" :> $CellContext`drawWing[
          Part[$CellContext`sols, 1], $CellContext`a$$], 
        "Specifications" :> {{$CellContext`a$$, 40.849999999999994`, 47.15, 
           DefaultDuration -> 4, 
           AppearanceElements -> {
            "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
             "DirectionButton"}}}, 
        "Options" :> {
         ControlType -> Animator, AppearanceElements -> None, 
          DefaultBaseStyle -> "Animate", DefaultLabelStyle -> "AnimateLabel", 
          SynchronousUpdating -> True, ShrinkingDelay -> 8.}, 
        "DefaultOptions" :> {}],
       ImageSizeCache->{511., {238., 245.}},
       SingleEvaluation->True],
      Deinitialization:>None,
      DynamicModuleValues:>{},
      SynchronousInitialization->True,
      UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
      UnsavedVariables:>{Typeset`initDone$$},
      UntrackedVariables:>{Typeset`size$$}], "Animate",
     Deployed->True,
     StripOnInput->False],
    Manipulate`InterpretManipulate[1]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.758872280050231*^9, 3.7588723347509184`*^9, {3.7588723894935484`*^9, 
   3.758872455533968*^9}, 3.758873083534842*^9, {3.7588731505157776`*^9, 
   3.7588731827156544`*^9}, 3.7588732329215*^9, {3.75887328799125*^9, 
   3.7588733474821014`*^9}, {3.7588734270085473`*^9, 
   3.7588734346550183`*^9}, {3.7588736398906617`*^9, 3.758873652184871*^9}, {
   3.7588736931533794`*^9, 3.7588737743442283`*^9}, 3.7589704674030285`*^9, 
   3.758970654121313*^9, {3.7593106524879436`*^9, 3.7593106681794395`*^9}, 
   3.7851628524268827`*^9, 3.785162926348107*^9, 3.785163043538539*^9, {
   3.7852435023740625`*^9, 3.7852435232731843`*^9}, 3.7852437305684443`*^9, 
   3.7852440356513777`*^9, {3.7852441043430486`*^9, 3.785244210015951*^9}, {
   3.785244242217107*^9, 3.785244271118507*^9}, 3.7852443574106984`*^9, 
   3.7852450463135014`*^9, {3.7852456064819465`*^9, 3.7852456296292934`*^9}, 
   3.7852507977379675`*^9, 3.7852509069239635`*^9, 3.785252912158183*^9, 
   3.7852531671287184`*^9, 3.785253210422945*^9, 3.7852532626277757`*^9, {
   3.7852537637628202`*^9, 3.7852538088500366`*^9}, {3.7852541114975405`*^9, 
   3.785254133831778*^9}, 3.78525424249282*^9, 3.7852542771054907`*^9, 
   3.785261258021784*^9, 3.785262076859126*^9, 3.785262163426772*^9, 
   3.7852624801405516`*^9, 3.7852631846830416`*^9, 3.785263302406492*^9, 
   3.7852633631776466`*^9, 3.7852635134671392`*^9, {3.7852635741211967`*^9, 
   3.7852635893176556`*^9}, 3.785263851611332*^9, {3.7852639664179106`*^9, 
   3.7852639873723183`*^9}, 3.7852641204463067`*^9, 3.785264158743861*^9, {
   3.7852641992874966`*^9, 3.7852642276409445`*^9}, {3.7852643182265663`*^9, 
   3.7852643493376245`*^9}, 3.7852644089011292`*^9, {3.785264520063408*^9, 
   3.785264539752267*^9}, 3.785267409528537*^9, 3.7852681749202657`*^9, 
   3.7852697630160265`*^9, 3.7852699982707105`*^9, 3.785534749843243*^9, 
   3.7855385258230906`*^9, 3.7855385721228037`*^9, {3.7855386068082347`*^9, 
   3.7855386238566217`*^9}, {3.7855386555543323`*^9, 3.785538751666424*^9}, {
   3.785538884970377*^9, 3.7855389150766773`*^9}, 3.785538952636283*^9, 
   3.7855390152016325`*^9, {3.785539055340662*^9, 3.7855390954977546`*^9}, {
   3.785539136433443*^9, 3.785539217698493*^9}, 3.7855393426364856`*^9, 
   3.7855393728231783`*^9, 3.785539450376194*^9, 3.7855394889345913`*^9, 
   3.785539530898578*^9, 3.785539562612153*^9, 3.785539596795638*^9, {
   3.7855396441754913`*^9, 3.7855396864201255`*^9}, {3.7855397305300894`*^9, 
   3.7855398483485813`*^9}, {3.785539883725809*^9, 3.7855399593852243`*^9}, 
   3.7856088080241747`*^9, {3.7856103777528644`*^9, 3.785610439922303*^9}, {
   3.7856105990123158`*^9, 3.78561062523814*^9}, {3.785611081511992*^9, 
   3.785611094662157*^9}, 3.7856111436067*^9, {3.785611185347499*^9, 
   3.7856112087623625`*^9}, {3.7856112463653803`*^9, 3.785611269706914*^9}, 
   3.7856115520974693`*^9, 3.7856115908282676`*^9, {3.7856116390026703`*^9, 
   3.785611669542353*^9}, {3.785611722898271*^9, 3.7856117516608343`*^9}, {
   3.7856118269823356`*^9, 3.7856118368420296`*^9}, 3.7856183031976185`*^9, 
   3.7856195360614257`*^9, {3.785619611331256*^9, 3.7856196515918794`*^9}, 
   3.7856197125390778`*^9, 3.785619744725647*^9, 3.78562034267293*^9, 
   3.785620427261402*^9, {3.7856204696110797`*^9, 3.785620508307721*^9}, {
   3.785620633816839*^9, 3.7856206563054457`*^9}, 3.7856207080796957`*^9, {
   3.785621059008577*^9, 3.78562111498225*^9}, 3.7856212132105384`*^9, 
   3.785621249442583*^9, 3.7856213837873807`*^9, 3.7856214152889743`*^9, 
   3.7856215941738997`*^9, 3.785621984088272*^9, {3.7856222144398317`*^9, 
   3.785622224181604*^9}, 3.78562253436259*^9, 3.785830682384946*^9, {
   3.785833321269907*^9, 3.785833343446749*^9}, 3.7858334092447085`*^9, 
   3.7858334501385565`*^9, 3.7858335202649107`*^9, 3.7858335772630177`*^9, 
   3.785833615421275*^9, 3.785833702928934*^9, 3.7858338413113956`*^9, {
   3.785833893784486*^9, 3.7858339303882637`*^9}, {3.7858339806311803`*^9, 
   3.7858339984397635`*^9}, {3.785835258520028*^9, 3.785835355975478*^9}, {
   3.7858353914118395`*^9, 3.7858354047230186`*^9}, {3.7858354547055416`*^9, 
   3.7858355051179953`*^9}, {3.7858355557085934`*^9, 3.785835584397952*^9}, 
   3.785835774140715*^9, 3.7858358081611495`*^9, 3.785835871146635*^9, {
   3.7858359297498217`*^9, 3.78583594903004*^9}, {3.7858360036339746`*^9, 
   3.785836029403308*^9}, {3.7858360714444723`*^9, 3.78583620668647*^9}, {
   3.7858362420794225`*^9, 3.7858363288547688`*^9}, {3.7858363783262577`*^9, 
   3.785836403486186*^9}},
 CellLabel->
  "Out[915]=",ExpressionUUID->"1f2f7c76-b13d-48bb-b906-7b991c3f85d9"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{998, 1241},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 228, 4, 67, "Subsection",ExpressionUUID->"e64cb84f-de9f-4b90-a5e9-1ea323c30588"],
Cell[811, 28, 53162, 876, 114, "Text",ExpressionUUID->"64d0d6bf-1eab-41bc-a7cd-251369f4e925"],
Cell[53976, 906, 29624, 722, 2715, "Input",ExpressionUUID->"7405a249-8e74-42ba-8cb9-4ad6b37b789b"],
Cell[83603, 1630, 9652, 247, 569, "Input",ExpressionUUID->"b8b499bb-9d2f-4be1-820a-74f2d72ede84"],
Cell[93258, 1879, 6289, 129, 324, "Input",ExpressionUUID->"7c173ea2-2946-49d8-b3f4-f6b2d745c11e"],
Cell[CellGroupData[{
Cell[99572, 2012, 16155, 362, 1293, "Input",ExpressionUUID->"51dba8ce-d54e-473b-8306-f61498bec997"],
Cell[CellGroupData[{
Cell[115752, 2378, 2010, 31, 28, "Print",ExpressionUUID->"dbe64012-b833-4c81-ac92-4e4b23264cd0"],
Cell[117765, 2411, 2158, 34, 28, "Print",ExpressionUUID->"ebdd0b19-fdc9-40e9-8817-9ce43a5e3e5c"]
}, Open  ]],
Cell[119938, 2448, 523764, 9246, 1521, "Output",ExpressionUUID->"1f2f7c76-b13d-48bb-b906-7b991c3f85d9"]
}, Open  ]]
}, Open  ]]
}
]
*)

