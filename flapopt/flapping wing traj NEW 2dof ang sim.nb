(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    615310,      11238]
NotebookOptionsPosition[    614088,      11210]
NotebookOutlinePosition[    614461,      11226]
CellTagsIndexPosition[    614418,      11223]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["2DOF angular - 3D ambient", "Subsection",
 CellChangeTimes->{{3.758808037911851*^9, 3.7588080500165825`*^9}, {
  3.7851630712097263`*^9, 
  3.7851630750113926`*^9}},ExpressionUUID->"e64cb84f-de9f-4b90-a5e9-\
1ea323c30588"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQeUVUXW9/2uz3HEBJIzKEiQLEFAUECSBMlBoiJBsgISJOcMknMUJeec
JGcQAYmiAyIiGGbG55nnHbtv6Pf33f9z9jrc29xumm7C2Hsteh3OPadO1a4d
/rtqV9UL731Qp83/93/+z//ploQ/dVr0LNe1a4uP6z7Hf+p37tbu/c6tW1Xp
/FHr91t3LfHeY9xsxL/LPP//X0c9muTz+Twezz/+8Y/vvvuufPnyX3311f/8
z/+cPn36b3/7W0REhN/v9znk9XojIyP5yzX3ueYB/st1vNdKX+ET/P3jjz/+
/ve/jxs3buTIkf/1X//Ff+P9c480WR+JaSJ3x7l/etCVjZn8AYrNY0F31Eb7
ye+iOJR/p4+Kme7/+kNISqEn3XeCPm195H7AEyD96g2QHuCmuxDdDK2YPSO9
ttfdzLFn0C/7lu5zJ6gy9q1/B4g7//rXv/75z39iMX755Zcff/zxxo0bvwaI
/167du2HH374+eefz549e+LEiT179hw+fPjChQsHDx5ct27drl279u7du2PH
jv379/OXXw8dOvTFF1/s3r17+/bta9eu5ZrHjh079s0331y9epXCUfz/GyC0
XnVzt0sX+mt3eDgyQLzCNfcxU1xQeXdLE8JqJVK8k1tlHmyXyRkhYIjTzp07
+/Tpg9BKLBP602hB7ty5H3vssVGjRoX/nGSbGq5atSqha5VARP3hKkaGJjRv
3vzy5cvw+cCBA1iDh0dn6QVsIFaOqsqEJtKdSNZY3gTJfNDVuWsyHx2G3L7e
XIyMAz9FOCSHG1Sa+07Qp8N8UY4PEg6350Mhn57xOGS/2gPuJphvFbbnv7QC
16nK21+BcwsHVLKu3cW6vyiPDPE6BUpx+Pvf//3fKDvA/qeffrp58yZAgkhE
oIIY5Msvvzx//vylS5cITPbt24cp4M65c+e4iU04evQoUOHIkSNcnzx5Elyx
ceNGUMSpU6cIYb7++mu9DizhJ2EPvUIJXPATKszfb7/99vvvv+ejv/322++/
/y4IES1miw1Z16gc4imVSav1Fw7QZO7Hj4Am0n0kC6OkMg+wJv9yCBdJ5J4k
SZKGDRsiVPchQEa269at+/jjj48YMSIME9yGccOGDQldqwQixT6ocLt27apV
qzZ69GiQCbZClu1B1+5/SbGbjZk86Oo81CSEjM1Hd+4Deo93ChrhiRaNBA3+
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
Au+9nganr169SkdQ26NHj8JYRCVoD5nYkw0/iuduJ3XvFU6k+0MaLM2fPz8A
9UHX5U9Nsleo0uHDh+fNm4dbsUNe4jbv/+chreVctWoVTjlz5swjR47E92lF
+YULFyZPnvzGG2+AH+CqZZBiANevX79w4UKAyogRI1q0aFGmTBni5QULFig3
IMznNIlA8A4gCYMVhUbkXo8fP16hQoXatWtXqlQJ804IwB00LkOGDJj6vn37
pk2bFnfsu8N+6XcqPzKwidDy5ctx91oxFxHdvtmnT5/mW3h87Y7iczIt4+yw
eJ0AvFixYgUKFIDVtkSIygMA8FxPPPEEEKt48eJ169atU6cOKLFt27Y08Kef
fhK0sCwawTMwDI9RT8EMHYdE1IxdAtucPHnS65yHCBqBhzY0QWdRk0jnLCRh
eO1VsnXr1oEDBy5duhRuB8E8jWN88cUXVBJvCDhRAmpQFmjQcKXWGA4ePBis
lSRJkooVKyotR0KlT/OXm9o3yTJqVE+hUANjceN8jER9+vfvD/6kUff+FZ+T
40RXAnJoV3wNOPgcokzEY9euXeCQxo0b16pVK2hJdezJnRnuBlRxXgeUSPeZ
pGgETa+99tqoUaMedHX+1CRDunLlyvr16+M98apmXeMrevpPJaLRKVOm4B/T
pEnTs2fPGzdu2IA5xg1/tHjxYkw0RhWHKHul3UJAI5MCRECNJ7106ZK2Ng1v
chUndunSJU+ePETfd3pM8zLamQfAA4DBRTZt2pTq7d69GyNMPIhv/eyzz779
9luKQgflqWPZarVRRzTK/RkF1R9XeP78+T59+gAVBgwY4D46OZbfCuUAraPA
Z555ZtmyZRooEJqiOa1aterRowcoa9y4cRs2bNBRTaAmHX/mc3LPRELdwCp4
Qk9pJ1jQGp0COEQXnn322Q4dOvDr/v37hwwZkjx58sqVKyuLXmOJ6mhb1SKV
EUbSPoqRIfvn29gFCA0/u3nzZr0Sup2agQefc6QF0Pf9999PmjRpqlSpjh07
ptxpvUtHL1myZO7cuVQe7CT9pQ6ff/75oEGDxo4dC2hU1k3CTcVSLEwDyIVP
4Y4N2RAWjAJ709fKrYoX/+5zbeVEtyIbcBLIWrBgQXB13Mq0LbX37Nlz9uxZ
jdr5Qvb5T6SHlvzOgkd0fPbs2Q+6On9qQpv27dtHnE7IRlRI7InpU5JP4pBj
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
NgWvYqCIXOrWrdu5c+eZM2du2bJF4zAJVOH/PKILlixZorM14apiVYz/wYMH
Xw3QgQMHIp1Tw+L8ifitcyLdB7LAymYEzNy5A3OLUjXMKPOIJbHD3y9cuHD4
8OGtW7cuW7Zs2rRp06dPB+jOmTNn8uTJXI8ePRoE0rFjx/r16xM2vvHGG7t3
7w6qiddZe5I5c+ZevXp5Aoe/xG+U5wssGNSpu/hfPlS5cmWiGzDS7Nmz9+3b
d/XqVZoTv2uNH2byOxuF0TVPPvnkV199ZdNAfx51xhgiabt27frggw+qVKnS
p08fYitLo41lIZr1e+WVV5InT44goSAIFQEgRYV5C20qWrRo7ty5g2ZY+O78
+fOTJk0KRNRoFYWjazdv3vwmQLZ4855afs+kXCZAF8BpwoQJ6HWWLFmqVasG
rkOPNFgXHiVqhAowo+NEH06pUyAjM0hETyAzcODApUuXHjt2DNMneyg9etA1
fZQIYwvqrlSp0qlTp27cuHHr1q3FixfXqVMnT548XGjqWaNJD7qmiXT/yMY0
bCJYwEOQI9I5Re7XX39F9c6fP79t2zZMpZDGsGHDgBmoZ4cOHd59991atWrp
2NlsAcqXLx+xUlaHChYsCO4tX748McXGjRuDUtCjbgckOAVNyocmG9wLaUZD
e1ZUrVq1Z8+eIKjLly9r53YdLqNwL76++JCTJdXgiNOlS6czZf6I6dSt/zBC
FDGGgwcPbtmyJShap+NFm/wQhmAjgBwIgZwrlwbtAHujOGHe+v3333mmZMmS
oYAEK41lLl269Ny5cwH5U6ZM6d2790cffdS9e/fly5fbYsm4Nzs+iGrglKlV
o0aNEKEGDRqMGTNm7dq1mzdv1kaCMfLQHQfFmC3zoMjvHMOhmUGwk47e+8M5
NleTQaFHzyRSGIJvRAFITrt27QB4uBIcBFJEAItFkjAIBz7omibS/SObvvQ4
p+cgDL/99htGdd26datXr545c+bw4cPx3aCO1q1bN2zYsHbt2lyAQJo3b67z
3Nu0aYOLx1QCJDDswwNEhIhN1gVmat68eRhS4gsAgLQ42poIkPTv318T+vGb
1Cqjh508evTooUOHfvrpJ0shUIqackEfuJ2/b+RzFjO+/PLLhLdSfw22P5yu
ISEIDiDwu3fv1lYqfte+AeFfFIvkp+DhBx988NRTT2FdheGR+QIFCoRPkMa1
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
MjfsXRup0IUOu8dIAgBwcASYoAV8PTDgwoULeDGcAvZZATgYg2ssOfaTB667
6FKAABhnz57lgodxEFyDKCift3TiFaEiv4I9eADUcerUqePHj3NBCRQuEKL9
oLRDFD9xn1odO3aMYJlf+QmcY7tFaZcDUA2uGbfCRyn5WoD4lXYBVyzfWPkG
cgduTtrGWV5XhqSb7Oxd94ySu3fcHWFiYHfcM1AeZxsHnysr0vrLHrM8QA0I
IE60ncZqYcWqVatAGhMnTgR4TJo0SVtvgUmWLFmyc+dOWMHzaq99SEJlYb4+
6k55DZqA892e7WPPU5nevXvny5cP3sbXRIPfSVykwo0aNSpVqtS2bdsQwojA
4ezqL/ULgrR58+Y+ffpUqVIF/WrduvWsWbMQEtvb34Ya3G0J+px2KdGMT8+e
PQkc+GjBggVLly69adMmWOcefLOGx22EBC5VqFAhW7ZsHTp0QNTde0FTASBi
zZo106VLR6PUWZ673A4ukRKCLO2KvsuePbupSSJQTKRHjvyB8We8do4cOTp3
7hy3QtxTFbpwn/PrvjC/5j4LWJYc6/3rr78KD+Cd8e84caw3zpq/gAoqiZu7
HCCgAp59z549/KQRD2AA93lAWzqAQPD1vKWtkGyAQqT0QhpO4Cy/r/u2p4T8
oxL+bW8BKql9Jm1UXM9oNcf/DZAOmaIVlKwP/Rag/9femcf5XK7//49TJIka
axzbQ6FCKJSYiCLryC6SLYbQIWMZk+xkLNlmZBk7Y1B2o0ZoLNnLLrK0kHN0
+nb+OJn5fPyev8/rvO/H7fMZY0xjhnpff3we73nP+32/7+W6r+t1Xfd1Xzdm
Mr+0CDmPCgbbKN0ldQbzHPMRbaH+VFswhscANrQU5IOm0H16hnKM1awU36bn
jWdAriGDVbxW2EyS79RRY5sb4Gdf2OtTQkfmRY+z2UqF8CHaSOsYr8TERGz/
eT5auHAhynf48OHgkMWLF69YsSIuLg58sn//fgZLMDIT0kZR1alTp6LEjbPl
j5epXhIsXLt2LRMHvEED0dfiB/oEcDt37lywEHAF5NCyZcthw4YBmOUfS76d
2GbNFw0BTNK6detcuXJVqVJl2bJlGX5+AWw8cODAcePGAacN2DBEzWNjY4OC
gkJCQsyhmS4gyXLSQiS/L7/8cvHixW0LxcUkLt1bJOWCqKlWrVrjxo3TXYht
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

    "], {{0, 89}, {731, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{731, 89},
  PlotRange->{{0, 731}, {0, 89}}]], "Text",
 CellChangeTimes->{3.785534731477183*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"64d0d6bf-1eab-41bc-a7cd-251369f4e925"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Rspar", "[", "\[Phi]_", "]"}], ":=", 
   RowBox[{"RotationMatrix", "[", 
    RowBox[{"\[Phi]", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Rhinge", "[", "\[Psi]_", "]"}], ":=", 
    RowBox[{"RotationMatrix", "[", 
     RowBox[{"\[Psi]", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Assumption", " ", "Rcop"}], ",", 
    RowBox[{"x", " ", "=", " ", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["r", "^"], "1"], "R", " ", "in", " ", "Chen", 
      RowBox[{"(", "2016", ")"}], " ", "eq", " ", 
      RowBox[{
       RowBox[{"(", "5", ")"}], ".", " ", "Ixx"}], " ", "from", " ", 
      "\"\<incorporate R\>\"", " ", 
      RowBox[{"notes", "."}]}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wingsubs", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"R", "\[Rule]", 
       RowBox[{"Aw", "/", "cbar"}]}], ",", 
      RowBox[{"ycp", "\[Rule]", 
       RowBox[{"R", " ", 
        SubscriptBox[
         OverscriptBox["r", "^"], "1"]}]}], ",", 
      RowBox[{"Ixx", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{"mwing", " ", 
         RowBox[{"ycp", "^", "2"}]}], "*)"}], "0"}], ",", 
      RowBox[{"Izz", "\[Rule]", 
       RowBox[{
        RowBox[{"cbar", "^", "2"}], 
        RowBox[{"\[Gamma]", "^", "2"}], "mwing"}]}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", " ", "nonlin", " ", "transmission"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Tau]inv", "[", "\[Phi]o_", "]"}], ":=", 
    RowBox[{
     RowBox[{"\[Phi]o", " ", 
      RowBox[{"ycp", "/", "\[Tau]1"}]}], "-", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Phi]o", " ", "ycp"}], ")"}], "^", "3"}], 
      RowBox[{"\[Tau]2", "/", 
       RowBox[{"(", 
        RowBox[{"3", 
         RowBox[{"\[Tau]1", "^", "4"}]}], ")"}]}]}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "draw", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"drawWing", "[", 
     RowBox[{"sol_", ",", "a_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"pspar", ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"A", " ", "wing", " ", "in", " ", "local", " ", "fram"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"polyverts", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "R", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "R", ",", 
             RowBox[{"-", "cbar"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "cbar"}]}], "}"}]}], "}"}]}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pspar", "=", 
        RowBox[{
         RowBox[{"Rspar", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "R", ",", "0"}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Transform", " ", "to", " ", "world", " ", "frame"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"polyverts", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Rspar", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ".", 
           RowBox[{"Rhinge", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], ".", 
           RowBox[{"polyverts", "\[Transpose]"}]}], ")"}], "\[Transpose]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Graphics3D", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"Thick", ",", "\[IndentingNewLine]", 
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "pspar"}], 
                 "}"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Polygon", "[", "polyverts", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Opacity", "[", "1", "]"}], ",", "\[IndentingNewLine]",
                "Blue", ",", "\[IndentingNewLine]", 
               RowBox[{"Arrow", "[", 
                RowBox[{"{", 
                 RowBox[{"paero", ",", 
                  RowBox[{"paero", "+", 
                   RowBox[{"1", "Faero"}]}]}], "}"}], "]"}]}], 
              "\[IndentingNewLine]", "}"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"FaceGrids", "\[Rule]", "All"}]}], "]"}], "/.", "sol"}], 
          "/.", 
          RowBox[{"t", "\[Rule]", "a"}]}], "//.", "wingsubs"}], "/.", 
        "params"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"plotTrajs", "[", 
     RowBox[{"sol_", ",", "t2_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"t1", "=", 
         RowBox[{
          RowBox[{"t2", "-", 
           RowBox[{"Ndt", " ", "dt"}]}], "/.", "params"}]}], ",", 
        RowBox[{"FD", "=", 
         RowBox[{"Faero", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\[Phi]mag", "=", 
         RowBox[{"First", "@", 
          RowBox[{"FindMaximum", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"\[Phi]", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
              RowBox[{"t1", "\[LessEqual]", "t", "\[LessEqual]", "t2"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"t1", "+", "t2"}], ")"}], "/", "2"}]}], "}"}]}], 
           "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\[Psi]mag", "=", 
         RowBox[{"First", "@", 
          RowBox[{"FindMaximum", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"\[Psi]", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
              RowBox[{"t1", "\[LessEqual]", "t", "\[LessEqual]", "t2"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"t1", "+", "t2"}], ")"}], "/", "2"}]}], "}"}]}], 
           "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"avglift", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Faero", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "/.", "sol"}], "//.", 
               "wingsubs"}], "/.", "params"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "t1", ",", "t2"}], "}"}]}], "]"}], "/", 
           RowBox[{"(", 
            RowBox[{"t2", "-", "t1"}], ")"}]}], "*", 
          RowBox[{"1000", "/", "9.81"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\[Sigma]amax", "=", "0.35"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<\[Phi]mag=\>\"", ",", "\[Phi]mag", ",", "\"\<, \[Psi]mag=\>\"", 
         ",", "\[Psi]mag", ",", "\"\<, avglift=\>\"", ",", "avglift"}], "]"}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[Tau]inv", "[", 
              RowBox[{
               RowBox[{"\[Phi]", "[", "t", "]"}], "/.", "sol"}], "]"}], "//.",
              "wingsubs"}], "/.", "params"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\[Sigma]act"}], ",", 
           RowBox[{"GridLines", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "\[Sigma]amax"}], ",", "\[Sigma]amax"}], "}"}]}],
              "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Phi]", "[", "t", "]"}], "/.", "sol"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\[Phi]"}], ",", 
           RowBox[{"GridLines", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "\[Phi]mag"}], ",", "\[Phi]mag"}], "}"}]}], 
             "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Psi]", "[", "t", "]"}], "/.", "sol"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\[Psi]"}], ",", 
           RowBox[{"GridLines", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "\[Psi]mag"}], ",", "\[Psi]mag"}], "}"}]}], 
             "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Faero", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "*", 
               RowBox[{"1000", "/", "9.81"}]}], "/.", "sol"}], "//.", 
             "wingsubs"}], "/.", "params"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<FL [mg]\>\""}], ",", 
           RowBox[{"GridLines", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", "avglift", "}"}]}], "}"}]}], ",", 
           RowBox[{"Filling", "\[Rule]", "avglift"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"FD", "*", 
               RowBox[{"1000", "/", "9.81"}]}], "/.", "sol"}], "//.", 
             "wingsubs"}], "/.", "params"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<FDx [mg]\>\""}]}], "]"}]}], 
        RowBox[{"(*", 
         RowBox[{",", "\[IndentingNewLine]", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Tau]act", "/.", 
              RowBox[{"c2", "[", "]"}]}], "/.", "params"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "u"}]}], "]"}], ","}], "*)"}], 
        "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"debugComponentsPlot", "[", 
     RowBox[{"sol_", ",", "t2_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"stiff", ",", 
        RowBox[{"t1", "=", 
         RowBox[{
          RowBox[{"t2", "-", 
           RowBox[{"Ndt", " ", "dt"}]}], "/.", "params"}]}], ",", "M", ",", 
        "inertial", ",", "Mdiag", ",", "inc", ",", "ic"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"stiff", "=", 
        RowBox[{"D", "[", 
         RowBox[{"L2", ",", 
          RowBox[{"{", "q", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"M", "=", 
        RowBox[{"D", "[", 
         RowBox[{"KE", ",", 
          RowBox[{"{", 
           RowBox[{"dq", ",", "2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"inertial", "=", 
        RowBox[{"M", ".", "ddq"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Mdiag", "=", 
        RowBox[{"DiagonalMatrix", "@", 
         RowBox[{"Diagonal", "[", "M", "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"inc", "=", 
        RowBox[{"Mdiag", ".", "ddq"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ic", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M", "-", "Mdiag"}], ")"}], ".", "ddq"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
           RowBox[{"inertial", "//.", "wingsubs"}], "/.", "params"}], "]"}], 
         ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"inertial", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<i\>\""}], "]"}],
                    ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"stiff", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", 
                    RowBox[{"\[Tau]damp", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "\"\<g\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"\[Tau]aero", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<aero\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"\[Tau]inp", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/.", 
                    RowBox[{"c2", "[", "]"}]}], ",", "\"\<act\>\""}], "]"}]}],
                   "\[IndentingNewLine]", "}"}], "/.", "sol"}], "//.", 
                "wingsubs"}], "/.", "params"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                "Dashed"}], "}"}]}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"i", "\[Equal]", "1"}], ",", "\"\<stroke\>\"", ",", 
                "\"\<hinge\>\""}], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "2"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"inc", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<inc\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"ic", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<ic\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"inertial", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<itot\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"stiff", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<gtot\>\""}], 
                    "]"}]}], "\[IndentingNewLine]", "}"}], "/.", "sol"}], "//.",
                 "wingsubs"}], "/.", "params"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "Automatic", ",", "Automatic", ",", "Dashed", ",", 
                "Automatic"}], "}"}]}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"i", "\[Equal]", "1"}], ",", "\"\<stroke\>\"", ",", 
                "\"\<hinge\>\""}], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"aeroForce", "[", 
     RowBox[{"{", 
      RowBox[{"\[Phi]_", ",", "\[Psi]_", ",", "d\[Phi]_", ",", "d\[Psi]_"}], 
      "}"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sparVecB", "=", 
         RowBox[{
          RowBox[{"Rspar", "[", "\[Phi]", "]"}], ".", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ",", 
        RowBox[{"(*", 
         RowBox[{"vector", " ", "along", " ", "wing"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"chordB", "=", 
         RowBox[{
          RowBox[{"Rspar", "[", "\[Phi]", "]"}], ".", 
          RowBox[{"Rhinge", "[", "\[Psi]", "]"}], ".", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}]}], ",", 
        RowBox[{"(*", 
         RowBox[{"wing", " ", "chord", " ", "unit", " ", "vector"}], "*)"}], 
        "\[IndentingNewLine]", "le", ",", "ne", ",", "pcopB", ",", 
        "rcopnondim", ",", "\[IndentingNewLine]", "eD", ",", "eL", ",", 
        "\[Alpha]", ",", "paero", ",", "Caero", ",", "Faero"}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Leading", " ", "edge", " ", "velocity", " ", "direction"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"le", "=", 
        RowBox[{"Cross", "[", 
         RowBox[{
          RowBox[{"d\[Phi]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ",", 
          RowBox[{"ycp", " ", "sparVecB"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ne", "=", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"le", ".", "le"}], "]"}], "+", "\[Epsilon]aero"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"COP", ":", " ", 
         RowBox[{"nondim", " ", "from", " ", "Chen"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"rcopnondim", "=", 
        RowBox[{"0.25", "+", 
         RowBox[{"0.25", "/", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Exp", "[", 
             RowBox[{"5.0", "*", 
              RowBox[{"(", 
               RowBox[{"1.0", "-", 
                RowBox[{"4", "*", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Pi]", "/", "2"}], "-", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"\[Psi]", "^", "2"}], "]"}]}], ")"}], "/", 
                  "\[Pi]"}]}]}], ")"}]}], "]"}]}], ")"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pcopB", "=", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "d"}], "}"}], "+"}], "*)"}], 
        RowBox[{
         RowBox[{"ycp", " ", "sparVecB"}], "+", 
         RowBox[{"rcopnondim", " ", "chordB"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Lift", "/", "drag"}], " ", "directions"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"eD", "=", 
        RowBox[{
         RowBox[{"-", "le"}], "/", "ne"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"eL", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Aero", " ", "force", " ", "calculate"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{
         RowBox[{"\[Pi]", "/", "2"}], "-", "\[Psi]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"paero", "=", 
        RowBox[{
         RowBox[{"Rspar", "[", "\[Phi]", "]"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "ycp", ",", "0"}], "}"}], "+", 
           RowBox[{
            RowBox[{"Rhinge", "[", "\[Psi]", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{
               RowBox[{"-", "rcopnondim"}], " ", "cbar"}]}], "}"}]}]}], 
          ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Caero", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"CDmax", "+", "CD0"}], ")"}], "/", "2"}], "-", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"CDmax", "-", "CD0"}], ")"}], "/", "2"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", "\[Alpha]"}], "]"}]}]}], ")"}], ",", 
          RowBox[{"CLmax", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", "\[Alpha]"}], "]"}]}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          SubscriptBox[
           OverscriptBox["r", "^"], "2"], " ", "from", " ", "Whitney", " ", 
          "2010", " ", 
          RowBox[{
           RowBox[{"(", "2.23", ")"}], ".", " ", "Assumes"}], " ", "Rcopx"}], 
         "=", 
         RowBox[{
          RowBox[{"ycp", " ", "stays", " ", "constant"}], " ", "-", " ", 
          RowBox[{"OK", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Faero", "=", 
        RowBox[{
         RowBox[{"1", "/", "2"}], "\[Rho]", " ", 
         RowBox[{"d\[Phi]", "^", "2"}], " ", "cbar", " ", 
         RowBox[{"R", "^", "3"}], " ", 
         RowBox[{
          SubscriptBox[
           OverscriptBox["r", "^"], "2"], "^", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Caero", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "eD"}], "+", 
           RowBox[{
            RowBox[{"Caero", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "eL", " ", 
            RowBox[{"Sign", "[", 
             RowBox[{"-", "d\[Phi]"}], "]"}]}]}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"paero", ",", "Faero"}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Psi]", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Pi]", "/", "2"}], " ", "-", " ", 
       RowBox[{"CD0", " ", "should", " ", "remain", " ", "in", " ", 
        RowBox[{"drag", ".", "\[IndentingNewLine]", "Need"}], " ", "to", " ", 
        "check", " ", "lift", " ", 
        RowBox[{"sign", ".", " ", "Trying"}], " ", "to", " ", "coincide", " ",
         "with", " ", "2", "D", " ", "sim", " ", "results", " ", 
        RowBox[{"https", ":"}]}]}], "//", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"github", ".", "com"}], "/", "avikde"}], "/", 
           "robobee3d"}], "/", "issues"}], "/", "88"}], "\[IndentingNewLine]", 
        RowBox[{"i", ".", "e", ".", " ", "when"}], " ", "stroke", " ", 
        "vel"}], " ", ">", " ", "0"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"hinge", " ", "ang"}], " ", "<", " ", 
     RowBox[{"0", " ", "for", " ", 
      RowBox[{"lift", "."}]}]}]}], "\[IndentingNewLine]", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"aeroForce", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Pi]", "/", "4"}], ",", 
          RowBox[{"-", "1"}], ",", "0"}], "}"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "//.", "wingsubs"}], "/.", "params"}], 
    "//", "Simplify"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.785163733169914*^9, 3.785163768788862*^9}, {
   3.7851638219331465`*^9, 3.7851638221495667`*^9}, {3.7851638575914416`*^9, 
   3.7851638656639175`*^9}, {3.785163952461292*^9, 3.785163959194874*^9}, {
   3.785181113450061*^9, 3.7851811849114933`*^9}, {3.785181223420051*^9, 
   3.7851814480879383`*^9}, {3.7851815284493275`*^9, 3.785181574334261*^9}, {
   3.785181607927892*^9, 3.7851818562133703`*^9}, {3.785181897023181*^9, 
   3.785181973204109*^9}, {3.7851820183846817`*^9, 3.785182035584442*^9}, {
   3.785182130927059*^9, 3.7851822788151007`*^9}, {3.785182768706132*^9, 
   3.785182824611698*^9}, {3.7851835377984476`*^9, 3.7851835381465435`*^9}, {
   3.785183574632366*^9, 3.7851838963880434`*^9}, {3.785183935005065*^9, 
   3.78518393938645*^9}, {3.7852369154777946`*^9, 3.7852369276973515`*^9}, {
   3.785237068661893*^9, 3.785237159502931*^9}, {3.7852390830870667`*^9, 
   3.785239105554223*^9}, {3.785239223653453*^9, 3.785239230566188*^9}, {
   3.785239332872146*^9, 3.7852394831645365`*^9}, {3.785239522904046*^9, 
   3.785239527846*^9}, {3.785239574459278*^9, 3.785239590976102*^9}, {
   3.785239663394473*^9, 3.785239765859336*^9}, {3.785239822253582*^9, 
   3.785239852287075*^9}, {3.7852411853333817`*^9, 3.7852412095104837`*^9}, {
   3.7852412747392893`*^9, 3.785241284555241*^9}, {3.785242577855811*^9, 
   3.7852426072696886`*^9}, {3.785242760532243*^9, 3.785242764687683*^9}, {
   3.785243042341342*^9, 3.785243082387663*^9}, {3.78524369984238*^9, 
   3.7852437033492184`*^9}, {3.785243878758131*^9, 3.7852438818282394`*^9}, {
   3.785250588656488*^9, 3.785250591357007*^9}, {3.7852507564570065`*^9, 
   3.7852507638104935`*^9}, {3.785253091532304*^9, 3.785253138847148*^9}, {
   3.7852531795009995`*^9, 3.7852531822852845`*^9}, {3.78525322760236*^9, 
   3.7852532347079835`*^9}, {3.785253269736401*^9, 3.7852533186729493`*^9}, {
   3.7852533499356813`*^9, 3.7852533536194243`*^9}, {3.7852534684496627`*^9, 
   3.7852534710220785`*^9}, {3.7852535409719725`*^9, 3.785253541682535*^9}, {
   3.7852537363906927`*^9, 3.7852537365316057`*^9}, 3.785254209543125*^9, 
   3.785254249221677*^9, {3.7852618005450153`*^9, 3.785261822043441*^9}, {
   3.785261857787959*^9, 3.7852618586202583`*^9}, {3.7852618892287784`*^9, 
   3.785261946037554*^9}, 3.785262059440189*^9, {3.7852620993981705`*^9, 
   3.785262120227375*^9}, {3.785263145319659*^9, 3.7852631460221624`*^9}, {
   3.7852632381337895`*^9, 3.7852632587033963`*^9}, {3.7852633271116285`*^9, 
   3.7852633460395827`*^9}, 3.785263472773306*^9, 3.785263866855198*^9, 
   3.785268139559249*^9, {3.78526972929168*^9, 3.785269729727641*^9}, {
   3.7852699615872583`*^9, 3.7852699902755356`*^9}, {3.7856194498325715`*^9, 
   3.7856194866198425`*^9}, {3.785620292632592*^9, 3.7856204176271205`*^9}, {
   3.785621000831133*^9, 3.7856210498957686`*^9}, {3.785621146464704*^9, 
   3.785621189540737*^9}, {3.7856212292364116`*^9, 3.785621241303481*^9}, {
   3.785830618745776*^9, 3.78583062683438*^9}, 3.785831709123893*^9, {
   3.7858334724121633`*^9, 3.7858334949023423`*^9}, {3.7858335584412346`*^9, 
   3.7858335601674433`*^9}, {3.785833642845225*^9, 3.785833650689127*^9}, {
   3.7858356619043493`*^9, 3.7858357311644955`*^9}, {3.7858357783741217`*^9, 
   3.7858357974762607`*^9}, {3.785835833989029*^9, 3.7858358613427205`*^9}},
 CellLabel->
  "In[530]:=",ExpressionUUID->"7405a249-8e74-42ba-8cb9-4ad6b37b789b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Lagrangian", " ", "setup"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"q", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Phi]", "[", "t", "]"}], ",", 
       RowBox[{"\[Psi]", "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dq", "=", 
     RowBox[{"D", "[", 
      RowBox[{"q", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ddq", "=", 
     RowBox[{"D", "[", 
      RowBox[{"dq", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"for", " ", "analysis"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pwing", "=", 
     RowBox[{
      RowBox[{"Rspar", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "ycp", ",", "0"}], "}"}], "+", 
        RowBox[{
         RowBox[{"Rhinge", "[", 
          RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", 
           RowBox[{
            RowBox[{"-", "\[Gamma]"}], " ", "cbar"}]}], "}"}]}]}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"See", " ", 
       RowBox[{"https", ":"}]}], "//", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"github", ".", "com"}], "/", "avikde"}], "/", 
           "robobee3d"}], "/", "pull"}], "/", "105"}], "#issue"}], "-", 
       RowBox[{
       "349667100", " ", "for", " ", "my", " ", "replacement", " ", "of", " ",
         "Ixx"}]}]}], ",", "Izz"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KE", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "2"}], "Ixx", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], "^", "2"}]}], "+", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "Izz", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "'"}], "[", "t", "]"}], "^", "2"}]}], "+", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "mwing", " ", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"pwing", ",", "t"}], "]"}], ".", 
        RowBox[{"D", "[", 
         RowBox[{"pwing", ",", "t"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "ma", " ", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Tau]inv", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", "t"}], "]"}], "^", 
        "2"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L2", "=", 
     RowBox[{"KE", "-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"1", "/", "2"}], " ", "k\[Psi]", " ", 
         RowBox[{
          RowBox[{"\[Psi]", "[", "t", "]"}], "^", "2"}]}], "+", 
        RowBox[{
         RowBox[{"1", "/", "2"}], 
         RowBox[{"(", 
          RowBox[{"ko", " ", 
           RowBox[{"ycp", "^", "2"}]}], ")"}], 
         RowBox[{
          RowBox[{"\[Phi]", "[", "t", "]"}], "^", "2"}]}], "+", 
        RowBox[{
         RowBox[{"1", "/", "2"}], "ka", " ", 
         RowBox[{
          RowBox[{"\[Tau]inv", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
       ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Llhs", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"L2", ",", 
            RowBox[{"{", "dq", "}"}]}], "]"}], ",", "t"}], "]"}], "-", 
        RowBox[{"D", "[", 
         RowBox[{"L2", ",", 
          RowBox[{"{", "q", "}"}]}], "]"}]}], ")"}], "//", "Simplify"}]}], 
    ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Llhs", "=", 
     RowBox[{
      RowBox[{"First", "@", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"And", "@@", 
          RowBox[{"Thread", "[", 
           RowBox[{"Llhs", "\[Equal]", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Phi]", "''"}], "[", "t", "]"}], ",", 
           RowBox[{
            RowBox[{"\[Psi]", "''"}], "[", "t", "]"}]}], "}"}]}], "]"}]}], "//",
       "Simplify"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Add", " ", "non"}], "-", "lagrangian"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"paero", ",", "Faero"}], "}"}], "=", 
     RowBox[{"aeroForce", "[", 
      RowBox[{"Join", "[", 
       RowBox[{"q", ",", "dq"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]aero", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"paero", ",", 
           RowBox[{"{", "q", "}"}]}], "]"}], "\[Transpose]"}], ".", "Faero"}],
        ",", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"R", ">", "0"}], ",", " ", 
          RowBox[{
           SubscriptBox[
            OverscriptBox["r", "^"], "1"], ">", "0"}]}], "}"}]}]}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Tau]damp", "=", 
     RowBox[{"-", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"b\[Psi]", " ", 
         RowBox[{
          RowBox[{"\[Psi]", "'"}], "[", "t", "]"}]}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]inp", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Tau]inv", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", 
        RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], "\[Tau]act"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]rhs", "=", 
     RowBox[{"\[Tau]aero", "+", "\[Tau]damp", "+", "\[Tau]inp"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Simplify", " ", "may", " ", "take", " ", "a", " ", "little", " ", 
     "time"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eoms", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{"Llhs", "\[Equal]", "\[Tau]rhs"}], "]"}], "//.", 
        "wingsubs"}], ",", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"cbar", ">", "0"}], ",", 
          RowBox[{
           RowBox[{"\[Psi]", "[", "t", "]"}], "\[Element]", "Reals"}], ",", 
          RowBox[{"ycp", ">", "0"}]}], "}"}]}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.785163733169914*^9, 3.785163768788862*^9}, {
   3.7851638219331465`*^9, 3.7851638221495667`*^9}, {3.7851638575914416`*^9, 
   3.7851638656639175`*^9}, {3.785163952461292*^9, 3.785163959194874*^9}, {
   3.785181113450061*^9, 3.7851811849114933`*^9}, {3.785181223420051*^9, 
   3.7851814480879383`*^9}, {3.7851815284493275`*^9, 3.785181574334261*^9}, {
   3.785181607927892*^9, 3.7851818562133703`*^9}, {3.785181897023181*^9, 
   3.785181973204109*^9}, {3.7851820183846817`*^9, 3.785182035584442*^9}, {
   3.785182130927059*^9, 3.7851822788151007`*^9}, {3.785182768706132*^9, 
   3.785182824611698*^9}, {3.7851835377984476`*^9, 3.7851835381465435`*^9}, {
   3.785183574632366*^9, 3.7851838963880434`*^9}, {3.785183935005065*^9, 
   3.78518393938645*^9}, {3.7852369154777946`*^9, 3.7852369276973515`*^9}, {
   3.785237068661893*^9, 3.785237159502931*^9}, {3.7852390830870667`*^9, 
   3.785239105554223*^9}, {3.785239223653453*^9, 3.785239230566188*^9}, {
   3.785239332872146*^9, 3.7852394831645365`*^9}, {3.785239522904046*^9, 
   3.785239527846*^9}, {3.785239574459278*^9, 3.785239590976102*^9}, {
   3.785239663394473*^9, 3.785239765859336*^9}, {3.785239822253582*^9, 
   3.785239852287075*^9}, {3.7852411853333817`*^9, 3.7852412095104837`*^9}, {
   3.7852412747392893`*^9, 3.785241284555241*^9}, {3.785242577855811*^9, 
   3.7852426072696886`*^9}, {3.785242760532243*^9, 3.785242764687683*^9}, {
   3.785243042341342*^9, 3.785243082387663*^9}, {3.78524369984238*^9, 
   3.7852437033492184`*^9}, {3.785243878758131*^9, 3.7852438818282394`*^9}, {
   3.785250588656488*^9, 3.785250591357007*^9}, {3.7852507564570065`*^9, 
   3.7852507638104935`*^9}, {3.785253091532304*^9, 3.785253138847148*^9}, {
   3.7852531795009995`*^9, 3.7852531822852845`*^9}, {3.78525322760236*^9, 
   3.7852532347079835`*^9}, {3.785253269736401*^9, 3.7852533186729493`*^9}, {
   3.7852533499356813`*^9, 3.7852533536194243`*^9}, {3.7852534684496627`*^9, 
   3.7852534710220785`*^9}, {3.7852535409719725`*^9, 3.785253541682535*^9}, {
   3.7852537363906927`*^9, 3.7852537365316057`*^9}, 3.785254209543125*^9, 
   3.785254249221677*^9, {3.7852618005450153`*^9, 3.7852618049458847`*^9}, {
   3.7852619352877183`*^9, 3.7852619378303013`*^9}, {3.785262049200818*^9, 
   3.7852620500145736`*^9}, {3.785262103253174*^9, 3.7852621096136494`*^9}, {
   3.785263447209785*^9, 3.7852634489854174`*^9}, 3.7852635401829467`*^9, {
   3.78526380795971*^9, 3.785263833479515*^9}, {3.785264076495087*^9, 
   3.7852640857027893`*^9}, {3.7852681432932625`*^9, 
   3.7852681474119186`*^9}, {3.785831869007831*^9, 3.785831870271266*^9}, {
   3.7858329219017763`*^9, 3.7858329347845373`*^9}, {3.785832983264346*^9, 
   3.7858330065270085`*^9}, 3.7858335037219863`*^9, {3.7858336604094815`*^9, 
   3.785833664118662*^9}},
 CellLabel->
  "In[473]:=",ExpressionUUID->"b8b499bb-9d2f-4be1-820a-74f2d72ede84"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"For", " ", "analysis"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"compareEomTo2D", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eomsanalysis", ",", "Mm"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"eoms", " ", "for", " ", "analysis", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"comparison", " ", "to", " ", "2", "D"}], ")"}], ".", " ", 
          "Also"}], " ", "comment", " ", "out", " ", "the", " ", "rcopnondim",
          " ", "line"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"eomsanalysis", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{"Llhs", "\[Equal]", "\[Tau]rhs"}], "]"}], 
            RowBox[{"(*", 
             RowBox[{"//.", "wingsubs"}], "*)"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Tau]2", "\[Rule]", "0"}], ",", 
              RowBox[{"\[Epsilon]aero", "\[Rule]", "0"}]}], "}"}]}], ",", 
           RowBox[{"Assumptions", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"cbar", ">", "0"}], ",", 
              RowBox[{
               RowBox[{"\[Psi]", "[", "t", "]"}], "<", "0"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], ">", "0"}], ",", 
              RowBox[{"ycp", ">", "0"}]}], "}"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Get", " ", "all", " ", "the", " ", "terms", " ", "on", " ", "the", 
          " ", "LHS"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"eomsanalysis", "=", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"eom", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"eom", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"eom", ",", "eomsanalysis"}], "}"}]}], "]"}], "//", 
          "Simplify"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Mm", "=", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"eomsanalysis", ",", 
            RowBox[{"{", "ddq", "}"}]}], "]"}], "//", "Simplify"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<M=\>\"", ",", 
          RowBox[{"Mm", "//", "MatrixForm"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<M=\>\"", ",", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"eomsanalysis", ",", 
             RowBox[{"{", "q", "}"}]}], "]"}], "//", "MatrixForm"}]}], "]"}], 
        ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"CoefficientList", "[", 
        RowBox[{
         RowBox[{"eomsanalysis", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"\[Phi]", "''"}], "[", "t", "]"}]}], "]"}], "*)"}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"compareEomTo2D", "[", "]"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.785163733169914*^9, 3.785163768788862*^9}, {
   3.7851638219331465`*^9, 3.7851638221495667`*^9}, {3.7851638575914416`*^9, 
   3.7851638656639175`*^9}, {3.785163952461292*^9, 3.785163959194874*^9}, {
   3.785181113450061*^9, 3.7851811849114933`*^9}, {3.785181223420051*^9, 
   3.7851814480879383`*^9}, {3.7851815284493275`*^9, 3.785181574334261*^9}, {
   3.785181607927892*^9, 3.7851818562133703`*^9}, {3.785181897023181*^9, 
   3.785181973204109*^9}, {3.7851820183846817`*^9, 3.785182035584442*^9}, {
   3.785182130927059*^9, 3.7851822788151007`*^9}, {3.785182768706132*^9, 
   3.785182824611698*^9}, {3.7851835377984476`*^9, 3.7851835381465435`*^9}, {
   3.785183574632366*^9, 3.7851838963880434`*^9}, {3.785183935005065*^9, 
   3.78518393938645*^9}, {3.7852369154777946`*^9, 3.7852369276973515`*^9}, {
   3.785237068661893*^9, 3.785237159502931*^9}, {3.7852390830870667`*^9, 
   3.785239105554223*^9}, {3.785239223653453*^9, 3.785239230566188*^9}, {
   3.785239332872146*^9, 3.7852394831645365`*^9}, {3.785239522904046*^9, 
   3.785239527846*^9}, {3.785239574459278*^9, 3.785239590976102*^9}, {
   3.785239663394473*^9, 3.785239765859336*^9}, {3.785239822253582*^9, 
   3.785239852287075*^9}, {3.7852411853333817`*^9, 3.7852412095104837`*^9}, {
   3.7852412747392893`*^9, 3.785241284555241*^9}, {3.785242577855811*^9, 
   3.7852426072696886`*^9}, {3.785242760532243*^9, 3.785242764687683*^9}, {
   3.785243042341342*^9, 3.785243082387663*^9}, {3.78524369984238*^9, 
   3.7852437033492184`*^9}, {3.785243878758131*^9, 3.7852438818282394`*^9}, {
   3.785250588656488*^9, 3.785250591357007*^9}, {3.7852507564570065`*^9, 
   3.7852507638104935`*^9}, {3.785253091532304*^9, 3.785253138847148*^9}, {
   3.7852531795009995`*^9, 3.7852531822852845`*^9}, {3.78525322760236*^9, 
   3.7852532347079835`*^9}, {3.785253269736401*^9, 3.7852533186729493`*^9}, {
   3.7852533499356813`*^9, 3.7852533536194243`*^9}, {3.7852534684496627`*^9, 
   3.7852534710220785`*^9}, {3.7852535409719725`*^9, 3.785253541682535*^9}, {
   3.7852537363906927`*^9, 3.7852537365316057`*^9}, 3.785254209543125*^9, 
   3.785254249221677*^9, {3.7852618005450153`*^9, 3.7852618049458847`*^9}, {
   3.7852619352877183`*^9, 3.7852619378303013`*^9}, {3.785262049200818*^9, 
   3.7852620500145736`*^9}, {3.785262103253174*^9, 3.7852621096136494`*^9}, {
   3.785263447209785*^9, 3.7852634489854174`*^9}, 3.7852635401829467`*^9, {
   3.78526380795971*^9, 3.785263833479515*^9}, {3.785264076495087*^9, 
   3.7852640857027893`*^9}, {3.7852681432932625`*^9, 
   3.7852681474119186`*^9}, {3.785831869007831*^9, 3.785831870271266*^9}, {
   3.7858329219017763`*^9, 3.7858329347845373`*^9}, {3.785832983264346*^9, 
   3.7858330065270085`*^9}, {3.7858330819961247`*^9, 3.7858331447841687`*^9}, 
   3.785833279240972*^9},
 CellLabel->
  "In[123]:=",ExpressionUUID->"7c173ea2-2946-49d8-b3f4-f6b2d745c11e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"wing", " ", "params", " ", "r1h"}], ",", 
    RowBox[{
     RowBox[{"r2h", " ", "from", " ", "Chen", 
      RowBox[{"(", "2016", ")"}]}], ":", " ", 
     RowBox[{"see", " ", "the", " ", "\"\<incorporate R\>\"", " ", 
      RowBox[{"notes", ".", " ", "N"}], " ", "is", " ", "from", " ", "the", 
      " ", "julia", " ", "traj", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"just", " ", "used", " ", "to", " ", "map", " ", "dt"}], 
        ")"}], "."}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"paramsFixed", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ko", "\[Rule]", "0.55"}], ",", 
       RowBox[{"ma", "\[Rule]", "6"}], ",", 
       RowBox[{"ka", "\[Rule]", "150"}], ",", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["r", "^"], "1"], "\[Rule]", "0.49"}], ",", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["r", "^"], "2"], "\[Rule]", "0.551"}], ",", 
       RowBox[{"\[Epsilon]aero", "\[Rule]", "0.001"}], ",", 
       RowBox[{"CDmax", "\[Rule]", "3.4"}], ",", 
       RowBox[{"CLmax", "\[Rule]", "1.8"}], ",", 
       RowBox[{"CD0", "\[Rule]", "0.4"}], ",", 
       RowBox[{"\[Rho]", "\[Rule]", 
        RowBox[{"1.225", "*", "0.001"}]}], ",", 
       RowBox[{"\[Gamma]", "\[Rule]", "0.5"}], ",", 
       RowBox[{"Ndt", "\[Rule]", "45"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"paramsOpt", "=", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "cbar", ",", "\[Tau]1", ",", "mwing", ",", "k\[Psi]", ",", "b\[Psi]", 
         ",", "\[Tau]2", ",", "Aw", ",", "dt"}], "}"}], "\[Rule]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"4.928", ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "15.98", "*)"}], "14.5", ",", " ", 
         "\[IndentingNewLine]", "0.971", ",", " ", "\[IndentingNewLine]", 
         RowBox[{"(*", "26.653", "*)"}], "16", ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "19.792", "*)"}], "8", ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "31.959", "*)"}], "29", ",", " ", 
         "\[IndentingNewLine]", "97.113", ",", " ", "\[IndentingNewLine]", 
         RowBox[{"(*", "0.087", "*)"}], "0.14"}], "\[IndentingNewLine]", 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"paramsFixed", ",", "paramsOpt"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eomsp", "=", 
     RowBox[{"eoms", "/.", "params"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"other", " ", "stuff"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"ic3", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Phi]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Psi]", "[", "0", "]"}], "\[Equal]", "0.01"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "'"}], "[", "0", "]"}], "\[Equal]", "0.01"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"c1", "=", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", "\[Rule]", 
        RowBox[{"0.08", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[Pi]", " ", "130", "t"}], "]"}]}]}], "}"}]}], ";"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "c2", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"c2", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"freq", "=", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"Ndt", "*", "dt"}], ")"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Tau]act", "\[Rule]", 
        RowBox[{"75", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", "\[Pi]", " ", "freq", " ", "t"}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Make", " ", "sure", " ", "reasonable"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eomsfinal", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{"eomsp", ",", "ic3"}], "]"}], "/.", 
       RowBox[{"c2", "[", "]"}]}], "/.", "params"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"eomsfinal", "/.", 
      RowBox[{"Thread", "[", 
       RowBox[{"q", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.3", ",", "0.2"}], "}"}]}], "]"}]}], "/.", 
     RowBox[{"Thread", "[", 
      RowBox[{"dq", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", "0.1"}], "}"}]}], "]"}]}], "*)"}], "\n", 
   RowBox[{"(*", "Sim", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tf", "=", "50"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"First", "@", 
      RowBox[{"NDSolve", "[", 
       RowBox[{"eomsfinal", ",", "q", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tf"}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"sol", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"dq", "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"q", "/.", "sol"}], ",", "t"}], "]"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"sol", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"ddq", "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"dq", "/.", "sol"}], ",", "t"}], "]"}]}], "]"}]}], "]"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sols", "=", 
     RowBox[{"{", "sol", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Nn", "=", 
     RowBox[{"Length", "@", "sols"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Period=\>\"", ",", 
      RowBox[{
       RowBox[{"Ndt", "*", "dt"}], "/.", "params"}], ",", "\"\<, freq=\>\"", 
      ",", 
      RowBox[{"1000", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Ndt", "*", "dt"}], "/.", "params"}], ")"}]}]}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t2", "=", 
     RowBox[{"tf", "-", "2.85"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t1", "=", 
     RowBox[{
      RowBox[{"t2", "-", 
       RowBox[{"Ndt", "*", "dt"}]}], "/.", "params"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"\[Tau]inv", "[", "\[Phi]o1", "]"}], ",", "\[Phi]o1"}], 
             "]"}]}], "/.", 
           RowBox[{"\[Phi]o1", "\[Rule]", "\[Phi]o"}]}], "//.", "wingsubs"}], 
         "/.", "params"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Phi]o", ",", 
          RowBox[{"-", "0.6"}], ",", "0.6"}], "}"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<T\>\""}]}], "]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"plotTrajs", "[", 
      RowBox[{"sol", ",", "t2"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"debugComponentsPlot", "[", 
      RowBox[{"sol", ",", "t2"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Legended", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Phi]", "[", "t", "]"}], ",", 
                 RowBox[{"\[Psi]", "[", "t", "]"}]}], "}"}], "/.", 
               RowBox[{"sols", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ",", 
              RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "Nn"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\[Phi]", ",", "\[Psi]"}], "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Legended", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], ",", 
                 RowBox[{"\[Psi]", "[", "t", "]"}]}], "}"}], "/.", 
               RowBox[{"sols", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ",", 
              RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "Nn"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Phi]", "'"}], ",", "\[Psi]"}], "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Show", "@", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{",", 
            RowBox[{"{", 
             RowBox[{"soli", ",", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"sols3", ",", "sols4", ",", "sols5"}], "}"}], "}"}]}],
              "}"}]}], "]"}]}], ","}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Animate", "[", 
        RowBox[{
         RowBox[{"drawWing", "[", 
          RowBox[{
           RowBox[{"sols", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "a"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "t1", ",", "t2"}], "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"AnimationRepetitions", "\[Rule]", "1"}], ","}], "*)"}], 
         RowBox[{"DefaultDuration", "\[Rule]", "4"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.785163733169914*^9, 3.785163768788862*^9}, {
   3.7851638219331465`*^9, 3.7851638221495667`*^9}, {3.7851638575914416`*^9, 
   3.7851638656639175`*^9}, {3.785163952461292*^9, 3.785163959194874*^9}, {
   3.785181113450061*^9, 3.7851811849114933`*^9}, {3.785181223420051*^9, 
   3.7851814480879383`*^9}, {3.7851815284493275`*^9, 3.785181574334261*^9}, {
   3.785181607927892*^9, 3.7851818562133703`*^9}, {3.785181897023181*^9, 
   3.785181973204109*^9}, {3.7851820183846817`*^9, 3.785182035584442*^9}, {
   3.785182130927059*^9, 3.7851822788151007`*^9}, {3.785182768706132*^9, 
   3.785182824611698*^9}, {3.7851835377984476`*^9, 3.7851835381465435`*^9}, {
   3.785183574632366*^9, 3.7851838963880434`*^9}, {3.785183935005065*^9, 
   3.78518393938645*^9}, {3.7852369154777946`*^9, 3.7852369276973515`*^9}, {
   3.785237068661893*^9, 3.785237159502931*^9}, {3.7852390830870667`*^9, 
   3.785239105554223*^9}, {3.785239223653453*^9, 3.785239230566188*^9}, {
   3.785239332872146*^9, 3.7852394831645365`*^9}, {3.785239522904046*^9, 
   3.785239527846*^9}, {3.785239574459278*^9, 3.785239590976102*^9}, {
   3.785239663394473*^9, 3.785239765859336*^9}, {3.785239822253582*^9, 
   3.785239852287075*^9}, {3.7852411853333817`*^9, 3.7852412095104837`*^9}, {
   3.7852412747392893`*^9, 3.785241284555241*^9}, {3.785242577855811*^9, 
   3.7852426072696886`*^9}, {3.785242760532243*^9, 3.785242764687683*^9}, {
   3.785243042341342*^9, 3.785243082387663*^9}, {3.78524369984238*^9, 
   3.7852437033492184`*^9}, {3.785243878758131*^9, 3.7852438818282394`*^9}, {
   3.785250588656488*^9, 3.785250591357007*^9}, {3.7852507564570065`*^9, 
   3.7852507638104935`*^9}, {3.785253091532304*^9, 3.785253138847148*^9}, {
   3.7852531795009995`*^9, 3.7852531822852845`*^9}, {3.78525322760236*^9, 
   3.7852532347079835`*^9}, {3.785253269736401*^9, 3.7852533186729493`*^9}, {
   3.7852533499356813`*^9, 3.7852533536194243`*^9}, {3.7852534684496627`*^9, 
   3.7852534710220785`*^9}, {3.7852535409719725`*^9, 3.785253541682535*^9}, {
   3.7852537363906927`*^9, 3.7852537365316057`*^9}, 3.785254209543125*^9, 
   3.785254249221677*^9, {3.7852618005450153`*^9, 3.7852618049458847`*^9}, {
   3.7852619352877183`*^9, 3.7852619378303013`*^9}, {3.785262049200818*^9, 
   3.7852620500145736`*^9}, {3.785262103253174*^9, 3.7852621096136494`*^9}, {
   3.785263447209785*^9, 3.7852634489854174`*^9}, 3.7852635401829467`*^9, {
   3.78526380795971*^9, 3.785263846861192*^9}, {3.7852639620550404`*^9, 
   3.78526398507434*^9}, {3.7852641063890386`*^9, 3.785264110993264*^9}, {
   3.7852641564011707`*^9, 3.7852641571082044`*^9}, {3.7852641960012693`*^9, 
   3.785264216721649*^9}, {3.7852643149914474`*^9, 3.7852643475935354`*^9}, {
   3.7852644069901733`*^9, 3.7852644070928326`*^9}, {3.7852645182904143`*^9, 
   3.7852645377768126`*^9}, {3.7852681182959647`*^9, 3.785268128246215*^9}, 
   3.785269285445484*^9, {3.7852697491566772`*^9, 3.7852697592097054`*^9}, {
   3.785538474804677*^9, 3.7855384812477183`*^9}, 3.7855385189985633`*^9, {
   3.7855385626121855`*^9, 3.7855385662395616`*^9}, {3.785538601860875*^9, 
   3.785538671427971*^9}, {3.785538871632335*^9, 3.785538909036092*^9}, {
   3.7855389463657703`*^9, 3.785538946443622*^9}, {3.785538996298153*^9, 
   3.785539013899557*^9}, {3.7855391273264093`*^9, 3.785539209008417*^9}, {
   3.7855393350449324`*^9, 3.7855393651778836`*^9}, {3.785539442555038*^9, 
   3.7855394441299467`*^9}, 3.785539483284238*^9, {3.785539521251288*^9, 
   3.7855395227811527`*^9}, {3.7855395551847734`*^9, 3.785539555422123*^9}, {
   3.7855395893291893`*^9, 3.785539589949419*^9}, {3.785539636192365*^9, 
   3.7855396769178057`*^9}, {3.78553972259588*^9, 3.7855398435198965`*^9}, {
   3.7855398777105055`*^9, 3.785539954121219*^9}, {3.78561033198108*^9, 
   3.7856104315554953`*^9}, {3.7856105924933624`*^9, 3.785610618959749*^9}, {
   3.7856110746210976`*^9, 3.78561108814141*^9}, {3.7856111337757998`*^9, 
   3.785611138201707*^9}, {3.7856111763604455`*^9, 3.7856112032749205`*^9}, {
   3.7856112397351365`*^9, 3.7856112637734766`*^9}, {3.7856115446899896`*^9, 
   3.7856115449683943`*^9}, {3.785611584275441*^9, 3.785611584356102*^9}, {
   3.7856116328821845`*^9, 3.7856118315286884`*^9}, {3.7856196069008217`*^9, 
   3.785619647460866*^9}, {3.7856197076804085`*^9, 3.785619740585253*^9}, {
   3.785620220584257*^9, 3.785620286772295*^9}, 3.7856203291213646`*^9, {
   3.7856204645278873`*^9, 3.785620503571483*^9}, {3.785620595294875*^9, 
   3.7856206516223783`*^9}, {3.78562070093008*^9, 3.785620703179044*^9}, {
   3.78562108390994*^9, 3.7856211103944044`*^9}, {3.785621343166565*^9, 
   3.7856213761699677`*^9}, {3.7856214080899544`*^9, 3.7856214104346447`*^9}, 
   3.7856215894350953`*^9, 3.785621667110781*^9, {3.7856222098792725`*^9, 
   3.7856222197106028`*^9}, {3.7856225296821537`*^9, 3.7856225297917056`*^9}, 
   3.7858333152064767`*^9, {3.785833834000317*^9, 3.7858338359457874`*^9}, {
   3.785833878396678*^9, 3.785833925023576*^9}, {3.785833960324053*^9, 
   3.785833991089741*^9}, {3.78583525264093*^9, 3.7858353505219145`*^9}, {
   3.7858353845036736`*^9, 3.785835399633337*^9}, {3.7858354498533483`*^9, 
   3.7858354994134316`*^9}, {3.785835550896733*^9, 3.7858355797900333`*^9}, {
   3.7858359237897863`*^9, 3.785835943243043*^9}, {3.7858359959208937`*^9, 
   3.7858360237849255`*^9}, {3.7858360655689564`*^9, 
   3.7858363164565797`*^9}, {3.7858363712222834`*^9, 
   3.7858363972293186`*^9}, {3.7858364680972967`*^9, 3.785836613740854*^9}, {
   3.7858367010687027`*^9, 3.7858367291513357`*^9}},
 CellLabel->
  "In[1114]:=",ExpressionUUID->"51dba8ce-d54e-473b-8306-f61498bec997"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Period=\"\>", "\[InvisibleSpace]", "6.300000000000001`", 
   "\[InvisibleSpace]", "\<\", freq=\"\>", "\[InvisibleSpace]", 
   "158.73015873015873`"}],
  SequenceForm["Period=", 6.300000000000001, ", freq=", 158.73015873015873`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.7856117181236324`*^9, 3.7856117472842274`*^9}, {
   3.785611822556508*^9, 3.785611832420286*^9}, 3.7856182917107253`*^9, 
   3.7856195327693353`*^9, {3.7856196079095793`*^9, 3.785619648254488*^9}, 
   3.785619708792785*^9, 3.7856197412604027`*^9, 3.7856203389831967`*^9, 
   3.7856204236524086`*^9, {3.7856204658232155`*^9, 3.785620504456672*^9}, {
   3.7856206300565457`*^9, 3.7856206524465322`*^9}, 3.7856207042580476`*^9, {
   3.785621055133337*^9, 3.78562111132628*^9}, 3.785621208968561*^9, 
   3.7856212459582443`*^9, 3.7856213799968123`*^9, 3.7856214117513294`*^9, 
   3.785621590169964*^9, 3.7856219801292534`*^9, {3.7856222107186995`*^9, 
   3.7856222205164337`*^9}, 3.7856225305327187`*^9, 3.78583067394069*^9, {
   3.785833315873413*^9, 3.7858333356725883`*^9}, 3.7858334021011252`*^9, 
   3.7858334420789747`*^9, 3.785833512397271*^9, 3.7858335734542665`*^9, 
   3.785833607230345*^9, 3.785833698609768*^9, 3.785833836742333*^9, {
   3.7858338882462716`*^9, 3.7858339258768277`*^9}, {3.7858339759716606`*^9, 
   3.7858339939847393`*^9}, {3.785835253678414*^9, 3.7858353513484545`*^9}, {
   3.7858353863596373`*^9, 3.7858354004402275`*^9}, {3.785835450593163*^9, 
   3.785835501284029*^9}, {3.7858355518192444`*^9, 3.785835580440194*^9}, 
   3.78583576868977*^9, 3.78583580327425*^9, 3.7858358663136873`*^9, {
   3.7858359249027925`*^9, 3.785835944085446*^9}, {3.7858359991182756`*^9, 
   3.7858360244895754`*^9}, {3.785836066640252*^9, 3.7858362010708904`*^9}, {
   3.7858362362322903`*^9, 3.785836323514908*^9}, {3.78583637307673*^9, 
   3.785836397995373*^9}, {3.785836469156339*^9, 3.7858366146745043`*^9}, {
   3.7858367051595297`*^9, 3.7858367301078415`*^9}},
 CellLabel->
  "During evaluation of \
In[1114]:=",ExpressionUUID->"7300b89b-4c76-478a-8fe3-874941c4954b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Phi]mag=\"\>", "\[InvisibleSpace]", "0.5848464935576526`", 
   "\[InvisibleSpace]", "\<\", \[Psi]mag=\"\>", "\[InvisibleSpace]", 
   "1.164676145552023`", "\[InvisibleSpace]", "\<\", avglift=\"\>", 
   "\[InvisibleSpace]", "184.92181884196165`"}],
  SequenceForm[
  "\[Phi]mag=", 0.5848464935576526, ", \[Psi]mag=", 1.164676145552023, 
   ", avglift=", 184.92181884196165`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.7856117181236324`*^9, 3.7856117472842274`*^9}, {
   3.785611822556508*^9, 3.785611832420286*^9}, 3.7856182917107253`*^9, 
   3.7856195327693353`*^9, {3.7856196079095793`*^9, 3.785619648254488*^9}, 
   3.785619708792785*^9, 3.7856197412604027`*^9, 3.7856203389831967`*^9, 
   3.7856204236524086`*^9, {3.7856204658232155`*^9, 3.785620504456672*^9}, {
   3.7856206300565457`*^9, 3.7856206524465322`*^9}, 3.7856207042580476`*^9, {
   3.785621055133337*^9, 3.78562111132628*^9}, 3.785621208968561*^9, 
   3.7856212459582443`*^9, 3.7856213799968123`*^9, 3.7856214117513294`*^9, 
   3.785621590169964*^9, 3.7856219801292534`*^9, {3.7856222107186995`*^9, 
   3.7856222205164337`*^9}, 3.7856225305327187`*^9, 3.78583067394069*^9, {
   3.785833315873413*^9, 3.7858333356725883`*^9}, 3.7858334021011252`*^9, 
   3.7858334420789747`*^9, 3.785833512397271*^9, 3.7858335734542665`*^9, 
   3.785833607230345*^9, 3.785833698609768*^9, 3.785833836742333*^9, {
   3.7858338882462716`*^9, 3.7858339258768277`*^9}, {3.7858339759716606`*^9, 
   3.7858339939847393`*^9}, {3.785835253678414*^9, 3.7858353513484545`*^9}, {
   3.7858353863596373`*^9, 3.7858354004402275`*^9}, {3.785835450593163*^9, 
   3.785835501284029*^9}, {3.7858355518192444`*^9, 3.785835580440194*^9}, 
   3.78583576868977*^9, 3.78583580327425*^9, 3.7858358663136873`*^9, {
   3.7858359249027925`*^9, 3.785835944085446*^9}, {3.7858359991182756`*^9, 
   3.7858360244895754`*^9}, {3.785836066640252*^9, 3.7858362010708904`*^9}, {
   3.7858362362322903`*^9, 3.785836323514908*^9}, {3.78583637307673*^9, 
   3.785836397995373*^9}, {3.785836469156339*^9, 3.7858366146745043`*^9}, {
   3.7858367051595297`*^9, 3.7858367319460955`*^9}},
 CellLabel->
  "During evaluation of \
In[1114]:=",ExpressionUUID->"20f52937-a184-4adf-8b9b-d134fc0f2980"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
bh9Em4dxH9u0DPWtnkcvyA6AqX1yDbvvMnzIHNjd3DUIc0azl825VqBSOV/r
sd0QLD4gxraWrcD505xdST+GAaUImg9e+Qvr7OrMxCJHAYo4vJuEVkEpxHuv
K+sYwAR/QMv3VehQHdIKejsGd469ceJ7uwaEreGt3mefAbxORe6zIVGWGKJV
moZ0kJzvTqcvkCgdQd33MozpYD5WQHFaJFHS5f1k15vRQSMlQ4hlhUQ540FP
eX2LDsX5G1P3k8mUJM7URxrOdBg98KU3nhXP++pC+pRIOvy6w1yWsZtMCU7i
mT3cQgf+EY1NZafJFGPN1tznb+mwe7HPyP4cmbJvyuXGcjsdzv0WZJfTJVOG
lfv7qnrooMqh7Z9/iUyRa4+pOUing/Gv/77SrpMpH5Y5Q1T+0sF+QxoIuZIp
WakNmrEkBmyQLa2adSdTPLTuri4wMSCFmEpu9CJTxJ50OVA3M8DGMPClvR+Z
4iwdcUWZhwEyAmhyMJxM0X4PnDH8DFg+p9lZEUmm7HL+0fZbiAEz4u6SsdFk
Smv9OSgTZ4CKcrvC1XgyJdFyldi+hwEShv2MI4lkyl32gpJ7MgywXGfLJppC
ppwovWbbLc8A40G/FyzpZMr//Q+B//8f8j8VWJar
         "]]},
       Annotation[#, "Charting`Private`Tag$188314#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 1.5016380148060489`},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"T\"", TraditionalForm],
    PlotRange->{{-0.6, 0.6}, {1.5016380148060489`, 2.206027523394745}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
oLUy7N99soLfx6B/5bZfrzDlIE1ZkdHXf8HtyduN/LvRs/f7bkoKs3G/QKqT
lmsXyrt2dGCRHBsv+OXtZ67ViQRwEj9Hk415M4OLv9S0o8AhodkfmI3rLeNX
V8F982BQ4uuve9n4k/iiowWXG9G1mSH9dAc2jj4kyTqyow69i7gQleHLxini
ll3RRU9R9jfWrdAoNlYMDNkqbFyKkE1kWC249nma5GOxUvSqptJ68Uk2NsjQ
OGnyrgQJJ2sJpYLPCi832h5Ugk5oywXej2Zj7cULPNfeuIf2hMzQo7FsbDjj
dCPlVRGanlc6an2WjU1+aLUqT+ai5CNjdRlguzZVvbrTuUiTUb4xDB6MXZGs
K5GLXPJumPufY+Ony4QGm3VyULvR+ScJ8WxsGx7dYXX8FspO8Eh4nsDGK2Qf
uzDvbyA0ectD6AIbN11fVTCP5wZ6Zd+vbw6eCl9f+ks6AwlvsJocAGsWciSU
rdLQiW4Dhz8X2ThdTEOo/XkqEt0esdUgkY3NdgiLq767goqzK0TPgvNuOcjv
/pOChgI3NIlfYuOCbycdxjZcRhF9XrfswBc8lxd5GicjSfbtsBzwJ5/zyg/c
ktCD4kHrz2BNsyCHhshLaI/EKq2NSWzsYDzxPudaIvofGRQ3Hw==
         "]]},
       Annotation[#, "Charting`Private`Tag$190977#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{40.849999999999994`, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, {-0.35, 0.35}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\[Sigma]act", TraditionalForm],
    PlotRange->{{40.849999999999994`, 47.15}, {-0.35008653252339406`, 
     0.3500913033699655}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$191024#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{40.849999999999994`, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, {-0.5848464935576526, 0.5848464935576526}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\[Phi]", TraditionalForm],
    PlotRange->{{40.849999999999994`, 47.15}, {-0.5848462416131602, 
     0.584856525713981}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
Vdy/9Q==
         "]]},
       Annotation[#, "Charting`Private`Tag$191071#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{40.849999999999994`, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, {-1.164676145552023, 1.164676145552023}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\[Psi]", TraditionalForm],
    PlotRange->{{40.849999999999994`, 47.15}, {-1.1646759419260504`, 
     1.1647010633523776`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJw9mnc8Vv///6XIyAzJSsiupLIq1zPOdSiySSqrjFLe1oXrsmWUioyQKCsr
IxnJOpGdlTJLpELKCCHz9/r88f39U7dzu44O5/V8Pu73xy37bf8zsqOno6P7
hP74398vJkY72m9gsPLfN7Wz8xSw1eyaTPXF4FzHTEm7jjeIPOH51HofA7VA
N9FCfhqYjV990ZWCwVvhmQGIpcH3/SEcoQUYiBQOpAuHUsHn0io5qhYDsdwr
aUd8PSEyxMfKsxODbMVrR+N3u8Hz58YGL0cw6LowzMJyzxGEm1bbUuYwGIst
YH0cZgGsnfnS9nRkeNdd50XoY7C9t+zyLS4yOKrt8xGt4Qav1laK334yfK75
+2hq3xgBxfl7pI6QoaLqwIVwpzlid+L4gwMa6HO9RY5IFxmwvSE3TWdEhkSd
Z+VaFBJUkppFj1whg+LyphwLoQ2OjIpfOD3I0JXh6DQSbwAxldn+HbfIsBlf
umbCbwpNNz2WvsSRoVGoLX3/7otAYdc17Mgkg3EP/zH1H9ZwqJB2i7OcDE7j
7HMcgnZw6rQ3aXszGQYspyce11yD5rrALz19ZNA6bHIz1tMZLp4eNVmeIAN+
+Hnu3VVXcCo8W7iyTIa6wqSIsnQPeM8eEp27E4ddn9LezYl5ATjz6Bbx41Ar
ktpy6SIV5KqKfkZL43B3h3hZcAANRHemW7aq4hB/c9fB3wo0uI5fufziLA5J
60TF/TUvUHA/TPKwwGH18WBM80kPoHtqtHLPCYeRymUlSvpN0K0IjAv2waHl
lZSJfbotTDf4VUrdxUGy6NmPWUEjSOx+/2p/Mg4aAvtzw1qOANGqkLjyHAfx
XyXff9kNkWbrxvUlanBwwfn+zSlsEY+zs6fkO3D4bLHaseLGBSmByhw/PuPA
9eTx6cHnxyHHXIR1fhqHcH0nGyE0Z4dFOKc+beBQlUFhq76mC2/GzFMFOLRg
rZfNKrXSCLKTXEaZRLWg5wz7b3YBc2CG2O0fD2vB0ovFxMvHLYHyfdfmAmiB
7vwtxv30V+CyZ/SnOQMt+K+b473DAQdIWvuukWKtBa/zjzlYPXaCrwFRQU9c
tYA+8POnCzddIPMPluEbpAUfWGofnGV0B33+fYpHY7VANJlts+cPBe7wmn8q
98AgM3S1qFfeC97M/bE5HooB/VKP+w9jKqjVVze2P8TAxJVMdAbTQDhk0Srv
GQb1gkxP+oEGCiRClqUcgz2kiG9D6t4QMlfZE9yEQfq+UhdNVw8QSpw4z9OP
wQGrTREXf2f4rpLNJj2JAZWefPtClS3wtH34F7SCgRf5hVtPiCGEGx55u8hE
hssj6X0/Xh2BU13EtcC9ZIiW5IixUu4mXTpVhRvJkCHmttSPAp9NIi/zjEmW
KhnUHnzq97TgBDV6ZtLus2RouZgXxSCmBH6jNw7N+pBhx2XXe0I1RiDPE6lm
do8MyV/evSyePg8i6qPifclkYHw/89BU1xKeWE7se79FBtH4mHnvKQrcVm93
lufEoVvEiMPsvDeU84wlpYriMD71/qsQNw0kv0pnHjyCw+7eXaZ/YmjQmEX/
5aQGDiJBnpnbTKnQcemMXowRDjynyySXdDyBn7nuMd0VHCZ0HH7WZ7tCsnqA
lOktHBrx7K9J+y9CfZvU68xYHJS7D6hqAAby57ZJs2Xi0Bt74N0mhRf6G1k9
IktxsLOYrBLW+0o0HtNKkW7Egc792eM16gQhFDe7ztSLg7zZf6b2FdLgHXiM
7MOoBTwfd3rJ2xpAae3VN9F7tEDu5DH+ZrIpmE9vc5uR0gI+lbaDwzsuwuqO
l1PnI7SgbYdLhUuAByT7J3+sc0H5NkxHqMZ4AleS9YFfgRgkx2qe4Oj3BvkX
jgbvojFomnKx2WtOA7UyeaaaNAxCa+3iP3jSIOLF/pTmYgzs+m+tT/3xhsAs
i1136jHQF4iVOx5MAdPI4ouNPRhw8PI/MXrhAtpuG4emv2FQI2y6bzDFDvi1
HcaiFjHYMh8iYMAUWjlmKQU7yKDTRJiRZ06AaE/ltyBeMlB3n2zPb18lXb+l
8cXhALq2yHq55PSX+Cu7VmZ/nAz0AnR7TjybJUl2LDsI4WSQ10yXybY8Am7u
+ox03mTgVktWOJRpCFYTSZ+5bpPhz4O5u5pUM5g3lb0/lEgGAyk53rmsSxDC
uHfi+xoZbp/THRzRokC+pDTdL1Yc/om6+uyu9wKf0z4L2UIoX7rtLq/UUkFa
73fTiDwOL8Lzl3gSaDBvZiSyXR2HI9YJquk9VEg27DNN08PBSbTutZeCF0io
e9+stMSBEhIQZ7vuBh5rW8NOAThI8x9LfM9qDQPNPar2UTic4y+XGynRgbHI
n//tScWBevftkA/vAXinJRKm+QKH1IML0xLc9wiLtXhPyTockiXo+063rhOf
U94tCLzHQf+UVPHqQVEw0U9PkKPXgp23/hq6RulBZbelgtluLbjIfro7a9kY
6DDV3DVxlBc488/KsAug77OGT4Wi+8++X2Z+6w6e+bvHnntj8Kb86ba4N17w
n9atJwF30L4b6MZNElTQ/sh5ovMRBtv8o++wo5+fzrj6VUIuBsU9mSTKHBX6
Oi5V6FZi8MDsN+nBDS8I3DL4bfsbg8tv94pvDlsBpy5weayjeetKSz6ipAPk
WHfOk2xk6PSqwRjoJcCivWHWX5gMfBerSr1+pxF6y0eLTh4kQ++bQp4ahU3C
UiRx/scpMthUzAX4yItCRXmZec12HLb7ZnJo3/GEq2Yuwzd5cFhyTj8UPuoN
cxPaGo8kcCi0XE0dN6KBuIddkM9xHALdOR0vudIgcelliieOw2D7Obqvr7xh
06Eav2WGQ5DuUVVPfQo0BG26qIej84mj7RB2N4OCDl+Vbwk4FEsWXhT+fQI8
WfeO0ufgwPeSi90xnQ6+af6zGazAwcBTb5er+BKh4Lz8VrYVB5mxvvFfTn9J
mZGOkY2RWqDWOOFyXI0CkiXqhs3OGMiNeEr2anhC5cyenU3+GNgaDD3kjfWG
A9m1D9uiMJgtKFEfVqNBS4f2paanKN+vPl6Uu00D5Z9GZllFGDAufxcIJVHB
P0hW5t4bDAZaU34p0HuC25344ZRuDCqa+0UWr7jCamQO0fUVg3GuEz6iPA4g
sLO4L34eg+f6BzJYD5jD1My5rjv0ZAh8c97HfR0gxrgiNXg32o/HPGUni3aC
iyRjnps4GbK+vU2XdpkhBGY+jONHyWDhR3d9d2wDkaz437ooRoaot+++fWU+
BNPV4MbkSYaiplJWRSFDWDFIK5gNRXkfO1Hr2GQKn2266j7Hk6F1N8/+nqGL
4D1U3DbzjwzbHz6tjvjrAbUCfdptzDiUvM61Snb3gi/9zU+fC+Cg/sXog0AU
FfJ26A1UyOJgdkptT2YkDZgP09THT+BwNSue/TkDDba3Jw/m6OJgbKMlrfnI
C/IGjM0SLuGQKK1BGD91h9ELoOrlh/ZJNaT9kIkN2OLSq/h9tN+3o1jLevWh
pmg4VugJDo/v/8yJeCcHjbelOEQKcYg5pFlSq1ZEyvyifuUAgYOCjLGOUeoW
UZ2uOiveheZtxWymJJYf6pUG32yn04Kvbrw3JHzOQc3gRUcVLi1Q+fLt2N7z
xmAy+xGjF9OCU4oNGcqd5kBTEqWU3NKCqfl/LBlX3YHua5llsScGT0eb7fK8
vIA/WS3QIhyDRympItL3qHD6nX1gRwIGUm7XfvRH0SDSaYA1LRuD60aOKxuC
NLjFGOkqV4EBr/utjPuDXqAotO5LnsKAx+XkYcLQBrhZIxh8VjFYt/VXatmu
D/ZuPdf4WVF+Nu/53iwgB+3n6vMDBJE/RgbL7NZ5SDJNWqZpyZHBaIts2da9
RYR8dRFvOkGGkxNZP4OX9sDzCL2TzdtwqJTlrnZW8wTPsyKS57hR/t0rWYxL
8QZj/4czyWI4vPqc0DZ1jAaZss0xJkfR/plU1k6H0qCwc6jmAoZDXfsOBysW
KtiPBbdFmODw85PupcfdFFAYVW8/E4rDorfQjmtvzEFFt2fl7UMc9rCXzDct
AhjKs+1gysLhS1pjpPm2XTAcQv+rpByHXzukj+JvZwia4dMXMs04LFP7O12f
N5G6ztyvjrynBTP39pBEhj3AkZyryXkLA1DP4nDeQ4Wjr7lZ22MxUE6+GS/l
QoP8ZM7SkgwMOtV9wvmsaDDsNfdtsgTtT1qI5/lkb8hReCD0npEMLBZXy+uD
laDQoEYyaA8ZJmui3WeP/yRdGfXnviyF9otJemijeZXodhALDVMmw9Wj7P8q
dLYD//NDWpkiOBS1BzFUTFEhOyGijPEwDh1tfMYJiTT47C+7uQ9w4Pwpx1Cf
QIVzZ/yoodE4vN3tN0/qQznu/FeHOx2HCJGRwcVuEXjPyLvh+BKHE0VnrO55
thKc/LN3pN6i99U9JxWjvkQ0zb+rzryLAaW402dwhgr6w5V/Ox9jUNu/l/E0
ep6bWuqVyOcYdNcl/jmI+CdRyvPKioMMJmfmKd2qQjB5tlnRfx8ZVI0sXHdf
6SS0TFy+HTlMhte8dlNZ0v+ISMP1hw8l0fc/0PK0z4kG6TXbXdKVcajxL6rn
NqVBkMhdv1htHFZyZTZjL3uDmL6UN30SDgeehO/B7ypB0pRE9UYuDrFlrBVl
jH9IP+nnBjYrcYjMFb6jW79GjEfo98u9w+Fvql9qzi8GoH3QtF5/oAXqm2Vv
b8VTwKkjiqPtJgabbW4vigU8gf3RgleJHwb3jOus+/7zhvT0ayptkRgcvLGg
by1LA44hM8Z3TzCoYuJ47IvyJDL018uHhRjEnhFqMrxChXXnmFf3CQxKzlGl
F0meQLfzjkhEF/Lf6FcW56pdwUh4c2fdKJoP5U37v10OkDzea5D0BwOf4ki5
i8YXgGa5sea1jQwlD1lnackacJZHeSuYmww/s16a9O5jh8XlCQ5vMTKQT/Wo
RUlNEgX6sKWkiPI1SchkRew7Yf4jDxfXJMN6YXGT+Gs5yLNRzdlFIUPY0nYd
5UEDaAyViP8SQob84fjbLc6m8H5i/+fhh2Sw61AcdPK8CG6Yf/XCChnO1KrQ
H2r3gBaeg9OvmVD+7aOw3dHxAg7xGUrBXhxO8gUzlFKoMDWyaf1MBodgHe3/
foTTgEcwsrNfDYe8CGNTTSEaKDEHPs7XwcFj8doDtXdeMP2sri30Ig5CISFd
b2fcge/O6LivLw4LwakLT1dtIIfB2EL5Hg45hlZzyA1A9k3/gX0pONjk/2Pj
u3cYNGTyjVkLcPi937bVf6yFdLY7ZlCiFocnC45q21q3CPlnczekO9G80Ptx
FvzmAe88j97ZTZT/xxoNxed1Qd3SIkSGUwsGg+PuXGYyhs2G9BiG/Vqwz2fD
O9HdHDjiFHclBmvBplbXhNtxd8DWGIVLKRg4qXiK0Yy84AbO90crDAPFx+7K
MS5UqG3iEu+Ix+BSifF1lgga9HmNlz3LQn2qQSKEdJgGQ+mSnQKvkB9PiwTL
s3nD3TzDRqWfGHznfSfXxGALsVOFAf7/MOifL16cCzCApa9B8YwsZDC1+XvU
VvgwhLCfZg0UIEOoytw6o04lacBpcFRXlgwvgk0MMd8tYo/m8IlyNTLoPRpa
DGfjgcxFgUPtdDggmBbHcXtCAEZpO8mFeKQ6dmuIhvpaa1XDk/04kBnDbwpI
0OAHg7fgaUUctBcirCzv06CycuacjiYOWg/2xuYrUCFpn/29SGMcJFh1Uxg4
PMGeY4SqH4Ly+4/kVubMBfBj3TAvjcPh+4qkzK5oDag9uTOe5RkOm59Dt3kH
coHFgfDDaWWoj4vqGW4fnSBENRckZZrQeQvur+rs/0BczX5q7H5XC6Zvfdc4
X+gB1bMhpRtBGJzUNm8oX/aGF6U1Be9iMBDyCepvvUqDhRwRy4p0tK/bQh+8
RXlxjOcODLzE4HfP9uh9Ld6gkko6QzAg/1u/jflJqIID18nQID4yrNR1F9Av
zJPGi629bSXJ8Kss/9ctjRXCtjUyxVMJ5RMD/uBqwSrp7JKJcJYwDg1d64RV
LxUm3U6oLxzEIe387/xXKO8mrqtHcpFwML/QW3ewnAoxTDmDlAdovlMubehV
nwEP/9lhnjQcqk0zpa1ExEAv+9Fps2IcLsjYxR1bKSXKmDXppOpxSM+4JxC5
9Y8QSMk+GBOBQZSldttWPxXaB+wSO5NQXjCnaTuh573GC9li81D+2jkoyA5Q
oVS84ds5djKIn3G3Lv8pCmmseLS/COIH55Liufc1RNsBozPKh8jwt8tH6Pq+
dYJIFruRcAAHuV+Psrdb02AssXQlUgn1x7I1tiPofd5jecoWqoV48TBOruSu
NziyGw3MJ+KgklAWti6lCkxrInp0/8tX9bZwResVkn2Gh/Dv12j/c/UefEb5
fdc345xcGw4u4jvCY3jpgOOI2fJoFPIZXpbtVEcK5DzfvdD2AOXd+VRH4bMo
z+vUXtalYtC+zmF9NpAGgzGqGsE8ZOBIkHe+vI8epk0ksJsSZLgy5j0nYTVP
3L7n0Gl2jAxj5lzBsacHSNdkUvTb5dD5MEhElcfSYFPDvnDxJA4jh8xqRaep
YPD02zaBpzh0Zi77TepJg/ZkeptCEQ4fD5blyus5k7Z+T/0+8AYHUeHm6SvP
NomGrqrhjkQM7rYLlyrE0UDLqs0mOQeDVvrdDzl3on2mFz8lu4sMFV6cGXoO
UrD7vqZegBAZfg/xaYrnYERPCy+vhjwZMNPEDk+HLULs6H/8j8VxMLmXlRKG
0eCqPh+L4zGUZ7Fj8Y98afBdcLcbQzYOJPbr1V++M4D1d7+splc40DOFZ7z/
OE/0WumoybYgXtNhLLXYBKm8xsGxPQ7xdqbojhwN/XsP6FmKMjFgeFCw1GJA
g6Uo9ZZAfjI0ZL8Njir+QhplT8k/L43yf4A083dsnbCvHpQXUMBBeeVkd348
DZIur73myMDBLd9IkOnHXjCxf1DhU4L2OeeBbExlH3Fd8vFu6QYcsn7eFlUK
+EP0fOUw7krGYFrAgjUCfX0cZhfhyon6mL3c1Ouje0AhQvujnygZ9m91rFT9
HSAagiP95BXIwLqHXZYZ+0tcYuwjYqVwaE+489DckwY2Y0YTZSo4PAjYIbah
SQP5IVnZtTwc9l2xo9zRHCfdsHWK46rGwZqhTGd71wbxnXKkdU+MFiR+je3Q
a6BApEWFsw7itUPEsnAYoyeoONsoyCJehycMkKeQH1iLEsxnEa9TGE84FOyn
geLo5YvnEK89BpzXOaLRPn1QtmFDvK7tlOr08qBCtV2TPzvi9U3uzZ2YpSc0
k+lJdIjXq94bvTyTruD/XTpfFfFaQzBMe/WgI1wym2QTQrxuXmyRsfl9ATT4
TLln6cgwLRmmV+muCVkenoe2I17ny+r5Z/RzQvnoQP3qfjLQxN+L/Nzzg/AM
9GQtOkIGgYKHz5Sbpojy2hanTA0yDFgrrVTEygJz6fG3kR5kOJ983W/5lQHI
i9qzmCFeF9C72F/TNIV2WZ1rlojXlb1WRzOwi+BMvXrcE/FaxiljzeOVB7RH
mxNHEK9DDGuYzyl7QY72NptDiNdlOpyrzxypEHHu/DNBxOsl03DOyVs0EOBK
jDdAvC4ccwnqlaRBd7ar76H/8XqgdiLxmxdE3lvZsWGBw9iF89sXeT2gOPVF
zZYPDkqK7jEWerZw1s4xouguDtGHXma8vWcINi0fnVOTcaDdTF3arFeAQOrM
36B8HO4zJJ99XdZDEmqtjsuswUHP2Ml5NHaLuCrZ/jyvA/HbIqtyQWY3mFyt
H7FDvD7AeNzlS4EuBKRe4E7n0ILTJvJhVl+NoKfojmq4qBZ4/RsUKcbNYai+
6jwL4nWJwvvgYWF3sL992Pc44nWYuv7OcpIXxAuG5NaGYkAne4fP0pYKvpjD
oi7i9dzi1T+Pwmiw6jfNIo14zTVBHw8qNGD44+YbU44Bk6UvvYakN1S4+l4r
msTgcTz9H2trWzCxqDtJh3idbMweGLHNEGofDeb7MZMhjwOszj5RgFHnQDU6
xOvK2tuRTumNpCSTttguGTKo/xP8rc25RYy679Y+hHgdkESnRXeQG9JktmXr
IV6HZpuVRG5SIKQuNbmUEwdVUf5/Cte8QXi2s2gf4vXMW65+QH0tzL3b6tUR
HHl+/KErD2jw5sUKb4MGDqdyo2T4NKlwrPb8TU7E6/BfZaEFBz1hm1SRQc8t
5L/O8OpeuAWIOnHfkUe8nrj2uficvSb8xXaM3M1Evp3VJkO+sRsSKa3v9yBe
U8eY19bCvxPzJ4THchqRT4e6iR9dHCUO90k//RGhBeLt9jET8R4w3jB/wwPx
Oppk6Bw44Q3OirsDdBCvvbo7Ax9b0oCv6ECJGuL1YOv8ir8rDaxse2f0Ea8f
fqKtY8PeQGeeYKWEeP35J92MbYgaNLj6lG5DvMbBculQ4RIpJ8lQ7scB5EOp
202qR5YI+dWG3JnjZLimEaDpKfyXNCboyCSFeK0qdcn7XBsVbo/GBl9DvOZU
p5FEED9/W2ubRajj8K675UNWAxWOO9Ywz0ThIGngMDRddhaeh/2WjE/FQSc9
42NJtDjcW/70rf0F6veLc0YxbM+I2/Q3q7LqcDjo9zCtMXiNwNx4x5kQr9/q
nsQF29E+mVVd00O8zqG2O00noP6lW2bLi3jN+57aEvodzdsnwdUGNjIwLy5H
mNwQg02n0DebwmTQ7X8pUU/3krjHrrn++iDiS6j2azFsgzCvP36eH/H6ik32
35QLNAhmZDvFgHjdLsPetQP5Tgxdbu8GjvxWtOQ6U7o3sDg7MDkhXp8JqRsT
C1UD0nahhKAcHKYHnuTVPV0nZS6UE7aI14yfNcXCi5cJS0oH0/NWHHKTHMEE
+c6Q1YiGMeJ1/NzxycuGFLCXudZwFvH6DlfalWcaqH83n96JIV5/XOKJvBmC
fH7B25Ue8booVEij690OKDzFuzwrTgaNXqcE/o45wrAmZajzKBnYjloY/3r+
msSS8DdWA/E6Uu6l+RWUvztUXTxvIl7/CJ/XzfxHhbDs0bOPnyAfnFHxb9oh
C2EqP25kF+KQT12w5JpLIPX84Ml5RuBACTTmElPfIoLPcRWdQ7yu91XRPhpD
g+t278tFEK/3hHP/qOaiwZNKmnEaKxnsy6SfHFOWAZfpYL8tQeQXT+x7GA7d
IMUVM7Y0yJEhKnFda6x0i6g0D94uhHgtwqpdOXISfX81znpfjiIeJvRQAoNQ
PkpwVoVl4cDd/0uU3M8ET4690T6FeM1mNaPpKvyHyDGn/M1txuHQB8ah4f8+
kzxO1KjqIl6LHPRRNaXQ4HY8s9URxOsj7UUMEuY0MJrzW6ZDvJ59VeskPPeN
lL5832oI9X2DiAUbo+9rBKOsousD1OdXboQ0fkLz1G23Qh+N+nru1AUmBR0h
iCnvsZhHfb0+lp/vrsd74tS+xs5s1Nc9OkXNd24tEA+s7CT0Ea+ZD7JSE9DX
X1qvTp1EffzsZe2S6My9cG8qfPsm6uPJz9xt+4Y+EGFOAQpFqI9npiddDjZZ
Jv7K/czjQbx+VbcmrYH2ld7guZw84rWimuW+Zl0a8jIpd1/E65mJ8EWs8xcp
72WB0u0q1P8Un3oofF4nijIreSKitcDZSeWFawEFfn/QL9Z+ikFERZpI2F0a
zJQsd9HvJkPQN+uMT20s8F2EZaEW9ddfRzLWFYcGibNuWUKHZVE/Wc5uoaL7
dwxeK45DfU9hQt7lmEgtyavfUeQZ6nu1769fmuzYIujOVBueS8BA8FSp2T7U
X6QLt33eQvlbbBv1gt7lOYnv1uTBNtSXIpmnpI7WbBFY4r7+NtR3orMvSozd
QedzjOXcHdRX5ESP2Cpd5YB5JcfPOrEYZET9Csi4TgOW4nXTbXvQ/FBP0cIV
ZkkSrf81jqD+wGx3Q3hb9D9Cm+HbP99DODClnTYdRXnDef780xHk+weDdt34
h9URY5x7ydnI9w980rCnqa8Q7Bc5m/UeI998dupqOLofe85ou4n8vQvWkzh4
mgimUzbxpcjfkxU4PXXqVglJL44gPkkcmE2ovXz2NNCQu1TKr4zDoARP1Ogl
Gryf388QgPz8MSPnYddbiyRpY0UfSiUOw+IScodCVwnLqqOXSWkYdES2favz
oYGv4io3PS96/6TawDOGW6SWKozVTB6HJJWQN8kP0c+baC1diXz5iGh5sc24
DiG/+OZIFvLlT1bKuXofNwhGI/tdeo8wuFH617oL3V8uv2PfFvJhieRaFQOv
cIJzVMKWQD58bCVXNGcc+fXXmsY/yH8961o8VLxosELiTtB9iAHfp++5uf7I
Rw9vJdLtRf3LW7Frq6ePJCKZ/+8j8lf1iw0R2+o2iCa9oMkM5K8e0XmPmdHz
Eg+6mucgP6Vszadq+U0TPFcrg/RTMGjp62PnR5/TJ6W05SL/PPbruvP9pXli
6f3Br9TnOAT4ex6Wc/hKOsQtM5+E/PK+oTBVMGGTENDK8XuG/HKb1d3jAp8o
sC9NV2QX8st/j/Llrq9ToMM88d4PXwyC4848+mriDaSRa/PMyC9f1tmDsjA6
vytfQ9mRX8rMvS0+hvKoc/WySmsBBm5RfrVDvlQQsrEe66zFYGHMWVbrpifI
/lDXr+rEwMZBz/HLhivwaKtv/h3BoImNXWTbZUc4Gen6+/McBl/T+MTMVS1A
cj4wJQ/5ZekZo3cSXzXhowQf/paLDBPqBcfTmriAz9RQqBr5ZdRptue0xG/E
p8RoLifklyb/9XyZHJ0mrj4/v3kV+aWy0y+5gW2yoDJc0q2P/LLC7HiMfbYB
WE2HNXAhvxTzs/7ce9AUzrSPFIkgv9wouB8+KHcRfsf2uyojvxzXPM3EV+AB
egbOOdM7cZhdX/gqdtALPD5F9M3w4+B+uLOcCfmVRcit5j5plBf/qgzrUX4K
70pZ3YX8cqnz9Ok5OXTtNXVj9iwOHfN7b6fOesHI1u70CuSXwwTufU3GA/zz
+WXqkF/S/c6INvO2BSFe93Qn5Jc1aSEiwh8NwVfXeLcN8sugod6dL7AjkJrG
oXUK+aXTlWEeA6s+UlijodtV5Jdx0oKWq6iP0U2ovnNCfhm5/xbTii43aJz+
+V0U+WWBOHGo9a4upJ6+cMES+WXb0ydiKx1GcPLAxi5t5Jc7zG/ZnVcwB5JF
oN/bIC1YO/q4ZDe3O6x0vpVb8kB5o6xjdkbJC+QYqxhoyC/fPWbUkL1IhYvb
uYd3Ib8s9ZdLJxAvd21zPf7zGQYvXveaPkJ8EeB/ZKyH/FJqicr+RNEb9Hqj
q5yQX15tet33/r4tHIs5K1i3gvpFlZ/APw1DSKcwqKgivxxUN7vRL3ME2PeJ
Gr1B+9Iy/Onh7+o20lqLxvQD5Jd+6tkaE22bBPneIb0pVTL4rxS8XDjNBaKY
xzcO5Jdqzn1vQhcpwBhYHuqC/HLbDDw5Y+0NU0HmB0ZFcZC5e3NvBR8NzPLW
g9yQX5I1vVheI17XP9+gBiK/5G+/8FxQlwqB97svvzdCffu9XfvwSU/oVNxT
HYv8Mgp2Bfz30QL+CAinTcaifM17oPiyRxM4W4Nv6SK/LLdtmbx0kwcqUqbE
PpSiPsIiVZg5PkZcUnlJOCK/7GExlrmm9Z2Iuznd8AT5pcbfQ1vydz3At0im
9TDyyxKyobD+iDec+1PjwIr8krqn5dPViyjvFXOH11C+PeGl7FXyoIHHnbVG
VuSXEsw+09nIR78ffTv1ZwcZ4p5/28WrcgLm9wu216H8S5lT1e97sUJi5mgL
yUJ++eDfvmNvpZaIB9yjRXnIL73v8n01+W+eVFj4x29CCIfXpTuUniN/NN/z
JlMC+WX71KvwbMTX2YvnKnHkl1JJwaql76jAyN+yPw/5pciVAf7Lx3SgicXp
nRnyS67iPI1wQwnI37dx7DbyyyF+vdxw7STiz+a2R/bILyfGnzqHH1wnhi7p
ajTcwUB3su4paxMVrvHaG7Ejv1xy9OeIQM+b6VK535eLgfZlJYa7U1SwfqUV
Goj8MvhvRm7zMXGQFzowUIv80mL89dMXp/KI6eAqUx/kl7FtK08vozyVMCXa
ByRQniYFuuqaIR85pWr15jji17MVPnCmwcO1AtVK5JfmFJr+jgJv+CzsJiqF
/JIjaE7AXvkEWIQnndBAfulNcW50/rFJahAc4BRBfjlw15bGPr1ENLvajl9H
frkgcKpuG8MKibSc4bgL+SXFoPfsOzIF8MndBSzIL8v6dPB36ogfZxuPMCC/
ZDlSangB9bGrGfx36pEfKNwIH45RYgSOl/cNipFf7r9i619FP0eU91aMRiC/
5N8UbjZJSSWGOvaXbyBfqBN8IMOF+hDjMcqQDPJLQz4GzVdbVEiXs5q9iPyS
Gq1+k2VcFrKsGWttkV9Gfiu5dPN6JunEWG6oHfLLC7f4CqcpW4TtruoENuSX
Y3/Zz3Ch+fedNPk6ko3BYX++nim0H8HxWV8uIb9sU5SsDZOUhScpYg8J5JcK
zWzdwqshpMUDAfvDkF/qHjXBJlq2iLBfrNTPYjjwnnT6O4P65ceFJJdHyC8D
b26cbkL9Wykn0koL+aVog6WIlh0L1F76+milHL1/Vee4d6Q5gsuU5cM15Jd/
ZEq8y+o/kExWHcR2Ib9MvmaPtbohfu69f2c+A4MfLCWGeWgfAlOFOeqQr8ht
hZq+9x0n0d9gfP0Y+eWHXwVehRfWiD5ry1gd5JexFo9/af2vH/30zDZEftkx
93WGP0IYXn5ZeF6A/DKy3oBdjKWTyBK0yHdAful62flsu+RfwkWEk40D+WUJ
nvpiBc0jDEzKZSK/HCi9ezx5SgAqk6QEa5FfPmKPxuc83xPjI8t3XJBfWvLp
DnLjK0R9rZtoL/KZm7VnV+PRvPWE9Z+bQD6jTDlZum5AA3/7rD2nkF9+O1ge
/KtvhtQ21BmuifzyT1aYzXfjdYLnZICaJvLLngdPGtfTKLBp9uETM/LLXa3e
rWzI/4SuJkzUcyNemlvsEHTeBdrKB/7RkF9e43rhfSlplBDI7VGfksGhe4at
oxr5n/i2u/QGyC+vGWR/ImW+JY1+2Fi7ivzy58mcw2nvt4iRnQ5qbMgvn+od
sUpFPmpmmbZAIL/UD0hxP+5dQvJatg6/i/wyEQo7NNK3CJ4unX+hyC8v8Pie
KEL3Z1Tc/nMG+aUFfXlUxkNOeP+Xu5EV+eX3ukb9OgcaqNgk36xDfTf6CkNh
g+ofUuipSZE05JcKGxzkgN8rBP9JDiEV5JdN5nLSQ+i8Dgd4zyUhv+T/s4Ng
tq0idNkKxRyQX65Wp2Pdkv+I6b1VRezIL7N7FJNC//f/cxezqLXIL2WfpKSM
n68nrhUPzlKQX2ZafaIkea0R88yPlvpQ38w9ypGy5woNuG1v931AfTOE0/a/
RGs0H56puSTkl5uKKkKZdkskLR/jdgXklzT/Ir/coX+Ei/qrcDqUv8aFqx+4
kc/ljT2SrUf9sCfYNt5ymA4S510OciG/9HWbO/8qjgYyb4KoFOSXTjLGoXsq
DpPi50w57JFf1l2o3buluUn84OT6y4b88rNp9wwr8rnvnzOUCOSXkvxBc0fp
3QhXk5SqQOSXn5Z/mSce3CLi+Kcm8pFf+kd/NF+h0qB/szpgF/JLt77QAoov
DVpGnrx4g/rWM7Z5Ad5HQ6SAJAnjeOSXVfH2nSfMNoj40AIWK+SXR29JvvuJ
nrdNllHJEfnlxRhlZVapOWJBzO46B/LL0s/FucPo8yvsfBJOyC+VXl5cX5RY
JLjM8kPVkF9KPXi9Okd8I51TO6tphvwygO0rNVVlkwj4ciPDEvnlzxNNTeVd
FBC9PKRwD/miu+2HZz1RNLAx7MhsQv7yrVbQSKKzk1TSLvXqO/KX/lUrdSPU
T1/WjooBmreoA6d9mwXrSKqjhmrsaN5UkwdlgnW2iPKTmafWEa+bSn1yZiNp
UJHrYF2I+NSfZ0JHRed/s6syhgvNS5qVeCgUFBIijAPD44g3r9+aG35sWSWe
J3AGRSK+sO4rDVNB93dX/chRR/OSkxvEIh73ipBLaktfQfxQOFOfOlKxTqhZ
t7qGoz7f82h7aBLyXQfOBsHfKE/3jX8UxvBwkuPPgLYfKE+f5n7Sf7mySWRE
2jfdR3lqx5vceioW9ZdT3+xI6DyPHr8oHDZzhHT0VKTzdnSeSoo/h3zitggJ
+DIC6Lz0fZzYmKO+kk7f4mXci85Li+VT6B2HdUJpgUG/F+VXm8XNRiOUP8Wp
lSeiUB75W5DOCKNrbcvcziqUH/7B5i2v5ydJdyPu/WhH+WGsIOr9ymKD+P5C
23oQ7bvznZbrTqfKSeyfPsAPtO+Fo0ZlUagfrm7YNJBQnn/5Z7Y9jDGdVM7u
8pEJ5bnwZDN7R/sW4d1Z3l+H9rH6z7M9beh9zR1S0pNAeen7NqSe5WgjcSjZ
7ksk2r+xH21RLujzlRD+n0lo/tOXVfPs42kw9R+pfxPNP035jGENpyfxdlnO
ZBzNv+frC6X70DxKxVaJR6L51/m29YeG7r/te3UnCfFcorqxjl01nihyymfa
RO8rkkn5uEvMJnEjwCoIkA8GHKbGZV/+QKopPpq6G/lgi2Jo1KzYJrG0x7Rp
Es131UaC1C60f8efcTyKQvOcXRh7QBVds0/tTBtB89qr17G+Y2qTKC36dv43
mlfxwOB173EK2GYsnKr/isGajVpEgLADzHK6J12rIf//a/LlHefpKfj/v1bb
LqjXY6D1/6//7/ex/+/6/34f9f+u/x9F+tM3
      "], {{
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwt0stTzXEcxvFzTv0PxITThTqxRMUmVhTRyW2GTVpSUVQoG2bcZhiSBTu6
uQ21YQYzFJphYlwGG2FsWLFgRfX6DIv3vJ/n+Z45Z87v9003NNc1pRKJRBKP
8UF5j7Scz+0O/sj92I1qlNvP2mfhoX4MBZhn77D9lQfQhDW2y7YSvNJrUGE7
p8/GI/04Nttu6UsxqRdivq1Tn5IH0aDf06vQrK/Vr8ileK236RNyFuv0Sr1H
zsMJ+SuP2nfJT+Tq2PUt+m15GXrlH/zJ3iW/i//I23mQUyhytoAP2K7ztH6E
P8b385C+k+/rd3gVX+Rf/Ixb4jlynz7MGT7N33ic3zjfxy/0eqzXV+jn5TkY
i3ehP5VrcFLfqg/Ly3FB/smf7d3xPuM58w4e4pz4DRQ7T/NB+43/l+AoT8Zv
8FVTIz/Q7/JqvsS/+TnviffJ/foIl/EZ/s5vne2XX8qb0BfPiWvtK+VeeW7y
352LCzge7wyn9G36iFyOL/rCuF+2Q3oS1/S92IBFKEFp3Bmf6XKeiveit2Ij
Mihy1m3Pif8adwV1KEOxs8P2XNyMZ48sFmMJZgBA72Pk
            "]], PolygonBox[CompressedData["
1:eJwl0slvTXEYxvF7u0NvB8MfcLFUbbe0NQ/LtpuSoJSmA9qwUjEvtKYNMZT2
NtGFpBVWXFMlCJsWRUOoDQvdtFVqQVKJzxuLb77P877n5Jz8zknXtVa35CQS
iSRe4oPyHhflLViGJfpJF8zBHf0QZiFl3mA2Ll/CVixHkXm7eS7u6ocxG3nm
jWYT8mVsw2qzLrM0BvUyLDXr0FPI6g36E3k9juiVep9cjI/6Af2tXBPvqOfr
TfKkfFwela/E+8lZuQyd8jTXmq+Ru+WFOCt/4yHzffKgPMCVfJ1neJjL7Yv5
lH6L87idv/BzvmffyE/1h7yBM/ybX/FR+yrujzPlEj7P4/zJrk1+J2+Kc9QL
9Gb5u9wZZxfP0MuxXV+rZ+RFOCePJf9/z/3ykPyYq7iX//IbrrAv4dP6bc7n
Dv7KL/i+fRM/0x/xRu7hP/yaj9lX8834zlzKF3iCR+0OyiPyZtyQk0iZF/Ju
syn5hPxZvirXxjPlCuzQ1+k98uI4M30FSs3O6AV4EN83/ivMNd9j9kO+hjqs
jH8hzi6eiXmu2euan3IXdmJV3Iv5di1203I3dsW/GfdggV2r3S85g/r4Z+Ke
2OEfbNNm0Q==
            "]]}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[{
           PolygonBox[{{729, 731, 50, 725, 516, 682, 350, 473, 639, 227, 313, 
            436, 602, 141, 198, 284, 407, 573, 84, 118, 175, 261, 384, 550, 
            49, 48, 47, 46}}], PolygonBox[CompressedData["
1:eJwt0L1Pk2EYhfEC0tLKvyDIJCi4+AFqgprgSJuYKB81USrtSNmKuIAii4kC
MhSMAwtgXEALA4tu2iYOhgSMk4OAwubi4MLvIQxXzrnOPbx5n6ZM/vZQdSQS
qULxOH8YtnCg5wz1ep1+BWnMYh9Zt5NuMb0D/XiFPxh0S7hF9ccoIWF7hnP2
dl7Baf4aN219fAa/8dAWt9Xq33Gev0XKNspv6Z+Q4x94XJ/AWX6Zp/QKhnmZ
N+rzuMF7+V+9qF+T67inT4d/18f0Pf2dzPA6eYJvhofCIu6G78tvsiC3ncrh
zfi0bJMluSyT8pH7V/mPv5FdckN+lFn53v2nPhneWj5Fi37J/l9f0JOyjLz+
xb6jP9cb5Byu6z32q/oa0nyK72KAx3iNvoVWvoRu2whfRYw/QbPtIv+MU+Gd
0Bn+mb8M38UDW7T66DkiBawgahvHGeMFfgcv8Av37bX2Q08SR8w=
            "]], PolygonBox[CompressedData["
1:eJwV0rtPUwEYhvHKf4BCWy6iDuIORUYZsLexyKILOAAWggLKAhP1EhK8JTLg
YoE6KjCZWC4OGhISwiVRGICFhQkXEdCE8DvDk/d53+8M5yTn2v2Hmd6SUCh0
ARPYUrZxlafRg4/4j0EPVbtd4S/wDWHbWzTaU3o3CviHJ/Yqew3fQ0yfQavt
ub6Ecv0NbtqS+gZu6FNI2rJ6Ey+iXZ/WT/FYr9Qv83v8F4b1Xf03H+f18jPu
8GfBO/E8T8sf6OaL9n0+ysvkrHwtG2TCbVOe6QWZkUtyVQ7IdfdleaC/krVy
Tk7KhHzgviL/6O/lLflFfpVtcsp9l+f4CR/gFbya3+U/MaTv6If8Ha+Tn9DC
n9pT/Duy+oJ+KXgXxPS4vobrwXcjbuvSJ3GMflvUVsVzmMdF20vU22/rncjj
L/rsEXslH0ERpbYx1Nmb9Q58wBEe2cP2Ch5FJPhfcA6ft03K
            "]]}]}, {}, {}}, {{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1:eJwl1nfYjmUYx/E3I2WVyFa9RfbeM0JFtgjJiggRGsgqe8uWnU32KFQoK6Oi
bClCpCIUaX7Owx9fv3E+j+e+7+u6r+NNbNO1QZc7EhISjiVJSAhNTlsyZ/kx
aITiyK1/S38nVslvQJVwp39a6c7xY9EYlXRTdTmwSy6BPLq35RRYLfdEbd0i
uQAOy0mRQtdaPs+Pw3PyerkcnpUfk6fxD2Akf47u1nflP+frYC7/Fy2pz8sP
5O/CEP57ukbfjt/Cb6LV6Ex6g+6nvczr0MXyOlqQvkMv0c/pkbh/ekDeShvT
hUluP5CvkYy9i7bRL6M/ygPo8fh/+Ob8Br48pvJXaRN9Zf5d/sH4HfkVeQ9f
F6XkfPIg/m6slV+Ut/LV0VuuKy/hC+ForCXu1r0gX+DHoymq6KbrHsIeuTTy
6wbLKeOe5TdjbZFS31Z3kZ+AZigT64RUZu3MfuInxlqhbNw7Upu9aHaJP8xP
ivtGORSQh5ilwnq5T1wn0ujb637mJ+N5lEdB/VB9amyQ+8Z1Ia2+g+4Xfgpa
4HHdDF0i9soVUEg3TE6DD+T28jb+CfST68lL+cI4FntTPhj7La5Rvkd+if+V
f4s/EesW18d/wFfANP4abamvys/kH8Yo/jzdp+/G7+U/pvXoe/Rv+hWtaF6Y
DpdX0LR0KD1Nd9APzTvQT+XN9Ek6i96kX9D+5vXpsnimtAgdT3+mx816xd6M
fRbPUb5X7shf5qfFs4vfkCuilVxNnsU/gtGxh+Pd0Hfn9/Gf0Pp0Hv2HHqCV
zIvQEfJKeg8dRs/QnXSj+Uv0M/kj+hSdTf+kX9IB5g3o+7HOtCidQH+hJ8x6
89/wTbEoziuk0aejnXRX+Lf5k/y7fMv4Tb4SWsvV5dl8znhmcZagqG6kfG+c
BbG+sa9wn76z7jd+OtrE+xl7IZ5d/CbS+8zLPnOVn4EX4t2K7yKDWRys1/iZ
aBt7M76D+826ml3nZ8VZFHsmvhMzHDHPSDMhM7Igo+4V3/mdnx3vfqwRiulH
6dPFvoj7R9b4rr6b7g9+Tuz5uH8U14/W3xdrIA9EtvgdfXfdDX5u7DU8oZuj
yxXrExkldGPk9LGP5Y7ydr4GBskN5eV8MUzkf6Un4zzhD/HNkD3uSe7B34xr
4L+N94FvxW+K95Q+FutIr8c5Fe+g+ZN0rryaPkrH0At0F/3KvAfdL2+hDeh8
+i89GO+MeUk6Vl5FM9Dh9IfYz2ad+B18Tczhb9HB+mf4FXxxTOIv02/j3OIP
888hRzx3+VX+T34eWsub5croKD8lv8fnjvclMkrpxsn3xzXLQ9BIt1IugVPy
A7FGutfkW/z8uFbUQGn9O/qM2CoPxYPIrn9d9xe/AJ1REw/hqFkizUHf8Jm/
+YV4GU+jjH68PhO2ycPwcFyHvqfuH34RusQ16Obp8sQzlmuhrG6CnBmfysPR
WLdKLonv5EfiOnW95H/5xfGOyR/JVdA1rleez+fF1/Kr8hd8Q9SWy8kT+SwY
wZ+ln8W98jv5p6OXn5VX86Uwmb9Cv9f35Y/EPdLmdDFNgpzxnGhv3fv0P3kQ
PRX/P10S7zr9WP6QPk6n09/p3nhP4znSBfIamo+OpRfp7jjDzF+jX8rPoI5c
Xp7EZ8X2WAt5F18LI+Um8hq+NKbwv9HT+n780XjO9Hm6hCaN30Au80T6pn45
jT/wBtPv4jfo0jiX6CfyRlqVzqB/0H1xfsR60oXyWpqfjqM/0UNmr8c7xzfC
gnhOtK6+Aj+Zz4YdsU/k3bFmGCU3ldfyZXBGfjT2l66PfAeWyd1RD7mRB3lj
z/hMX/MksS7xrqM+8iGnWT990rjX2CtogPzIZdZfnwwr4tnHOYUCKJhw+2/f
QrQwiqBoXJNugM8nx8q41zgHUFE/Jc4w7JRHo5lunVwWP8j95WN8Cyzlk8XZ
h2Jm/wOrWGC3
           "]]},
         Annotation[#, "Charting`Private`Tag$191118#1"]& ]}}], {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{40.849999999999994`, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, {184.92181884196165`}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}, "AxesInFront" -> True},
    PlotLabel->FormBox["\"FL [mg]\"", TraditionalForm],
    PlotRange->{{40.849999999999994`, 47.15}, {-1.9886791097267695`, 
     425.5547688068041}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
pc4dCwo3UnB0OtYpFp35pe4/ES0KZOS8t/JZYT3Jt67YARS4+20Y5aEYMGU9
nXDFloLint93GGjj2SkZfScK5nY1BCSgXRvrU2/uoSBD2fP7EjbW4wiN9TO+
FAxlaJbYo99UMAwHgijQWMDLvYTePvpLOyuEghfDlyfWWTNA8dNc6NlwClba
+pf5oiPWut19GU3Bvqd6IcXovdES/32Jo4A3t/PXNpv/z8dc+1YSBTp7JP6Y
2mL8Pu1uPJRFQVxrf0UK+pD7pF/6FQpe0oqOvUbvXKgseC6HggBZ0zlXO8wH
K/llW/IpeJi4sioXnWFx/2L3LQoWzH0K/4zeoeX1n/sdCq71HOc5YI/jzwif
kC+l4Psu68f30af2W3y3L6PAoEIhehYtfbmB73A5rndGNV+cAwMmCv67FVBB
wboFSbWNaIH7olWsSgoOHHI6LrqbATlH2z4KVVGw2Pa34AW0h9yzVOoxBU5P
6+t70Sv1lZ931lBwUys9XsGRAUulhzeZ1lJAX6IpVIAun1tvMFdHQUr0vOff
0QOr/9jqN1DQN95yStsJ64TjnRDfZxQcafVbVI1u9tjblPWcgjqaXjOfM37/
pvCR7CYKJIsWnjFGX3qh8S39BQWFidfF2tGLlhcMubRQMDsb3LbUhQESQzxl
6q0U7PQzSnVEV/ALfvyNHtzVv2QILR/ePeLXjvtbUdih7MqAqwZHPi9/SUGE
cti5AHT3w8L8SvTKBSuXTaM17UrrRjso8D706Y2+G8a/TxAz9BUFZcPlGVHo
VVcznvO/psDiKXul8B6Mz8ShhYJvKMjSUuixQAcvsWiNQI9c+37xLFr45e3y
n+jY6EQZWXc8r+5v/Pymk4IKWr28+l4GvO646hDTTcGrkcorweg8t+XPP6O/
nyuVfYDulp2RteyhYO3XS9I0DwYYqZ8Wk31LQXJG8HIzTwa0KWXLNPZScNto
//lkdCXVVqTbh+s55rq0A83L56dViJ6hm0g6euH3NT4dvvKOAq/x1WI+3tif
LlRhlA1QEJW17EwBukQusZnxHufDWrT4O1pAQWfwLbrt0rTwoX0MiNJePCA9
SMFX47GECvTM24LddWjByQ8L/6Kn48KPHxyiQH9Xy/zjPlhvDzzi/TpMge3P
2rgG9GYXz56SjxRwsisERPZjf7+z7kDEJwqu/8rjS0N/+6bTpzFCgfi10H/Z
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
         "]]},
       Annotation[#, "Charting`Private`Tag$191166#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{40.849999999999994`, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"FDx [mg]\"", TraditionalForm],
    PlotRange->{{40.849999999999994`, 47.15}, {-301.43522455336216`, 
     301.4421042797967}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
MiQW4rJq6mf+rzdXpvROGpL/AOVzJ4w=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$191223, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$191223#1"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
Hlrtdn0EvQ6nmWb031clPvPm8AnHsNJV/CwDF0/mZ/mhtQX3CS1HR+zLc8Xz
IZnStenCYbTaup+lDei+8/Y+XWhlwdF9fejbqfqSaucY8Ij6MG2KMZ+U+YjU
r0cvtJpUVkMnm78POoU+Zhx21xS9UapJ+Qt64NUmeQ7a/lPx3XlVDPyqFPvH
RxuS+J2R6ACRRSnL0WK5PgbX0I1VpVec0AOhNs8n0Usuf07hoe9x1ZLtzjPw
dJqWoDW6Un1iYSqaXFHTNkbvH33x7j76o+vbIQV08MNrWdIXGDzXfdn0B9/f
8dRRWw/04Ga3Q91ok9gd3/LQJ1sNQi6jpVasOPEavfXoor+p6G9zzRx1LjJw
2OSezUr0IxH5iQD0pbdKllroiz0/zpxFf5LqH/qA651V3eE5jE48TXzK0BEZ
F0QXX2JA//fpAz5oN/+DtbvRDcbHYuTRi6xDNxL0isX9JrdxfxUUHBWmXsZ6
Et1UGop+flt8awZazkfp02WMl9rjA1qP0dqfZl91QudGtj6adYWBLdqXV7zH
ePPUTTEpQp/9b5GIINpywq/nPXrkpIFyCsanylMq3aiage8n5KdNR7/aI/T5
Enr8nljwOMZ7vdebo2PofPnPnwPRBQuJvVUNAyK1q/mdmC8+fdFlzej5bh+v
FGnzyTu73+u6arEfun2PG8X8a1LulFK7iv0qOZMP6JIf1Q3r0b5HtorvwXz1
P7lV9Qt65hnNbX9V+aRf6Fvn5DWcZ1YtYi5g/t/tbkuxu47rde6+aAfWh4qL
Z81S0donj3R9VeSToPWBh6XrGHi3SL9CYRafDDV+cNK5wcC0BK+Nxlh/km87
h/uiOZ2Hgs2xPqm01h0uQXdPizC3keYTtj2rS6ce5wWFBfogie/XY71Bt4GB
V1u/1UhivfP8k71NrxHrs9lHq09YP79PCh71Rz/xiftyHutrqlDw9TK0kOm0
g5FYf6+I2gno38R620TdGv7LEinFob36txj4BguW3Bhlye2F3OMGt7HfjScl
HvnCEi/ziw0B6K7Mqbrqn1kybKn6thyt+kFspKQf+5PdDz3DZuwvC+znlWK/
2OV84rxhC/azXdEJO3pZMi9k9JZRKwMl917qhzxmybFTpwbmPMD+zE5EXKpm
icBHi3uB6IajI3lPLrPEV+/+mQq0+566vOGLLJlT+i3IoI2BysHFZrpVLKkr
thjSfojntB/SK/xOYX87fu+H0iPst8fWSLvnYH8/PPR3+lOs9/OWPZCKZMnx
uMWS71/ifHDVf3GvAUsmlfXtDF8xQJ/vydHUY8maGoXtwWiNTc+DfLRZojY4
0jOCLn58PvGZKksKVl8+J/KagfV/B++VyLCk0Gy+o8EbBjyrVZrv/+GR4i9G
6YHvcf4aS9JYe59HyleqiQ9/xfh30PH4488jJmpSAy8mMD/VJuYdz7InHNv+
Po1JnHc3DyvfyLAnbr43X/uht5a0hHan2ZMdFVufDqHzBQaomYn25KZZFxEW
4IJqdR/jGoHXOxXnzBbiwh+TxqPernh93EJ6twgXBHq3azlL2xPydmWhkiQX
NqmZNjcnckmh7apVa9CfhEc8FsdySWzhKpli9EFZYZ+SXVxivcZzj6EUFwru
urdEhHHJja7VAebSXJgm6ebzcQ2XXGtfM89DlguZi86vUrXgksv1viRzFheu
h7Q5Fw4w5FTelt7pGlxIFU7M7gCGLNWdmGGPtrzGzsu1ZEhH1V6LFPRy37GU
VWYMmWwqzpqqyYW8e/XeD2czxG3oCSWkxYWINq5yigJDBCiL03+0uVCndTtb
6zNNVn4VDB/U54KGgGPfh4M0EYVDwk9MuEBuPa/f+wDPE3rRiYrz8HszvdX3
N1NkzsyNwt5okbnigqkNFFnevUT4A7ou3ME46AJFsre+FRqbz4Vdp51D3x+m
iM7p+UIqC7lwrfBsyxFPitjItAv4mnNBctdj64ZeOxLZN2PyB3Ch0du+59Yz
Dqn7lfB9gS0XVs2aOJnaxiFTRH/3RaBD9UtcmWYOOWz8/t4P9PeZO70qr3DI
xW03jv7gcOFI/5VkrcMcMjQ9ZNEPigu2goUvLjpxyCbjh0HD9lyY3uTJ2jba
Eu9tmS++LedCiNDsXpl0IOFNc9NNnLmwMWt8SD0RSLLMfesQtK7TOSXdnUDO
nxMp/oze0tl4cZYfkCkfdwd8cOGCUKdZ+vGlQCpX+I+8cOPCki+HBV2e2JC/
5paSLSu50F52KMIlxprk/enjHPfhwvMo1fbYQktypvQ19w1ar2N7X2iyJalz
6nbQXceFt1mlY/wgS9Jz8qHHWXTyNhmFO4stibbDtc031uP1xn3vHj5YQirz
D2S98uVCabbLIpVfFqTeaslb1U34u8bOguLF5uRN7IH4gjD8nibfRY0xC0nJ
d+pkVDwXjJVvrQ2NNyQ2nnHRt9B8ZeORocWGpPvm9RViCVwQHFY2WTZoQCQP
m87IRWcty+AUeBqQXWYakZcSuWBoUdV7Yr4+cdr9hxlI4oLHIm1ntkuHjE+5
OLAijQsKRjdSTkhpkMPBX5sK0B7GJbX6yerE5JnBiffovOjinGcDasT31AnX
iH1ccPme25F6SZU85KXXZeznQkV+e4gDR5mUZARk3M7ggluBd22duwKxGT0Z
MOMAF+Qj1B04NfKke+1rjivaR7Oi/4iiPJGc7zHai45R0XM/3S1Ldj228/l7
kAt7BqOKDnhJE7mlsUvsMrmw0GnD/MN1UqSq5JpcGvrYkWyRQBUp0hc5v3VW
FhekHdS9tGtmktieoJNr0IlX2+bfjpxBlLjl0aXouu2ePyUXipPLVe9WfEFb
XMVYGBYlTorqpgsOceFzzP5LJVXTyf8Am/OPBQ==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$191223, {2}}]& ], 
          Annotation[#, "Charting`Private`Tag$191223#2"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
KzsTN2fJ4iyTyxf3geuvOlIyH8niOae/c3Hg63YTBXUvZfH16IG3G8ypqLLr
fc9SuyweuWmuRwdLGZ5t2PhZFms/wgWx4K3pX47jEVn8sSs3kt2CinI7szjV
/shi1VGhWQq4QNYoMoCZgM8tRztGg488vuBA4CBgaVkvHVZLKvpOvLCwgY+A
3Y6rTzMdpKI39fecWGQJuLTvz2Mq2G3GcuOcPAGvmTT5J4Br9m7Kf6ZMwOmq
HnNCVlTknn7dGW8l4NH03U/swNx4eD/3TgLetZHlZCbY1kmtcbsmAbeN3V1Q
tqain/4L4xv1CVjC1q/MF/zwaj6FQSRg7zcGIaXgWCPL5oNkAmbJ+/hbzwb2
kV3aD2EKAVsI3X8ZBja/Z7hKoRFwZlTImTpw7nydi40xAeu6Cq6Y2lLRJdsd
9hKmBBzbOVSRAn5bJ3at8wABvyOXnO8FGzyoOn7MnIAJJaFEyUNUxNo69nbC
goD9ZUzXnMEyF1PSTQ8ScGWSRHUeeHKCCadZEfDGtYmw7+CJ4yxtjdYEbHv8
JXmbHcw/UqvvkA0B3+uLYQoCL929fearLQHPmVjXvAT3vhupf3uIgA0r5KP+
ghPrbDdn2xHwZdWfRnvsqUjw0qC6sz0Bf0xnsMaC5T4/ecbpQMDKG5PrW8Ay
R/fbZIODTjvG8DnA/m86X6RwmIDxmBrNGiwtv8suFcxr+4fjFnhAcER/Aez4
prGxHzzocHUZORLwA820OPnDcB4JeaMWBv59z32fF1hINMP/EZgitJurCMzu
muveDE6JYn47B55QGC39CB742XFZy5GKnm7oWvkE1nC9a3oO/Lh+53Qb+Gzn
8U0McKe9kvZzcAPZoJ3ViYrGEmRPXAULl3BeMQYz0uWlXMCuMh/Nk8Cb80w6
FMHFSQX83eAoyxrZQbj/v3+Du0SPwPnDiiPrCnjf8b3XDoPHp+Y+a4PT+gSs
ssETj544vYf4jJgMCY2C2Xx7HvuCd1UU96g6w3koxshsBeIbrhp6wx98nBZZ
HQmW2CixeRnstFYuFwr5MH9jJcHtCufxV7JJuyF/dzTl+8zBG243n02D/E7e
m7udCib6GnD+hvxHRyVJy7hR0V07i3dFUB8V5EbCzqOwPx+k1bNZEvD7yaqs
YHC51K6Kw1BfczeeypSD7+UybjyF+lOaypQiu8Pzo79ermYEfDU9WOyABxUl
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
NjIXk921+zoduRQ908hS00b/AfoNwWA=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$191223, {3}}]& ], 
          Annotation[#, "Charting`Private`Tag$191223#3"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$191223, {4}}]& ], 
          Annotation[#, "Charting`Private`Tag$191223#4"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {40.849999999999994`, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {40.849999999999994`, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"stroke\"", TraditionalForm], 
       PlotRange -> {{40.849999999999994`, 47.15}, {-55.10338063307096, 
        55.09987861614027}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"i\"", "\"g\"", "\"aero\"", "\"act\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
q8xelsjACd0tYQv5tcj/AFl1TkM=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$191302, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$191302#1"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$191302, {2}}]& ], 
          Annotation[#, "Charting`Private`Tag$191302#2"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
gcw/vJFLZOJH/wOlqn/m
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$191302, {3}}]& ], 
          Annotation[#, "Charting`Private`Tag$191302#3"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxNz2tI03EUxvE/GVk5nNFCEZobVApGcwZFUW3eyRbeQsXyglqMnGa4WTin
0+mLvGxO92KYU0tjhuZMy2R2W5lj0lyW+aLFXDW1RiMraKIVFYTP78Dh8Hn3
Pez8C6lnN1AUdfLv/rtDS07rc1Esn/o/IdcETFoxrMwaKzlBuMiqok8R3jNy
LMVcAndUdcyaSuErOzLto2I4P8b2sbsSZnYy7JZmOH2xcMimg13sOnr9LVh6
ZjVO9ZDoq5Pmlk/D/f1pycPz8M7J1SndMuw3PRB2jopbt8/ru9mKbfAli0Ui
Y8P82wOBoVx4u3axZXc0nC8K91CpsJFnZnELYOGmSEeAGG416qusCniyWPzD
oYEl/oIUay+8b7BCETAKH426zPMxw2aT3PFyDj4d5TzlXYKLBhMHV7zwjH+d
+qZvPP4rYQgMQXD4uOGTOgxm+V7PsRyCz8cXZA8lwhFlHJ44C6a6UleaimDB
mFxTK4U9EzJjaCOsfTFzj90BP7JEaFf64S+mxaRdD+Crer17rxXWyQ/SF97C
fZlMv28emMMMcNt/wY/fZ3YH0xPWrW8vdW5mwVv4bT6zHFjiov3+zoezy9X2
5WS4fc0VrcuD31Wrajovwr1fY3sqa2Bellz2lPCbJ+MZW2thuiaSpiVccYAl
GVHASdK1eHc9vLpx2J3RAGuKPROdhDlzYV0LhAv1XWlljbDtePN9ZRPRqxQq
nymJXm+PkKYienPno9MI07npXifhilcxeT9bYMaR6sMxatjQa2Q0EHZJuJbA
VrjaIerJIRyc0Ce7QfiO4UPGZ8JJQSGR+9vgP5HzFTQ=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$191302, {4}}]& ], 
          Annotation[#, "Charting`Private`Tag$191302#4"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {40.849999999999994`, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {40.849999999999994`, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"hinge\"", TraditionalForm], 
       PlotRange -> {{40.849999999999994`, 47.15}, {-18.405981701191575`, 
        18.407039403669472`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"i\"", "\"g\"", "\"aero\"", "\"act\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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

             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$191380, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$191380#1"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
4wAbUvnAXPCDEvl04nx07iE2iKpN2P9zUSLFW1cs9KGfvtWdC9usRAK1c4Io
QWw4dYnn8by1Evn7rtQrGz0u4PVIjK5EZHSbmJmH2WAvQBEollMiDr2LS9NC
2PCxw63CflCRNJjuv3DuKK736XxuUqgiSRCaFniFvvP28iOeQEWy+XPYyWXH
2OA35Xk+dp8i+XA+LvgMepX/e7vL7opkYTjfOeE4Gw46SnyUX69IDC+9l4mL
YMOykrCP+aI4b00zroZHs2Gz96NV/tUKxNItKuIJ+vnLH/eMKhVId8NDF4EY
NogkcHfwFisQ4YsGyzLQB49W3WrOUiDHaAoht0+yYZ5PUqT2pAKxP/6bNRbH
BnPvL4cDtiqQsUGaon48G0ydDlxqs1cgsbZBv8PQ8TfopnQbBVJD+XKD5xQb
3F6d/KNtqUBUyLuViqfZwNo9sSpaU4EscN8ac0nE+r17z/77P3ly8cDXxlx0
cL4p68ucPFn9TiNvCH2ktCdielyeeBflOR4+w4aulO9l5p3ypG3Dudqks2zI
Oqw5fPemPLmWtDfpaRIbyn5JXN2wV55Y/ry6d9l5fH7u7i3BO+VJ986PVo7o
X7pVU7ec5YmwvvPPfnTsEbLox5Qnx96s37WYzAYu9ffsV8ryRGLNCfr6FDbw
bew8mC4rT25cq5FIRJu9NzgVIi5PPofoP5e6wAb+hp64A1zy5MQH/6se6LZD
gQGnflOJDLs44jq6OnnC+s4slVTfGHSZQNtMWK/4OU4l9ivlDQxT2eDTfuW9
7Wcq+R8W4ZwU
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$191380, {2}}]& ], 
          Annotation[#, "Charting`Private`Tag$191380#2"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
MiQW4rJq6mf+rzdXpvROGpL/AOVzJ4w=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$191380, {3}}]& ], 
          Annotation[#, "Charting`Private`Tag$191380#3"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
Hlrtdn0EvQ6nmWb031clPvPm8AnHsNJV/CwDF0/mZ/mhtQX3CS1HR+zLc8Xz
IZnStenCYbTaup+lDei+8/Y+XWhlwdF9fejbqfqSaucY8Ij6MG2KMZ+U+YjU
r0cvtJpUVkMnm78POoU+Zhx21xS9UapJ+Qt64NUmeQ7a/lPx3XlVDPyqFPvH
RxuS+J2R6ACRRSnL0WK5PgbX0I1VpVec0AOhNs8n0Usuf07hoe9x1ZLtzjPw
dJqWoDW6Un1iYSqaXFHTNkbvH33x7j76o+vbIQV08MNrWdIXGDzXfdn0B9/f
8dRRWw/04Ga3Q91ok9gd3/LQJ1sNQi6jpVasOPEavfXoor+p6G9zzRx1LjJw
2OSezUr0IxH5iQD0pbdKllroiz0/zpxFf5LqH/qA651V3eE5jE48TXzK0BEZ
F0QXX2JA//fpAz5oN/+DtbvRDcbHYuTRi6xDNxL0isX9JrdxfxUUHBWmXsZ6
Et1UGop+flt8awZazkfp02WMl9rjA1qP0dqfZl91QudGtj6adYWBLdqXV7zH
ePPUTTEpQp/9b5GIINpywq/nPXrkpIFyCsanylMq3aiage8n5KdNR7/aI/T5
Enr8nljwOMZ7vdebo2PofPnPnwPRBQuJvVUNAyK1q/mdmC8+fdFlzej5bh+v
FGnzyTu73+u6arEfun2PG8X8a1LulFK7iv0qOZMP6JIf1Q3r0b5HtorvwXz1
P7lV9Qt65hnNbX9V+aRf6Fvn5DWcZ1YtYi5g/t/tbkuxu47rde6+aAfWh4qL
Z81S0donj3R9VeSToPWBh6XrGHi3SL9CYRafDDV+cNK5wcC0BK+Nxlh/km87
h/uiOZ2Hgs2xPqm01h0uQXdPizC3keYTtj2rS6ce5wWFBfogie/XY71Bt4GB
V1u/1UhivfP8k71NrxHrs9lHq09YP79PCh71Rz/xiftyHutrqlDw9TK0kOm0
g5FYf6+I2gno38R620TdGv7LEinFob36txj4BguW3Bhlye2F3OMGt7HfjScl
HvnCEi/ziw0B6K7Mqbrqn1kybKn6thyt+kFspKQf+5PdDz3DZuwvC+znlWK/
2OV84rxhC/azXdEJO3pZMi9k9JZRKwMl917qhzxmybFTpwbmPMD+zE5EXKpm
icBHi3uB6IajI3lPLrPEV+/+mQq0+566vOGLLJlT+i3IoI2BysHFZrpVLKkr
thjSfojntB/SK/xOYX87fu+H0iPst8fWSLvnYH8/PPR3+lOs9/OWPZCKZMnx
uMWS71/ifHDVf3GvAUsmlfXtDF8xQJ/vydHUY8maGoXtwWiNTc+DfLRZojY4
0jOCLn58PvGZKksKVl8+J/KagfV/B++VyLCk0Gy+o8EbBjyrVZrv/+GR4i9G
6YHvcf4aS9JYe59HyleqiQ9/xfh30PH4488jJmpSAy8mMD/VJuYdz7InHNv+
Po1JnHc3DyvfyLAnbr43X/uht5a0hHan2ZMdFVufDqHzBQaomYn25KZZFxEW
4IJqdR/jGoHXOxXnzBbiwh+TxqPernh93EJ6twgXBHq3azlL2xPydmWhkiQX
NqmZNjcnckmh7apVa9CfhEc8FsdySWzhKpli9EFZYZ+SXVxivcZzj6EUFwru
urdEhHHJja7VAebSXJgm6ebzcQ2XXGtfM89DlguZi86vUrXgksv1viRzFheu
h7Q5Fw4w5FTelt7pGlxIFU7M7gCGLNWdmGGPtrzGzsu1ZEhH1V6LFPRy37GU
VWYMmWwqzpqqyYW8e/XeD2czxG3oCSWkxYWINq5yigJDBCiL03+0uVCndTtb
6zNNVn4VDB/U54KGgGPfh4M0EYVDwk9MuEBuPa/f+wDPE3rRiYrz8HszvdX3
N1NkzsyNwt5okbnigqkNFFnevUT4A7ou3ME46AJFsre+FRqbz4Vdp51D3x+m
iM7p+UIqC7lwrfBsyxFPitjItAv4mnNBctdj64ZeOxLZN2PyB3Ch0du+59Yz
Dqn7lfB9gS0XVs2aOJnaxiFTRH/3RaBD9UtcmWYOOWz8/t4P9PeZO70qr3DI
xW03jv7gcOFI/5VkrcMcMjQ9ZNEPigu2goUvLjpxyCbjh0HD9lyY3uTJ2jba
Eu9tmS++LedCiNDsXpl0IOFNc9NNnLmwMWt8SD0RSLLMfesQtK7TOSXdnUDO
nxMp/oze0tl4cZYfkCkfdwd8cOGCUKdZ+vGlQCpX+I+8cOPCki+HBV2e2JC/
5paSLSu50F52KMIlxprk/enjHPfhwvMo1fbYQktypvQ19w1ar2N7X2iyJalz
6nbQXceFt1mlY/wgS9Jz8qHHWXTyNhmFO4stibbDtc031uP1xn3vHj5YQirz
D2S98uVCabbLIpVfFqTeaslb1U34u8bOguLF5uRN7IH4gjD8nibfRY0xC0nJ
d+pkVDwXjJVvrQ2NNyQ2nnHRt9B8ZeORocWGpPvm9RViCVwQHFY2WTZoQCQP
m87IRWcty+AUeBqQXWYakZcSuWBoUdV7Yr4+cdr9hxlI4oLHIm1ntkuHjE+5
OLAijQsKRjdSTkhpkMPBX5sK0B7GJbX6yerE5JnBiffovOjinGcDasT31AnX
iH1ccPme25F6SZU85KXXZeznQkV+e4gDR5mUZARk3M7ggluBd22duwKxGT0Z
MOMAF+Qj1B04NfKke+1rjivaR7Oi/4iiPJGc7zHai45R0XM/3S1Ldj228/l7
kAt7BqOKDnhJE7mlsUvsMrmw0GnD/MN1UqSq5JpcGvrYkWyRQBUp0hc5v3VW
FhekHdS9tGtmktieoJNr0IlX2+bfjpxBlLjl0aXouu2ePyUXipPLVe9WfEFb
XMVYGBYlTorqpgsOceFzzP5LJVXTyf8Am/OPBQ==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$191380, {4}}]& ], 
          Annotation[#, "Charting`Private`Tag$191380#4"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {40.849999999999994`, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {40.849999999999994`, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"stroke\"", TraditionalForm], 
       PlotRange -> {{40.849999999999994`, 47.15}, {-81.85677480662704, 
        81.85196921341743}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"inc\"", "\"ic\"", "\"itot\"", "\"gtot\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV13dczP8fAPC0tLf2uGvfXXeykjReciOJlCSJkhaNb7JCUVQIpdBSRkNJ
SxLSeKOhNJBIaShKGSXSIH6v3189no/us97v13pTPf9z9Obn4+ObFuDj+//f
kuH+luYANpzYu+xk7AMdonXdTlMikA13qhM2at/RIXGu94PWojV9JQ5XFugQ
/5Z46Sa01CPV+dNXdYj+HUuHhiA2mE8WWMbF6JD0o+mvHgWzofTqExkXJx1y
eoFLd/k+NghsNNF8OKFNplufMH6hj4ZbWjz5ok18Ti0MW7afDf5REeznQ9qE
/VtYowy9Ns1+w2yXNuF7f3f77QNsqJKzORL/RJscKJAfuBXKhreX5GUaLmkT
z9Vtn66FsYHde5WUWmqTFpeUsx/RsmsK64VXaBPToB3G9HA2PA6qjvRcok2k
Un8cvINOs/2avtRQm1R8U5pff5QNTo/0TThy2kQ2zUPvcwQbHJfkfFL5RCVh
xbTGhZFsuLvJsfbvAJUM1U4E7EPbOQ+s/tpDJZVjUWVzaDmV/w4Pt1OJH+fm
apkTbOi9n/LGkVAJGf++Y1k0G9p+K3xccJlKGMIPhQ6jTdK/9GUkUUmSWtTN
arTM/XuFxolUEsBV/M6LYUOxfnZW6GkqUU43i3A9ie97f3xXQiiV/Mc7ceXY
aTaMaJorjLpQSZebnXUtep0g252+iUrYIQuGRGLZ0HOihxxwoBLVjFxmIrq3
oVF5qS2V1E88q8w+wwaXzBuOq82pRPOKQnfjOTZoX/LPrdOmEqu+XROicWwQ
agxO5qdQiQelRtQWfXKkk75Wg0oyM3eZNqFrjyj5/FOiEr3c6ktN8fj+Nscl
f0hSCfeTfKHYeTa8WGnDOidOJT60XbW26JasbsUlolSSd0v+RxM6QnPwv0xB
KjEq8dvwLIENdQPVF2X+UMi671W+4olsuH3ZjCc2SyFBi+WPrUVzvPdpy0xT
SElZVeEzdGZo2gn4SSEvJuXqxC+w4dTIY6r/BIVMmPi9W4t2fEBVyRynkCUP
5MSb0a+fzK5e9pVCnGZ9tSUusiFH73Z8wmcK2beyaoUdOm2povfsCIWUV/n6
NaNl8rx6vg9RiNnjyrrmS2wQFd22+dB7CtkqINcjkcSGA1MvV6/sp5Awtu9P
O/ShhZ9UxfoopLpeVqcFfbTJ70HrOwrpm+9rJpnMhitOMqm13RTCt6bSYR26
oj7gQkMXhax65hPRgr7qdYv9s5NCPCUqkyVT2LCh1m9EA318nWzxOnRgGn2/
0xsKyYrzqT+H3rZcbyz5NYXUtj3saUHHfz67/VMHhXyUkZ2UTGXDnvlJTRy0
sKOPxHp0SPc+s5JXFGJw4aFOHHru3ra7BmibVzIrW9HHv0ZZF7RTyK4FPo5S
afi8Zs0RC3Ss88Nd69FGOe4l715SyK1kmcg4NOPpkaun0M2d3imt6LfRuVWr
0F9VHhZLXcb9YSnJiaCltso0rEf/kvuX1f2CQljp3r1xaDhx4XAl2r6nYrIV
/bVNJCMfHawpIymdjs9fc0HuBvq8u7euPZoOvgNF6NvXKlbGoy8JPpCvQ798
L72xDa0yXFn4Cf1D23u3dAYbdE1z76ng8xW8KiLt/2+bAlMX9LIc6dR4dIwv
n2k22nnIq6QNfW/oTeUcmr3zfbTUFTYs3xiQ64nfv7h/29Z1aH7e4yuv0JRt
XcZn0Ytys25uxPWT7nIWfoZ+59LV2of+69zeLXqVDWqrjBccwvX/0m5/2wbN
z/nvhBbu19MWG7d69MKlzycu4H6W29YtErrGhpopnpMn7nd2w6r5bLTMDxNx
y7cUEvnIrPQROm7/tctqGD/BlvdO8l1nw3ZKUbgGxtf2h0u2WaFtaVuoRj0Y
r3eNRKrQzemF1f9hPBouvtnzGz2PMUqyMV4Vi/XumGWyIWP76KUhjOcfeZrb
76M3zG1tPP+BQgb0Li+ZQoud9TCe+UghzzOVRE2y2OAz3/5I0DCFFKTLlN35
v8VlWo+NUkiayrnTE+ib9/b3qn2hkFNJou6LstnQnfx5sBbzzes8v1gx2mEl
q8/iO4VoRP10z8/Bej9PTboZ81li3p5lI2hpkILnmO+z4V/FDG+wgbpq+6n3
WA9eHxy6m4P+9cIsmDGPSuL8O8Wv52L9pE4obBPD+vzJ6X0fer/Pm9AmCSrZ
7f2iXDMP6/Ufb0WONJXw3Jt2pKOnZXLNPBWohG9j5b3km5g/VVVOJlpU8q3N
9Nxr9FYjXSsxrH/v7O56LshnA+WP1OlRXSp5wC2SvICer8hkP6dTSYjZtZ1x
t9iw5HL+RePlVPKBGiUdXYj90OjGSa4jlbTObjNtRNdeumFu7IzXty/fIVnE
hvwsVr6hK75/9OfSS+jusdkHHE8qWT7i6HyjmA2h+qdnjfdSSWwJNaPhNhve
nBgJa0mmkn2nf9eJl+L9tNerXk+nEnfPjm/2aEu7PNnj16lkqcJp6ET//Pdb
PeAWlfQcHB/8dIcN1ktdJN/XUImxVQ1drJwN3zWuxDl8xn6gnLpxPfqbZHn0
n3EqEfoeEpaI5ourlr37C/tJpn6r6j3cn3/uU+v5tckJ4bg9jPvYX7+reeir
apPXLW737SrYsHNPyUZvO21yxG2WE1/Nho431P1LK7SJ+g6PgVZ0vINQ0R+i
TSq9649K1bBhqqK7pK1Bm/wJSrx3Dg2VbKOkDm1yNJJOO0sw/+Ssrud81yYR
N1wlTj9mw7HLZvR2hg6JGq94ebwe86Ox4c6DXB2iO0n57zF6dfSpzOZiHVI7
EyPO38AGsw/skpF7OkRIYCM7Em1UM8S1fqpDYhZ8vnvsKX6Pre3SoBGcR8zU
UsOa2GBR73/rHlOXxEUdcT/QivMJ2/FzV5UuoX+0tH+ILtZl9/xr0CUNHH4r
vjacjxyXexi/1CV8809rxqL5HbrW3hnSJSGnk3oynrPBd05LY6WMHtkUd3tr
3Uvsf2FjB8566xH1lOHNCm/wfu9Pu55W0Se3bm3cUNqH8aKmnJmda0AUbCz/
TqJtNXQcs8sMyNEPhgUr+tnw7I3H6ZJHBsRR4+/8R2iRN/G2Y90GZDYur6bt
PRvOjIjf/CljSGxC5lhfBzEeBV8Uiocbkg+muZKGn9jQdfzrJqYbjazvSHjo
jzZeVJPqvptG7u8J21WMtlJ53JocSiNn8h3qTEawno2fBJVLNLJY/U8YZxTj
g2Vb4tpKIxH/Nnzx/IL1R2Hl+vOr6ESjfrYpY5wNO+S0FpcZMIh53J4v79Aj
Kd6lc0sZxM35k6T6d+y3So6dVtYMkj7UsSENrcQfuaHAjUFU599+nTTBhsTM
iQSVBAZRtvEdiP+J894Xoc0DUwxiKtMr0IYW2uVlECloRFw6nfSkJtnA+zod
KytrRJL9rP3OojWeM30E6EZE8bTGt1O/8Hr1tjLRrUZEoal9JnKaDQveqPxQ
eWBElibaqj1Cf2Q6TAfXGhEn10fmfDM4j/UZcIrajMiF0aJjR9Fq8fk73n40
InLisUJHZtmwd5Ohfr8Mkyxu5zOoQFeoO/12UmMSx8sHbWbQIVov9+XpMUkC
w/vMwd9seMA3mvFpBZPI2IHsvj/Y/5zPPa3wYBJjhXuL76BfqtsT2d1MsuEd
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

             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$191458, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$191458#1"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
vEEqPvm2MBdWxivFXvk4aW5jF5jzA72N9aOu7cyk+dtk53IjES5c5HQ/rrea
NH8pu/THY/TpLK7+t8f/zMsUP1q9FuVC45Pu1jdpE+b5mtp838W5EKT+No+2
7o95otnbQD0ZLvioap/02jdqDoGy1kUKXIh2pK9QXN9mHtJ2/ONPND2kzvTj
RKt5jhVlm/58Lmh95h3aebPFXFrt5/4CtCylt0tk9oN5R3PNlTxFLnCcTq5Q
vFJvHmERMX5LCZ8XzH1y40qJeYlsd3rWIi586quK2WPQUL7kSdG3ZG0uTDU9
YVy7OVLuEn+45iPaT+fsnt3yo+XHNzrdWKDDhe8ti66lJY6WD3bOet5AK1h8
uycVMFaeK2DT8kiXCxa3RXdFrPhVrm0zVN2px4VrPuEiLl/+lmt2aWcvNcL9
1w7rmH9wrnyR8DX3Vyu5wG2s+rm5T5js4nptLV7PhQVEU3fThCwxDDYwD3Hh
woPoI6ru3sqE74r9xEl/fP8VW97JPVAn1o9izsVFcOFeJqtLRUmX/Kg8VKp1
gguHj/6KSYowIErzgq/5o+XVzJutUwzI+p2+x4vQT/wff5rJMSA5gptdVpzk
wh+tMVfTjwZkO1d7knuKCztPe2jIKBiSlprGld5nuGAqYLTqxF5D8vy11uPs
s1yYLPebz69oREYVF14dQC8cb6owVDcii/zpx/TOcWF8KmzYVt+IHBKfcb6P
1t1xLGObpRExsW6ceHGeC4EtGw688jMiBbWRJj0XuFDm/stk+wMj8nlh0CKt
NC4YND0XiSkzImKBPiL+6JUHNeyO1RgRXyn7ljF08S/ROrdWI6JqqxVOTedC
+cL5pjNTRiStvuHh4gwuvBcKX1lvyiSR1psZ29D/Guz2/1nLJNteNgVmobOK
zv4R2MAkuqRZQ+UyF1rc3dJanJnkWVH7WaVMLgTH2xtuCmaSa0s8hl3RltWL
thYeYJKEW1/WX0KzTbJ7RqKZxO5KD0XxChcC3Dflqp9kku7T3/bIZ3FBU+/Y
2zXXmaRazP+NI7rb+1To0xwmyUsY0kxFKx1cULewkElCoobbZa9y4fXeANbR
R0wiHPh7A/0aF1we2Z7vf8MkQ99Cb21Cs8/nau2uZ5L6nRPUZLRarvrhxiYm
Sd869Vj6OhdKXRQ3mrQzid5GirZkNv6+1T0DnyEmkXkVd9gavU5yiVTbMJP8
Zgt0nkB7Jn5TWzLOJGWmwqliNzAeZu/y3P8xyfVHiaPr0Lt0TQ9YTDNJorHY
xmPoCxcPG8/NMskmPUkBkZtcUGeuXyImwCLLc0578NDtVgcVnIRYRFFd5kkC
+mw0ey5ShEXmriTLVaPP/HmVfFCMRXoXMIIEb3FhJiH2lK0Ei7y8cK6Wjb6Z
RS2ekmSRAoacTjz6n6DwwyhpFkk5cyH+BXryeIBniwyLhIrP/0LN4YJD8/Jd
InQWcTmavtoSbbwkOUWKwSLm/EoXYtFUrfoLg2j16MtjBH3jfLBJhiyLiEwp
2/Dd5sKrldostXksMhSaddscffLyK240umFssWA0+mWvF7MYXRJ43bMMXXt1
2YMH6PRB9acz6Av5d06fQUd535Rfk8uFTdMxUWvQXt1awZHoeYfj2eX4e1bu
t989QfeJN2fJovU+6epOoesU6zavwfXRHPOPrMrjwt+KObIC3+dPw9KuA2j3
Z4/UqTQW+bSxyPQxmp38zj8T96P8lWHaBFoprWmdhBSLZF2V5q3J5wIr5985
NdzPmAM/f8eio8xCL/Hjfm/D20E1OuZI33SeMItY6uRvFi/gQv5Lsy1Kgiyi
RjlBtUOzClvsHKgsItDqd+ccekFIQPzmOSapStSSVi7kwn8MH/WbE0xy01Oo
bDu6vGB908QvPA8mfQG30MIm2jzaKJNYDVx7bVjEhR5qNiVlgEl0SOyB/egm
7rj1ZA+TiKV5apei44avDM59YZLBPebNs+gHjyz5jmL+vuEpJ6wtxnzkbHTK
+MAk+SozxonoEE1+yyV1THLyb1vPW3RCUOmBO9VMsruuNIV2hwuzP2p8LhEm
sbl10cIR3fnzweXCx0xiEB0+ko6275M7W3cXz4OT05VO9DynS+/TbzNJg9C8
Gd+7uP/jizP9LjLJ3Y7xvAL0xsaWvZwzTJJS0ugyhk49HDxVnMAkDt5JjyLu
Yb45RXz/uo9JmqvEQ07f58La+vvNTmwmeXR5UPU9ekr3WrCZCZOk7X/VIP+A
C4Ila06tWMIkLhpHDa6iH564tnFUmkna46nf75VgPa4ePCn20YiUuXVdnEDv
PMHSja42IpnGxGrNQy7Eb2oruFJiRDx7D92sRvfUmhy9dt6I9Kz9t631ERdc
GzclG9oakcoFLTLKj7mgL0SOpZsakezxkvLtaE5XmkW2jhHxvh6ycAgtlycf
10w1It+oIy2zpVj/novZNBYbkuGKflv1Z1yQ5i5YTZk0IAlVm4J2oPtsdVPC
a7GfvHp6Lhu9MHZLeWAW9pP6lFb1Mi7UhJ9b0ME2INkdZl4a5Vw4Ks8SoCfq
E5ep1FDNCi7Mb4o8JjypR6qMeZe1q7jwK0yGDGTpEDeTu+W+6MrligGRfjpk
bPXC7hw0zUy2/IeRDlm0dlxTp5oLOndG5gKfa5ODm64U69Rgfz9bKcrp1iKG
gX9f6L7iwjE1hS0PVTTJpVu3BvVq8fdz/0sSvq1K+L6ufOOPnmcVvEksRJXs
0Hybl4uW07Q/yzNXJXo3RgK033FB2yfRJunjYvL02sphtTouXNY6X7BGZDH5
fPnNuGIDzjdLHdqZ48oE2rc2bUFzE8dlXFOUSbbSyP00tCSTabyeqUwCLsmG
yjVyYc/yQ3bRIQvJdNrWCdp7zN9969bdpigRpXPD0yIfcD7K6irps5hPYt7H
tvPQ97WkI0J/KJBeumxZAjrYrOYRPV2B5CebRAt85MLWhF1jln/kiemZWApf
M8bX6sQ858dyxO04Q+hvC/aXBTpHdvjJEvLqRv+yVi7kbe5MI2qyRF3UpCYE
fTlZ4sZEB4MMHXVLHEOv2xDd0OjEIJFHboj9/MSF5rUZlokOdHI5ZoV032cu
3I0LjX0TIUNmF2it1WnnAvPNOo/FIEPcH8qF7UafDjqVly8oQ5R//u74jT67
x/LVLm1pkul6v1CokwtmvvaX0yMkyeyf693r0bt+2fxQmCdJ3FPOyp1Bq1Gu
vK0qliAqr4Ki5L9gv67tfSI4LE6ylhvZaHdx4dvdJq3heDHC17goLgD98qtp
r6WBGPHcLVNSjH66fZrr2SZKFmUPL1zZzYXNLQ+Xc1aKkqu0wh/rerC+Ee3b
JZIihFpwefFpNEds+eOMGmGy3erUf43o/wqfnNl4WJioRgc8c+nlwty65x/q
54TItSHdU/59mD8Ob4YjpIQINVGxoghtuXT06PWPgmS7mtjvcXSP0HbukSxB
oubyzS2yH+uVRtaw80pBEv+7JYmg9/Fqnq4WESS9SS8rBb5yoWT7mv2lLQIk
u+aW3im0/dHmxN1RAkTA64JnA/rIgz+E7iBAdswmnJs3gPPWh6Fj7CUCRH2Z
9/RltM+zyIvx7fwkvv4/w2500su8xtuP+EmvP2eH5jcu5N5nC684z09uXFN/
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
CrFVUGGyzmI+bvYX+qBPIf8DRJ2S0A==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$191458, {2}}]& ], 
          Annotation[#, "Charting`Private`Tag$191458#2"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
q8xelsjACd0tYQv5tcj/AFl1TkM=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$191458, {3}}]& ], 
          Annotation[#, "Charting`Private`Tag$191458#3"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
5H/ZRpbN
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$191458, {4}}]& ], 
          Annotation[#, "Charting`Private`Tag$191458#4"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {40.849999999999994`, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {40.849999999999994`, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"hinge\"", TraditionalForm], 
       PlotRange -> {{40.849999999999994`, 47.15}, {-20.94073950956463, 
        20.942061963687266`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"inc\"", "\"ic\"", "\"itot\"", "\"gtot\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             FaceForm[
              Opacity[0.3]], 
             RGBColor[0.368417, 0.506779, 0.709798]], 
            LineBox[CompressedData["
1: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
Je198Z3NxHlwde/fK1PZuK/wErmJhYqKKTcUkjjysdzAU2xmloJL9m5JdqdL
8eMZ6tkFpODg0bTB0UvVmHJBRUGGOL9l8KNUfHI1xgU6br1TSMGWZUN3TbYa
ZJpu9e7PJuaFo+Xi90tq8OA3UExIouDCHI/9wIE6XB3oftz5hoLTLyPf72Bu
xG1xdfCbmEcGnnN2HNFqQZPtX7/+x0zMHxe9zm6v68TsJY/WxjUy1jzRsff6
3YkOLfearFbIWPxNbIS8pwsX53k1wn+RseXeBlUz9y68zRuZRxsj4+XctDyv
k91oAt9EbBvJeOGYwZx5Yg82TdlvCw8ho37jPfbBByQcPDQ7tCBCxmYvmY/R
VmSsnb7Cai5MxqS7LbrrnpIxOfb6nkYhMnreZGe79pqMsackL0bxktE4JtyG
lke8R4+0WWY9GVfMr4/Fc1DwgYiulV7zEN7krP+z5wsFeRxWd74g5s/B+MKB
4CHi3IpVSOHWHsJ00xa1TAYVNyr3lUddGMKX7/Pd61iH8aIav3WK/BBqbAo0
75IaRhB/IJG+cwj/SXEVPX48jPxTzkEnyIOoV1mm1LJpBI1YE+alLQdx9/RH
gc7/RlH41/HQSZNBfFqmWuJ8ahTPKSb7JRgMovrvT87btEfx0hbTG1vODyJH
9o2TsvajiGcuy9UcIL7/iruaI3sUeeX3N3ybH8BoiYqNzLJjGCTUyA+PB1DN
Z8b97NFxrNjgWxx9bwDPlDuvfVcZR+6czweWrAdwS8nCG02dcVT4wqueeHUA
6YHa62UejOOHIequ3pMDeNlgdVNQ6jjy1n8Ti17px5fLMqRYiQnsbmRbcnXp
x/O+79oEtk4iLcxlqvRhP5o/5AgvFJtE/hMvrJdv9+MdrT8zujKTWPJdZtbC
sB/1Iz8oW2tPYorRYy8m2X6szqcHc7+exK0v90wZzZHwZFK82l2OKYy5He9v
d42EV9sXgq7+nEJdkuQgrw4JhW0MClLXTaPVzfes2edJ2MZ15Onylmmc9F3F
seMktGzc8t1eeho7np85z8VNwvrXOjljN6fxyEpcr2FlH7bmcq+S2qcx4Unk
6ca9fbiW5xb/L2kGFy/ZSt7Z2Yf3tZuqpXJnkK/l0vKGrX2YuDl+7FLFDDbp
JF46xtSHW45Fizn3zaDqs5iz6n29KKI++fom5yyGhCZ3uwb04nxmebyvzSyu
WaaFk+d70NA5c2Tbrjlsdfu9pWe0B7dYvwvfs38ObSteM+pJPaiszXRN8tgc
mkX2z0bV9qD4ufus/Bfn8Ilvmf6/mB4MinvE7vFoDoM/OGKmRg/inuNymQ1z
KLjy0LMooRufc/TIm9+dx+2rf09sfd+N0lTx/D1P5tH++rZ+C/9ujCKZ1Q14
zGNN7vzEvEM3fpmgfjwcPo/mJx4nZp7tRj+m6puGlfNo4B6jPTTahVtTFAdI
nDT8fff3SJFIFxb8Mp8zMKRh1rODrw7wdaEnm1w6rykN1YwvpAazd+H76bwL
9TdoqM7zw+rCXCcqfk5llbCjodPwjjOmRZ0oEuWU9tGVhut2W4jt0OtE2QE5
paR4Gh66eyy32a0DuXdxrSeN0XCoZormZd+BnvxLeUNTNExSfvThhGUHaiWt
egzN0ZBir6r14mIHDvuEWLX8puHlfKWmYr4ObBI8bPWYjY4hXBYfqz634wW9
kPa+PXQ8qO15hiWiHZlajS8HS9JRj0VSSd6/HV0P1c+oSNPx5XMlmeD77Si4
g+v1u6N0dDxdxjos146XvDg92FToGHCyAPjr2jCMX7dwxYSOzMuGP3oK2jCl
PzL6pjkdF0jpH0O/tuFFO+aUupt0rD+0tnMhsA3vHZ7UeWFLx8bxmwcN9duw
oj2kuciJjr5bw46nkFsR80z2nH9Dxzj1bRwv6C3IHarj1FhOJ+4NBdk6wy1I
WnUXta2iY3CCcszOzhZcSCR/ZaulY1nGd8mo/BZ8tNZqdaSJjqr9seIX3VrQ
PUDZR7+Ljmu/S9bf2NiCavVZPL2TdOxQQq2ApR946CXT7hMzdGSRkd19of8H
+lfYCwbPEetJ33LlfdwP3BcU2yb3k44GFT1GYVI/UMpK3unKKh3lUgQlNio1
o8GVX1JtXAzs1I378HdXM/a4ZOjMb2HgsxmNIipTM+61NHjAwcvAtBMbRl9W
fceLyTfDDwkw8Mmy/Jn96t8R9u5MvriLgSzNzQ9/6Tehm3C/S8VBBqZrsKnz
nmhC251qbh/+Y2Bh5Q6amGATHmk84OV0hIEvoiLSd/Y14g6NqI+7jjPw/YbT
1vYmjah9jF9BQZGBnDYcmGTegFtEbvjkXmCgAdsCz0VowJAFGHBUZ2DA6NZ9
pJ0NuFPrQYiMJgOr1H4m/uiuR2+zo5JRWsTzIgQSmDXr8erSYV65KwzsPWHn
E3asDh0cdYdDLBi4vuBv0BmeOvxWZtLOacnAVxnm+SOztRj8uEb2mRUDw64O
P1tMrMWMSkNjvVsMpO47FHtXsBYPh2iqNt1loMiHU7ciF6txSKHKd9iJgY8j
holrRTUWUpSVeJ0ZqD3UasGfXo17p0UfKz5loNZl1kp962rs7Wbx8HhG7F+2
V9qBziq8FBIl3O/OQNHMjEsu6VUIzwv2jb9gYL3DoTL0q8JTKTvKZj0YKDdz
QHGnShWqbkr7MuvJwB/r+P2kUytxRFTRId+XgbcMxNK4fCsx5PBnsdhXDLyT
kjNNtqhE0yJbWw8/Bn7u2NJuIlSJcYXbWxUDGDiS7nQ906MCxR1muZ8GMVCy
dJPGXtMKXD+2kgPBDHS47Br1Sq4CSVeT//0j/H1if5D0bDne0BP0ehjCQMPN
Nr3N+uV4/0a+x763DDRai1G8JlOOfxYCu0oIXzm6h6N/czmqOIpaab8j1lPA
sVxYW4an6qvhznsiPiJeR4Q+luG7iDW/BcK3ZgN+2j4vw1Xt00LO4QxM8RaV
n5crQ6+PJ1YeRzBQfeFsy27+MuT5y69DJ8zxV12SGA/xUabunFUksf/fhoNJ
Ooi/XqmtnItiYGXVz/oHMqX4ZSbWsy+agYt6Cd93T5UgnYN9n2wMA6NcVTAv
rgRjJvz4AgnzUurzPnGXYDWfIVnmAwPNLQtHVmqL8QSpE90IF7J8VVd0I6zf
R68jnHhhnM9ltgj7Lo5ra8Uy8NdxqZinH4twdpvEi0DC3NHX0yyvFWHRYZMN
9YSrZNSN5XmL8ClH4sQ/wmtWbflLdYVocX2X6NE4BpYY/OlJcCvEJ6eGs24Q
FivtbZGTLUTLfzzxgYRfTOVm588UoKps3UwuYb2vk+/FEwrQvlI8jEQ4W20q
+IlhAVrVqkStEt5391J24ZYCdIxXZdkez0CzPfV849X5mM0403iUcFPxgbq1
p4SDLRcuEHaoNRteJ5OPVm+qXhgT5l3v+JQ2nocUZXcHW8KSem8+NUTnoaxA
UaMj4aGvy45Bunl4qiHY15XwB3YeVpUNeeiotDftBeHqa3qWQ6W5WPg8TMmD
sO1LsxQbh1w81Mos+5zwvPwcY2B/Lq6FBYQ/+f/z2NrVYSgH5UwNbt0jzHl4
XbN/aA6+H3yWaE74Tbr365oLOXhtfo+OFuG2vW8SZ9aycfMruzsKhIvrbPb/
y8pGu/pHS2KEBy3uH1qzycbOWfM/bIQDpQ40TQpnI9dlHZtxYn9cko4KVbRl
oae+jWYV4cTkc9Le3lko7FT9OZrw3UMnd55UzMLRk35ODwkPasXNWXzKxN6u
Lnc+wso6l//1G2YiM+VD8RART76nmhdUN2fi4PAV+8+EvdcPjnU7ZuBTjR26
0oQ18rxvsUlloPHkreeTRP4M8qZ7iA2lY87EwYMJhFPdSAPiaunoezxqwybC
gU/FxLiX0nAxzLCvmMjPIIuXAzkWaXj2YYn2bcLxEoKcEXKp+HxrkVwRkd/D
R5W7e+JTcG3oUbIp4fF2lYyFTSn4QE6odo2ohzKDP2cbyF/xUbIR63HCYV+l
TF9c/IrO3EL7G4n6+SevpiyUnYya75hWTQiz9ZpuHfFKQpLeq6wnRL0Zffun
9vPAZ8yNUfD2Jeq1o+FfR2JIIhrZ/z7NSviFz/Ek+dVPGH9PL/sZUe8vJ9yn
WL5/xIRvMlU3iX4wxdd9ROxOPFqP/07ZGEr8v/Yf6faXI/HB+oTQkkAGWifv
deYRjsCnsfFqrIRrG/50Ok69x444tsoLRL8qfeL56d3Lt/jSWWRbPdHPjnX+
3aCUG4zSrl7acT4MPPpS3nls13MkvWZayCf6aaKkH6XM6inGL6ckfX/OQNnP
tdFTgY7Y4S58YsiNqEem3V+aCm5heqgaeZHox/fzBqTOnjaCRcVabzaif3NU
hSut1ngBX6zNBv8HDLy59Q7/izu+YKi4z8bgPgN3ysTducvnD4K3vcSF7xH7
NbHKXpQRBCbXduR8sGOgnZikOzfLW2Bna7V8Yk3sv8ppD7krsZCfqbTxuTED
pc6rGmozx4Fp1Z1q7mtEvn2jSbilxMEhJ+v5aENifcf0XQXXJ8B3Kf13KQZE
vB+6ppzM/AQR/TuvxBPn2+pPQUsGz1coN1sNpqoy8L9G3njZ0q9gbHWrRV6F
gVtTX/19dfsb2GQ6Br0+xcDwpOm2G5UpoOKZHX5IiTi/muRFh+XT4cjeQ3Mq
ssR6/STWXs1lgo+RoGe1BNGPYkuUfxjmw67uZKWTHES+f71Y352cDzZ7Bc3U
2BgYYkgZp67kg4OY7hud9QxcSJG7yhRTAAkiE5JmTAx0rN9xRo9aCEb0A0eu
LtIxpj1pq4ptCZyoSVIqHqfjJtmA0ljlcuDq/XX7KjEPCamkJ0pbl0NPRmXe
hgo6OhyrS8p7XQ4ant378pGOhktvCxrI5XDl78c7m4romOKytHH4RQUUyGsk
v8mgo3f+6ZammkrYKXBISSCGjn8+K2eyadZArS1Fc9WBjuPPTDOynGpg3c6y
60L2dGQP9Fsx/lgDlJ1fRY7eo+Ovmj18H1dqwK8mN934Fh0n6s83rkuuBVat
R9w+xHzY7FwxP8ZaD6+f2q7AWWKeS1UKyS5ohEsLaurHeenINZVcVTLSCKUK
fH4Tm+n4+XOmftmWJgjo+e7yfiMdK9f1ymVYNsG5TZGP5tbTcazT+SHwfIcR
n9l8+z/E/Myho7Bk1Qyl16tN+0k09JO2lt7t1QKBEgoXZYh5Ok/n7nhZRAvE
q5wv9o+h4WBEE4dpWgtIbpxfGI6g4XLre51XPS3Q7nSo1CeEhmRPrh9JB1rh
lk9H6NeXNCwl/ehc/t4K/Cz6I/pWNNSwUu58z90OzAfy6+QkaKgAETJv9rSD
jncdr5Q4DZuc9CI85drh/IsL3Nt30zCwhdXUyKwd+s6Yic0J0DAma+pVYVo7
CGyJ9LvLRiPOS4H9GpodEOCsavqhfh7J0vve3fboBO7we7JCyvMYfUZkj1pY
JwQffnar/Pg8XtfxMRH+3Amu045JFgfncbztdHZuQyfY6/Sef7tzHmdoFhxR
PF0QdESqNWt5DjMOc24+ENMFusrLhs05c+jr/Vh3e2Y3ON0OE3soMYdk5+nn
OysJuxuLGBL3MQuJXQbbOrrBwcV9Uo5/DgeitvX8XuiGvfX1HaPMc8jkGWpi
fLIHkpSam38NzOJI5+/QwtIeSP7Ufmr0zSxGMEfnBFT2QiYrdW7tD3E/PO7C
TuvoBRGy4wPVWeL+GKMTen6sFwZalC8+pxL3SwmBk/0cfXB/MZlGbZrBksk3
n/01++CgY22aetwMKuoo0zZ09sFfht3g5/MzWKFWsle2nwR951o1HgRPY+iV
3l+aMyRYMBl7V+A5jXHjn0lGqyRwcw+sWHpC3HfJHt91d/YDE+1dovmNaZT9
9+Fy+bV+6JBPlPshM40pr6vVPXr64e1UxYxw2xSWnqKp29QPQCDT7UFbzins
Hs1SE+oegAOPJRPc1yaxVehNL44MQLc9lfSaMYm6krGfZv8NgOI37Yiwvkm0
uPNnf+PxQXAOc6CcTZ5ELhmWCz4fBiFN7SrInp9EFa4dk4O3h2DZ3yRf3nUC
v5I4zWQfD8HlM/cfX3kwgZzeXJ9eeAzBnl9dUnY3JzBUxcB9KXIIOiV6LJ5d
nMCi+7v7rzcNwfubbhHKAhNowaS++JKfDLJnmazlvo0ja5Hhy857ZHhV57w8
1TqG1r1hXAcfkeHSblHdM1VjOGj034CrMxneCq+zDcsdQ2cB/rM8nmSgxBjW
7oocww+CavO0cDIsi/sUfrcYQ3QavxdeQYYXxZdq3/8cxQpSwYHQWjKceanH
bTc6iipJIiy+TWRYE8psl+0eRcUPeczmXWSwcxXLzywcxbcr1X/qJ8kgfeCd
q6r7KMaLPQx7toUC6xN2nqzeNIqZtn3MQnwUkD8cLbJ5bQQF3g9bpQpSwFTA
UunS/Ahyyd/cUCtKgbItKazZrSO4sEfLMe0oBbbENBvyvx1BTvtnE0YGFJDe
zHxdSngE1cmqdza9o8CCzj4+nz3D+Os2r/fxSAr0eNn/0t86jCdPih+58oEC
3u2OFEFm4vPrAVIvP1Ngw1Zy87MhKqo+/Xf/ZR4FGmQUHCvDqRjIQeXY2UWB
DGNOQflNVLRXkl1o6qXAkYrKJINlCtboUy84DlDgMYwx20xQ8MO1BbHMEQqw
ZYmu2lRRsM9ht14zgwLn+W8mDD+lYOsL5pq3XFSQefK6Pn+CjFfAT/o7NxV8
NtQfFOkiowpHT8/KViocbZnf41JJxiPPfy+f3k6F3+SOcp4YMjYamxx+sI8K
95uZHbJ0yPja5mmLoRIVNrMeWY1+OIQJJWP5W09RoUqkT+KvxhAW2mg1VqtQ
Yb+iHpzdN4S1M2dseM9T4fbf1QNBPYO4KyP1mqYOFeIC29q5FQdxIid08wVL
Klg9WDtZstaPS/uVp0ytqdA096bUqLcfhwYXqXduUcGBPebQSFY/Kk/8kHx8
hwqJR316C2368RDLtl+yj6gw6FoR/7iVhP0OexL5H1NBItO/3uErCbdoPrk/
60Ss/009w8SThBI1JzR8XKjQ3fnV+JccCd38M/htPahwYvTZJpkPfdjFYe3G
60kFVf2wytdOfZip17iW6UWFf0tNCb3affhnF4vykC8V+tx7/hxZ34fBmktF
I6+poCY4n7hg3Yv+5WktesFUKFFtMsk51YtJo93LJW+oYHRH/ZG5UC96de8O
ehpGhfLh0+OuDT34N+9ydUIEFdrESpp/SPVgzqtN/v2RVFDWvvb8J0sPHisN
vb05mgqNilr9LP3d6B6/7oHJBypcZM0tmfLrRv2rIVlfEqhw4VySWdtUF2aP
fDyf/JEKD4+LRBtXdCHL+vDlj5+oYNNaS24P70LvgIB8z89UuG6ymOF7vgs3
qW7N+5VMrKdGbnXrp05MeqCliV+pMPTxEo3dpRMn+Zw4PL5RwfLVN+NJnU4k
jT1iLKRQoddow4ADUycWrR8W/5RKBW3m0zy7uzvwgL+Nm2YaFUwTZNZyUzqQ
Evqo0DedCl9szc6lG3XgnNJSlHAGFbhfuFfxHOnAyNyAtGTCLpP7Tpuzd+D5
43dt0zOJ5/G6ujVkteMWdmHB/VlUeBZUZzXi245R5PiVCMIu1xvfzVxvx94d
gXdvZ1NB8xDzvrqN7fhxyifoB+FIOaFrWwbb8NXQfxXSOVRw+hMiopLehpnl
O9leENaZ1Qs2e9GGJ3hXTX8QXlguqLut14b79wT84MulwsTXKKrZvjZ8eSze
SIewuJfOispiKx58IcLiQ7jBMOU/noZWnLZkasoh7BWwEtUY2YqmtzXzSYTf
P+Awt7/TimsW+xqXCI/774xghVbk9y1h586jwtrkXytP7lbM9b36YBfhA7dp
Y3RKC3r4XeLYS9h63lBGPasFsxeKusUJdwdLPAt+2YKlQpwD2wnnz870VOm3
oEb8BWFOwpWO926N7mvBs0emIunE+6bGo8LH5n9g+blfxq2EC70y1QeCf+DX
MR7LJMKMuDKFtKM/UPjtjfwnhCVy5b4adzajXCD/NRXC+4ZNBkcdm3Gh3kWb
hfD5U3071AWbseCSb2wxsV8GhtdT/Qu+Y1B0i8ZdwsllmoPJRt9xWlbhmiDh
aXGx359WmjDIfltrIREPJza6imtUE+ak6mbpExZwNd5yTKkJ9eOusk8S8bSv
3p9UO9CIh6Ry2hwIT5ntuH7StRE7F7l3LBH5YH4w8LnvrkZ0vyoqP03ki/qa
/Pka0wYsf1m505CwnaducNZaPcZXK4cikW/bKsL9nsfU47UNX645EvmYfbdt
rHCgDpXcB/NriHwNrPP7KfmsDkMPXKzeQrj7Qza70846lFgwZ/cn8j1aTPxT
oVEtjoufVf9/PfBy3ienLtVgDz8aTRP1EnX5l5fn+xpccj27fDCJCp8deT1I
ndVoGy/EZ0rU2/29jbeOXa5C+8kN/leJeqRxvdp/brYSaRGJmzWIenWdij2n
5FeJdWUT+rviqLB0219soKYC3Zzvku9HEfl8aUFjTrEc37msm+kk+slLpW1c
5heKsf7k5PCzIKJf0guyi14X4er2DRoiRP+xDNoi87OzEClsCoF6/lR4F3L3
6Yp5AcZp6tQ+JfrXl8bQ7Z5OuTigPpfU9ISIv/96mnBsOkbxtKfuJvqj/Zay
tBP1aej/34P0O45UKPA1vLZeJxWX9KjNy/bE71VczwpYfMX/chnP+mypIPTk
WOg5j0/ILPNrNs+YCgM8nhLXnEOIe+c9STSigoba6fpe7yCcivv2p/wqFcp+
jxbqH/DDD2qqTwv1iH4eGlurUuKK2Q/vSThpUOGmrOHR5cf3YWOvStQhBSoc
ozZ66hdHwguZEGojPxUcWUQDoooz4WD1UsdN4rzK6HiAzo+y4EJFVNoycZ5F
hNV6axzKhqkZ+VPCm6jQX9+5o+5DDtyoyS5VZibyt7VGbdOLfMhyS/RZnqWA
tlY151HVUjCdZ5wKqKTAZGjoYGlvFSQ81R38YkOBS1q/Yuc4W0Dv2PC0oyUF
rCiHBWbkW8CwdlZH9QYFbu5mMybdboENTS2q3dco4PGM0hnY0AI7ws+rzVyi
QFbxC+Zzvq3AOfPl+I9jxPyw8CKij6Ud5scqnN7+I4PHIf6rAzPE3H0zOasx
mAyn4hc0/HxJsMQV+tAnkAzuIYV3tTJJoPnVxOiMHxk+DgTHryeRIJysGF3w
kgwdMduF5aX7AdjNl8Mfk0FAefRez/d+uPff07UjJmQo40jKJHENgrRKmGux
BBnaM01+W50iw8NQMgefwxC4zDg3J78n8i6XMepuR8yDyTJmJkTep1QcVZi9
OQTFgurarGVU2JIYpVisPwSCaKF5fJw4x3as7VQ4MQSqxjXB/MeHwVQyB/KX
BiHCkBHY1TwM2QcK3AJcBmEqZ3irwfIItFTd3hbnMAhqsuslszaNgsDyH+8M
u0H4s5vdl3X3KNTtbxqoMx4E8a9Lh1+pjsL4ZEd5i+Ig3CL/4dvqPwrfiLie
Wh2AkaGvO8V3jEHmripJJ6cBYKG1KSseGQe7UMcllfsDQL9r4fXz9DiM7WXl
5rQZgEv5X1xjdcbhML/Rov+VAZi8IviC9HAchDQuClnKDsC9guXezpxxaDjR
km34sx/K3rxeJZ2YgGie4inp2/2QbZbU8d+xSRgPxrBH5v2QX5WTGK06CWXL
RW0FV/tBZTHvyDrdSeA8JT9zTK0fHEo7HyY9mIR6fS2mBfF+WNlXmOGaOgmG
Y3XV74j7g4VV6k3FfVOQdHxq+tRFEly/eleRffM0SNls1w0+TYIos3rayR3T
IPuz5+yAHAmE/ZlKLSSnwYvdvdhaggQs165+jFKZhqVqVYdz60nwIM04OcFx
GnyjWFQkSoj7zIrADNvANHwKa3S5KtUHIguapD0JM7BP+jQLr1gf+M3TTBXS
ZiB3xiegRrAPqGK27BeKZiDz/sVoEbY+OPbKv+5C+wz4pVyXe0/uBUtj2EZh
ngWlI/YDwaG9IN5oe87abBYehdS9DVnsgcg1n82dfHOweXzn/R+zPZDxSSel
RGQOLvzaSlo/3AOpXQU/I6WJz8WtdI2/94CJM+3JyTNz4MF9WLMkrgfoBvtd
F+3n4I6jjoPqhR7IlitZ9mqeg/EzW+RVQrpBuS/yy9SzeRj4+bLos3c35Ntv
CvT1mYcHm1+fZXPphlNyDUd2hczD9jODFqk3u6FR2CBP8ss8rIZqmCYf74ax
T9taK1rngTKTw36pqwvyh51WPHloMM5z46UUbxfMGwdtWDWlAR+N0eXG1gUB
arozVy1osHHwW+735U64XvLrRoY1Deb6hrYaDHdCQZQ1l/59GmxwNmIWyu4E
aT+lG9buNOAK5/5mqdcJxmoHrPPjaXCEHmmwMagDLJi4SZupNLhqo8MR4NEB
wq6yG4ZGaWDr1bqe43EHnDrA05s8SYOon8+7J0064KRkw/XjdBoonHDMNZbq
gJD8SgEBJjrEun9jW6tqh+9rs+/ZhOnEOXTi896fbWD398XLz7p0ELuiI8Uz
1gaS/1Yc+w3o8Fz0H//vnjZw4U04x2VEBzUJ2o5vpW0Q/DfG7YYZHZbtqjvr
fNvAoeKONcmODnITpfZVu9pgt1aqL7snHcY/5W85x9MGXoGJQcvedKAtF24o
Z2mDLyUpzyZf0eF8r9nWhIlWKHVR2FQURIdRI2OHbZmtcNq1bOPBKGJ9G44p
lqu2wm2G/HbNTDqINhj79RxvBSXBK/Vr2XTw/5lybFKiFdLcRW2+5dFBQGw1
7PfGVlD/pvJ4pZgOq/Eyb8vbW6BW/d6sTS0dys9eKBK80QLtZ4fq3Ul0iFfj
n4v62Qwv3lvNpzExYI/llYK49mbourSmxc3CAJfP6uveZTUDe8BDFjtWBpg1
VHHrPmyGL/eTTfk5GfDydZgDD+M7PHn6gOPwVgbwB5yuTpppgpxU6TXPPQz4
l54am9fYBBZvZgYj9zHgqUyyRG5yE3ipdO1OkWSAxquKc542TfDh/O6acmkG
yIHgUbvhRij651+WdYwBUtESOmZdDUDi99YqUmXAq7ZX5c7ZDaAjciTF+ywD
Dldc2+31pgHY35k7X1YjfLeo4N6lBrhcFHy79SLx/JCNvwOr68FwcGNZjDYD
HFT5jjFn1AFeijtiZsqA/9qbVw4G1sGbY23bRq4zwMeQxqFuWwc/rebcLMwZ
cO7Y5EbDvXUQO3azT+8mAwo5E29Wv6+FEJHx7nW3GSB8QV581KUGXn7RWvB0
YEAdi7+f/7Ua0BGdcE55xIDhgXfPJORr4AM/m0SrIwOUf3ULyP2pBvXi5N+b
njAgV3xPfdX9agidCgo0eMaAwAq2AxsuV0O3q7bFdVcGqJiLnzt9sBooCnpW
N90Y0G8yU+8/WQVBcZwrN9wZkO0I+cHmVRDdXecs48kAg0MbvjpAFYjliA/s
9GJAj61xoLpwFeywS3zE4s2Ah5PWKp09lSB5UEyz2ocBnkEDew0vV4L3342Z
O/wZwEPSvdEvXQl22oWUccKTsXfqdDkrYfvd6MvpAUR8dp/4b3d1BXw12Tp1
/DUDbkXukN8vXwE92w1k+d4Q+8mi/PbStgrYU63sUEHYjoNy1eZXORwf81+0
C2GAkcCxI09Sy+E/xtOe3FBi/b/FNvOIlcPd01m8u94xgJiQn/WtlcFSU2ts
KuEr/42EvieVweuRz88U3jNA0sullxFaBiUcKRIXwxlwlDM7WYS9DBZmQo0U
IhnQ1Lj/uUgtwslzY09TCTdXVLtPuiGM21//JRzFgDcFXFon6aUAfhvm6YSd
PqmeKksqBeGIaw8Noon4vrO+dORGKfwq3aabR7iS9cemtrYSCG7l2383hljP
bi/KOr8SeEl7IlpFeMmSV3inagksegQ/EfjAgJ+erbzcWcWw98oezXTCH2+Y
MSZvF8PmiJqGP4T5Hrt4pIoVA+ParW8KsQxgZtZlWwwuAt79zLH5hNe1L9Vw
nS6CLNvOHYuE7+zoMd5AK4TE9Drho3EMONO9QJ2KKYRFSdPPtwgzu3k7ZGoW
goODYGEk4e2zs9JmqwXAFuN8pZ6w4IVciV/JBSAkyOHOINzHCH9+17AAFvPP
yG2LJ95n46r7g70ApPOyXU8Q/nXwUbFAbj4MfurX1yVcX1jUfeZmPhx/cBpv
E95nWlRuyJsPOUY2xc8I7zmw4Z1+WR58XOi65E/4SL+lg9zdPDAT3+r0lvBi
dYkj8848aNyScDKKsHKuZFFWfS7EHOQKiybMoE6aajzOhXaZHr8Iwm+b77k1
7ckFJn6/3SGE7xzVkz/WlgM5rCna3oSL5q6leLjlAOVutfjj/69nzPF3oXQO
HJq/9u4G4VMMPNrXmw35BospFwhvbnPxoHhlg9A3sVvShG+w7FrfejQbnotb
NHASFnit3PGFnAUam1TaR4j96ZhO4L0VkAVhTWqehYQ3U5UGeeSz4N7AKsWP
8NK9fQYJY5lwsnZy6irhb6lx4cIhmTAh/C5OlPCbTOG655AJ558FsI8R8St5
ILPu+3QGaHvq70okbFlhwCt6JgO+cT27KURYI9XqwH5aOqiWz75tIvLDsn3L
9+1R6RDtovP8KeHzQ9PWjuNpEDUj5NpE5Nu6vhX7DuU0UDQPCPt/PtrN3nrP
9jYVJA0Ebm8iLFfMozChmgLrhHy1FIj8tey9p/Q+4hv0FL+wbCLyfZelw01h
+lcw98xQMiTMu//4oS/RySBl2aRkRdSL1pUAsdpfn6HUpuSzJlFfykH9BRIX
P8O2dRLrSv5ff+Iu4dc/JMKkwcp+ScKMMLMLBhc+gdL3xXn6WyI+9wvErCPj
YUMxPtYl6ptb/XqG73wcPExfdowj6n/7+jj0VI2DAMNS7WmiP8y8+7Io0PUB
/qOMfrAPJvb77E0nqWcxkOCmLpAeRORXA7vSgng0mKor3Z0k+k2T85Neh4ZI
UK6TT9pFmOfvcUry/QiwmKiouxzIgP8BBn7NCQ==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$191526, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$191526#1"]& ]}}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True}, 
       AxesLabel -> {
         FormBox["\[Phi]", TraditionalForm], 
         FormBox["\[Psi]", TraditionalForm]}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "ScalingFunctions" -> None}, 
       PlotRange -> {{-0.5848462415291913, 
        0.5848565256350046}, {-1.16467594200371, 1.1647010633776982`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"1\""}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], "]"}], "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             FaceForm[
              Opacity[0.3]], 
             RGBColor[0.368417, 0.506779, 0.709798]], 
            LineBox[CompressedData["
1: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
0gyl4X8dUbqv
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$191569, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$191569#1"]& ]}}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True}, 
       AxesLabel -> {
         FormBox[
          SuperscriptBox["\[Phi]", "\[Prime]", MultilineFunction -> None], 
          TraditionalForm], 
         FormBox["\[Psi]", TraditionalForm]}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "ScalingFunctions" -> None}, 
       PlotRange -> {{-0.6384145077201722, 
        0.6384457296868133}, {-1.16467594200371, 1.1647010633776982`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"1\""}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], "]"}], "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`a$$ = 40.849999999999994`, 
      Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
      Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ =
       1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
        Hold[$CellContext`a$$], 40.849999999999994`, 47.15}}, 
      Typeset`size$$ = {450., {190., 197.}}, Typeset`update$$ = 0, 
      Typeset`initDone$$, Typeset`skipInitDone$$ = 
      True, $CellContext`a$191741$$ = 0}, 
      DynamicBox[Manipulate`ManipulateBoxes[
       1, StandardForm, 
        "Variables" :> {$CellContext`a$$ = 40.849999999999994`}, 
        "ControllerVariables" :> {
          Hold[$CellContext`a$$, $CellContext`a$191741$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, 
        "Body" :> $CellContext`drawWing[
          Part[$CellContext`sols, 1], $CellContext`a$$], 
        "Specifications" :> {{$CellContext`a$$, 40.849999999999994`, 47.15, 
           DefaultDuration -> 4, 
           AppearanceElements -> {
            "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
             "DirectionButton"}}}, 
        "Options" :> {
         ControlType -> Animator, AppearanceElements -> None, 
          DefaultBaseStyle -> "Animate", DefaultLabelStyle -> "AnimateLabel", 
          SynchronousUpdating -> True, ShrinkingDelay -> 8.}, 
        "DefaultOptions" :> {}],
       ImageSizeCache->{511., {238., 245.}},
       SingleEvaluation->True],
      Deinitialization:>None,
      DynamicModuleValues:>{},
      SynchronousInitialization->True,
      UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
      UnsavedVariables:>{Typeset`initDone$$},
      UntrackedVariables:>{Typeset`size$$}], "Animate",
     Deployed->True,
     StripOnInput->False],
    Manipulate`InterpretManipulate[1]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.758872280050231*^9, 3.7588723347509184`*^9, {3.7588723894935484`*^9, 
   3.758872455533968*^9}, 3.758873083534842*^9, {3.7588731505157776`*^9, 
   3.7588731827156544`*^9}, 3.7588732329215*^9, {3.75887328799125*^9, 
   3.7588733474821014`*^9}, {3.7588734270085473`*^9, 
   3.7588734346550183`*^9}, {3.7588736398906617`*^9, 3.758873652184871*^9}, {
   3.7588736931533794`*^9, 3.7588737743442283`*^9}, 3.7589704674030285`*^9, 
   3.758970654121313*^9, {3.7593106524879436`*^9, 3.7593106681794395`*^9}, 
   3.7851628524268827`*^9, 3.785162926348107*^9, 3.785163043538539*^9, {
   3.7852435023740625`*^9, 3.7852435232731843`*^9}, 3.7852437305684443`*^9, 
   3.7852440356513777`*^9, {3.7852441043430486`*^9, 3.785244210015951*^9}, {
   3.785244242217107*^9, 3.785244271118507*^9}, 3.7852443574106984`*^9, 
   3.7852450463135014`*^9, {3.7852456064819465`*^9, 3.7852456296292934`*^9}, 
   3.7852507977379675`*^9, 3.7852509069239635`*^9, 3.785252912158183*^9, 
   3.7852531671287184`*^9, 3.785253210422945*^9, 3.7852532626277757`*^9, {
   3.7852537637628202`*^9, 3.7852538088500366`*^9}, {3.7852541114975405`*^9, 
   3.785254133831778*^9}, 3.78525424249282*^9, 3.7852542771054907`*^9, 
   3.785261258021784*^9, 3.785262076859126*^9, 3.785262163426772*^9, 
   3.7852624801405516`*^9, 3.7852631846830416`*^9, 3.785263302406492*^9, 
   3.7852633631776466`*^9, 3.7852635134671392`*^9, {3.7852635741211967`*^9, 
   3.7852635893176556`*^9}, 3.785263851611332*^9, {3.7852639664179106`*^9, 
   3.7852639873723183`*^9}, 3.7852641204463067`*^9, 3.785264158743861*^9, {
   3.7852641992874966`*^9, 3.7852642276409445`*^9}, {3.7852643182265663`*^9, 
   3.7852643493376245`*^9}, 3.7852644089011292`*^9, {3.785264520063408*^9, 
   3.785264539752267*^9}, 3.785267409528537*^9, 3.7852681749202657`*^9, 
   3.7852697630160265`*^9, 3.7852699982707105`*^9, 3.785534749843243*^9, 
   3.7855385258230906`*^9, 3.7855385721228037`*^9, {3.7855386068082347`*^9, 
   3.7855386238566217`*^9}, {3.7855386555543323`*^9, 3.785538751666424*^9}, {
   3.785538884970377*^9, 3.7855389150766773`*^9}, 3.785538952636283*^9, 
   3.7855390152016325`*^9, {3.785539055340662*^9, 3.7855390954977546`*^9}, {
   3.785539136433443*^9, 3.785539217698493*^9}, 3.7855393426364856`*^9, 
   3.7855393728231783`*^9, 3.785539450376194*^9, 3.7855394889345913`*^9, 
   3.785539530898578*^9, 3.785539562612153*^9, 3.785539596795638*^9, {
   3.7855396441754913`*^9, 3.7855396864201255`*^9}, {3.7855397305300894`*^9, 
   3.7855398483485813`*^9}, {3.785539883725809*^9, 3.7855399593852243`*^9}, 
   3.7856088080241747`*^9, {3.7856103777528644`*^9, 3.785610439922303*^9}, {
   3.7856105990123158`*^9, 3.78561062523814*^9}, {3.785611081511992*^9, 
   3.785611094662157*^9}, 3.7856111436067*^9, {3.785611185347499*^9, 
   3.7856112087623625`*^9}, {3.7856112463653803`*^9, 3.785611269706914*^9}, 
   3.7856115520974693`*^9, 3.7856115908282676`*^9, {3.7856116390026703`*^9, 
   3.785611669542353*^9}, {3.785611722898271*^9, 3.7856117516608343`*^9}, {
   3.7856118269823356`*^9, 3.7856118368420296`*^9}, 3.7856183031976185`*^9, 
   3.7856195360614257`*^9, {3.785619611331256*^9, 3.7856196515918794`*^9}, 
   3.7856197125390778`*^9, 3.785619744725647*^9, 3.78562034267293*^9, 
   3.785620427261402*^9, {3.7856204696110797`*^9, 3.785620508307721*^9}, {
   3.785620633816839*^9, 3.7856206563054457`*^9}, 3.7856207080796957`*^9, {
   3.785621059008577*^9, 3.78562111498225*^9}, 3.7856212132105384`*^9, 
   3.785621249442583*^9, 3.7856213837873807`*^9, 3.7856214152889743`*^9, 
   3.7856215941738997`*^9, 3.785621984088272*^9, {3.7856222144398317`*^9, 
   3.785622224181604*^9}, 3.78562253436259*^9, 3.785830682384946*^9, {
   3.785833321269907*^9, 3.785833343446749*^9}, 3.7858334092447085`*^9, 
   3.7858334501385565`*^9, 3.7858335202649107`*^9, 3.7858335772630177`*^9, 
   3.785833615421275*^9, 3.785833702928934*^9, 3.7858338413113956`*^9, {
   3.785833893784486*^9, 3.7858339303882637`*^9}, {3.7858339806311803`*^9, 
   3.7858339984397635`*^9}, {3.785835258520028*^9, 3.785835355975478*^9}, {
   3.7858353914118395`*^9, 3.7858354047230186`*^9}, {3.7858354547055416`*^9, 
   3.7858355051179953`*^9}, {3.7858355557085934`*^9, 3.785835584397952*^9}, 
   3.785835774140715*^9, 3.7858358081611495`*^9, 3.785835871146635*^9, {
   3.7858359297498217`*^9, 3.78583594903004*^9}, {3.7858360036339746`*^9, 
   3.785836029403308*^9}, {3.7858360714444723`*^9, 3.78583620668647*^9}, {
   3.7858362420794225`*^9, 3.7858363288547688`*^9}, {3.7858363783262577`*^9, 
   3.785836403486186*^9}, {3.7858364743836584`*^9, 3.785836622902642*^9}, {
   3.785836711548108*^9, 3.78583673608899*^9}},
 CellLabel->
  "Out[1131]=",ExpressionUUID->"342933d7-af98-4218-a52b-874fee235028"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{998, 1241},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 228, 4, 67, "Subsection",ExpressionUUID->"e64cb84f-de9f-4b90-a5e9-1ea323c30588"],
Cell[811, 28, 53162, 876, 114, "Text",ExpressionUUID->"64d0d6bf-1eab-41bc-a7cd-251369f4e925"],
Cell[53976, 906, 29624, 722, 2715, "Input",ExpressionUUID->"7405a249-8e74-42ba-8cb9-4ad6b37b789b"],
Cell[83603, 1630, 9652, 247, 569, "Input",ExpressionUUID->"b8b499bb-9d2f-4be1-820a-74f2d72ede84"],
Cell[93258, 1879, 6289, 129, 324, "Input",ExpressionUUID->"7c173ea2-2946-49d8-b3f4-f6b2d745c11e"],
Cell[CellGroupData[{
Cell[99572, 2012, 16264, 364, 1293, "Input",ExpressionUUID->"51dba8ce-d54e-473b-8306-f61498bec997"],
Cell[CellGroupData[{
Cell[115861, 2380, 2113, 32, 28, "Print",ExpressionUUID->"7300b89b-4c76-478a-8fe3-874941c4954b"],
Cell[117977, 2414, 2261, 35, 28, "Print",ExpressionUUID->"20f52937-a184-4adf-8b9b-d134fc0f2980"]
}, Open  ]],
Cell[120253, 2452, 493807, 8754, 1537, "Output",ExpressionUUID->"342933d7-af98-4218-a52b-874fee235028"]
}, Open  ]]
}, Open  ]]
}
]
*)

