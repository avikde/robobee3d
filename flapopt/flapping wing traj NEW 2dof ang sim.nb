(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    599788,      10877]
NotebookOptionsPosition[    598797,      10853]
NotebookOutlinePosition[    599170,      10869]
CellTagsIndexPosition[    599127,      10866]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["2DOF angular - 3D ambient", "Subsection",
 CellChangeTimes->{{3.758808037911851*^9, 3.7588080500165825`*^9}, {
  3.7851630712097263`*^9, 
  3.7851630750113926`*^9}},ExpressionUUID->"e64cb84f-de9f-4b90-a5e9-\
1ea323c30588"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQeUVUXW9/2uz3HEBJIzKEiQLEFAUECSBMlBoiJBsgISJOcMknMUJeec
JGcQAYmiAyIiGGbG55nnHbtv6Pf33f9z9jrc29xumm7C2Hsteh3OPadO1a4d
/rtqV9UL731Qp83/93/+z//ploQ/dVr0LNe1a4uP6z7Hf+p37tbu/c6tW1Xp
/FHr91t3LfHeY9xsxL/LPP//X0c9muTz+Twezz/+8Y/vvvuufPnyX3311f/8
z/+cPn36b3/7W0REhN/v9znk9XojIyP5yzX3ueYB/st1vNdKX+ET/P3jjz/+
/ve/jxs3buTIkf/1X//Ff+P9c480WR+JaSJ3x7l/etCVjZn8AYrNY0F31Eb7
ye+iOJR/p4+Kme7/+kNISqEn3XeCPm195H7AEyD96g2QHuCmuxDdDK2YPSO9
ttfdzLFn0C/7lu5zJ6gy9q1/B4g7//rXv/75z39iMX755Zcff/zxxo0bvwaI
/167du2HH374+eefz549e+LEiT179hw+fPjChQsHDx5ct27drl279u7du2PH
jv379/OXXw8dOvTFF1/s3r17+/bta9eu5ZrHjh079s0331y9epXCUfz/GyC0
XnVzt0sX+mt3eDgyQLzCNfcxU1xQeXdLE8JqJVK8k1tlHmyXyRkhYIjTzp07
+/Tpg9BKLBP602hB7ty5H3vssVGjRoX/nGSbGq5atSqha5VARP3hKkaGJjRv
3vzy5cvw+cCBA1iDh0dn6QVsIFaOqsqEJtKdSNZY3gTJfNDVuWsyHx2G3L7e
XIyMAz9FOCSHG1Sa+07Qp8N8UY4PEg6350Mhn57xOGS/2gPuJphvFbbnv7QC
16nK21+BcwsHVLKu3cW6vyiPDPE6BUpx+Pvf//3fKDvA/qeffrp58yZAgkhE
oIIY5Msvvzx//vylS5cITPbt24cp4M65c+e4iU04evQoUOHIkSNcnzx5Elyx
ceNGUMSpU6cIYb7++mu9DizhJ2EPvUIJXPATKszfb7/99vvvv+ejv/322++/
/y4IES1miw1Z16gc4imVSav1Fw7QZO7Hj4Am0n0kC6OkMg+wJv9yCBdJ5J4k
SZKGDRsiVPchQEa269at+/jjj48YMSIME9yGccOGDQldqwQixT6ocLt27apV
qzZ69GiQCbZClu1B1+5/SbGbjZk86Oo81CSEjM1Hd+4Deo93ChrhiRaNBA3+
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
Au+9nganr169SkdQ26NHj8JYRCVoD5nYkw0/iuduJ3XvFU6k+0MaLM2fPz8A
9UHX5U9Nsleo0uHDh+fNm4dbsUNe4jbv/+chreVctWoVTjlz5swjR47E92lF
+YULFyZPnvzGG2+AH+CqZZBiANevX79w4UKAyogRI1q0aFGmTBni5QULFig3
IMznNIlA8A4gCYMVhUbkXo8fP16hQoXatWtXqlQJ804IwB00LkOGDJj6vn37
pk2bFnfsu8N+6XcqPzKwidDy5ctx91oxFxHdvtmnT5/mW3h87Y7iczIt4+yw
eJ0AvFixYgUKFIDVtkSIygMA8FxPPPEEEKt48eJ169atU6cOKLFt27Y08Kef
fhK0sCwawTMwDI9RT8EMHYdE1IxdAtucPHnS65yHCBqBhzY0QWdRk0jnLCRh
eO1VsnXr1oEDBy5duhRuB8E8jWN88cUXVBJvCDhRAmpQFmjQcKXWGA4ePBis
lSRJkooVKyotR0KlT/OXm9o3yTJqVE+hUANjceN8jER9+vfvD/6kUff+FZ+T
40RXAnJoV3wNOPgcokzEY9euXeCQxo0b16pVK2hJdezJnRnuBlRxXgeUSPeZ
pGgETa+99tqoUaMedHX+1CRDunLlyvr16+M98apmXeMrevpPJaLRKVOm4B/T
pEnTs2fPGzdu2IA5xg1/tHjxYkw0RhWHKHul3UJAI5MCRECNJ7106ZK2Ng1v
chUndunSJU+ePETfd3pM8zLamQfAA4DBRTZt2pTq7d69GyNMPIhv/eyzz779
9luKQgflqWPZarVRRzTK/RkF1R9XeP78+T59+gAVBgwY4D46OZbfCuUAraPA
Z555ZtmyZRooEJqiOa1aterRowcoa9y4cRs2bNBRTaAmHX/mc3LPRELdwCp4
Qk9pJ1jQGp0COEQXnn322Q4dOvDr/v37hwwZkjx58sqVKyuLXmOJ6mhb1SKV
EUbSPoqRIfvn29gFCA0/u3nzZr0Sup2agQefc6QF0Pf9999PmjRpqlSpjh07
ptxpvUtHL1myZO7cuVQe7CT9pQ6ff/75oEGDxo4dC2hU1k3CTcVSLEwDyIVP
4Y4N2RAWjAJ709fKrYoX/+5zbeVEtyIbcBLIWrBgQXB13Mq0LbX37Nlz9uxZ
jdr5Qvb5T6SHlvzOgkd0fPbs2Q+6On9qQpv27dtHnE7IRlRI7InpU5JP4pBj
eEKAgQdE5bVr19Y5Jsqs0HIGGIshbd++PRYVZCL/pbUbOiPe8h/kp7TPeZjP
yZNOnDgR50gUf6fHNJBCgfjiDBky8Perr75q2LAhkKBKlSpFixblAssJWqCS
+Fw87+nTp2Pf1/LmMunyyza/EIRqYMWVK1fwknyduEO5NPcyTSCsRVSLX65b
t67tMAbp9GfuaGjIsiN0TIOGNSzutiZo+bBW1x48eBA8U7Zs2WrVqqEOTz75
ZJEiRWrUqNG2bVtUAxgAsNT6KW1xBioQjLToWBThnEwhctff4yyCXrdu3XPP
PdekSRNwnfu0PiPNLKjOtm7r6NGjpUuXfvzxx7t27codbYrL/fHjx4Mqq1at
Cvrt1q0bjpVPAEK0mRixP0II07RUPB6naYKahulAusTPOJfjvz1lukKFCnQE
UuSP6RwE9bVOjIpwttZRe61kv7PdsfoIFLdixQrEY9OmTfQvYYJhIRuQCb9K
S6QUKZ1fryVUkc7JHXHmQ4KSxzlLhYtz586dPHlSoPo/2+C7E5CC0j90EyPw
8ssvz5s370HXND5JTVOQEl/9a/O/EYFNubU7nN85fs7v7LsVt8IxX9j2Zs2a
YWAnTJignQS0pulOE9w+JwnZd/tZdbERaa+z15xlAdnfMG/JcUe5Et6iXBti
KF0TN4GTdacYhSnQUpXc/7Xy7aZ75DzUjONNsP8YTOJxC/81j6zBfB7Yvn37
U0891aZNGwEPpTLanL7flYYdo93TWxhPEA6Ru8dZdBzUUnltJLBly5bZsmUD
jYCaiMezZs3aqlWr+fPn37x5U8tAeBIsmixZsk8++STS2b/X3XC3DLstvFyt
fLGSFjQDYrtn+ANLfqgkrrNEiRIjRowAsEU6Ry3H2SFqqoL658iRI2XKlKAC
MdxAiCTBnXai6NUchN9ZbOJxFhzpzBRAGl576tSpeKVZs2aBzJ9//vlhw4b1
7dt3xowZdCKuNk+ePNpndeDAgfXq1QNO8CTKaMtVLLXYllrLzhtPLJUF01e/
fn3golY5KRnS8vnhJF+kUwjWQJ6a+tGoy+TJk5E3mr9jxw4d+HLp0qX8+fNT
GQwp2CNjxoz4RFwMfU3UTxfwCRq1ZcsWzTElkN+hazJlylSyZMlQXHq3ZNWj
1TVr1kTasUgxzoCI2xcvXhw0aNCXX37pc84isQWYHucgQo+zMHPjxo3ANlQS
zqAFcM9OBHMrV2RMm+1LCFEEBAYERWnq03thQoKSZUQjXViJTp06Ued777iH
k8y2axRUgiELGdTF58+fVwT3oKscnyRRX7Ro0ZkzZ+IlB8Pn5MajlStXrsRC
YuTHjh2LCCkiCEqqvyvilc2bN+fNm3f//v10CgY2ffr0WEtsIHpqS5zMjxi0
RvsQZm1Yh/prQDjCOc4vzBctUVCT4z///LMNdId5S0PTqozcn89ZYSHmUGE4
M2XKFKot+x9+vNTnHCfkHsL1O4cReJ2Fk2qRO/51F8KTtWvX/utf/0oEZynW
UU4CqiZo4BKABK1XM/E1USG7+8ays2QqcUA4nX79+t0p91gs+uWXXwjwixUr
hsl96623ypUrN3jwYMCn0jL/7RBSVLZs2YoVK9pB6ma93R3qcR29ZP9FBk6d
OrVt2zbtSQjk0JZfAAbcJeC2QYMGyZMnz5w5MzIm1t1tk4NIqI+/rVu3hqvD
hw/XTnSavLDmB0FNu3D3jjUWterQoQMsHTduHP2l2Sg8+DvvvEO7NI7ER6tW
rYrP4qfvv/++UKFCYPjGjRvj8UeNGgUPDdtoNIZyjM+6sCUw0iNuAiyfe+45
gI2SPaQOXPz0009jxox59913q1SpgncDXRDFI97KD0HdeIuoQYNyfI5fn376
6dWrV1PPvXv30teATzgP24FV2r5DGdRCjAk0D4u8pUmT5vXXX7+X4CiIKKd5
8+a07vjx4zHiKOHA06dPAx0BwIYPNYinbUZMsKXmMFNbycFeeJUzZ84ff/wx
wtkFxW0TYhycURCKLNGhYH4NXj20U94eZ0oXKPLiiy9+8MEH+GKPcw71fwxZ
tBvlHBJhmvg/ATLBEOHIcH/EAg+64vFJSpciZunfv3/4ncBjXyD6smvXLsxm
8eLFMUd4QKLd3r17Hz161Lahjpss0U2HDx8eOXIkiAKFwsJjVfAyN27cwMLI
zlt8pxiExwi6p0+fjjA3a9aMv4Rm2AGhlMiYDiTyOgdVcEH9QVY6wyU8fvA4
eztraF0THxZUaruPnj174iA2bNhgI/ZhLJhF+trLffTo0fhrmj8uQPgjnX+E
d5AYG5B2F4KRf/XVV5944gkMUdC3ZNNgCHg7adKkANRI56Dn2PVMNBUW+KSl
+Kl8+fJpqppuCup6WV0wEi6pevXqxIzgAZrDkwBacML69esV10c4J9jS6fSC
8dOmNmyZsDvYN6yiyQL8Zvfu3YGC69ata9GixcCBA7t166YtT9FunCPYCbgS
L1G5XDkVoAn4qRo1alB/eZzYl2/jPL7AAhb0iEq2a9dOG5rJcGlzFXHYUnce
f/xxncuJpB05ckT7owJOkBwd3wk2oPkoPgoFNxBveK4t8v5wDhmXk/IElgXl
zp0bzmsRlnwEj33yySd0HLVCkgkQ+FbJkiU1BEdjZ8yYge736dOnadOmPHPu
3DkQS6pUqaiML3AwAU4W34rIUVuEU/yxXku4MfmrV6+mSJGCHonRAsSeaBH8
BHmuWrUqxkhHjgaFBUl+9NFHkc4GuRGBg342btyoPCKLQbBjGFUCMU1+LViw
gL4AvVuMo52yJPnhW+Rx9rrnybZt2yL8Ou3ooR1w0Jzy5MmTs2XLhmDjiJFG
TwKnPd9/cs++KXKRM6V30F/8CDBMWxTKxCEMmCw06EFXPD7JF1jhjokoXbo0
yOTeC4SNQG7MDq6fwAdr36ZNGwoHzzds2JDYweOc/Rc3WUKPqLBGtqdNmwbg
ee+99wYMGIB3/uyzz2zAQUExITZGslGjRsTUH3/88aRJk5YsWULnLl26VBtF
xjjup2jivwPUtWtXIAQWGO8Z/i3bZgGoUL9+fQCArI3t9YR+cbNUqVL8qoWH
MQ5PSVBpIG4a8867efPmffnll4mwMOmtWrVCVadOnaqjeP0h2YBc02RtSQoH
gpjPf6nS5cuXqQ/BrGZJNGcRN+hoo800FhefPHlypQSgX0Gsk3IRPuO5mjRp
Yvtj83qZMmWAtUTfADB4rsPpcCXZs2fXMTGGPz3ONvhaqgMTYC/ybJNNyuKb
OXMm2Bv3h0CuXbu2WLFiVAyo8MwzzwCbn3322Q8//FCjwfEFSJScc/bsWdxf
njx5tM3IXQESC3uhQ4cOPf/88wjzhQsXhDyFtbTcxg1dAJa0Cz7wExxTX8Bk
HBC4om/fvkOGDAGbESB37NiRHsctAlcAbJqrErozQCLRfeutt/C2YAmbAhNK
SZs2LWGCBlgwm6lTp9YCVR4gBACL4nYxm1Sb3ixSpEiOHDn4iqbJkFWwkFJN
ChcurBMYbfjOPTQXvwQDMR3UJx5HSOAVhgX9wkTEGL9rLAilABUj4Wq4HBB4
Bo0GeHud7YWFbJHYL774QmcfADVhO8GIxjq4ScxFn545cybG9YZmHvk6WBGx
hxtBKc0PlaOntkSdGDpESDsU2SxVKOoLHdWMsS0J2lirZIyS7Hfm95EBPBfw
gxiBLgavNm7cGFVFebkZ4ex4hjBgDfbt23en0iRRoR99qDo3iCIDB8SDFnAH
iGVUnGrrHmfGXpUoUQJ4gAdBin777TfKx+aABzTahu5InO7qQyZmNrWtAU+Q
D1alV69e2FjcjQJwj3OKKzexcgASMBIqrL0XcAoEMuClSGdHuzDf9TkHx2tw
lfoT9IU/kEvOXSPzfBrMoKkBGzTQ9AHXVBi2L1y40LJcwpRpOQY0BCYTES9a
tGihQ59++uns2bNp5o4dO7QgN0j+uT558iTOAoO5detW95SEzB3xF5EythHg
LYFXH8UtbvI6B81TDiAQ57h3716vcyZ1UNN4BteGEGqzNU0cwHMCWCSHdhUv
XpxeHjNmzJAAEeaDDFevXv2HcyqxxzkVjrdat26NPce9rlmzRgMU+i7FAgzo
vtdffx1FJmBHUMEJ1A2I8sQTTxDpo+8aNwudQ4m2U4yB9jfoAdUKpAeIypIl
iwZq7haQCBXz1oQJE3Cj2qNV047CDJpf9jrLUrh58eLFlClTYsrk+NzDvOCQ
dOnSvfDCC3AAIEE5WDZkiQgU1oH0uGPzjO42ojJwiX6MCKyjodht27YhTm++
+SavCB3duHGDYoEcyCR2tVy5cnXr1uUC37ds2TIcCu4PjVBILhx169Ytvq6D
iVWONTnhAAkalCxZsmHDhlkm0r0T9USJYBG2LjJk79kgEkKm+dWrV6fh2lgG
niAqCxYsgG/AP7hk4bBySLComjLjYVQAJ6VZMxj42muvqU8F5sN82ucQ3Mbf
AcVPnDghbVUSi8dZgWXtihf+xJ78rlw1oXosfJo0abBvEc5mwhKS0KYZSvff
fqhrmM9FOhuqmyUJ2qElbvX3OzsOYXbkRGJEv5GBA9aJ4HA07wcIlUESUExC
BjQarGtOBOUlHCD+cpfgdbK/+C627sCBA/JxWt5u48kP7fQcnL927RpQgcZi
4f3OIaTh+8IdvPhch1/Q6m7dulEavLLVARpphz9E8ageGqebbpQbvt+lYgqp
gtIGsHWE83wXnGObUWt3x1GjRuEF3nvvPe3bYJXkeuXKlV27dpX1Cz/5IoZQ
gREjRrzyyivgcxqC1fW6DlaWhLhTVvg69Tl27BiyRDUU/kQ5km94jKLy5s2L
25XLCCOrZkPk4tVMi3RsltlmxELDBIj24vHxIFq/qXc1bD5p0iQEfvDgwVqh
aVp/LypJlZSisGfPHqw0n7B0yqAnNbyPbOTKlSvC2bIJQvuI++D2q6++iiPO
lClTtWrVunTpAtzF1XKBW1Ff+5y9kTHyuANgFSr89ttvKwnTJuK1G+qGDRv4
UPLkyXGOiD3gJEmSJJhldN+GWbQN5p2U14Ys9KsWHMlTBPWaRpsB53ny5AFx
eQJLlu4K49lXKAflorYAy8jAlmiCW/92Dqdzz1ghfsWKFcP14+l033Kf8Fl/
+ctfQMJ4twjX+g6uibZgLAolrhoU0TPoL4zSEIo22Acg4SaI5T1OHruwJcqF
pH322WcYzIkTJ2olF+WvX7++SJEihHsayZTZR4WpJC44ffr0OuxPy5ES1A+C
HOh9/HhE/K0uocLgvaeeegrxixFzCvPDAbiqrUvgCVxCAXEisJSOxjep19SD
8BPmm8fs3r07EJcvgv3gNtFE1apVUSL4Gd7dmO2ikvgsdBNz7XOSmeksugnO
EKT7XOnW8cKiWJIBEp+ziRB2smTJklpQGeZFqYNWlmmNvwl/mLdkc5R0bRP9
sur3CEg0AQc/tedAeHcjS0KwTMTUK0DYzOXLl6OVOE06OlWqVEBQnXxNDQ8e
PIg2EUO5C7FIEKCClQPS8F3lklEHookjR45QWpjtuB8s6dBVrCV6hA1Xv8hr
hOl6C8QExiKcsyqImDB0MEFBlsfZoVHjEviRtGnTwlhzOpbhH16D5Gc1sBDG
mJub0Og0xrBMmTKA/9CGUA6+zJayhvm0qvfLL7/grZAQO4fO3IQ8jipmSye0
qg67hE9ENe5UOI1q1qwZJl1DpuEBiYEfM1Ay6XwIBI5YKsUxTFuo+ejRox9/
/HGiYGpFo7A548ePr1mzZq1atUBcmlqKxyl1rSikdfj9zp07ywKHli95e+ON
N1KkSCEkLyd76NAh0AVig2YVLlwYTEKIhHPnGR1twwMCD+oO2a5p06bRufBk
wIABbdq0uXjxonhrUZWGyEAgsAL+f/jhh1yD03CdZsFUZrRjaH5nBZk28sJ9
a1AldKmCPYY1AKWXLl1a0393xWGfkwlDlfr06ZMtW7YvvvhCK3HU41JY00FD
p0OGDIGfQDLD4TypDFtwBVKnTCr3t3gGtKPRD0O2qgA3S5UqBYozUac+ffv2
xSTChKAK0ws8DICn1ei7RRCU+fnnn2MlDB0Jw1Ax5BCE0LZtW2lTQlvLJUuW
0BaMsyQtXsqkzpj6jBkzIskx7tJjAQWoO2nSpMQs9CZyMnbsWOwSoK5o0aI9
evQQXlKQRWiDhsIc+SP8FBCuYcOGr7322ptvvokczps37+mnn45xQtkGACkZ
MKM53CgnhwHnRRCHR8Ag2ITRfXZeJniS21mzZtFZeGdpU5gXJVR4apR68uTJ
2txAFP4t8+PmASNDtuWJPVm0LsUBG4wbNw5PFH6NudQWmzZnzhwkAcPuzhih
HLq7SpUqyIknsG/zli1bUDEAT1Ahqjn3S5QoQUjC11E6TEf79u3xR6g/GJg7
D+cgSUQgS5/oGGtABKeD0c3b3uktReuWY6BIh7+4ALwG0Yfciqy6sAQgHJ9e
oUIF6YshBwvzw1TS46Rc6it3eszvLNuHFixYQNwB26OdsjfzGGMOieAHspQ9
e3bCNzkUc1U+J6/SnXHhCewzhlzBCpxC+AovW7YMg4A1Dg9Iolz7L8mGI29E
uFh77EbTpk1xrOBwW0ccLfGJo0ePPvbYY0A14MHgwYOBWABIAAnv6hTa+AoY
LV7W5AJ6UalSpTuND6gXiM0J1nbs2GHDX7y4YsUKoAhejw7NkSMHjdVwk9Cp
EiwFGlF2RAubDAodNGgQoAt7zjUGXztd+JycMU/gCBi+BQ7ZuHEjTOACp3Dp
0iWzSBqU41tXr17VthLupkmqkfN+/fqBbQjw/+0cABfEBMk5FSCYxRr4nO3O
7mrKxuvsQ6IThBs0aLBu3Tr6y2YGqfmOAGmsRi0FkoH/GzVqpJFDeTFu0hfg
BDzXhg0bgvROXJLKyKWKpAKZM2fGVakmspAAEpQ6aG8xfQjrxyeI4m3fEiEZ
QR2bQvIGVuvwFyeSP39+6qZA8i5ELU40YcIEJN+OD4ivYgESiCuGVENAYZ70
Oon39CmiiKjTTQh5jRo1lKEKFC9YsKC0UuKNPH/99dcKkGEathp/xLvwbcaM
GTyDGGBM0PHwyxM8TuYkr2AheQXm67+aRerduzcRBL5PeZWe+34evU3KUCU4
A8B74YUXlMUdRjb8gclfDSUlS5YMc4EXhksxDnSYv8OenDlzRoFqjK4hfP2j
XAcjgtg/+OCDFi1aaF/xO71l45zAWgIuLfs1sITlBJC89dZbUk/+ou+FChVS
ooWRzAu6Rit69uyZOnVqbGbjxo0RlY4dO2IYR44cWaxYMVxGfAWe8UsSdewz
/gIHyoXNDoTpRNMmLohAUQQBhubNm+PsUCK4IUAibI8ZVHrb8uXLJVTmypWR
Fd5rE/ACktEdLH8YgfQ56eh8l5CBzqImmkMPBSQ+Z+F/+CmbCGdLIpiDRhiI
koTQdsI9QAUOHTT+h3PEPIL9/vvv4zs0WxSmfCwYj4HTtN10GCZ4nUw/HUbT
tWtXJI1PEyJh/F999VUKQZvC9xp2EreiBEJQKNYPIIqjBNsI78XXCIm5Rfl3
5B+PrIGy0CkbKR3YAOuKj/M4WR9yuB06dNCBue3ataNP4bPX2bnUVtbwGH1B
GFK7dm1CVNAFRgxzhPYRbgDeDANLQkApfw0QtjdXrlxKI1G8rEQU+hpISbeC
Ong9CJBQGj1LFxOc4twt6yYUkIgJ586dI8QjavO4siNiyUnxUOMVyD+wrXjx
4mXLlgULTZw4UdvnEvVUr16dn4TQNFaswRCMGJ1rU5mEDDggDTdpLUxQhSOc
leOKxKVTOtkND060ZafP4Lnwgyh1kEn0BhIhypcvX7VqVS1JU+Utn8fI+MM1
8k9pw4YN04DJ3UnbXRLfpS+ouTbDD28B7orgCX6cvtZex+HrIAe6d+9e9FEL
pXFbnTp1khs6efIkLvXTTz9Vx12/fr1WrVpInaJseSXYRW82adIE/8Xn6H3U
GXRhwwhe1xYB7iOnpea8hYd65plneMUbmGDFxvKhffv28a1q1appUtudoWRb
K0S69s+hZ7FItF3Y0n/78lXLW7CGBzEhMmSfPRM8iEgWrwoSvtP4qrs0sQ5F
rlOnDr6bQAbkKVgVqnTuEE8iff78eVzY0qVL3Ul0UY5niXINfYQOHPmcDUPs
oAQuNB1JUQcOHHjppZfmzp2rkCHakMTiWS149zhpfuIDLwIqcNOaTpKEYH+w
e0GFeJwM/+3bt2PZMIkLFy7EhVETZAwhmTx58tSpUx/OERIJGPWkF1KkSDF6
9GgbZ3Y/ZtKl/9pgGoTKAOZRKzhTtGjRypUr/xHYdcrrbNyxZ88exInYZ/z4
8VoLYOEq9M0338AuLJ77c4qOMWvqHZxvgQIFypUrByYM0xafs6MFHwUhY43V
L9oSJKg5bml065c3ZFEqPwE1ESekK9LZj4tuXbt2Lb1M23FMbdu2pZLz588n
3sGX4e8yZMiAeXEPfXtdW3+4+Q9Uw1lr5YtVLKhp/sA6EVUYJqBrsHT16tUg
PbwhwJtQlEAJQBKGP+oRcMhf/vIXpJRICocLeCb6QA3BNloD4u76e4mMTGcp
k65/6qmndJBuUOsMBWleg/pY9pEuEDA4iRhwAZrCJusnG/RWUI/4IUhwHl+D
jUXj6COlU+pJn7O/Nw4UQcWSwwf8NZIJM59//vk2bdrAQMoBNgNm+C8uEpdq
+4DJ9mrkB19ALyxevBi7DZSyJKWgpsnfoR1JkiQZNWqUPRZ7xrrdN++iFCtX
rkS269ati0YglpgpQCnICtmzjFx5McxgmjRpAC2CYegUSAbUlzZtWklL6ByT
DV8YXNeYObCtZcuWAmxiI98CswH/hg4dqilpNQ25ogsITMDqyuC1scQo1+Sj
6YL9V+cXxJjWdY8ksQQslShRQnPB4WcB7oooClVCtJCxGIG9uklbEV65cgV/
wbv8V5ynbjAcB4RewOpVq1Yh/DKJJg/aJxBRtIFZzA52ycCe1xnAp68B59RK
7BV4mDlzJi4baPrll18qwgL5E5OC4Ykgatasia6hdNOmTeOO1gvYYLjcIhWj
TCKj119/HYS8Zs2aq1evSggjA5nVtCvCWW3nc3K/DYVG3mHHA7dxVko8mqhx
y/DjTiocnInk43fgJ9phGzUYDLDBW0JdlB1gZkOsFStWLFmyJCqGsaIt8ia4
J3oBMyvAbwjN58q7hvlgJ9woto4oBnOK30c1YA43cXMNGjSASxRlDY/WK7nb
YgoiUalfvz51U64RLcKqIMOhJwgYn+ll1BzNJYizPTF4EYbQnBiF+YGQzJcG
ABF+OEYXaK7ZxrcNZhv/vc4mVJ7AztiYbqJs/DLWj8gU8aajwW8oERKOtcT9
IVFoXNTtw1mRgSPaCQpOnDjhrhXFIts9evS4efMmWoP1GD58ODFax44dwyPk
fwcONwcSYP95UTKMqPichVdRDob0OVPz7pAhdJhOzCHcQ5wsHo8ILPCZPn36
sWPHsLrYEMSvXr16efLkKV26dOfOnbHGRN+E9gSnyLBFiKGeiAI/++wzbALh
rVnmaGVVmX7oDh+qUKEC7BUglMGhAsQC4Q8AlePGuTz22GN58+ZFfagSNcT5
Um00F1UiPrKujxYa3RX5nalqQBRhYLQH9UrBIwILN5AEgnewmdc5xJkKIGDZ
smVD7xAJYANGwzaOduusWMEFZjB79uyEfsJX7ieF6zZs2EAHAb+TJk365ptv
wn8iIzAnn8YOt2/fHqNEhAh+wP77XPmi8Aqhwi4hYMgk0I46w0+k3RtdbrZG
h+gUCkc1cB/m6GM/DOXuBZMNuAEQxZYSQRB2UTHMphkiv7O+gJsaTtGRzahG
q1atUqVKRUvxYvw3FJCYskuuKAGYRyCGbdfiMpuy+SOwtS9YsUyZMmPHjqWL
0WVCbIJT8B4V0+Ckcd4+YTbc/V03Gr8rwBZ78rtSJQsWLEgvRzrrKeLrExSI
xUPUQQUx6o7qgwGhR7CZ4EliE0Cj8V+bQMJJemrIkCFZs2alH03S+MtXwJZb
tmzxOYPD9AVKZPDV6wxlEysBvEGtlP9HYGNGTCuAFjOFu9c+Y7ACO0xNEH6+
hUHAKCEqOEGcGpKv2VIewyeipFSMxqIFRDSYPoxSixYt0BpqpTR1XrczoSxH
1AJA28Qv1NxFOTEvP6FfgC4wv9QwPFet4bLVIIFMmTKtW7fOxq4NDyOc1BC0
gAXgL81RRhbNRFWVrnMpQNgfVAAJ79WrF1oDSrFNU/UtEfgHy4xcgQkxDt26
dSM4GhEgOIPuoBrp0qWjOf927YccS7mSfcPJ5syZExmQeGAPYTv1udNbfAW/
iZXD8ErORfE7Khi/ZHiVLiPcS506NWZTQ0ZqgiQw0lkGaB3qc04GxybDbXpK
Y5UIgFIaCHVr1KgBzOYnypSiuT8tz44koIlBmZ98CwADjEEO6U3wOaILai1Q
oEAYTqrXNCyTJUsWABKdxX+V9RHlskgeZ1GAGuJ1JYsGCTz/BaERh6J6hjAp
k4oh7VoMEhFY0U8lCcwBQsQ7XBAllSpVCpVEtqm5zjANsrSSZ53NStM0rGSM
DWqdtABzgSfV2It6TQSepNXhxUz8IQKihhqx13gsL4JnZFhwnTCNzrK+jhfX
QLgBQ6ZOnao016BaWR41EfeLL75I+M9jFlxjLcEPWDYQKe7VMiLu9C3exSYT
GmgmMaj+8A07j1BhuukdfKi+RS/Mnj0bDNm1a9dJkyZhXsRPvzOLwd+tW7fi
lykcww6vCDkjAym7mm6LFpDAyfXr1+fLl69t27Y2KexzjWDfFZk9N8WUbnpD
drWygSNiNFQSM6iQFg4TySKQaFzoWITfyVHXT6BuDBpgtV27dtp+xD4X4Rx1
BN9QcEwl4fyHH36IL0PxwUias4hHX3/vZIaLv3QfdbY4K74+QcmgRAAJ4hqj
4ki5du7cCaiAjY0aNerfv7+h34jAUk2CMvj/6aefUlvwg3yZGTFAKTKsPfbl
ZAcPHkxIqHBYhp2bBC845YEDBxYpUgR7K6NNjAwTqCruHgxvfop3MWX8hC/A
t4JGUAf0pVixYsAVnuFFxIn64Okws2gEJS9atAg5X7BgAU65evXqvwcI449Z
06iCezWcN7C0asmSJdgic5RBzPE5Q+h8HQE+d+6cz1kIHJ6l9gnFMiArLSp0
6w66AIrDs6MIEydO1O6IGlkSCNQcFvzH+CP5WPt58+Yh3tSEvtDQkJyIgBZd
8N5779GPQDIwf+bMmbEV6D6tw5wC57AnXMBDzI6WL93V5LiGdJAQwJKWGvEu
koZj0kmOd+IGoQqmHntlC5kj72F3qftAPme9JIQNgWOoEqyj1Qge0ahWcJhx
toEv85sKA+k7ZJ7+KlGiBBYP34Eq0ddAEW08opk196elLHhYHZvu/on7gNLy
5csj9h9//LEGGfCVhQoVCp/U5A3sdg7zdWY9kkb93Wu4fK5pGo2oaI7PhuVD
RzDgBl6S3nf7gmnTpqH7Mt1/BE7IAv8AgHG76PgTTzzx7LPP4tqmTJmCiSZm
tDQGt/WT/Udu27Rpw7vwyufaYT6oacKECDPhat26dfG2P/74I3qt+QtLqgyv
sFKQlClTYoWUMiHCKeN9OnfuDALHxGEEtHjQH9d9SIKI0rAM+DWEITK6rePN
UODuM2bMePjwYasYxpN+pGJoH+7V0MudvuUPJB0hKhMmTAjNkVAKKMHdihUr
NHxqnh2pI2zUvLnPtf+8gkeN6ILiiDQ1unLs2LFIZ0tYM3dB3KZAfDpo5MyZ
Mx5n7W2crYF9RRzQWhuTSfeTXifZCeVt2LAhboUKiJ/qApXgDZmglKbQX1hm
MAaxHjyHY/aKx0mytbFrNAjLj8UGhxAGfv3110pdDt9N95ls3Ju/cABvi1DZ
DGw8fgU+A/gJymJ0nfqLU8at43Dxg4pxLOFHu7vTC3QfzxDfme3VA/AZmbSE
B2Sb2LBatWpCg5ITysdLYgaR9rJlyw4aNEjAEsHAu/3lL3/huxRiZ6ZHBvJI
ARVYMKwZtgvjj7KglZhilBGbhibCwMKFC2MDKUf2ma/zCQQG1aNi2GECkFSp
UuETJSo2NkgFduzYQT216CDaLvA7e02PGzcuW7ZstCj2Q2fGImQSbcWXyebY
2D6ay9dpNXJOVb/77jtYRMhJK4hKQIC84glk4NvIOfXEYOLc8W5KpxfI4S8W
dciQIXirPn36EJ7QlfgCpR9HBo7fglcEApTAA8Ts1EqAPzRcuhNJMQnzsdtX
Agd/8F+khUgNzoR5kXrmyJEDKBvp7DNj8UvsI033CHMsX4kzuQEJjKX7ChYs
SNd0794d19C+fft3330XjUDw7Ej0SGctmGFR5R/yAAEsfUE/AiyRag1NRDgb
ZUSEnCWK0KJxijTdVcIf8VHwPJgTNM5joKOiRYtyJ8yshHpNkTVmAeiePXt2
fAG4nf/qVE2Pax8tngfz4y804Wu5T+4yIwKnseTJk0d7B5lI9+rVC/EQN3RI
yiuvvIK+Y4uSJEkCH5Ccjh07wtJt27ahmNevXw9NnzAEhZtDc7EVqrwvZEhf
M0eyUUQiWtSGFvAXxA4PZZTCm1Z/YKITwhDxOVotK6GsfjlcYCTBEaYPK2Ts
io0ghSd0EzXXioygAm2UVdKFRSW+gHXK2FEm3uXLl5GrDh06aBI82jFeI4nB
iBEjqlSpgq8MGpIStCCssAkFr7NO6g/nUAOvk/tng5xazKJBZnozffr0AJJ/
O8fM2XRDUK9pWBhbhHWyCMXG5eLARjecNu3zOstC3U/6XbvwgRZAsDDwwIED
cNVmHkONkmbS4fbMmTMx0aj/qlWr0OV/O2fcuAGz+S/5UCWTm8xYpB+HZiYE
2WAXlUej6T5t8B5j0H1XRFEoDg6oQoUK4Ze6SGBgILKBmSLAyZ8/v9KPPU7C
g2SGaJ3oG61s3bq127Gq+0yGBQkQUfpa6cqaWyHYefPNN7W7NbEGJhSjhPxr
DohiCXCwjRqe9TqbHmM2CawwZdQKeE+jCKxwbQgGISfcA7HgEI8fPw7gwaED
S7Zu3YqbwIMoasCkUHNCM02dC4qrachhkyZNCDHcG3cH8ccaNWrUKCqJ2/Xf
YTO0aN+CYCZ2DNZhfGRMpA60FF0oU6YMgi27h5Li73ATPNaoUSM4Zlttm/v2
BPLYASTCLbBahggDBcyAq3YMKOXzaWX78CR8pn81ikX0DYSAdTDcF1iMFntA
wuuE+fgXAI9kY9OmTTgmSg7zIioJmqUTfU7OgMeVWB4Riz3H+JVoenmA1q1b
t337doAZHkdoLTaVvyuyXtZZCQgJqBhMAsL/4IMPBgwYoE1Nwb3Uyj3mY6MN
UnNt912vXj2ARISzzUiE63wuX8h6Fk8gCwvVeOedd5TMJv4AX4HlGENcbZ0A
AZIRA+L6UqVKnTx5Uk4ttEAzOKoAQUHXrl2Ryddffx35R2zGjh1LaIzuE8qh
C1SYkpH2zz77LMLZ5CRI4PkEAkCHonFarSPjD05DzZUwSddQcs2aNWk+3ANE
gfyBKwD78ePHK8WXb+3duzd0c345O7oYIwbG1hYQoSPwUYFw2+ILVAPxQD7x
uQUKFKAy9NScOXNgThiFFfjhcwAD9FRKZyZIhdPLuHJstSHqeDHXNLx+/frg
NKVEBtXK7xzU6w2k+iNvmMo9e/ZoYE1e7+LFi9RNVQof1UowgC70Pjg2qP4W
ebmBhw2O2ai+wQyLSSXP3sAiPiJEbLU28bZQN3Qg1OMsLbfETis5boDEVMnn
2ow62njHRi99zh5KKCZeZvHixcizbV2iGM3vZPKjhsg54TDyrK2xrOa2sN2g
l9TN4yQqWLu8run1+z8y7HeR+74qLJ4oj1TeP35rqCE4XHzevHmDEvWDSFyi
IxAnHP2rr77auHFjnYYQ9KRWf0ycOBEHFKa28sI8QKyEzVQeI1YOWcUyyPOi
U8QF6IW2sFbUyR1NJhog54vY5Mcee0wZJiAKAMmSJUuQeRwEMT5+mf/yFgVi
6NoGCFfOW2PGjFEeGqaGF3n97bff1hlJsvB4bVqaIkUKCgGrm1sMYqNBC8xR
lixZcLvqvvDxkYCxdl3AKoKOqKdGLRRN8CtGEj9O3QxR87we4y9hL/Lvcw3b
ep2pfMpEbABIHtdSiP379+NBiBCxBrJs3sCqW/UFARF+AebwqyoGz3EQ+II/
YtrhP4ghFE7sTI/gHxVzEermy5cvzD5XUYFlX4UKFSLE0+HydARiCSIFk4Mz
MY9aCRveaxw+fBhfgw9VF9PjIDrsg6aq/dHNVseZzORqd/QZM2bgGQEDYDmd
1CbMQFRueQWhMYUyEvnLiw0bNtTWT3Ks4aEXrEDUwZD4GiFVAmSwEBoN2+Wp
+/fv36pVK1Al3ABL4OuXLVum0J4PRd3ZBHkDyxVRmcmTJ/fu3btdu3boKfC+
XLlyCMnq1at19mi6dOkAXUKPESH7pHkCe6wBFTSHbgNKtLRSpUooFzfpX8IH
TApWCOiSIUMGsBBiz7fQXzwprKCZNAFOBgXsnsBORFSSarz44otaE+SJaWOW
yMC2VMRWYDZ0QfsMU4dPPvkkzIvqFFpNLBO0HsdcpAYqw3w6bkSj6MRXXnlF
i0nDPEkFkAEiDiRf+eTq69gP1Eiu4A8WRsvP46MFt5WPkSf007kh92EY895J
CwpA48By3BOhB0wGb/wQIBvo4xqhQunQ/UelaW5yA7ZQMTMsSiyMo8Qah67v
uHdSMidGAA6HeczjLBbQSmGeX7NmTbQAyevs0xt+vzivs6ET7gOvilHFcPXo
0QMrxIXGuPgWFq9Dhw7YWIweVnf27NkYLiUNGiDhYcJq4AewATkneAFjTJ8+
HW/If2FdqlSpTpw4QUspYejQoRjDnj174jv4tCZBMHpTpkwhZGvevDmV4ZoS
5JSJstOnT4+dzJgx444dO7zO/njutpiboybYfJiDWNpIxZ04IISMpV25ciXe
k7ALy38lQFqppFGjpUuXFitWTPuT2C5z/BeY2qBBg8GDB+s4bItZbKhq7dq1
xJsw0OtkItFSwAYNFLg1HK6pAc2qwF6Qg2IrPgSAAYl17Njx3yEbO4cnnp80
aRJdoJG9PwJHCWAnw+SQRAUiQfASX9Q2EdoAFjgKwMCf9uvXL8Zzk2kpbu7A
gQNwFXeD9aCcjz/+WImdPmdD2vgC9n5XhqqG7suWLQvn6UH8LPKmQQB5Sf8d
FlDLlcNwwAO+W4mLsRkLksh9GSBEDr8Mo5B/hFZjYpqFx7mDiDQrh3y+8cYb
IA3ApztbVZLjLt9GCLW+gFfApYCZhQsXwttvvvlGCSSgZbx5hLMjYugICc0Z
NmzY7t27/a5VMESauFcgHEwDK2bLlg0tA+cAvFEfFI0CqSryg2Wg2nQoSE8z
oW7mCwAgWsQd6K9tBhJeViVCmp9CIGER/YWmIPlhFNbiZQHsIF55nVWZCTHM
TpnSXFvxdCeKDGyKjgXLnTs36qytS+4qmvA5i1V9CXNqAwUSfFWuXFmpgPFb
eAKRhjJgLCEzcBTbi4hqKRySKcgnNbFR3EelaW4KA0jcg7oEuUSpKGOo0bhH
8gW2UMBxpEyZEosd5klbNcBfAnOshI6zCQXeakuMsxU2kKU0D+Szc+fOpUqV
AidoikEzjFxg1QFLfI7rDRs2vP766yB/20LEFxjbx1iBurt160YJaCIQrnjx
4tpL8JlnnsFYYWq0fxSBKh5f/p07CBV2T4ewgFKwkLhCAkx4ju8Dw9euXTt7
9uy4QuIvAZLQIMVGSLRHFqZ13rx54lUYh8JPNGr8+PH169fno5s2bdKh8B7n
eAXZVeSfWBI0bisCwDDoMp+AbyYV7sFYgQfCPdpOsOlz5nlpeKZMmfB6tiOl
yRiEA61atWqNGjW0S4wGiGB16dKl4a1SXmOPh+ESNQcl0q0qHx+ERQ3aJzmI
+ARuBWBJMK4Dcbp37z5mzBg8Go4PV0WZ4bXAxmA1gUUXA9gwIPBKQb3fWeEY
y4bESH5X+jFc0gFbAAPiboDcrFmzEGCxztBIEBv1LqyeP3++thuKiG5bhiDy
OEtdkJlLly6hI5s3bwaHa/Mf01aPs5ZEX0GwkyZNSg0HDBhAoGeDnKHTHCY2
WkjidVIFlDwgBeT1ggUL0ll+ZzY2qGkacudDICIbQvEE9hQCnRIKIdhvv/02
cgKQQ3eURASI9QQ21siaNSsyg7QPHz68UKFCOvYuiPNIGiKNqKPIkc4q7PD9
KxESl/4nQGJR+KRWvWVJiaE/RRtXxgvxUeIygoUYR0hkPImnkECQJxhV+PZu
E8DcMy/x1Ij/JQokEjx48KBOE34khhHceR3KbEFQkUZEVJvDuBPe9FgCSUKC
UnhAYsPs2iYF9CUliscKeAKZxkQoyZIlA7VGucZvo26P/iKddGivs68mQEKK
H2pdYyPJHmeXBmVe4a00akG0og6VRY10jrwUIvruu+9QTCU/mH3AgIM9mjRp
gkvV8UOgCPwapuzxxx8vUaIEZg3XRlh34sQJYAaYFtMHRJk4cWLTpk0LFy4M
JNB5pjQKEEJMXa5cOVBKs2bNADPPP/98q1atcIiafYh25Ec+NzKw1IIn69at
axy7Ewf8ga376dzZs2frXEKZAnlMm/HBdDdv3rxHjx6nTp3Ceu/cuRPfSqx6
4cIFNMLj2hHCcJHC7U6dOj377LMSGzlo6o8z0jLnKGcsS93978DmSy+//DLC
oDpIuf4InACVOXNmnRoWe9HSMA5AF3QnG045AJvwM4O8BQJJkyYNzaSnaCPN
RzywXfQppenU+/DK7nNyR7EbwDYKbNmyZYMGDXBbFBXtaMC9k5iv7aARnmoB
4gIngiBpQwYx0B8yA6760FN0q5awSeDDx9oeZyc6YXIlZisz2fJgvc46eo9D
c+fOfeyxx8Cl2bJlA38CY+6UV+Bzplc8rgPIhHBsvST1LFCgQMmSJX2BbWRM
Qsx0qCYoJmBeaTx+Z4PigQMHgr6QUgD/U089BZxAs2h7zpw58VYauOvTpw/w
HriOLoNblMtkn1DbUQqwCmrOVyTPMe7/43d27I90DgOy8cwYh6QinANEggo0
uYqzh/W7Mi6iXKZYPdiuXTtCg2hnyd1kfQ2Kw3xhOjQcGgRIwjdTDycQWjDb
ouGsRwKQ+JxtJD2uM6S8zspQnzMP63WSxMKPjT+0hArv27dv//79+KPQBDMz
CEAF9FGiqGnf+CJ5HKJO4guckbE30nWuhMfZ0MlcXpSTbh0t6vDfzRy937X9
iLIa1Jvuz7kxEh/VngzSfT1M+AZgmzRpkvKmli9fjosnNMAT0S6gDiH2W2+9
ValSpUaNGjVu3LhmzZqVK1cuVaoU/jFv3rwYPS0BUJSkfRiw2yAfcA4lYCFr
1KhBIQAh06aghphJ59fBgwe/+OKLZ8+e/cN1BnG0hIH9+uuv3aceuHko5lPC
hg0b2rdvP2TIEMJbCh83bpwOEYhwDhX1u6awNbIBK3gFNGUmF/rqq69Sp069
YMGCfwf2CbQwnHbR3urVqxOHai9Qv5Oryd/jx4+D6ObMmRN7FZPT4SsZM2aE
w0qKICp/4YUXwm9xBvOpdqpUqaiSzXEohsUaa/lS6Mah0faFxitmzpwJlvvk
k09Wr16tZeBBrI5HEtO0KmR3gNAspAsmwFiT89CvywVobTuIUcuaYgzYLWoQ
qXdsXMX9Id2RysAERBqMPWjQoOLFi+s0LiHYyJD1pKEeVmUKL2nRCqAC0OUL
7O/3h7PXipllhYqwHUimvQpNtblD1wDd0USEBLGEXeDzihUrCjfyCZ5B9RBj
NBHJRzitgdIOqg2QBsVNnz7dmhzjRINxxu/sPOaLRaqkz5nvu9OT9yhaMmhK
WzVLKGbCZwKuMmXKaBeRGCupOqC54L0BAwYA89wgzR/TOvqE05Go2/fXSriv
xC+5Bcbj7HpnyuV2Unb/UcFabsKt4CiJpPr166fzmo1M+CF8KGGm8KSlJccL
6RP4RFSeKFiOQ/Jvg5Dhp+zvM/kDQCjStXhcIG3WrFkE1Da0IhuLfWvYsKEO
lOR62LBh3bp1I9oCaWD3uEBVMYNaZmuDsZY4SrhK4Fa4cGFit+3bt2srCZ8z
jh2mhufOnaPLxo4dG+MJQe7xsVAnZUQhlLlixQpqi7/TNE20htE4QFsmTpyI
Z9cMsm7CCsAtLmDLli20muqBiIhGET/ug+J0/k5QJa9cuQLeq1+/fuzFQGKD
8cyQIUOOHDl0wtHo0aORsdCdWt2EeFO9FClS8FGfk6krzElRQCbNEoZ302Yx
eJg6aLJJbjGW9Y8byc7DcI1Fy2vD52LFihUsWFAptdGGThqolNzycJ06dbSu
JCGCLLhRu3ZtsDoXU6ZMASIi21pyGPvRV/VLRGC/BWSjQYMGGjnU6IFZj0jX
eQ0oVNAhYhGB/XCOHDkC3gYPz5gxA4zUsWNHHYVghgjNJVYCQe3YsSPSOVAS
+vHHHxESKl+2bFlAbFC+66NIluKus+mly7JL8JmYFD7flVTwOrYdvcMWXb16
1T1jGB56JdKfk3AHvXv3xmlir4KWQ1rUgwJiookaLK8gfgFJZOD0CoI4ogx5
Ab+z9Z/lNQWBpQdIZt88zgYONkPhcTb+Us21cIZ4kJ/wBf8VIFwwdvjWrVtw
HgumXYMM4ficFNmIwAaMKDIOfeTIkXZEhcWM4V0z3vPLL7/Ev2vVf/jmxAaQ
eJyNiOW2bCLeF5I6peeF07DkyZIlI04XlJV/PHXqVNOmTRs1ajR06NBJkyaN
GDECF9ClSxcetsn0oEoiHkWKFClQoED4Ae2gamgOAleCaF26dMkb2MMWUAGy
CvMiVa1ZsyaARAdyaTAE+v777+kLbeobvhoGSKKckQdbnpkQy36DPu11EkG9
Tmol/VWpUiU6Ajb677DwylZtQxMmTMDFz5kzZ+fOneEPjIsb8YkDBw6A3ikc
rrZs2RL8s2vXLu2HFstCIp3DT69fv54tWzademaqocncIISjfgwqxIYCYNTJ
kyfBxt99951SbTWWpfVHixYtwqVqLx2bQjpz5oz2Ex48eDBC9SiOkAcRjaKN
sFSLi/3Oqbg0TYeqIBt3lf4kYSMEWLhwIYqvLnYPDSVSIrkJh4jRxmlit/fs
2RP0qzAJIqRUQ5tGiUdZkl/TmTIYfJ2iKztA3W7evInhOnv2LH48vr54j+Qe
tLEZJeXXaVjApvkinIOwldNl2w7rJ2W0apzcChTekxbTL8TjuXLlQpG1Lckf
rq2/w3eBCtF61fBRZywBSYRz4oZINbQ8gaC31Gpv4BjZ0qVLg3gx8vYizceM
Y96JkQcMGAAgITjVbnVa0hgRssUlBg2n06JFi9hbQgkqvG3Tps1zzz2Hb9US
nixZsoQ/v+yPwOFK2F5t5GL7f2KlU6ZM2aRJE/mv8Px3M9NGtDwx5YjeO/md
6TyDJfyFt6+88kqxYsU0MRftbILyt9Wt33zzzdtvvw0mKV++PO/GeyX5ugJw
JBzFOX36NFwdOHAgvXxXobc3cMAotc2aNeuQIUMinZ2IAJ8rV64EfG7YsMGd
txCqNT4n90nzpMpLEYBUTGGhBxXWMJeNvWiERIMkiIr9FM/Mur9EiDRmzJjV
q1fbgYbSWXqKqCF16tTaii323WTshYEUTtdo7XlUIiBJpOgIOUHArl27lj17
diLxoF+9zhF+FSpUaNiwoeU7xaNdVRzHJwoWLJg+ffq9e/fivHDBa9euxch0
7dq1WbNmrVq1wuzE1xfvkWzgyO+kkPlu3/vO72wFaQMLtkOCexjE79o/1u/k
S9gcGUSEnilTJjCJVvRoWxK3dQ1fSUv/CO/EQ2ceo/3JxklsJNw8bLSARFXV
iSGrVq3CbusV887ESkgdXt6G2X3OWj8bZhchGxhJAMmmTZvuatmvemHUqFHP
PvssHop358+f/9JLLwWd9htEfB13nC5dOh2FZnlE/JebxYsX1wyU37WDkNe1
HMDnWnRpgyRuNsa+/nEgiVmEswejpmCGDRuGy546dar/9rPMgl60HYC52LFj
BwYBVJZAeqd0EY0i8peASDOSsXdSEm+tYAK0v/POO+BMJGTw4MGtW7euU6cO
qBLHGuksLY+KbprAOiXSSf+2gSyvK7fTBD7COf0tyAgo0IgxX+shJ9qC1c2Z
Myd9oalzm8hbtGiRHeMbeoJAGPK6si7hHvquU2VjDKkS6SEk94C5z3Wytjuk
df8a5D5MDd1hkV3/ETi+gajk+PHjQ4cOTZEixccffxxUAWkcWl+oUKF27dq5
o4Z4bKMWvoF5UqVK1a1bt/bt2zdo0ID/5s+fv2LFiu+//z6w5OEBJAlN/sCk
D7RixYokSZJoo0gNwjzoqsWF4mZ5zPgjn3jScuXKDRgwQKd+xL40gT1t1rpu
3TrEfty4cdr2P8xbfJfPZcyYMWgYhNdr1qzJfZ0o4XM2Odc8VKRru+DYD+PE
O/mdbE8Nqf3yyy80PEeANEYUG1fiDaz/hVc9evQAJNyHakfdfbwsB6dV+U2b
NgWvYqCIXOrWrdu5c+eZM2du2bJF4zAJVOH/PKILlixZorM14apiVYz/wYMH
Xw3QgQMHIp1Tw+L8ifitcyLdB7LAymYEzNy5A3OLUjXMKPOIJbHD3y9cuHD4
8OGtW7cuW7Zs2rRp06dPB+jOmTNn8uTJXI8ePRoE0rFjx/r16xM2vvHGG7t3
7w6qiddZe5I5c+ZevXp5Aoe/xG+U5wssGNSpu/hfPlS5cmWiGzDS7Nmz9+3b
d/XqVZoTv2uNH2byOxuF0TVPPvnkV199ZdNAfx51xhgiabt27frggw+qVKnS
p08fYitLo41lIZr1e+WVV5InT44goSAIFQEgRYV5C20qWrRo7ty5g2ZY+O78
+fOTJk0KRNRoFYWjazdv3vwmQLZ4855afs+kXCZAF8BpwoQJ6HWWLFmqVasG
rkOPNFgXHiVqhAowo+NEH06pUyAjM0hETyAzcODApUuXHjt2DNMneyg9etA1
fZQIYwvqrlSp0qlTp27cuHHr1q3FixfXqVMnT548XGjqWaNJD7qmiXT/yMY0
bCJYwEOQI9I5Re7XX39F9c6fP79t2zZMpZDGsGHDgBmoZ4cOHd59991atWrp
2NlsAcqXLx+xUlaHChYsCO4tX748McXGjRuDUtCjbgckOAVNyocmG9wLaUZD
e1ZUrVq1Z8+eIKjLly9r53YdLqNwL76++JCTJdXgiNOlS6czZf6I6dSt/zBC
FDGGgwcPbtmyJShap+NFm/wQhmAjgBwIgZwrlwbtAHujOGHe+v3333mmZMmS
oYAEK41lLl269Ny5cwH5U6ZM6d2790cffdS9e/fly5fbYsm4Nzs+iGrglKlV
o0aNEKEGDRqMGTNm7dq1mzdv1kaCMfLQHQfFmC3zoMjvHMOhmUGwk47e+8M5
NleTQaFHzyRSGIJvRAFITrt27QB4uBIcBFJEAItFkjAIBz7omibS/SObvvQ4
p+cgDL/99htGdd26datXr545c+bw4cPx3aCO1q1bN2zYsHbt2lyAQJo3b67z
3Nu0aYOLx1QCJDDswwNEhIhN1gVmat68eRhS4gsAgLQ42poIkPTv318T+vGb
1Cqjh508evTooUOHfvrpJ0shUIqackEfuJ2/b+RzFjO+/PLLhLdSfw22P5yu
ISEIDiDwu3fv1lYqfte+AeFfFIvkp+DhBx988NRTT2FdheGR+QIFCoRPkMa1
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
MjfsXRup0IUOu8dIAgBwcASYoAV8PTDgwoULeDGcAvZZATgYg2ssOfaTB667
6FKAABhnz57lgodxEFyDKCift3TiFaEiv4I9eADUcerUqePHj3NBCRQuEKL9
oLRDFD9xn1odO3aMYJlf+QmcY7tFaZcDUA2uGbfCRyn5WoD4lXYBVyzfWPkG
cgduTtrGWV5XhqSb7Oxd94ySu3fcHWFiYHfcM1AeZxsHnysr0vrLHrM8QA0I
IE60ncZqYcWqVatAGhMnTgR4TJo0SVtvgUmWLFmyc+dOWMHzaq99SEJlYb4+
6k55DZqA892e7WPPU5nevXvny5cP3sbXRIPfSVykwo0aNSpVqtS2bdsQwojA
4ezqL/ULgrR58+Y+ffpUqVIF/WrduvWsWbMQEtvb34Ya3G0J+px2KdGMT8+e
PQkc+GjBggVLly69adMmWOcefLOGx22EBC5VqFAhW7ZsHTp0QNTde0FTASBi
zZo106VLR6PUWZ673A4ukRKCLO2KvsuePbupSSJQTKRHjvyB8We8do4cOTp3
7hy3QtxTFbpwn/PrvjC/5j4LWJYc6/3rr78KD+Cd8e84caw3zpq/gAoqiZu7
HCCgAp59z549/KQRD2AA93lAWzqAQPD1vKWtkGyAQqT0QhpO4Cy/r/u2p4T8
oxL+bW8BKql9Jm1UXM9oNcf/DZAOmaIVlKwP/Rag/9femcf5XK7//49TJIka
axzbQ6FCKJSYiCLryC6SLYbQIWMZk+xkLNlmZBk7Y1B2o0ZoLNnLLrK0kHN0
+nb+OJn5fPyev8/rvO/H7fMZY0xjhnpff3we73nP+32/7+W6r+t1Xfd1Xzdm
Mr+0CDmPCgbbKN0ldQbzHPMRbaH+VFswhscANrQU5IOm0H16hnKM1awU36bn
jWdAriGDVbxW2EyS79RRY5sb4Gdf2OtTQkfmRY+z2UqF8CHaSOsYr8TERGz/
eT5auHAhynf48OHgkMWLF69YsSIuLg58sn//fgZLMDIT0kZR1alTp6LEjbPl
j5epXhIsXLt2LRMHvEED0dfiB/oEcDt37lywEHAF5NCyZcthw4YBmOUfS76d
2GbNFw0BTNK6detcuXJVqVJl2bJlGX5+AWw8cODAcePGAacN2DBEzWNjY4OC
gkJCQsyhmS4gyXLSQiS/L7/8cvHixW0LxcUkLt1bJOWCqKlWrVrjxo3TXYht
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

    "], {{0, 89}, {731, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{731, 89},
  PlotRange->{{0, 731}, {0, 89}}]], "Text",
 CellChangeTimes->{3.785534731477183*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"64d0d6bf-1eab-41bc-a7cd-251369f4e925"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Rspar", "[", "\[Phi]_", "]"}], ":=", 
   RowBox[{"RotationMatrix", "[", 
    RowBox[{"\[Phi]", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Rhinge", "[", "\[Psi]_", "]"}], ":=", 
    RowBox[{"RotationMatrix", "[", 
     RowBox[{"\[Psi]", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Assumption", " ", "Rcop"}], ",", 
    RowBox[{"x", " ", "=", " ", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["r", "^"], "1"], "R", " ", "in", " ", "Chen", 
      RowBox[{"(", "2016", ")"}], " ", "eq", " ", 
      RowBox[{
       RowBox[{"(", "5", ")"}], ".", " ", "Ixx"}], " ", "from", " ", 
      "\"\<incorporate R\>\"", " ", 
      RowBox[{"notes", "."}]}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wingsubs", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"R", "\[Rule]", 
       RowBox[{"Aw", "/", "cbar"}]}], ",", 
      RowBox[{"ycp", "\[Rule]", 
       RowBox[{"R", " ", 
        SubscriptBox[
         OverscriptBox["r", "^"], "1"]}]}], ",", 
      RowBox[{"Ixx", "\[Rule]", 
       RowBox[{"mwing", " ", 
        RowBox[{"ycp", "^", "2"}]}]}], ",", 
      RowBox[{"Izz", "\[Rule]", 
       RowBox[{"2", 
        RowBox[{"cbar", "^", "2"}], 
        RowBox[{"\[Gamma]", "^", "2"}], "mwing"}]}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", " ", "nonlin", " ", "transmission"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Tau]inv", "[", "\[Phi]o_", "]"}], ":=", 
    RowBox[{"\[Phi]o", "/", 
     RowBox[{"(", 
      RowBox[{"\[Tau]1", "/", "ycp"}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "draw", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"drawWing", "[", 
     RowBox[{"sol_", ",", "a_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"pspar", ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"A", " ", "wing", " ", "in", " ", "local", " ", "fram"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"polyverts", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "R", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "R", ",", 
             RowBox[{"-", "cbar"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "cbar"}]}], "}"}]}], "}"}]}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pspar", "=", 
        RowBox[{
         RowBox[{"Rspar", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "R", ",", "0"}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Transform", " ", "to", " ", "world", " ", "frame"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"polyverts", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Rspar", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ".", 
           RowBox[{"Rhinge", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], ".", 
           RowBox[{"polyverts", "\[Transpose]"}]}], ")"}], "\[Transpose]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Graphics3D", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"Thick", ",", "\[IndentingNewLine]", 
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "pspar"}], 
                 "}"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Polygon", "[", "polyverts", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Opacity", "[", "1", "]"}], ",", "\[IndentingNewLine]",
                "Blue", ",", "\[IndentingNewLine]", 
               RowBox[{"Arrow", "[", 
                RowBox[{"{", 
                 RowBox[{"paero", ",", 
                  RowBox[{"paero", "+", 
                   RowBox[{"1", "Faero"}]}]}], "}"}], "]"}]}], 
              "\[IndentingNewLine]", "}"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"FaceGrids", "\[Rule]", "All"}]}], "]"}], "/.", "sol"}], 
          "/.", 
          RowBox[{"t", "\[Rule]", "a"}]}], "//.", "wingsubs"}], "/.", 
        "params"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"plotTrajs", "[", 
     RowBox[{"sol_", ",", "t2_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"t1", "=", 
         RowBox[{
          RowBox[{"t2", "-", 
           RowBox[{"Ndt", " ", "dt"}]}], "/.", "params"}]}], ",", 
        RowBox[{"FD", "=", 
         RowBox[{"Faero", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Phi]", "[", "t", "]"}], "/.", "sol"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "\[Phi]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Psi]", "[", "t", "]"}], "/.", "sol"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "\[Psi]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Faero", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "*", 
              RowBox[{"1000", "/", "9.81"}]}], "/.", "sol"}], "//.", 
            "wingsubs"}], "/.", "params"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "\"\<FL [mg]\>\""}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"FD", "*", 
              RowBox[{"1000", "/", "9.81"}]}], "/.", "sol"}], "//.", 
            "wingsubs"}], "/.", "params"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "\"\<FDx [mg]\>\""}]}], "]"}]}], 
       RowBox[{"(*", 
        RowBox[{",", "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Tau]act", "/.", 
             RowBox[{"c2", "[", "]"}]}], "/.", "params"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "u"}]}], "]"}], ","}], "*)"}], 
       "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"debugComponentsPlot", "[", 
     RowBox[{"sol_", ",", "t2_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"stiff", ",", 
        RowBox[{"t1", "=", 
         RowBox[{
          RowBox[{"t2", "-", 
           RowBox[{"Ndt", " ", "dt"}]}], "/.", "params"}]}], ",", "M", ",", 
        "inertial", ",", "Mdiag", ",", "inc", ",", "ic"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"stiff", "=", 
        RowBox[{"D", "[", 
         RowBox[{"L2", ",", 
          RowBox[{"{", "q", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"M", "=", 
        RowBox[{"D", "[", 
         RowBox[{"KE", ",", 
          RowBox[{"{", 
           RowBox[{"dq", ",", "2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"inertial", "=", 
        RowBox[{"M", ".", "ddq"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Mdiag", "=", 
        RowBox[{"DiagonalMatrix", "@", 
         RowBox[{"Diagonal", "[", "M", "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"inc", "=", 
        RowBox[{"Mdiag", ".", "ddq"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ic", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M", "-", "Mdiag"}], ")"}], ".", "ddq"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
           RowBox[{"inertial", "//.", "wingsubs"}], "/.", "params"}], "]"}], 
         ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"inertial", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<i\>\""}], "]"}],
                    ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"stiff", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", 
                    RowBox[{"\[Tau]damp", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "\"\<g\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"\[Tau]aero", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<aero\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"\[Tau]inp", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/.", 
                    RowBox[{"c2", "[", "]"}]}], ",", "\"\<act\>\""}], "]"}]}],
                   "\[IndentingNewLine]", "}"}], "/.", "sol"}], "//.", 
                "wingsubs"}], "/.", "params"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                "Dashed"}], "}"}]}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"i", "\[Equal]", "1"}], ",", "\"\<stroke\>\"", ",", 
                "\"\<hinge\>\""}], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "2"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"inc", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<inc\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"ic", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<ic\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"inertial", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<itot\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"stiff", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<gtot\>\""}], 
                    "]"}]}], "\[IndentingNewLine]", "}"}], "/.", "sol"}], "//.",
                 "wingsubs"}], "/.", "params"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "Automatic", ",", "Automatic", ",", "Dashed", ",", 
                "Automatic"}], "}"}]}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"i", "\[Equal]", "1"}], ",", "\"\<stroke\>\"", ",", 
                "\"\<hinge\>\""}], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"aeroForce", "[", 
     RowBox[{"{", 
      RowBox[{"\[Phi]_", ",", "\[Psi]_", ",", "d\[Phi]_", ",", "d\[Psi]_"}], 
      "}"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sparVecB", "=", 
         RowBox[{
          RowBox[{"Rspar", "[", "\[Phi]", "]"}], ".", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ",", 
        RowBox[{"(*", 
         RowBox[{"vector", " ", "along", " ", "wing"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"chordB", "=", 
         RowBox[{
          RowBox[{"Rspar", "[", "\[Phi]", "]"}], ".", 
          RowBox[{"Rhinge", "[", "\[Psi]", "]"}], ".", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}]}], ",", 
        RowBox[{"(*", 
         RowBox[{"wing", " ", "chord", " ", "unit", " ", "vector"}], "*)"}], 
        "\[IndentingNewLine]", "le", ",", "ne", ",", "pcopB", ",", 
        "rcopnondim", ",", "\[IndentingNewLine]", "eD", ",", "eL", ",", 
        "\[Alpha]", ",", "paero", ",", "Caero", ",", "Faero"}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Leading", " ", "edge", " ", "velocity", " ", "direction"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"le", "=", 
        RowBox[{"Cross", "[", 
         RowBox[{
          RowBox[{"d\[Phi]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ",", 
          RowBox[{"ycp", " ", "sparVecB"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ne", "=", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"le", ".", "le"}], "]"}], "+", "\[Epsilon]aero"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"COP", ":", " ", 
         RowBox[{"nondim", " ", "from", " ", "Chen"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"rcopnondim", "=", 
        RowBox[{"0.25", "+", 
         RowBox[{"0.25", "/", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Exp", "[", 
             RowBox[{"5.0", "*", 
              RowBox[{"(", 
               RowBox[{"1.0", "-", 
                RowBox[{"4", "*", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Pi]", "/", "2"}], "-", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"\[Psi]", "^", "2"}], "]"}]}], ")"}], "/", 
                  "\[Pi]"}]}]}], ")"}]}], "]"}]}], ")"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pcopB", "=", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "d"}], "}"}], "+"}], "*)"}], 
        RowBox[{
         RowBox[{"ycp", " ", "sparVecB"}], "+", 
         RowBox[{"rcopnondim", " ", "chordB"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Lift", "/", "drag"}], " ", "directions"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"eD", "=", 
        RowBox[{
         RowBox[{"-", "le"}], "/", "ne"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"eL", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Aero", " ", "force", " ", "calculate"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{
         RowBox[{"\[Pi]", "/", "2"}], "-", "\[Psi]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"paero", "=", 
        RowBox[{
         RowBox[{"Rspar", "[", "\[Phi]", "]"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "ycp", ",", "0"}], "}"}], "+", 
           RowBox[{
            RowBox[{"Rhinge", "[", "\[Psi]", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{
               RowBox[{"-", "rcopnondim"}], " ", "cbar"}]}], "}"}]}]}], 
          ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Caero", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"CDmax", "+", "CD0"}], ")"}], "/", "2"}], "-", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"CDmax", "-", "CD0"}], ")"}], "/", "2"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", "\[Alpha]"}], "]"}]}]}], ")"}], ",", 
          RowBox[{"CLmax", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", "\[Alpha]"}], "]"}]}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          SubscriptBox[
           OverscriptBox["r", "^"], "2"], " ", "from", " ", "Whitney", " ", 
          "2010", " ", 
          RowBox[{
           RowBox[{"(", "2.23", ")"}], ".", " ", "Assumes"}], " ", "Rcopx"}], 
         "=", 
         RowBox[{
          RowBox[{"ycp", " ", "stays", " ", "constant"}], " ", "-", " ", 
          RowBox[{"OK", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Faero", "=", 
        RowBox[{
         RowBox[{"1", "/", "2"}], "\[Rho]", " ", 
         RowBox[{"d\[Phi]", "^", "2"}], " ", "cbar", " ", 
         RowBox[{"R", "^", "3"}], " ", 
         RowBox[{
          SubscriptBox[
           OverscriptBox["r", "^"], "2"], "^", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Caero", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "eD"}], "+", 
           RowBox[{
            RowBox[{"Caero", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "eL", " ", 
            RowBox[{"Sign", "[", 
             RowBox[{"-", "d\[Phi]"}], "]"}]}]}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"paero", ",", "Faero"}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Psi]", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Pi]", "/", "2"}], " ", "-", " ", 
       RowBox[{"CD0", " ", "should", " ", "remain", " ", "in", " ", 
        RowBox[{"drag", ".", "\[IndentingNewLine]", "Need"}], " ", "to", " ", 
        "check", " ", "lift", " ", 
        RowBox[{"sign", ".", " ", "Trying"}], " ", "to", " ", "coincide", " ",
         "with", " ", "2", "D", " ", "sim", " ", "results", " ", 
        RowBox[{"https", ":"}]}]}], "//", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"github", ".", "com"}], "/", "avikde"}], "/", 
           "robobee3d"}], "/", "issues"}], "/", "88"}], "\[IndentingNewLine]", 
        RowBox[{"i", ".", "e", ".", " ", "when"}], " ", "stroke", " ", 
        "vel"}], " ", ">", " ", "0"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"hinge", " ", "ang"}], " ", "<", " ", 
     RowBox[{"0", " ", "for", " ", 
      RowBox[{"lift", "."}]}]}]}], "\[IndentingNewLine]", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"aeroForce", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Pi]", "/", "4"}], ",", 
          RowBox[{"-", "1"}], ",", "0"}], "}"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "//.", "wingsubs"}], "/.", "params"}], 
    "//", "Simplify"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.785163733169914*^9, 3.785163768788862*^9}, {
   3.7851638219331465`*^9, 3.7851638221495667`*^9}, {3.7851638575914416`*^9, 
   3.7851638656639175`*^9}, {3.785163952461292*^9, 3.785163959194874*^9}, {
   3.785181113450061*^9, 3.7851811849114933`*^9}, {3.785181223420051*^9, 
   3.7851814480879383`*^9}, {3.7851815284493275`*^9, 3.785181574334261*^9}, {
   3.785181607927892*^9, 3.7851818562133703`*^9}, {3.785181897023181*^9, 
   3.785181973204109*^9}, {3.7851820183846817`*^9, 3.785182035584442*^9}, {
   3.785182130927059*^9, 3.7851822788151007`*^9}, {3.785182768706132*^9, 
   3.785182824611698*^9}, {3.7851835377984476`*^9, 3.7851835381465435`*^9}, {
   3.785183574632366*^9, 3.7851838963880434`*^9}, {3.785183935005065*^9, 
   3.78518393938645*^9}, {3.7852369154777946`*^9, 3.7852369276973515`*^9}, {
   3.785237068661893*^9, 3.785237159502931*^9}, {3.7852390830870667`*^9, 
   3.785239105554223*^9}, {3.785239223653453*^9, 3.785239230566188*^9}, {
   3.785239332872146*^9, 3.7852394831645365`*^9}, {3.785239522904046*^9, 
   3.785239527846*^9}, {3.785239574459278*^9, 3.785239590976102*^9}, {
   3.785239663394473*^9, 3.785239765859336*^9}, {3.785239822253582*^9, 
   3.785239852287075*^9}, {3.7852411853333817`*^9, 3.7852412095104837`*^9}, {
   3.7852412747392893`*^9, 3.785241284555241*^9}, {3.785242577855811*^9, 
   3.7852426072696886`*^9}, {3.785242760532243*^9, 3.785242764687683*^9}, {
   3.785243042341342*^9, 3.785243082387663*^9}, {3.78524369984238*^9, 
   3.7852437033492184`*^9}, {3.785243878758131*^9, 3.7852438818282394`*^9}, {
   3.785250588656488*^9, 3.785250591357007*^9}, {3.7852507564570065`*^9, 
   3.7852507638104935`*^9}, {3.785253091532304*^9, 3.785253138847148*^9}, {
   3.7852531795009995`*^9, 3.7852531822852845`*^9}, {3.78525322760236*^9, 
   3.7852532347079835`*^9}, {3.785253269736401*^9, 3.7852533186729493`*^9}, {
   3.7852533499356813`*^9, 3.7852533536194243`*^9}, {3.7852534684496627`*^9, 
   3.7852534710220785`*^9}, {3.7852535409719725`*^9, 3.785253541682535*^9}, {
   3.7852537363906927`*^9, 3.7852537365316057`*^9}, 3.785254209543125*^9, 
   3.785254249221677*^9, {3.7852618005450153`*^9, 3.785261822043441*^9}, {
   3.785261857787959*^9, 3.7852618586202583`*^9}, {3.7852618892287784`*^9, 
   3.785261946037554*^9}, 3.785262059440189*^9, {3.7852620993981705`*^9, 
   3.785262120227375*^9}, {3.785263145319659*^9, 3.7852631460221624`*^9}, {
   3.7852632381337895`*^9, 3.7852632587033963`*^9}, {3.7852633271116285`*^9, 
   3.7852633460395827`*^9}, 3.785263472773306*^9, 3.785263866855198*^9, 
   3.785268139559249*^9, {3.78526972929168*^9, 3.785269729727641*^9}, {
   3.7852699615872583`*^9, 3.7852699902755356`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"7405a249-8e74-42ba-8cb9-4ad6b37b789b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Lagrangian", " ", "setup"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"q", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Phi]", "[", "t", "]"}], ",", 
       RowBox[{"\[Psi]", "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dq", "=", 
     RowBox[{"D", "[", 
      RowBox[{"q", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ddq", "=", 
     RowBox[{"D", "[", 
      RowBox[{"dq", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"for", " ", "analysis"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pwing", "=", 
     RowBox[{
      RowBox[{"Rspar", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "ycp", ",", "0"}], "}"}], "+", 
        RowBox[{
         RowBox[{"Rhinge", "[", 
          RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", 
           RowBox[{
            RowBox[{"-", "\[Gamma]"}], " ", "cbar"}]}], "}"}]}]}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"See", " ", 
       RowBox[{"https", ":"}]}], "//", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"github", ".", "com"}], "/", "avikde"}], "/", 
           "robobee3d"}], "/", "pull"}], "/", "105"}], "#issue"}], "-", 
       RowBox[{
       "349667100", " ", "for", " ", "my", " ", "replacement", " ", "of", " ",
         "Ixx"}]}]}], ",", "Izz"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KE", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "2"}], "Ixx", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], "^", "2"}]}], "+", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "Izz", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "'"}], "[", "t", "]"}], "^", "2"}]}], "+", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "mwing", " ", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"pwing", ",", "t"}], "]"}], ".", 
        RowBox[{"D", "[", 
         RowBox[{"pwing", ",", "t"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "ma", " ", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Tau]inv", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", "t"}], "]"}], "^", 
        "2"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L2", "=", 
     RowBox[{"KE", "-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"1", "/", "2"}], " ", "k\[Psi]", " ", 
         RowBox[{
          RowBox[{"\[Psi]", "[", "t", "]"}], "^", "2"}]}], "+", 
        RowBox[{
         RowBox[{"1", "/", "2"}], 
         RowBox[{"(", 
          RowBox[{"ko", " ", 
           RowBox[{"ycp", "^", "2"}]}], ")"}], 
         RowBox[{
          RowBox[{"\[Phi]", "[", "t", "]"}], "^", "2"}]}], "+", 
        RowBox[{
         RowBox[{"1", "/", "2"}], "ka", " ", 
         RowBox[{
          RowBox[{"\[Tau]inv", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
       ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Llhs", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"L2", ",", 
            RowBox[{"{", "dq", "}"}]}], "]"}], ",", "t"}], "]"}], "-", 
        RowBox[{"D", "[", 
         RowBox[{"L2", ",", 
          RowBox[{"{", "q", "}"}]}], "]"}]}], ")"}], "//", "Simplify"}]}], 
    ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Llhs", "=", 
     RowBox[{
      RowBox[{"First", "@", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"And", "@@", 
          RowBox[{"Thread", "[", 
           RowBox[{"Llhs", "\[Equal]", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Phi]", "''"}], "[", "t", "]"}], ",", 
           RowBox[{
            RowBox[{"\[Psi]", "''"}], "[", "t", "]"}]}], "}"}]}], "]"}]}], "//",
       "Simplify"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Add", " ", "non"}], "-", "lagrangian"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"paero", ",", "Faero"}], "}"}], "=", 
     RowBox[{"aeroForce", "[", 
      RowBox[{"Join", "[", 
       RowBox[{"q", ",", "dq"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]aero", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"paero", ",", 
           RowBox[{"{", "q", "}"}]}], "]"}], "\[Transpose]"}], ".", "Faero"}],
        ",", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"R", ">", "0"}], ",", " ", 
          RowBox[{
           SubscriptBox[
            OverscriptBox["r", "^"], "1"], ">", "0"}]}], "}"}]}]}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Tau]damp", "=", 
     RowBox[{"-", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"b\[Psi]", " ", 
         RowBox[{
          RowBox[{"\[Psi]", "'"}], "[", "t", "]"}]}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]inp", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Tau]inv", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", 
        RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], "\[Tau]act"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]rhs", "=", 
     RowBox[{"\[Tau]aero", "+", "\[Tau]damp", "+", "\[Tau]inp"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Simplify", " ", "may", " ", "take", " ", "a", " ", "little", " ", 
     "time"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eoms", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{"Llhs", "\[Equal]", "\[Tau]rhs"}], "]"}], "//.", 
        "wingsubs"}], ",", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"cbar", ">", "0"}], ","}], "*)"}], 
         RowBox[{
          RowBox[{"\[Psi]", "[", "t", "]"}], "\[Element]", "Reals"}], 
         "}"}]}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.785163733169914*^9, 3.785163768788862*^9}, {
   3.7851638219331465`*^9, 3.7851638221495667`*^9}, {3.7851638575914416`*^9, 
   3.7851638656639175`*^9}, {3.785163952461292*^9, 3.785163959194874*^9}, {
   3.785181113450061*^9, 3.7851811849114933`*^9}, {3.785181223420051*^9, 
   3.7851814480879383`*^9}, {3.7851815284493275`*^9, 3.785181574334261*^9}, {
   3.785181607927892*^9, 3.7851818562133703`*^9}, {3.785181897023181*^9, 
   3.785181973204109*^9}, {3.7851820183846817`*^9, 3.785182035584442*^9}, {
   3.785182130927059*^9, 3.7851822788151007`*^9}, {3.785182768706132*^9, 
   3.785182824611698*^9}, {3.7851835377984476`*^9, 3.7851835381465435`*^9}, {
   3.785183574632366*^9, 3.7851838963880434`*^9}, {3.785183935005065*^9, 
   3.78518393938645*^9}, {3.7852369154777946`*^9, 3.7852369276973515`*^9}, {
   3.785237068661893*^9, 3.785237159502931*^9}, {3.7852390830870667`*^9, 
   3.785239105554223*^9}, {3.785239223653453*^9, 3.785239230566188*^9}, {
   3.785239332872146*^9, 3.7852394831645365`*^9}, {3.785239522904046*^9, 
   3.785239527846*^9}, {3.785239574459278*^9, 3.785239590976102*^9}, {
   3.785239663394473*^9, 3.785239765859336*^9}, {3.785239822253582*^9, 
   3.785239852287075*^9}, {3.7852411853333817`*^9, 3.7852412095104837`*^9}, {
   3.7852412747392893`*^9, 3.785241284555241*^9}, {3.785242577855811*^9, 
   3.7852426072696886`*^9}, {3.785242760532243*^9, 3.785242764687683*^9}, {
   3.785243042341342*^9, 3.785243082387663*^9}, {3.78524369984238*^9, 
   3.7852437033492184`*^9}, {3.785243878758131*^9, 3.7852438818282394`*^9}, {
   3.785250588656488*^9, 3.785250591357007*^9}, {3.7852507564570065`*^9, 
   3.7852507638104935`*^9}, {3.785253091532304*^9, 3.785253138847148*^9}, {
   3.7852531795009995`*^9, 3.7852531822852845`*^9}, {3.78525322760236*^9, 
   3.7852532347079835`*^9}, {3.785253269736401*^9, 3.7852533186729493`*^9}, {
   3.7852533499356813`*^9, 3.7852533536194243`*^9}, {3.7852534684496627`*^9, 
   3.7852534710220785`*^9}, {3.7852535409719725`*^9, 3.785253541682535*^9}, {
   3.7852537363906927`*^9, 3.7852537365316057`*^9}, 3.785254209543125*^9, 
   3.785254249221677*^9, {3.7852618005450153`*^9, 3.7852618049458847`*^9}, {
   3.7852619352877183`*^9, 3.7852619378303013`*^9}, {3.785262049200818*^9, 
   3.7852620500145736`*^9}, {3.785262103253174*^9, 3.7852621096136494`*^9}, {
   3.785263447209785*^9, 3.7852634489854174`*^9}, 3.7852635401829467`*^9, {
   3.78526380795971*^9, 3.785263833479515*^9}, {3.785264076495087*^9, 
   3.7852640857027893`*^9}, {3.7852681432932625`*^9, 3.7852681474119186`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"b8b499bb-9d2f-4be1-820a-74f2d72ede84"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"wing", " ", "params", " ", "r1h"}], ",", 
    RowBox[{
     RowBox[{"r2h", " ", "from", " ", "Chen", 
      RowBox[{"(", "2016", ")"}]}], ":", " ", 
     RowBox[{"see", " ", "the", " ", "\"\<incorporate R\>\"", " ", 
      RowBox[{"notes", ".", " ", "N"}], " ", "is", " ", "from", " ", "the", 
      " ", "julia", " ", "traj", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"just", " ", "used", " ", "to", " ", "map", " ", "dt"}], 
        ")"}], "."}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"paramsFixed", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ko", "\[Rule]", "3.55"}], 
       RowBox[{"(*", "0.55", "*)"}], ",", 
       RowBox[{"ma", "\[Rule]", "6"}], ",", 
       RowBox[{"ka", "\[Rule]", "150"}], ",", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["r", "^"], "1"], "\[Rule]", "0.49"}], ",", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["r", "^"], "2"], "\[Rule]", "0.551"}], ",", 
       RowBox[{"\[Epsilon]aero", "\[Rule]", "0.001"}], ",", 
       RowBox[{"CDmax", "\[Rule]", "3.4"}], ",", 
       RowBox[{"CLmax", "\[Rule]", "1.8"}], ",", 
       RowBox[{"CD0", "\[Rule]", "0.4"}], ",", 
       RowBox[{"\[Rho]", "\[Rule]", 
        RowBox[{"1.225", "*", "0.001"}]}], ",", 
       RowBox[{"\[Gamma]", "\[Rule]", "0.5"}], ",", 
       RowBox[{"Ndt", "\[Rule]", "45"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"paramsOpt", "=", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "cbar", ",", "\[Tau]1", ",", "mwing", ",", "k\[Psi]", ",", "b\[Psi]", 
         ",", "\[Tau]2", ",", "Aw", ",", "dt"}], "}"}], "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{"{", 
         RowBox[{
         "4.928", ",", " ", "15.98", ",", " ", "0.971", ",", " ", "26.653", 
          ",", " ", "19.792", ",", " ", "31.959", ",", " ", "97.113", ",", 
          " ", "0.087"}], "}"}], "*)"}], 
       RowBox[{"{", 
        RowBox[{
        "4.928", ",", " ", "15.98", ",", " ", "0.971", ",", " ", "26", ",", 
         "0.1", ",", " ", "31.959", ",", " ", "97.113", ",", " ", "0.087"}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"paramsFixed", ",", "paramsOpt"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eomsp", "=", 
     RowBox[{"eoms", "/.", "params"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"other", " ", "stuff"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"ic3", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Phi]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Psi]", "[", "0", "]"}], "\[Equal]", "0.01"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "'"}], "[", "0", "]"}], "\[Equal]", "0.01"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"c1", "=", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", "\[Rule]", 
        RowBox[{"0.08", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[Pi]", " ", "130", "t"}], "]"}]}]}], "}"}]}], ";"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "c2", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"c2", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"freq", "=", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"Ndt", "*", "dt"}], ")"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Tau]act", "\[Rule]", 
        RowBox[{"75", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", "\[Pi]", " ", "freq", " ", "t"}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Make", " ", "sure", " ", "reasonable"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eomsfinal", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{"eomsp", ",", "ic3"}], "]"}], "/.", 
       RowBox[{"c2", "[", "]"}]}], "/.", "params"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"eomsfinal", "/.", 
      RowBox[{"Thread", "[", 
       RowBox[{"q", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.3", ",", "0.2"}], "}"}]}], "]"}]}], "/.", 
     RowBox[{"Thread", "[", 
      RowBox[{"dq", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", "0.1"}], "}"}]}], "]"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "Sim", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tf", "=", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"First", "@", 
      RowBox[{"NDSolve", "[", 
       RowBox[{"eomsfinal", ",", "q", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tf"}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"sol", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"dq", "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"q", "/.", "sol"}], ",", "t"}], "]"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"sol", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"ddq", "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"dq", "/.", "sol"}], ",", "t"}], "]"}]}], "]"}]}], "]"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sols", "=", 
     RowBox[{"{", "sol", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Nn", "=", 
     RowBox[{"Length", "@", "sols"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.785163733169914*^9, 3.785163768788862*^9}, {
   3.7851638219331465`*^9, 3.7851638221495667`*^9}, {3.7851638575914416`*^9, 
   3.7851638656639175`*^9}, {3.785163952461292*^9, 3.785163959194874*^9}, {
   3.785181113450061*^9, 3.7851811849114933`*^9}, {3.785181223420051*^9, 
   3.7851814480879383`*^9}, {3.7851815284493275`*^9, 3.785181574334261*^9}, {
   3.785181607927892*^9, 3.7851818562133703`*^9}, {3.785181897023181*^9, 
   3.785181973204109*^9}, {3.7851820183846817`*^9, 3.785182035584442*^9}, {
   3.785182130927059*^9, 3.7851822788151007`*^9}, {3.785182768706132*^9, 
   3.785182824611698*^9}, {3.7851835377984476`*^9, 3.7851835381465435`*^9}, {
   3.785183574632366*^9, 3.7851838963880434`*^9}, {3.785183935005065*^9, 
   3.78518393938645*^9}, {3.7852369154777946`*^9, 3.7852369276973515`*^9}, {
   3.785237068661893*^9, 3.785237159502931*^9}, {3.7852390830870667`*^9, 
   3.785239105554223*^9}, {3.785239223653453*^9, 3.785239230566188*^9}, {
   3.785239332872146*^9, 3.7852394831645365`*^9}, {3.785239522904046*^9, 
   3.785239527846*^9}, {3.785239574459278*^9, 3.785239590976102*^9}, {
   3.785239663394473*^9, 3.785239765859336*^9}, {3.785239822253582*^9, 
   3.785239852287075*^9}, {3.7852411853333817`*^9, 3.7852412095104837`*^9}, {
   3.7852412747392893`*^9, 3.785241284555241*^9}, {3.785242577855811*^9, 
   3.7852426072696886`*^9}, {3.785242760532243*^9, 3.785242764687683*^9}, {
   3.785243042341342*^9, 3.785243082387663*^9}, {3.78524369984238*^9, 
   3.7852437033492184`*^9}, {3.785243878758131*^9, 3.7852438818282394`*^9}, {
   3.785250588656488*^9, 3.785250591357007*^9}, {3.7852507564570065`*^9, 
   3.7852507638104935`*^9}, {3.785253091532304*^9, 3.785253138847148*^9}, {
   3.7852531795009995`*^9, 3.7852531822852845`*^9}, {3.78525322760236*^9, 
   3.7852532347079835`*^9}, {3.785253269736401*^9, 3.7852533186729493`*^9}, {
   3.7852533499356813`*^9, 3.7852533536194243`*^9}, {3.7852534684496627`*^9, 
   3.7852534710220785`*^9}, {3.7852535409719725`*^9, 3.785253541682535*^9}, {
   3.7852537363906927`*^9, 3.7852537365316057`*^9}, 3.785254209543125*^9, 
   3.785254249221677*^9, {3.7852618005450153`*^9, 3.7852618049458847`*^9}, {
   3.7852619352877183`*^9, 3.7852619378303013`*^9}, {3.785262049200818*^9, 
   3.7852620500145736`*^9}, {3.785262103253174*^9, 3.7852621096136494`*^9}, {
   3.785263447209785*^9, 3.7852634489854174`*^9}, 3.7852635401829467`*^9, {
   3.78526380795971*^9, 3.785263846861192*^9}, {3.7852639620550404`*^9, 
   3.78526398507434*^9}, {3.7852641063890386`*^9, 3.785264110993264*^9}, {
   3.7852641564011707`*^9, 3.7852641571082044`*^9}, {3.7852641960012693`*^9, 
   3.785264216721649*^9}, {3.7852643149914474`*^9, 3.7852643475935354`*^9}, {
   3.7852644069901733`*^9, 3.7852644070928326`*^9}, {3.7852645182904143`*^9, 
   3.7852645377768126`*^9}, {3.7852681182959647`*^9, 3.785268128246215*^9}, 
   3.785269285445484*^9, {3.7852697491566772`*^9, 3.7852697592097054`*^9}, {
   3.785538474804677*^9, 3.7855384812477183`*^9}, 3.7855385189985633`*^9, {
   3.7855385626121855`*^9, 3.7855385662395616`*^9}, {3.785538601860875*^9, 
   3.785538671427971*^9}},ExpressionUUID->"51dba8ce-d54e-473b-8306-\
f61498bec997"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"plotTrajs", "[", 
    RowBox[{"sol", ",", 
     RowBox[{"tf", "-", "3.7"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"debugComponentsPlot", "[", 
    RowBox[{"sol", ",", 
     RowBox[{"tf", "-", "3.7"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Legended", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Phi]", "[", "t", "]"}], ",", 
               RowBox[{"\[Psi]", "[", "t", "]"}]}], "}"}], "/.", 
             RowBox[{"sols", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "Nn"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\[Phi]", ",", "\[Psi]"}], "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Legended", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], ",", 
               RowBox[{"\[Psi]", "[", "t", "]"}]}], "}"}], "/.", 
             RowBox[{"sols", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "Nn"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Phi]", "'"}], ",", "\[Psi]"}], "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Show", "@", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{",", 
          RowBox[{"{", 
           RowBox[{"soli", ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"sols3", ",", "sols4", ",", "sols5"}], "}"}], "}"}]}], 
           "}"}]}], "]"}]}], ","}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Animate", "[", 
      RowBox[{
       RowBox[{"drawWing", "[", 
        RowBox[{
         RowBox[{"sols", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "a"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "0", ",", "tf"}], "}"}], ",", 
       RowBox[{"AnimationRepetitions", "\[Rule]", "1"}], ",", 
       RowBox[{"DefaultDuration", "\[Rule]", "tf"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.785163733169914*^9, 3.785163768788862*^9}, {
   3.7851638219331465`*^9, 3.7851638221495667`*^9}, {3.7851638575914416`*^9, 
   3.7851638656639175`*^9}, {3.785163952461292*^9, 3.785163959194874*^9}, {
   3.785181113450061*^9, 3.7851811849114933`*^9}, {3.785181223420051*^9, 
   3.7851814480879383`*^9}, {3.7851815284493275`*^9, 3.785181574334261*^9}, {
   3.785181607927892*^9, 3.7851818562133703`*^9}, {3.785181897023181*^9, 
   3.785181973204109*^9}, {3.7851820183846817`*^9, 3.785182035584442*^9}, {
   3.785182130927059*^9, 3.7851822788151007`*^9}, {3.785182768706132*^9, 
   3.785182824611698*^9}, {3.7851835377984476`*^9, 3.7851835381465435`*^9}, {
   3.785183574632366*^9, 3.7851838963880434`*^9}, {3.785183935005065*^9, 
   3.78518393938645*^9}, {3.7852369154777946`*^9, 3.7852369276973515`*^9}, {
   3.785237068661893*^9, 3.785237159502931*^9}, {3.7852390830870667`*^9, 
   3.785239105554223*^9}, {3.785239223653453*^9, 3.785239230566188*^9}, {
   3.785239332872146*^9, 3.7852394831645365`*^9}, {3.785239522904046*^9, 
   3.785239527846*^9}, {3.785239574459278*^9, 3.785239590976102*^9}, {
   3.785239663394473*^9, 3.785239765859336*^9}, {3.785239822253582*^9, 
   3.785239852287075*^9}, {3.7852411853333817`*^9, 3.7852412095104837`*^9}, {
   3.7852412747392893`*^9, 3.785241284555241*^9}, {3.785242577855811*^9, 
   3.7852426072696886`*^9}, {3.785242760532243*^9, 3.785242764687683*^9}, {
   3.785243042341342*^9, 3.785243082387663*^9}, {3.78524369984238*^9, 
   3.7852437033492184`*^9}, {3.785243878758131*^9, 3.7852438818282394`*^9}, {
   3.785250588656488*^9, 3.785250591357007*^9}, {3.7852507564570065`*^9, 
   3.7852507638104935`*^9}, {3.785253091532304*^9, 3.785253138847148*^9}, {
   3.7852531795009995`*^9, 3.7852531822852845`*^9}, {3.78525322760236*^9, 
   3.7852532347079835`*^9}, {3.785253269736401*^9, 3.7852533186729493`*^9}, {
   3.7852533499356813`*^9, 3.7852533536194243`*^9}, {3.7852534684496627`*^9, 
   3.7852534710220785`*^9}, {3.7852535409719725`*^9, 3.785253541682535*^9}, {
   3.7852537363906927`*^9, 3.7852537365316057`*^9}, 3.785254209543125*^9, 
   3.785254249221677*^9, {3.7852618005450153`*^9, 3.7852618049458847`*^9}, {
   3.7852619352877183`*^9, 3.7852619378303013`*^9}, {3.785262049200818*^9, 
   3.7852620500145736`*^9}, {3.785262103253174*^9, 3.7852621096136494`*^9}, {
   3.785263447209785*^9, 3.7852634489854174`*^9}, 3.7852635401829467`*^9, {
   3.78526380795971*^9, 3.785263846861192*^9}, {3.7852639620550404`*^9, 
   3.78526398507434*^9}, {3.7852641063890386`*^9, 3.785264110993264*^9}, {
   3.7852641564011707`*^9, 3.7852641571082044`*^9}, {3.7852641960012693`*^9, 
   3.785264216721649*^9}, {3.7852643149914474`*^9, 3.7852643475935354`*^9}, {
   3.7852644069901733`*^9, 3.7852644070928326`*^9}, {3.7852645182904143`*^9, 
   3.7852645377768126`*^9}, {3.7852681182959647`*^9, 3.785268128246215*^9}, 
   3.785269285445484*^9, {3.7852697491566772`*^9, 3.7852697592097054`*^9}, {
   3.785538474804677*^9, 3.7855384812477183`*^9}, 3.7855385189985633`*^9, {
   3.7855385626121855`*^9, 3.7855385662395616`*^9}, {3.785538601860875*^9, 
   3.785538746523289*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"3bbaf733-b67e-4179-9c2d-703a445bf966"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
3syc930dAvQxc1z6gA+F1wW6iX98IkB/G5Vl5P0oPDqwsvloiQDpzreSdQmC
/w+k+uol4D5f2KAvcRV8XX/+GundAqTuLT/pN3jT9CdW4u4CpFjRNZgeDOft
DPPvn53g8yz2vm4PobCa7TWyd/2//cZkWYVBHrWyjy3WFqBjdUTP6Bj0iza2
6xXwUZhnvuYpcP3BcQm1Lj4Kkjyh3vXPdSa+Vq/4yHuztWxwJJxv0ds2pj/j
I4cP/MHy4xQ2mRF/4O0dPtKT/V21KIbCS2/89bBO4KM3O1asVzlFYfWntG4I
xUd2FYnCg2Azermbz3I+apL8FPwYvIWesX27Hh/VVuQW+sbDeXBWslhzHh9d
lpoh9uQ0hU89y6vbMY2P/O9+rD2UCPdN66ldYa+6kfSM7BUvUikc9OGNicu+
boRqJeYdy6bwr1/0cY0IHorLd9d+BTY4pnElPIiH2uLu6+vkUDg3fsSo2YeH
dtkfWNUCfnL4Q83OHTx06kOL87w8CmewWbYrMQ+9kj9/rq6AwkZSj3UKJ/DQ
3j1aUhNLKGy48eWa8vAulCRrNhx5G+4X8VnBbW5v0Huc+Wd2I4UD/XjJanKd
6EcSk+MkoHANq2GizYp2NJmsDTT4TuEv74q6VnNb0LhwxvpcMQ7m1zbPkZ79
DJUveFxVNZuD97u4CXdef4j2mWa4eC3hYPZNM3L0yh30JnJb5gNTDu59M3n9
1tZ0ZJVtLH3DgYN1277KzHIqIMVlkWGUFwdf2WZ+LtOiihCmPG7fUQ7WWVvC
v/XxMXkzMLlhaQoHr4xjq7mMvSDFc01ys4s4OO9nX7881U48TUVhJTUcLL/O
3eiIymuiaZYfa9UKXul42seDRwpH1hTngLtFu7Ra4feYzrUPTf+BD8Y6vl4c
wSN6M/Xlcto4ePRrlMfT8zyyoq/y4lA7B2+p2Hag4AWPmMW/LLvUycFLlqbm
vlrZTdzaf/G+dXPw8ak2/O/j3eSSh41Bai+8X2pbWHeogKSl3yp5C36KU75t
iRaQpKZZWoZ9HJzGUTVtTBCQaEOBWhtYrlL2UGq+gOyf7CUp+5GDjZ7VZT57
LiDG+VHv4z9xcOTa070lc2jCE925GDXAwa2f73lp3KPJq1kqSu3gxyeTBMkP
afLS8kjygu8cvDVF8tGvJpo8LDc7+QC8UdmAd52mScnxlqDxHxzcYHTqQ+nk
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
         "]]},
       Annotation[#, "Charting`Private`Tag$17504#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{22.385, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\[Phi]", TraditionalForm],
    PlotRange->{{22.385, 26.3}, {-0.5844687799276245, 0.4780206349989741}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
BoDziwT0UlPZaFF2YNMr8BzK+sqjPDb6HwMu4Bg=
         "]]},
       Annotation[#, "Charting`Private`Tag$17551#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{22.385, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\[Psi]", TraditionalForm],
    PlotRange->{{22.385, 26.3}, {-1.3560067544614824`, 0.8896197395753245}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
gU6C7nMKfJKWX5XO5wcCcs+PZqP/tBVHikj4wdab2ho/0Xt+bz6jRvWDzala
M1deUKCuL9N1o70fcLnvOzDRhPU0YOKgne6HP64JRbMZ8xdp+nFvvh+stwKe
y+jcunKpsko/4ARGE7zE+6mMEJ9pix+srq69kY4uO3egJOidH3DIaIR+RztM
0ljlvvgBO7/63rQWCuy13TRnPO8HbClP1n5Du4uK5dWw+QMru9qIeivOa9p3
4bvr/OHvFD17FO1l2/rm8E5/+M/10Um1NgpsPpSyY7OkPyx/pJldQJcmqZ88
uMcfFpqoK1VfYf1MTF0uY/jDvPqDT+fRj4M/JN/X9YfZu5RHX9Gwy2vE0tgf
/kjVpNFe4/6+YKOWYOkPv3NUfFPQ6twde2zs/WGar9pgCO3YGH7s8UF/+MVU
FqW2Y73J5UQ8POoPP1nv/01CO1SJS5q7+8NksFLvZ/Rb1lesUd7+8GPi7l2V
Duzv7LkaUz9/GD+qmMJEC5rd+VNzwh++91a5D6KVenPcngT5w5ipgpZyJ+7H
oIXHB077w8jzOzsS0S1XQ/KunvGHYdW98wPotxWObafP+sPXO5VvFN9QgKVV
98efMH/4IrGnLB5df9m4mjvcH+x2+A2+R6eb7jBqRLfzVG6S6KJA3GNHCdEI
f9Bd/VM3CD31MqN/L/rJf/Ihz9EPh01XTuL7FWd8y3i7KbBu/reyPbp4rGLw
KPpJYC9H4Dl/EBqY2nQXLf1+DR8Dv/9yl7we21vc19uWFh+F+sOGl74h5miB
kmjbsRB/iK6tKMtFRxqbvmw65Q9Ld6cGp9BWdb1T9nj+gNvyvIx3OI/y/L1y
MD5j1331UtCip2X6MzF+h9IqQvrRxYWDI7rH/cHonPznM+/x+f2ljJ+5+kND
oC9vK/rxul8/Lx72B5pnhZ5ADwVazTgfbz3gD+LW8uUP0BPambammO9rhr6f
OXopkG+hHPQP64EXKnht0Vpn3Sw99LEed8uf+YOu+Vg96q3mD6eEfMu1P1Dg
vO2OKQ4VzDdfxedL6Pzr160PyftDH4u8vsJHCvRwPh3R2eUP1e/k+Hz78L7I
YTXJjvUt0+ajX4tWKGapTF/wg/z68jPr+3GfaLxVGPvpB6mlcl9K0EFCrEpv
B/zAK1KuYmyAAsrFU7QvNX7wJdjnC+UT/p7w38efVuYHdsfL+eLQSo1asuux
P3Xt5ELFBvH+Ofz9gW2yHwjJyRkc+Yy/DyLq4w8f8oMMEZ/QO+g/H5VMnS2x
n7eWV7B8we+fXtm6W88PFlfIbc5Bn+2azt8t5wfdvbJDH4dwn/cJaDTO+EJC
jOxZ6xG8311ub4rj9oWw3cMmJejdQzvZ4JcPBHZeFWIdxfu1v3XelQ4fOLhj
XWMp2kdzboaS4gNK979zsn/D+1mAW6fZSh8Y/Hors2qcAsJZm7R8v3oDVVv4
3sZfFJCN8Z+f9PeEUbYt4y+XKCBR1azIIuQKpdQ2GcFlChxbH2h+8I8LBPhE
+ASgNSTNvZ62uMBy7/gvgf9w/6vcY4866QJcd8i811/8/VnSqG3YehTohzxX
bWClgrzRnMrdU0cg6fHTXRarqKAn8k/H4dkhMP8VcLQQ/U17fzAl4BBslpAs
WESbJ4Z+sNh1CHIvXpTM56BCU+MJTcPwg3Dfw03+92oqyBzvrHDZdwAGtnCr
Z6ylwne6wdGwTgfYE+hi94GLCkdPHaj9sNcGjkt9mJbkpsLXZ0eT6qesoXjA
NDkYbcdmc/ZfmTWIGag28PJQob30aFzUbmsQEOSRMd1EBUXhO3dqpa1gRXPd
v2d8VGAqqmYn0C0Azipn8WymAvm7qlH2rzmEKZQoHUZznNgXqNBgDvNXMzz+
otcIpekc2m8OP/yPd1H5qWC6NDVnccQM3m3bdqtMgApXTwjN/9Exhk2dqfuW
0QIO18idXiMwi13VZ7iNCp6dujfoPkbQ+vMX1xiazS2k+f6V/UCeN4cI78B4
sm40P7RoAMW+QSaXd1Lhy0iR4scvunD2WeefcFEqXCjZCBoW+4AuVSf3Dr2r
j3778ALAbEqp224xKnCGbD0SdgPAxyGu9y06uZzDQ/cbAw7+UnsqLYGvH2Lz
kTZWB42dRdHdUhg/iRMP6/2psBid/lRKmgoX1eVll7BPqr9HzoahEyu7Ngvi
PV+u+oC71G4qyLVtid2uoAI7jTcZhclgfu4ZJX/iUgKWM2GbJOWpkBReIBUh
uQeeDHoZnUWbeGuZ57jJwyld+5g3aBel09e/RcjBT26ludA9VDh+IMsvpF4G
Bou+fejcSwVD9c38VG8puLrh/SYJBSqklMhuGs+RBLvARqNQtP2IQo7Cewno
YOTUiivi+yMWtwWYiUP9O6u8M0p4nkf/TVocF4EwNc2PHeg1Yinr9j8VBnqe
PK+4MhU+UqyHH3MJQ9VxztgOtEUN/8R8vRDksRMPMQoV0rbcP/Ajazsc9CzL
C0G/z0g4n+a/DQQ6sj62o8841XX/NBGAi9knjUOoVIiLfplYsIMfIhV2722n
UWG+NzpxGycvVG/pbRCkU0E61sQrTmwTfF+OtfJBb833PXBRlwcsmr4Er1fF
fhA7me1xhQtiS1PXHEDPMisaTDM2wqMLGtml6PVdv+zfsG8AEaes2v1qVGjs
+kMq2daC3T59s2w0K/uOyakLayBJfPbzd3RhvtOXpd2r4fdP85WJ6lRoOLko
AOEroTFmjVGzBhWG/gvkGbzFAvOeNf1bGFS4suAR0LPlH0PGzNXXDe2358by
9d/LjDSB+ourgAp3wl6N1Y7PM5r/+YjaoJXUVdf2rZxjLH/dXl2Avt6R2yen
9IfhWnGqV3sfFWoNzvYstf1iZKWJe6WhxRYDflMpPxmvT3cvD6H/SdfpHfWc
YLAdikxR1MR+zux3Skn+zlDR3iMUhVZ6Zn7p/vtRhqfUwJ03aPeOeMVs/WHG
9Q1JWsJaVLB++8OFdfALY1Xv6LF6dGg7y1I5Wz+DXps+z6WN8RF+R8vg62X4
5GslOqNfh+lGJp94y8iL/7WtEl3049dq/u1vGO+O55T9Qz+4PVjov+M1g9PS
mGGqQ4UbfK1Bw+nNDA3qUsd1dMnsjqHU3GeMgB23j0yi2f7bvWL6VC3jFpvt
b3VdKtTtddPW6axm9I2yxyaj274Jl4nqVzK4XlVt6UcfbPWM3FtTwNCucr4t
o0cFLm2meqF4FuPU5Q2qoWjr+x+klyMTGaWhT9pa0U52T5XF+gIYg4c9D27T
p8LepsOd6b0MBq8e/09P9LVTSg73rDTr9GVeRDxCO3deOjeRc6IulDtwE6cB
zltbAQuXmcS6ytldBfZoM1WtNV81suq+fmxXuY1WFC1btTmjoG5r/dnmebTA
G49kPa7KOpPC3Q76hjiPF4O4NZ2q6yKZveOX0fPcaa/rS57WVfvFnR1FV73i
m2JheVb33Vp5I2U/FXzZiiG7uKlOUHUoNxa9JeYmvai7rc5C6ILCO7S/63nN
Uo3OutiVjEYxI8zPq23BNebddY++/7A+iS4MMvjRn/e+brI9a7QRvbLn+Zr0
vR/rhO/rn+Y1psKmjmsNrv8N1DHP3bx6F80mVHghpGCoLuW36XVWEyqcbvYo
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
Fkw=
         "]]},
       Annotation[#, "Charting`Private`Tag$17598#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{22.385, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"FL [mg]\"", TraditionalForm],
    PlotRange->{{22.385, 26.3}, {-956.1358092393965, 280.074674214381}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
ot67mf5gpwmdMqnbp4R46t//yA8mwoCTHuVqvBL6p+8xPHgJ19M2L15LI2W8
fkKJYRiul3L07sikCopGdFm1aCJcrv/cwC5HRO/OqBwXTCGCpu2bmLojFGRe
nzF2AXva80qoWSAFde1YCH6O/coouUeknoJa6q/d8E0lwoRk+blSQUCVO3cx
v0gjwtOtv5IHigD5P5pruZhBBHnmjt60cg3EtqtUpScHv3cmXZvbWrUQpYVV
LLqUCGWmPLc6DfVR0nVnqSFsrpakH2J++mgg6YmcdBkR4rL36uXk6SMXi/Pq
fdhEs6SI7nF9lPKlz1asHNfn6NLpxJDjaGh3QS6qIML+c08tybUGyMNdcidj
Na7/qRaDuMPGKJNTay3mIRHWlyadm3TMkFmg/ak+7J9VxmydtmZo94fABtF6
IrC67Q2bvmCGcq9XBT3Brp9JWj1RaIYKVTl+rTbg/tRR5TO9ZIYq7d//cn9M
hFP20537S8xRU9WF38YteP588m+JZrFE03B1Q6CTCEMFn6JHdlshyVOH//pg
l/RKZDXIWSE375bf7dgWTC+Mqg2s0Ezu2Nr5l0QIvHvF+XMs9vyBldZXRJjf
eepC/KoV+pJTM+3ZQwQDwS12oyPWaPFLy+vHA0R4RvEM39pui2T/nejhGMT9
oXNi0X3CFp3jHu86ix3mL3N9jtEOfVXf8pJ9CL9HbYLvGmrYoW9UvXanNzge
L4YYMlvt0NLRvkes7/A8Ykst1u+0R98zx8tsPhFhzVFsjWXZAVVLKK9XYU/F
nHY/zXUGOTfFn1jHtoft7kNKZ9DgpNS/vFHc367OzEoFnUEPVX3shj4TYfuy
xKjXvzMoaOQP74kJIrgZZOR0pjiiP1I8qdqzRKgodjH9e9cJ1TW7TmRj1/6+
cnitzQl5mT0iTWL/W+ZO2PrWCX0Mtf0S8wXXz7tuSecNJ9TcU6ZDnyPCnjCn
d3wGzijy4mEG8iIRzh3eU50654y20HUD5VeIwNwuP1RIckEpk7lHI7BjC65L
/zFxQbu3T2/pwr53j3bJz8UFiZvFUd2+435+IaykKsMFaU7S7xb/IILvNxse
9VkXFMtCmt+5RoTHKZaDe4tcEaPpoTNf/hDh9LdO/c987igpIFRS9S8RzM3j
h5Pk3REn7eXXOOzLjMPmJ/TdkdiEe/jeDVzviY6NyqHuCAIqaKf+I0L3sPms
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
APbFS/1M2+LYgasisKsbW8K3fFo4fBf8DzhODAQ=
         "]]},
       Annotation[#, "Charting`Private`Tag$17645#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{22.385, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"FDx [mg]\"", TraditionalForm],
    PlotRange->{{22.385, 26.3}, {-1174.095122384758, 1650.4120741566492`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
/uiPumcTUob5MPP2/opK9BLu050bfvLhPzvFqeo=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$17702, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$17702#1"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV13k4VO8XAPCUNiJEhZJ9j7LM3BnFiZTQglYhYe6YO0OWki2FEqlISEVE
C8I3SmnBS4VWsiQlJVq0kvIrS36nv+b5PNczc+7Z3pea1w5n3sQJEyacFZsw
4d/nXpV97kleLCj4kG6saSyCof0g3YU+Wm74IMNIBP6fJ1QberOgfcbLPVPQ
bhXRqg/Q/e6lJo8NRdCqYv10rg8LGoIlzLXRDgcmxvDRMweuOocaiIDrHNsj
zmPBcK7i26n6IiirsEl1QYd+kN9gqycCvQXitrnokuS6dxG6Ipj7Zf8FK5oF
T6OPebVqYzwH4gThfBZoDoa8NNHAeL6sULqPLuGGrOaoi+Cd89SHc3xZMB6/
6S2lhvEsiDcsR/vIZezWWCCC0hsJ378LWPCctcvngpIIdFXtcywZFrwbeyAW
oiiCnDgJpyPo4XPd9ZZzRXDUJbFMX8iCwsiEp7cURCD6engXT8SCs7WqP7xl
RNDrslr7KppcOfllVFoEW29KtU/0Y0Frwq7ZSVIisD94lMpBy3ndHzkjIQId
teSRF/4sGN35RMtPXARv1x+PXhfIgi2zIuvuDAnB9ZaLSTbax0ig2f9TCE/V
5Hu+orXjK4jCoBDIt9TliUEs2PBfcoXjdyGciU+fWhfMglrT0RrBByFsuX3y
iEUIC9bNMNTf/kwI61qediajI9WyLAZahLDi03TD92jP0cSAsKdCMJkb/iB5
NwvoxFv2QY+EMGOn69T3oSx4n2D+aXKtEKoMlKOTI1hwq9Jw4bVLQrhq7dL0
Di3MtjO8ny+Ewi2JCywisV/q9/FbzwvhxMGRyndoTu/9jJZsIQT0vBzmRrGg
Tnm2wq7jQlA/nbnz3T4WrBbT/2YbJoS5Za13uNEYT17a7le7hCB9f8asZHTq
H6PNfkFCGBmKLOXGsEAUJq4dIhRCq7P7t6RYFvAqY7UN3YUQJ6Hiy41jwW/a
3NnASgifw7K3JiWyQEYtjokdY8BVJmPSa3S89uvw4D8MNFxIvmR0mAW/nunK
uf9i4FxL9Mhj9PX1yp3zvjLgsdDn9IyjLFDdlCW5tpOBpje6LxOSWZALAse9
Nxi4trLMdX8aCw40ftNV3sGAZlfhxFa0+YamjVYMA8d35hVqpGM/n5lq7c5j
IOBs6nAtelvliU1xWxnQGwk5JZbBAou9KqVHVjKQWWLxIuoUC46JmoqDVBiI
Vri3JSybBWJJvvty6wVQbXErsB7dM7ZUT6VWAGPbSxMUcljQtPna5NTbAggr
ybpRiv5pkefpXyqAwJUhip/OYv88Um16dUoA28N0OlzPYb/9+q5VIBLAslcJ
m5cUYL/Uabr8lRSA2Pk1m8bLsJ6PI/qnc32hKuK21PorLPjivrDkkIkvhDvr
381HlwaXaE428IWf45MXO19lwcC0ftsPyr7w0bVS4nw5C/ps1p3xHONDo4xh
lX0FC4IuKDbpVfMhK3K6Vnol/n5ucKGOJR846+/+MGxgQY3fxWEPfRp2dW+p
6n/JgpSeIWntL94gOPpSx22ABVoRxUqqxtvBzrgm2XsKG+res92f7HQD/ZI6
PTElNhwv3jQ0lLgR7jpWeK4wZoNbll3J3dNrwev+/Xo1GzZYJdjK9qVaw2eO
ldHJjWz4NIO91dRTGwwf5JhUCNnw8qPdeq0Ji0kgpc7328uGx0L1HgfalvjV
JXEepLLhz272rnqeE1lvt13yTgEbujoXjYTu30Ss8p2lnCvZEC6jmKFW6kbe
6iwqjm9mg1lXwubGJ55k8/yAN+3oPIVOH9t2T9Iod3mWTgsbyoljX/lrT3J7
zDj8HlrsZOv6uH5PcqLFeOXENjYsT7RL6pXdThz3GndHtLNBVbbNO81lO7n2
zEhhRycbtsmXd1Q3bycJBxbu2fCeDWnRHcKxai8SZfBuzSX0e7MNL87Ue5Gd
TzNVxT6wITDDOIrT6EU85s+4W4R2S3zr5drlRczKP0mI97Fhb+CqRPtRL/Km
92JG2Wc21HfNqOxheRNqufrVmQNscBhRSvp1wZsYfeo4wEOXrdvif7vYm2gk
H9t0C90uoRYYedWbSHdOGKF/sGFy1NjrDzXepDf49bKqQTbo6e12FXV6k+S8
zEbREBuy1J0SDGR8yIeJcz7fH2GDslzjxeggH1JEPTJUGWVDi/4zSadQHxLk
H+0fhL682/WJYpQPGe34PKA0xoagE5N3nEjwITKl5LfwL/pYpqpNjg/hbmOm
SItRcOmeravbIx9y+FalmvMUCnxtH9mdWMAjTgNB3hfQW6O6b6do8shsHd3z
w2i5kjlpB/V4JCclRTdvKgXyJZrB7qY8Ui7gG/+cRsGQfPu3Gyt4pGuO7NJ0
SQrG7KeYskQ8sminz+YXMhT89Vt+3bKMR/z0XvzQlUWHdS1UvcYjhV1rj+xG
b4/d/H3kBo9orbKolZejYODn4fW5NTyipCJnuHYWBRumH75S2MQjkxqqx+8o
UGC1NEyj8CuPPFNWvlisRIHRm5pBWoMms54mLxtFz1Y0zUnRpsm6uCmd9soU
WE9QvlChR5OH/QMyH9EJV5zIoDFNyL2GcPX5FEyal7BEewlNCneErDmxgIKo
5471kS402XPn6a99mhQ42y7rHNxDE65etdEzdOysipKcfTQZOlrEN9CiQGn4
Vf+KWJr4ux7saEOrmcyu3xtPE4+BJZX6OhQUlm5vzE2hieWC/P2tehQsSH09
UHKeJsP70yr19CnYaKkxe/AiTa59ihmKQofXV5UvKqSJ0TV3Xz0DCq58+58g
o4QmC1bPcowypMBj88ZbitdpMiEiapauMQVrY+oKeutocvuN0HEP+mkZ/xVp
oEnoii0HmtFLfwsz0h/QpF/W7H+RiyjIqy+6aPSEJm/y+148XUzBopR9INtG
k0zp9lk6JhRYjhXevfGMJpt33nWMRJv2uD7b+pwmTVbZVdqmFOw/63n+8Eua
1Dxbnxthhu9vUzT1bDdNopZYv2xC/5pTIDW7B/OVayyvbU7BTIVtF/f30qTM
TyKuCW3tqHByzQea5IoTgRYb65Efn5j2BfPFFOeGo4eWGdq2f6WJUtOpl41o
Ru1Bhtx3mqSc3rU6nKJgX/Vc2ZABmsSYGCxu5FDAV57h1v8L8zeno1aFS4Fg
21bu1yGafBqNW++P/t5sfqj3fzRxrn+7W8oC45mnFl37hyYabqeqHJZQUEz1
vrIYw/ddZrfuNDpFPcd1xl+aHNYe6v6E1nknu6Yd/bPfafKhpRS43ys+7TaB
T+4emO7YYElBZvC3Hs1JfPKbuf5qjhUF+sN7de+jDdfxdvDROhJ/PvLF+SRV
qSZlClBQtMHyTepkPmkY99fciPYXbZmrMYVPRnvnXTuPTo/48+QSmvdfaMfy
ZZivcPpm0VQ+OZWqLUxFB+yP6decxidPwlpHe9DN1TUXT6BZyxepxlpTUFNs
lymazieMXldpMzp04psXT9BnpA/bqNtgfE2cLAMJPpnS8YGuQcsotP3XiuZW
pf2WWY798JUWU5PkE/88m0Oe6KxJbh18dG78gPJltEWzG1WAfuaXXTyOFg7K
LniHlnBZbbXWloI7GppHlWfwiSU10nQG/cBmSZwjOmh+gdc3dPGWSdNC0Rcn
bvq5dAUFYsfV5c+gOz+Ixx1B66n051ehZR6XzXmF/vvi1sMO9PIyzwLDlRR0
XHkZ/h0dekLaIhL9R//PtXF0UeTtRw/Rtn2V+ySk+OTNdsZD2Y4C78iW5zPR
8ivn9jNo0+Rtd/7ZzrAu+iZ6/ec87r+/j5TdOUtiFQWOS3dY//u+y0Nq57eg
b1JJL76he182sgrQnKxH4v/iUazZ0/Ab7TE/qaYSveaCgaudPQWRg0UyWeiY
xI7PJ9AJDcODIehrAQf3fEA/NW8ROqA/bTCfyXbAfl4kFaqEVrHoyYlD+2y+
o9iL+XRWPWbyDH1YEOeUj46bbHVXyxHfP0VW9V89bn76smEXmiW7Ok4V/a3x
1Ie7aM1fJgf+1VO93C5MfjX2z8cr82PRiXvPZV755/9CVZqwH47+XHtGbA3O
+/WivQHoFMFI9lq06s2rZZLoUy7OeZ/Rfdq/kk2wv840jJ3jrMX9Fxm9tAr7
MXdpwYWD6IdHjlYtRxfqTCjUWEfBoNgXsMb+Lcm8dCkQbb+62OYG9nuZ7Kbi
anS05v35BugbI8WXtzrh88FXruM4Lw2NW68fd6YgZKxBkhHjk0fLp97oRi+d
977zOs5b042ym8YuFBgbSiVOQLfnTa96iD4k7xEdg/P5fvf1u5M2UKAY8LnP
bgTn/4tXnRP6rnrgdb9hmnzbLt2QjWbHPeEfwfn/5cB7aLGRAhvHiTsrcT+I
q85qDt6E8/Bh4do3gzSZllbVUoNOrLK16/xBkxkSTNvMzbjPk0z1W3D/zPpJ
nl9Cd7w9fakU95N6g//rni0UULP7biz+TJNlAQ++uLhR0FDr8p8l7sfl73Z9
O4uWjIs91veaJnauav3f0V5+vb5JXXheLQ8dTHTH5we3Dz/E/eo5V3v4jgcF
ngLzqmm4j6NI9FSz7RTI3hoOP3afJmLvz12MR/PeW8o11NNkv2TDyldo08Jd
93/fo0nCRun4OC/Ml9Wb03a1NEn9cmpahzf26xry9exNmhTMvTo9iqaAu2tk
0RI8bwwt2wua0Zdkx5Yr5NOkxHt4lQ6fAhObhoSPeF5dLYFDTWiNU+MFe87S
pGr5YwkNAeZ/2V8vrwyatAa8l2wQ4v5tDS+YfYAmG9OnF80TUZB7j+dwPIYm
HbcMHQPROfuFxhJ4fnZNCT6s5EdBxjX92vfhNOnLHJ/h50/BtLZVi7cG0ORv
w1xpuUAKnm8UMzJxpYmemoOMWwjuB9esnTl4nmvWGU2/hPYxCnpwBs97FaHc
xGG0ueIWqwy8D+A1cPDEbgoM1eQPRc7H77PzbW8Jxf152q1SQvZfvAfOOERg
fDZjIsv/8cg+Um1osY+Ct2Z5B6cTHong5WkdQh+YLjrmd5tHQiQOqnSg3Q6G
PX9UwSPC9Wtkdkdj/URs9T2lPLLxY+dgWQzu+3nzqs/l8oihzPBN/QMUZDup
D8ns55Hn28xWKR2iIOLbaTUfGx5xLk96swOdEJy+o92SRx5KfN59D/3z82F7
Wy6PVJWfvRCQiPtCLqBIZjGPnJecKV5/mIK6U4tsaBUeCbreVxWchPedhwef
Sf32ITNmZps9TsX6XvoVsOmiD7Gqmq66LxvvL0MnF84b8ibxeV46regRh3rL
zf3epDn+lpFuDp43+kc9kj55Ex8Xv6VN6Hvyb5986/Imhz42uarmUtAtGZMW
VO9NWuUy0sg5nO82j+ajJ7yJL19bUqyQgs7fEa3qZnh/lbEZir6K9ZNKGBv3
8CLvIHNUsYGCID9+iSDHk/xI7s7Z8oqCzxNGNQ73u5FJ1St2GQ/gfSLp8Vz9
nZvJ+JuZq86Kc6DSaeh7f4ELKVO/d/OmIgeKIgwmsLQcicD6lBuzkAMzE3Ki
bsguI8+jt2bWWHMgLP+UQOOHGnHIXjLjv40c2D01h9wuMIKCy9ERFMMBHyn7
PfWPbaC6uyxesJcDDzMYo4qYdfC8f1LdouMc2LS74EtOxkYoWLDsbHY+B2pK
fYzYQ27As34bUVjJgU4mLtfddzto2eTFOTzlQHfx/trRbm+48D/bghz09Buu
6XL4/5hu0ceHv/49X7Rlp/qQNxgqGMnmNHPgl2cPd5GED5h9qDj9s4UDqVQX
f5KJD9gkPrmc9YwDPXJrJ+zf5wPbW/68+P6SA5ce7YbHc3mQ5b3OOPU9BzaP
ZtUlmtOQfuJKYQ86fmNLX8BSGpIfztY2/cABxZgjX9ba0rDf9NW8ZvSqCxYH
RtbTIJrESMj0cWCZ8YryaTtpWJIX+y7xMweWT20o+X2Zhhdvr52O7eeA2b2Q
SfO1+dA6W2lOC1o/5NZvaiEfntjvSVEf4ICGkU/kGjM+1JbZJNSg879IatPW
fCiMaQoZ/8GBq/Z991Z68CFM/ZNTxC8O+H666dmcyoe5XvOnBQ9zYE6Rke3/
RvnwVitqkKBjNLNj1Sb5wqW+ri7pEQ58jPDfYDvdFywDc8oL0QPZksVhCr7A
26fh/XaUAwfDXSamLfSFsjN6VU7jHBhqa5uY5uYLDi/Ndy4S58JutaNKpeW+
IJ+dvi0KPdv9o6LkLV/o8vqf/SP0+/8ti/UgvhD0qULNdzIXNJiGpIEHvpDx
x6IxewoXdHh3ghte+0LvHGv9mdO50B02P5maJoCo9WvefJXiQoFtvfy89QKo
a9BmrKW50Gz0Jm3SFgHMXDo+mI7WVW5j9bgLIEfr8lSYyYW3Hvpth/gCqB2S
NU6R4YK70wb/iHABTDnZtoc1iwv6J/6EdJ8RwBqpkqmJ6CPna7Pt8wRwIjru
2Gv0xcn5ry5dFIAuwz4fL8+F2trz6RsvC8De4uSjFwpcsJNy++5YI4Ajr9yU
987lQuivr89udwvgmZP5+RZ0ope54sV3AlCpkzLWVeTC4szbgoQ+AZSUVFk/
RQ8VOpuxBgTQtFeV0VDmgt+Ft/xFExiQV++tqJ/PBbGRGIWL8xjIpIUbZTS4
ECi0yshcy4CbqzhnG9q+ui9+ozMD89dkKZegG5RSEqdvYOCMeeMbB00urAqf
X+/qykCOuKnwoBYXZkxbr1jow8C53OG9f3W4UPlHYD26mwGf9ONeq3W54Jh5
zmNlOANahwxtM9F/f945mhjJwIVADwmuHhduzhQZjO9jIB9qU3fpc4Ft0LP1
eAIDxV0JBV8MueBPzXm44yQD/s3qhy0WcqE3TM3K8TQDRnW3/A+hT8bceaCW
xcDl4q+mukZc2CD+S68ih4GySKcqb2MuzHTzl0m5yEBQwKecMnSExuFV7AIG
TH1iY8UWccFatjyzrZCBqw7ldtnoq617UsaKGbimpNjyYjEXBlcl3xu+wkCI
dFm5ngkXtuzMfe5bzgB7okNGKPqyQtK0pmsMVPRFus825YJKQBhJuMHAzYo3
H5zMuOCQ5Xu6sIqB8KKwBznoGYrKOd3VDFjkyBV/R1Opj+/K1jBw++DyoCPm
XHjo+2qH+x0GqjbmjzawuLCiO31zbj0Dg4k9kmpsLuht+lpV3cCAbo2Kchj6
58fgjNb7DBw3SOPoUVxIVsi42PuQgQbPJrtodIn3nq7Xjxj4mya5uQM9a6F6
YvNjBnwnxIQkcDB+gaPdmcZ/9a080I12XajjuruJgRbmdyqHi/MyWdS78ikD
lm3+V/rQaxr6fRqbGQiWKKxdZsEFBb3jbnEtWD+rd09PoksCfRrNWhmYVbi1
f9USLpxwE+iFtjFg9zp9/Cz6c6iknNQzBqLkm6WH0VXCG6En0VdWSak4L+XC
C2kjj/ntDHyMsltYiFYs0LqTgVa5GrtkoiUX/vvsni/5nAGXvioHV3TI9zTp
EHS8yrBrGRpMjg61o6tczBkJKy6opk7bvrgD8xcfEOaFLlvfsCYGrVt1Kf4m
epdMCnmA9hh8f0IOuCBbZXBd4gXmU1cdu4YLmZfcTK3RDe7u12rRvyK+mgei
/6Zk3FNahvXUzK8+gTZtaGkNQlsn9D0qR/uOSfc+QC813cp/iM4ysR9Ut+aC
t7pb4nN0M//AxAh0YPDYz070tCwi24IOuHTDqAO9tHlE1cAG98+uIz8foYOm
shfForuCrVZWoPOXBFm9RJ9fkKxzGv0qsHiN6XIu7Kg6n74LLXfxo3siOu3C
j9SV6JWdGn496O9KIg1ZdKTstkgLWy7U2P21bsb3L1txKvE4mjap/XkI/SGi
7dRn9ObCdxwL9LxSmUKbFVzYez5iVg/m1/m9w43TaOqBT0wM+va62naHlVyY
f95MMx/rNXBg7H0eOtpFYosRWvsWNTSC9k410ynCeh/T+k++yI4L/VctUo9i
f9S5ftIQX8WFRzLW5oPYP6NJWqZu6FIrqZ1r0fTwaacZ9lwwqH/c+A37L9O4
3dMHvYmt8X0x+qmPXMBttJ74j8si7NcljfFHRQ5cSLn6RfU+9neg+N2su2hB
dcHTT09w/3DGi+Y5cqG+/ZmeOLrTn3t7J3rqzGJ9BZwP2XO7Hj5Cw5+otvk4
P/8Hl2jKfg==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$17702, {2}}]& ], 
          Annotation[#, "Charting`Private`Tag$17702#2"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
Al4zqQe1YTwF1vN6R9DvQyR07OrfYrpfEjYzkTdX9UsixBsxf94ujlVk+c4j
oX8K6rDneuzCpkepsJDPYmREI7Apf91DBcg/XG+l0C9VY8Ivgo8wHqPCDc0U
oVj3Cszse62BFfKj8hzCq+EFFi68alWGzDlRWWlx8RlWa6bqwoZRQciiMpXv
WRG2GO7u7YgcQ3pbWSGfix2oLQx/jZz89mGN0okszHZx4iE3UKGKNv1UbzYF
izsgnuuC7F3h89vW5wHWbGNTXofcMsYe13kxCtuITWwUPE4FK6mAq1ZyQZhy
c3ePJ3KSw7bmbm8vzOkfx7d3yDwPfmtbmzhij5T0F8U1UL1+k5N79lYD67oY
yngLuf7QdZZas4Jj2x8Ru7qRH13f1uW0dBQ/2rUmKquJ+tHih4i9VHvck4Wk
GIxc+GuzcVeZJ553xBP7jFzplWvd+S4AH/IoNlLWokJHUp2Jj00Ezp07ZROJ
3D2EY/e2xeE6gxKXx5BdhCKfv/2ehPvusvNV10bxCvg9OTWdgZedSI6MQ77G
3a0xS8/BJ2/1Js8gH+tStUqyLcCFnnEVaJ6gwhGhnov4p6e46YRBZQpyWkTt
CNd0GV5tUtdvoEMFd4Mdi5kZlfhC6L+Jx8hJBjba9RY1uFQVeWUNOZkWaz33
hMDvSz7lLdKlgr1QVTxppQFvspqWYNZD9eNxOo2m/xZf/09SmYbss+l4vbqq
Bb+wmnJqpz4VWCMba3uWPuCpCv3255B9X6Td/jfUgXee43avRt4fbO/yn3EX
fqQ9PPqSARWC3kp3blr34h7MDY8akOsoq/wPVvrwJ5TNIiFDNE9eWl2PSPuI
D7pRq72Q6c1CtAqzAXxX9rX3rchSijKMS7sH8f8B7ANzNw==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$17702, {3}}]& ], 
          Annotation[#, "Charting`Private`Tag$17702#3"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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

             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$17702, {4}}]& ], 
          Annotation[#, "Charting`Private`Tag$17702#4"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {22.385, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {22.385, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"stroke\"", TraditionalForm], 
       PlotRange -> {{22.385, 26.3}, {-200.53174468590356`, 
        233.7167475807862}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"i\"", "\"g\"", "\"aero\"", "\"act\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
dz5uR8PfmqxaMSPqPwDkxWM=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$17781, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$17781#1"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV13c8ld8fAHBJRubNTGgZURnh3udedI9LRkbI12ii7IZKIhIqSRINI1uo
pIwiEc9JSIqsQiFkk+zM+n1+f93X+3Xuc54zPp/POc9mp9NWzuxsbGyuq9nY
/v97WSbo8G0nKtp4mevzHroanruKBLrA95adrtkYq+FTo2zkjmNUtF+befag
vRo+VBy8qRZ8/4urmq6fGmZYXfnJ4UxFl3QXbC8Ww/PXQt0vulKRSo2FQoTG
LnziV8R55xNUxHb7P7trW9Rx334z+ZfgdWqmbqOq6vhgCX8r+0kqIgN08lhM
dbz3eiSRCr6QfPFG5UF1rLA5aunbKSqKTlCTFL6njnut7wZbnKGig5+9KmpX
aWD7N/G3tHyo6NTgwyOyjRrYormxIwo8wnmoKKZLAxuM8OwYAO9Q1+GeHdXA
uyQu1kZdoKKAa8cNz3NqYj7vA1wDvlQkJaAkGMLQxOXbNwRH+VNRiYNfSFmy
Jn7J2t/QD+6iPf05kK2Js+1vbtQKoKItQ6VyS0WaOPb6Ulk/OJr7JU9fvSb2
+vl9kRFIRcW7dBIKVzTxloRE7/4gKvLL7Ks3saViiYKWd4xg6L/PyEHKiYoF
PvAJR4F/xbFNfj1BxUtzAfmMECp60XC9gyeEilusDo/fvkJFKbT2cOenVBy6
VsaNEUpFLuNKvKMLVDzql3Lw9k0qcurONBy5RsMHhOJW/wArGS3MHb1FwzVZ
UU+VI6iou/jhmbf3aDijOXipDnx06soLw4c0fGTn8QS+SCr6fl+rx4Gk4Ybu
bd9vRFERpy8nrWKahndf2HylHbw3d8p3aoGGn/FLbleMhuePpOsKsBE4nMHr
XwP2TBu25+YjsN69X5Jcd6no02PHfZxbCVxkWHDg6n0qMn+suiJvRmDZrmz2
FnAeM8tewIrAd70fZm+NoaKaf6XremwI7JV2b7ECLH3GJMbIgcCKSz4PVsVR
UYfe7rqNZwkcF32aZQkuKB2edfQhMOc2t5FUsMrsa+/bFwmID3sGiqci/XDR
szkhBE58rvUt8AEVPZlTODAeTeC1ezRC6sF25wy23LxPYN/vO5RkEiAemPVa
wvEE/o9b5mIZmJlr7tifQmABJzbJ5UQqas+7diY6h8AB8/NvTZLg/2ofK8Jy
CTwaOemeAFZQaHP1LCBwTWnva0YyFU03J+RNvSJwsGiVvV8KFa29tMeOp4LA
pFbpmfdgH58z4/sqCbzimH9DNBXy7yvxPKSawH7Pk17ng4s3LOXm1BL4Vcvd
xn/gwNdNMw8/EXh28cawWRoVySn8c7teT+Azhj7rR8A/Ljb2r2sicO7JE2pE
OhVVtHVPljQT+NddJ+NQ8NYpcY19Xwjs3m3ut+UhFfWP3XHSbiPwI8490V7g
Tv5fVvfbCdy/Q+tJOZglmhP87RuBHf0U2g9kUNHForKHip0ETkmRnnwMZrwa
SVDvInBnlTDPH/BtJ7UOxR8E3jDGs3lPJhWN1cm78nUT2H4dG/0ueGLxNPM7
OJaYs+gBOza/dY3pIfCXI2NuKllUdEOup1enl8DC13qDLoEfp6a/aARbPm2L
+wiubhzpsPxJ4NuN9XnrH1HR603PHcvBdX8qa1zBdnUT+uJ9BOaVKe0uBAv+
qr5xCGysnz+/+jHkp5u1eiT4uscjIStw88In/RxwVVTStlSwqZL32yLw6ld3
0TjY2TIp5xlYt/OGnfYTKpK/+5QnGnx5dZBXOFj1B6XDAVym6BPWBg6k2CpI
g5f2nUiVz4Z4TVX/XQXjo/s4FXuDP1t60g6CLyTaNVSAmzzrVnfC/AorzIeE
nlJR7jbCzgQ8PaTPdhR8viCOyIL1URPUkngGztg8+vgXrN9pTTXVJXCYP+PZ
ZvCzgwpGxjlU1JKXasyC9R8NlnaIBQckGoTsg/1RfCzs2w9+xX78oDHsn2s9
T5T6M8jnKGa7SgeBM2f+PQoGL7crs63+TuDNumOt0s8hf/yHD5yG+Djq2vvb
E1wXkh3L3UrgpFttXCXg91ketyMhntZ/q6TZ5FKRd8qFCgeIP1u20n0ZYMJD
jetZA4Hvy+e7ToHzmZXrByBeKeeSYiPzqMhiaq5U5iOB98Xfze0AVz6/+5/M
BwLfIm+8V8qnogPf5xrWvicwD5/Pn2qwb8PD4GzIn1WZ5rb/CqioVSHv8JrX
BC73f8Nv/QLaw2cc1IsIfNFKqfIx+Hxbm7jJCwLP/FujZvWSinbr85fRnhF4
6EDZ2sxCiCcBVj5nKsxfbfvbBXAGn6T0lUQCO3HHXzAvoiLa70cXhuMI3FHo
3fcHnBEyIO4N9eOz0I7yvcWwfv62vcHBBI4YjPdOAS+kPEs1v0Rgo3Ku7TPg
IKv8W2v8CFzh+TM26TUVRf0WE93lBfWw+sGZiRIq4hrLrA49DOsZwCMXUwbn
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
rVRMyTj/8ROY7+rVbEc6Ff8PMvps8g==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$17781, {2}}]& ], 
          Annotation[#, "Charting`Private`Tag$17781#2"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
xP8H8KlKkQ==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$17781, {3}}]& ], 
          Annotation[#, "Charting`Private`Tag$17781#3"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxN0FtI03EUB/B5oQteWlaUVuYsM3O2JaL7m6FuYc6p2LDVcJJOp81bSW5g
onPWRFupoT1YkylaqViG9SA2Z+ZccwWiL0pWeCkLhuCUfPCCFcS+vwOHw4dz
vi+HIb0hlDnTaLSkv/1vqnwr0+ul4TG0/7V2N8bzG+EiG22ImQVL+tV+VsKR
wjsLrjIir6mW386FC5buK2QFsNjQ/OCcEraV6tPqtbD6wKi4VA87PU2+st0H
U6mmFaYFVsyJjcszsLxuJlBih+NZww1ZOyIcPv3SHOTkA5sS+zPiWLB0bOwD
gwfbqOgzzSKYaW0N7c+Hizn+uYUquNBcT1mb4NT4TLeRLji6U+ghHITnA9kv
aibhWk1I+eVF+KfzQdvYBswuyb76mc5xuHxk4nflCbgqNPjsOAVrVR2610lw
xTv1zrBMOIghoEuU8PS1ML7PPTjauNuvUg830Hlr6jfwjxjdprcFXmmYaxV/
hV2G4hQsO7w9u4ff5ko53Oc/OjDgDcu5jyV5IfC0Ok03zIUF+ij3XhHc9Upd
xsmDh+b6auQqIr/sYmY3EvfHYtv0nbCMO1/WPQgH8NqrBRNwS1YKq2kRPiQ9
uuvWOlyRmjy75BHpsC4nX0Q/DhtFnZuWcHhVu+DGiIBPDfseLiXcGPyICuLA
12lVyloK3tedtsyPIvZbnt+tsXBLaMKqPxeezNU4lxE+P7nhF8yDvZ7/Stde
gA0p76cEF2G7ZmuxnfDJt5y1DcIPA3r398TDOetPLrknEP9gTWVkE57I9rpp
IBw1XlNXIICLXU0tJsLPqO2eI4nwl6JIQwnhvR2Kj58I/wEiwQD3
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$17781, {4}}]& ], 
          Annotation[#, "Charting`Private`Tag$17781#4"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {22.385, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {22.385, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"hinge\"", TraditionalForm], 
       PlotRange -> {{22.385, 26.3}, {-50.441962139150256`, 
        43.31502066340416}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"i\"", "\"g\"", "\"aero\"", "\"act\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$17859, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$17859#1"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV13c81f8XB3ArMkKlQtk7e3SXda573ZvRoEKl+ppZiZIdGrZKS0gZUUIJ
DVG8kVEKpYSsBmkppSHkd35/eTwfLvfzPu9zXu/3R8l9r6MXHw8Pz1V+Hp7/
/4yVj9txwp0Cbhx5rlo6l/w6CuJD6Eapn+OnU7gk8BNPvY4HBSzssu7wxXOJ
a/UhxUfoa15P3r+O4BKG45G3Al4UcFwd86TcA/8+PsE3cjcFRKXmZ45SuSTg
S9oBrwAK7HL6pM8e4ZCt97KOmYZS4NMKw+/OVA7Z2P10IB1t/WdCptmQQzgf
hXXG0A5FvflrdDjESDryUXoYBVa5t4QrKnGIWMg2obFwCvR1h/TIinJInfbK
Q+lRFEj7k+t4etiaKJ/PCRmNo8DZO11lX1OsiXTl8ybGIQqYap+Wb4y3JuIP
xZamoyl3E4wy46zJzK/oCsZhCoR+6TLcEGpNnjvumDhxhAJnEuiq427WJEFE
3oeRQIGu84ODbXRr8ikid/uJVArcevmlJeYzm2yTzOQfRkcH7tyyapxN2i6n
l+qlUUAJpI7ef8smhd2HZp6gB9/OCYq+YpOdup7nxY5T4Pul7tjnD9mka0Tz
VXI6BVxjYxy1itnkNrdy29GzFIg8Kdz2fDebqA6V8D1HiwV/HJryYJPTIZdK
VDIoYPPiT7P0f2wSlH/mbyM6mxNvsMeFTbRmQrN5MylwcZ9zgY0Nm+RcN+2P
yaZAj22xbr82mxxa1rw1IpcCk8Mlq5OmWKTetDa4FZ3vkpVtP8kic24Vycvy
KMAed+hYNsEiEdcv3K1Ad++WO337PYsEc0NlPuZTYHv4O3GjVyziFqHRt62Q
AhpCLRSpJhbJzZWbLEbznwxtUCcsMti8VPg3+q7CA3uL+yyydQkP/XQRBSLq
doRF32ERh9LezPbLuJ+FqdlryliEOZjsYnaVAovzRKYvZrBILH9cUApaqFqt
kP8Mi9zXCk3qRb+GQ5F7TrIIPdS9OqSEAsa3jR5tTGMRQwlT6WulFGCUUSjO
h1lEifn5pdx1CjwcHery2ssiu3a/+eqPrvmYKqi4h0UuHOsVqkEPD/bcGPZj
EZn+B1SncgrwvdkTuNebRRbvv3Du+A0K7E8LedC1g0V4i9Y7z1dSYOP3vLmL
61ikLureos1VFHhRSC9NsmORSMfVD4rRPfISAhE2LDI1v8DQ8SYFdp+2rd9j
zSLj2+6LFN2igMx1k1NXzFmkyFC7YRqdWjXX2WLKIu4Ls8LW38b5UHVt+0xn
kYFbIe9+o9PnrL7ZU1ikU1KnzraaArH9e3p36rNI2vuskFw0/dzKqzd1WWRt
nZD2FFo1cS5gsQ6LNPq/PXfhLgWWupt1D2uyyO2W7OBvNRRQYK807VJmkf0X
Fmpa11JAsfFHyw4lFjEICR3KQq9fvX/DdwUWKVFytGPdo0D4+w/bDOSwXtHC
ahn3KXDM6lokjzSLbNsU9uojunJNq0jLchZZvnr0pGUdBQ4Is/NOLWOR9Jfk
3zh64ZNjw7CURY4ahfeaEgr8t2tkzw9x3G/hsePp6B3mLurfF7HIv+FN1qPo
1x2Jq/6IsUj4Mf3K4w0UGDASb5URZRH/8bHU14243m4t6k0hFtGs32xFacL5
E307/1mQRd6dbfyTgnZtWyypi97Juuhl8gD7WzVGtEmARVbKiq1KRgcni01L
o3u/RTwbRLPmKoxC+VnE8eIWy8RmCqw80Hqcw8ciEgeafr5CCzftr7rLyyKP
7QzLDFqwP6rKNU3Qycq57vHoEJ7TX2/xsAhnWkymH735hZGwJZq/K7JTr5UC
b+8uvNY5b0XI5fH4I+hlzdZdu9H0zQ++67RRIE7cJvL6PysSWPKdNxr99bMm
3R1dwKO0uB19JLMiehX6pdMGRdmHFOgPSOYMzlkRsWsH9X3RNZ83Zxaimfxl
FtXoTQ9u79+HDt3av07oEQWc2zf0c9Cl5Qt3OKH1hOqfKKFHFlADitArruVv
4Ecvc/WKmkKvVj3t9mnWithWnk5htVMgSkh3QT86dmFj1in0Yk0hs070zZ3f
il+jp47fEWpHf7gpX23wmAKSsc98n6DlRde1xqLpYR89etCb3KJ6OtCCJum/
R9FJd66Oyj3B/qlwVJ9F31/UOxWA/qtbPymNz/PdQ1DgHvqNltt2M7RGjclS
0Q7Me/9GT2+0q6SH8jb0+3k/iXPok94nDa+iI8xeu3agW+7Vwx+0jWKejxjW
b2bJxAZuJ+YNe9TWAW3gu2pXBnqZ2veXOWivetvAUbTku8glX9HZyyIOmnRR
YN0nwzku7len/5W0I+iIb63ZV9ACjS/OP0O/+vvpyyLcb7q0QKnSUwr88LGb
jkQHBhrVBKH//TxZP4F+KXuiV/wZBWRtoxI/Yv+IBd9/vwPtnLTn+D7sN2j9
9KsMfW5odBsv9mPJ/rXL7LopcKHh13pj7Nfhh6Gq2ehbR55F9aClFIuMP6Bn
n9WExy1gkZjHvI6Jz3F9ARpfxrH/q5QN3HrQJZve+l7BeRkP3xmk9oIC/iIr
GwIWYr+r1R5vQh/5vENYTIRF1GNC2ud7KODSYRNyAedx+/OC/vUvcX7Eyuin
cV7TVz/9cAF90sqw54QEi/zt0V1o1ov5LzB56cJiFunQf88O78Pz1nfZnCjm
AX/Css2t6J05PmO0FSxCG2B5LO+nwKNDzs0BmB8FSXmHbqL9F+nv/yDLIgde
b6379ooCd16f/0NRxPken/fnDGD+em3Vq8F8GpgokslBV0VuvWmtwiLs2ckQ
7iCeT+fYDw6oYz1WpGhfHMLzMC0+goF52CZn0PcDnex0qpcH8zJatSfBZhjn
fyM51mnAIm8Nld9MoTN7+uviTVik0r4m0+415t2eHx+3mLGI96b/OPno/cNB
73ZasIjsNsGpX+hU9Uc2QcAih3Y7bih4g/ml/y+ojM0iGw9/XDD9lgJ27gPD
KXg+fL0ju//yGAVigvMqR//D9dYRxVl0oOw263APFnFq9u5weI954Zf531I8
b+qeVWrNoTX7z7A8/Fnk+BfbkU0fKPDyR4azXyiL6KhEreP9jPkWujhT9jiL
jGgpzTihLy9QtaTheXjGoLW4DL1ysKtlJ56XM+ZLBVy+YN6Dw/GWbBZ55FJa
c30C5ys/PJu3mEV8j7/ScJ2kwBdaroP6Axb5rBprfQM92l8x0dDKIkG1yh4C
3ynw60yVm3c7i4SO+14sQ1cE8T95+Azz3OqP1NwPCgTkSz79+5pF8n5J8V38
hbbtsxfkw/vLsWqF7+gDLOdyfUE2uaLias75jXn5weSnmwibXN94KXwCraVm
pvd6CZvcKzH8ajGN/W27099WlU16d64fGJ7B8zxpyO3JWjZx/Tk5bTxLgTVS
W8YT1rHJcOrZFUnoW0o3ztk4sslY9YCjwRz2M//7/R+3s8nUEv+Hcf+wvhZN
a7L3solka+JtJV4qcFd0hFRmssla/YZ0D0EqrJZfPt03ySZsazWhyv87fOSx
0282sdyefJBHiAqWnl3k1SybUBId/C6gv3I1/s0JWRPV4deslwupULD+Xdwl
eWvCc4Lvt60oFX6Il8oHr7MmdydYO4wkqfDIXmUXq8KarL7eosUrSwU36ZWl
D9M5pDCkwMIJXTI1sn40k0MUTGM2laJjVQQ8RPI5RKptzcEtK6mgkzRrG1TB
IXOvC7uurqICT07C8ivPOKRr2ZEwRwUqvBpp+Za7nEvCDlo2X1KlghERlF5a
yCUP7Kv/4+hTgfIfbO3uXEtun9rccRZdR1ke1NS7llzt/WY6ij7blStw8/Va
ctxTa8VRAyoIdbypPftjLXGJzn7SYEiFo9ruJzxW2JDPpdEMcxMqmFxcnzO7
04YsFWVKmdCpUL7R1/H4Zxsi6DB46Aha/+CFzZyfNuRPRsTXZ2g+SaX5P3M2
ZEC58lEwgwqLxa87rpOwJZcZKofKTakwUKIlWmpoSxh+CyZWW1Ah+k5OGt8B
W+L+8GGrEosKDxLX3Ng8ZUtUcz2K9qIHXoiml83YkrGQucP30V3VESP/+OyI
n6KhxVY2FS6VdtolLbYj+8Myb6ZbU6G0UnLRH107clRtd/48lwqvP5THt3nY
Ec4MT+y6tVRo4ZetM/azIwufZrueR/scC+A9FGRH0qI7VlBtsH4HNlwZirYj
Z7vXHA+0xd/rkWfiZ+3I5UMCUYP2VNi3xtqZ0WBHfJwvumivowJT99LW3S12
ZLUujRKBtnP7szis3Y5c7/WflFpPBc1I5gG1F3bkjn73bvsNVPBX3D+w4b0d
iVywxzobfc9t66LmT3bE7JWgyjh66is5q/XNjpAExtCRjVQ4Fk/ZfuOPHTns
+rz2Kfrkpm7PR7N2hG0UmKXgQIU7cuK7mnjsSdtg/uZadKLcmnTmQnuSUmVq
JOyIz6u4cF+dqD2xT34h4Yz+/ouTLSxhT56aCLd/R8dscrwkv8yenBG5VAyb
qHBb/I6HtLQ9cRoxSziOFhR+eHrhSnvSnxrEXL2ZCkMLlz++p2hPctxEFMLR
TBNxiQgVe7KTWjjbjNZ10aOuUrcnioss+pduoULyXT6XAk178ubNyztu6Gf1
qw8JaduTwurgs+Vo26KtdVxde+J9XHT/HHqfrfOKXfr2RNOzaKOdE36/Lm+6
jaE9+US31MtCix2x0+Q3tic6ZGPJF7TiksQtl03sSSDHXd3KmQpPdp0yEqHY
k/LH+wsy0D6KVpb7qPbkm2O8/Cf0ykQZz3s0e2LYl5Ft6UIF4f4hlTG6Pdm3
q3j5GXTSZNu/zwx7UjV699Q42uJ03L4OU3sy5d8ubr6VCr4flf4mmtmTNd8H
Uk6ij8tZiK8wtyeh4ROCY+gy3kHVCPSdf/OHGduooPYppqIU/efo4vnj6Poc
ebUyNF1UJeot+uZm44kwdORJk9/U7VRQLbrySRhdu4KzPw29MCrEPha/b/aC
89cRtLbpzYiX+Dzmqr7+a1ypMOjYCOLomJLI98loI9MSPwV8/nqDNI8h9CrX
1fcEcX08dy4MG+3A/lC+87Me68E0L9+eiBa0jenmYL0ON5GXr9Du2/wWncN6
Ntk822SwE/t5q7pzmZE9Eeh623kUfe2G0n+HDeyJtdNPuz607EIqTVnPniQM
CLbp7qLCloyfOpdwfxd+0CI96IrBBiMK9oPNXlMz7f/w/+9q+sTEfkn5aV8d
i/715JaxIvaTGF/QDU033B/R9otcGXuyLumQzkH0eekTDinYn8fFTxc/RS+X
PV55arE9kVx5Oy/SHfP0Re3LT9jvDvmtqzrRzUNX+x0F7Mkpjb5MFQ8q3Gi3
OJo+b0ekTGbTH6NN78/xJ/y0I1tqFi1S8qRC3+MFkzSctwxQSD6AtiwJq6z+
aEek11kdkveiwqe8q21Sw3ZklXdScJA35tmxdb8kmu3Ijs9ZXx6gwbvdRqLO
jlzcV+ors5sK20jv78HbdkQxtsOtEe12RLTrzRU7opop5SjlS4V1pweVXRPt
iJe8eocPOlexcUFxDOZLIdX2PnrDy5DZWwfsiGbFNitvPyr03BfhtcH80nmU
Z1Ttj/M2YtN9x9SOjHbuExIKoMJOtyOLpg3x+1+wB7agV8kXBAlr2hHJ1+Px
P9CqQsUNWUvtyNRvgz69QCqouP4tTh63Jdfm+K4fRNuoUffZDNoSb/4Xhx+j
F/pLRT99akt6xSN0/PZSwaD+CY9ljS25r9YQWxREhckTJqM3kmxJqPbpzVPo
mqMVpDvKlhgYemmxgvG8nK/d2RZoSwrMhLtH0A9j197X3mxLEjY5qK/aT4Uw
//oPoatsyfpDrx+fOkAF+RdKF1wu2RChxKr81+gak7pSp9M2hKTFhxqEUqFT
mF9Q9YgNMcrUUuxAj11rF5R3tyEryoP3C4djfvy0/ZclZ0NGBnhl4yKpMH86
7J1e6loSTFPevSeWCi5VMqsHgUuKJ/z7G9FyKQOPqzS5ZKTw1jrpOCp8WBux
zEGSSzYutjFpQt8/K1D7ZohDDD7u5ZU5jPk1EJUcHsEh387fP//gKN4nfvbF
uxVak73zLl0rU3D+zCXWTuL96PKtAlYwOudyjp3ZTRYZ8v98uwWdJxHQ53KW
Rdb3xl4ITqXCLQF+EUFnFtGruOzXmoZ54LppmW6vFZlwnxLYf4IKklUfq2ee
MsmelhP0R2eo8HTgnMPbDZYkROzlKvmzOA9beNKOCVuSaEd5nn1oE+mxnOlG
C5I2VNYik4F5Y/VNQHaNBSn59XCT7zkqZLsnhp9Ybk7G1AUCF2ZTgWzjF5rs
YJD/EsMLOLlUaOXcEiiUo5DNa91Em65SYbT0N8f5uiZ5vsiXu7gE62//oShF
VpNs7g46sgv9aJlV/5MEDbJpZ9zMDDrRQiHSepc6cQzJ/WRShvMgVqVTuliV
bMgbbL98HfvT/eguMilPbP9sTUupwvWFZZyZzREmj+67tfWiI8+n1m/eJURs
jvgKaNykQkKP+e+1ygvIWvGI6Cb0tMArq6dXeQhXNTNg9hYVhod9nEoVvtaz
N/bYB1ZTwZ4equ195IelZbHjIsf7OB+LDzuXfloGFvLP3l9GD7QWSUSKrQCz
Mw6NM2glefoRLx1pYMRtDCuqo0K++XIff19ZMHFZ//pPPda7RkGsv0ceNBfa
3sptpMLe56c6c+tVQNKHueNLK86v1Y0EkxltEB8iVKs2KlQ5rIgejdCBRZth
yTl0uXV969vfOiAClq3wkAqHnxd4PpnUBQFpc8Mzj6gwUZb6IWxQH6ZbaQtM
n+C8PHxdU/DIEN5oGFxLeobzy//+bhGsARe5oJGXaLdLPJdjg9dA55IbSzW6
qaBnGuMkVrAG7s3pRzajDQcKv1ny4Xtktz6X7wUVrlRd/zVfRwH7WP3XUS9x
nm5NVXtr0qAxZK9UO1r9sHbNss00oPuVc2V7qbDW48zu4FgaqG/Rv16NVvav
vmjwgga82vpRP/twf/KeBb2KpsPtHr1lewcwL+9zvAvvMUDnceDaOvRkMldb
6i0DLjVcj1o0iPn9dIugrrAppJfpvSlFM+/mhm/fbAr+h/XKx4eosOiI251b
Y6agqKdn4/4az7PDOlcrZ8wgQyUwugIdZdC5o2eVOSySuV7O84YKp/j63ueb
m8Nffr3luWg95cLbhjHm8LxP9+2rt3hfFM78ZjZjDsnxuge3jFGhrSbt7tpR
C4jRHl1fiq7hr53ZwW8JIU9zFHnfUyHja8X9xUqWsFNO7EEZuqR6PshpuyWY
3PooIvCBCt+Srw/qtFvC6u0FA1vRcs8feqiNWYIC77br5WgeQ9LmygMgsu6h
w/aPVPitb+WwXRZg5N2VzMpPmD/9br+E7AF6Unb5LfxMhTkR0fk/zgDtBivM
dqJN+23y7noA3I5OGBb+gveLseWnSyIB0qS81N0mqPBi11kXx8sANLbyTYlJ
fB/w7GEmTQHofeyL90JPUeObD8wBqKSfdK5Fl53LkjURZIL4AM+M93esV7R8
kuoKJrzbP8ys+4H9k8k8P0hhQr/MuaVSU1QInM5+vs2CCZ3160d90QXRDQdL
rZlQI1qXtOwnng/XF44/2sSE9Es5nQG/8Dz774x01x4mJNhszm9EV6iZ6w3s
Z0LUV9H90r8xD0unA2oimOBtGrX8Afpxm17k16NMcH1tNC7zB5+3c86Bm8IE
h8SPd/eiF7JSvPafYIJZ99YdK6epIB7z33rbLCYYRSzWD0ZnKPzQ+nWBCRoK
D3la0RM9T9eFFzBhiT+tcN9fvM+LZ4fyljJBaPG3A23o2xbHY4TLmTB7+wpX
fgbX882jeLySCe/5Vnx6iJYxvH5JoYYJZbTHOvKzVPDQ2Vjmd58J+wIPBe5D
G30zC04j+Pd9nyZl56gw0kqVcWphQoNEvvFedEvz1Nd/bbh+a6cDTejHHc5+
ce1MkKwgf/z/UcHBR1tXoosJL8YOMAj6xxFtb7lnTMhepR0tNU8F2uYJFcHn
TPjPceS+D1pDpHrw4QsmqCWdnb+HFn7rLuL7kgkf79syF/PQQIdvp+K7Xibc
+DF/2AtdtVjI0byfCQe0bj24i37uktkS/IoJjF1+guK8NDiR/lU6ZoAJ82cU
1rqjlb/0i3oMMuHBo+fJt9HxyUZuSkNMSOZJaRfho4HS556+u+j1FMtFu9DT
p8vX6A4zYWnA1Poq9NbjV42j0b35V9OF+Gkgsez2ySvoiy93PtuO/mXyUOwG
2mORlNQNtPTB3v8y0Jqsh1sEBGggeLtv7Xb0RHjMORf0pfyGmHn8vqrrxn1l
aLumw7VH0OHvxmV5F9BAwUDszjg+r7nsRdct6KbdazX10XwbN128iv4tdqPX
CdfXGr9wZA49tyn+4zZcf1rtfSVHQRpcWfHXxBTr4zC5z+My+j+2RswfrN9y
Dc2iv+iSlkWpp7G+r1wHx9YL0WBm61mFRT1MyDt1SvMSesN/qf+8cH+82rh+
v9GejfkfLuL+rf43W2q3kAb1vXvyq3F/b/nu1p9C073e7z/5mAmRuauC1wrT
wN9TQ8TxERPgxdPKHDSOuOevViY8AjOKtQgN0nbeWf+lkQlDKxabZ4jSgKLW
wE67w4RL61piPqK9lUPjfG4ywedIFLEQo0HWngWpGhVM+D4xynqPXjTj1bKx
BPu9pcaWJo790Z1e7n6eCY9n9qaloZ1Na618zjHhlKFaxwj6Qu3o7JbTTFh1
4YRDsgQN/qkwYz7j/BmEeLr0S9LAUiN+ZjacCXu0+r9rLqaB2efko2dCmFAy
tOFYGLrz6Be9FUHYnzamjVJLaLC0o6x82JsJsvJLdDYsxXqczKxKxnzgb6uf
b1pGgxWPj6w9p4XrP7gme8lyGtQFPz4uqsqEGKNSEzf0+AJl2b3yTPiTk+H7
D51opWy6YCkTPgfv6aZJY/0MWnRCZzAvV668ck32//16pqjkIcDSp+nMWXQf
py/IuAlgY4LggO1KGvC0PE4tv4d5+m1SchytIGblebgcgDS3RSrL0WBE6lP0
uTMAJXtD159ToEHYQ5NTRa74eE1Pf8ap0uBadvAVCuY7Q6terwcttvD+mcga
S/h1vGy3thoNFpdzmaVXLSFwW2LfCzRHXOP2m0Q8LybN7q/WoMHVoTsfS1mW
YKFQfPS5Fg16ba9QrlZbAE9UzFJNfRoI21luqcg2h8NG2oaddBrs+pGtMrfe
FFJjC3Oq1uH8DG9pKV6J741TGy7yrsd6N1wSkRLD3Padyd2ArhK0psTNUiAb
38s/oe9mFer4DFKgRIOnRGUjDYI94ho6cinQ1rn9zmlHGuSL1zu7qlNAQHHp
s/3O+HkzW9kuxhqIIYeETNxocKS49sO5Q8bAO1Z4JQn9Ja9x0nm/MRwVbeMO
omdu+xMVL2NIdhJPSnCnQSzXK3porTGc+Zy9sM8D68379s2opDFclb4pHONN
gxCx726MS0bwPGhMtM2fBi/6fln87DIEpwzhslUBNKj+m6tKe2AIfbU69sHo
hgOUsMQ7hjAkuD9Ndg8NUqnTtnYXDeFDzrzYnkAaiL5MEdodYAj/2qTFlwTT
IOXus9EPIoagpWQn6RpKg4lzWSHqDgag2qInXIp+1/bDu5JjAPL+S/j+omvW
hzBszAxA6lbfj3Nh+LxXT54/p2EA/9b6vOwOp0GHqqdK4Jw+Pm/8RbsoGox2
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
Onq3lkEni00WFx5of4wuOj7JnKazyf8AwotKeg==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$17859, {2}}]& ], 
          Annotation[#, "Charting`Private`Tag$17859#2"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
/uiPumcTUob5MPP2/opK9BLu050bfvLhPzvFqeo=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$17859, {3}}]& ], 
          Annotation[#, "Charting`Private`Tag$17859#3"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
P/8Hl2jKfg==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$17859, {4}}]& ], 
          Annotation[#, "Charting`Private`Tag$17859#4"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {22.385, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {22.385, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"stroke\"", TraditionalForm], 
       PlotRange -> {{22.385, 26.3}, {-235.62521826497962`, 
        280.84288520913424`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"inc\"", "\"ic\"", "\"itot\"", "\"gtot\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$17937, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$17937#1"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
mDfDmlvQnSb6/G9CWfA/X17G6Q==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$17937, {2}}]& ], 
          Annotation[#, "Charting`Private`Tag$17937#2"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
dz5uR8PfmqxaMSPqPwDkxWM=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$17937, {3}}]& ], 
          Annotation[#, "Charting`Private`Tag$17937#3"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
YGlvPqxXpUv/0XomiqXoz4YUEOgaq2GRJSf057OHrJrA+KpRsj8b5NOXsy+l
CiEeFct88St6KP5+tm8puJVbNqNoQQ/doQrMTb+E+Ht3FNz/pYeyDn2ec34F
Nji1dm2rHirJ9ljYV0YgvoUDUpeT9VAQf5RtCthM94Fo2W09pHPm3qvhf+Mn
/nz8fVMPYa22gAiSQNFOlIc6MXqoulFzEWPoN3L3hkKD9FDTNOeSWiWB+s7L
+xYe1EMDKGV5bS2BxHJzpWtF9JCs1X9Lp8HvOsJMiwX1kNPJsoVKcA7NZVcG
rx4ajO+ZPfUO8luhOcWaBTwsM1FeRyCuLdpyJ0YQGrr1ZMD1PYGWAgt55+B7
YnSorPHVRwKNCz/aIn4cvif+mr4XaIH+9WNfLudhhNyFe+uPg3O//Wc1aoXQ
Lx32d/ytBBostF97zwihsRu7Ko+1wXlRWZD3TBWh39pNRTwdMP/8rzceLzPQ
ZGxvhm0Xgfoj2jzebmGgnK1q89lgXobW3WwxBnIoCTOdB4dK6zQE8TBQy3e5
vwndBNq28+LWv2O6qIB6+mDrNwLJbXx3yfGVLvLtXBQ17YPzO/Ioe8NeXbQo
J3LF4Af0T2Tnt9lZB7GThmeVJ2B/Ev+8dAjQQis9gnvuctAR71fVrS6qNPR8
c3VJyVo6Yoz7sG+dVEWuzDuH3P6jo5gR27fE6W2oI+RgSjmTjqT3OvS6y69H
JlzrLIT06WjZ/p3Ct7Z1qCr6C/cxcOwPl3cnL61Dz27aerMYwPWiC8/buiVR
eJa1EWMnHR0aCVeZT1iLNN7tn3+9i47kZ56f6OATRzcoxpbFxnC9p0e+yJo1
aG+6Nt8zKzqyv2Z584MGK4p9saD6B1xrH3E45iEL+vT2pfVeazpKdHZUyF/L
guzHVe7/APcs5Uu4//3D8NXbqiltS0cq0n9Hw9MWGPe+87vEHYTnoVQF/VUT
jEW5b5Xe9nTEMpukL59+l4G0U36W/7Plwd7ylBTyspmtIOUYWFUgtpK/iKQE
tNjlgoPvStyftawnZeveTvQ7wHjSoZvDhl2khXveRitHeP9H092zn3+Rj/JC
Agk3eJ+b5mbS+A95+uxLxlVw8JkDBce0/pI7NEfY+8D4qNuVJPkVsqTSMubK
STqiUPcl2V9kwQ2f5FK73eH+6M6jncZseGz5fVmYBzy/JiGBWcWJn5ezXfoM
zvsymV+jzIX9wmm7lDwhfvdLSy7f4cIslLsf2sGEPSbzTnFjoS0+PdvPQLy6
5z3SeXkwfN2wNfvQkUTWnk+sUnx4nt+0ZutZOnJ5df8MGcSH33y8FH0OzNKj
6JT9hQ8bHvq1RsYX5sN7y2D+Jj+29sBb/OB30W6P9NU+ywL4XLzTzg3n6KiA
i3zD9pGCde2Sec6A52dNP4UsUjDbxqb3NeAY36aBa5uF8JVsupVnIP3f/535
zL2EcEopn3NlEB0Z0wZPufCswWTv80jXi7DexIN8QVuE8fLW7KxicKvd89+e
TGFMuKVWcAdDvq2myS7bC+O8yYjlLLD9YQHx1hRhfI/9sGdfCB1lDInJBwuK
4O5dFldVQ+noNa9ByQYFEbwuZldOMNjneFyXiaEIviWyo1/qEvyOqwyLdwsU
weFbuW0OhtHRLSJH/mKPCK5wXfbJAa8yq7yYNy+CV55MxC2AU6g+385QRLE/
tbP+9mXYv2DdoEe6oth1Vz6jNZyO1B+Gj7TFi+IHVx4c2hJBRyIS85oROaK4
70NywBlw6yFvo7dlotjOJvwFJZKOwmxsH00OiGJj14Ny+6LAjka1v5XEcOQT
M4MUsIuy4QEKEsPVEzuPjYDVV/MVvDETw7rnVJKjomF8ReXvG08xfK5sa3EH
2GAiK5ASLIZfsq1rk7tCRzYnxX+PXRPDylc4BWvAiTyd8yaPxbD7h0UF0Rg6
CsrVpTYVi+Fs4fHdJ8DFqpVFndViWDrlSyjbVTqazkqbTOgWw4d6PqSbg9VD
TrgYDIvhJJnq1xlg/18bkoNmxPCaJ89mda9BvHtT8mN4xbHJRKbwNXDjzAvT
EyLi+IrGHZUu8AXe9bI1G8QxR1mYW+B1Oirrq6LIK4tjxHYuog68fWPnrBxN
HAcZemSujaUj9wNzxfm64nim0ba7CGypnhPvYCyOdwibLnHFwe/0pcWkKAtx
fNraQMIKTPF/u0/TRhznJNM1ssC8BwKe+BwWx4PflCymwWeUw4oJB3G8WUbG
Q/8G9DNxF69wJ3F81GVtzA3wOGtB12E3cZySK/CoFzzpyc9OnhLHHePsNSo3
6Uggj6X/kac4vjngGRIO7mzaXLnPG9b7pUu7E0ytPtridFYc834wmle9Bfls
cmrrjK84rq4sehEB3i4Z3DjvJ46Di2U8usCS0qZDXv7iWPtJ3Ha1eDpqGBCL
swfP3f07EAmWTkoZqYLrnyecvNsNHuJR3ZgOzzt1peOQegLE8+IL698+4lg+
eKdENFjE7VZ14Rlx3O/zvOUb+Mbv9tRJD3Gc7rrxusZtOhrcLyH5wF0c2x2J
MboCjtGK9G9yEcdi+xc4e8FpfLYLXifEcfMup3JqIh0hrPc1+qg4jtFuCYoB
i70aPb7OThzvUkVEH3h9X33XFktxzCb7ZIqWBPvF8fd25j5xXCYp+ewq2HPM
bDDVUBwHCEa4fQcH++hvojDEsTrH9Fb6HVjvbu4HS1RxPD5v33sNbJMb+sle
SRw79WnaaCZDfGdqPyetE8eb2h8Kx4KJzdMRp4XEcWe9yIcBMHqSlFjGJY73
F47tjEuB/Du2puHjbzGMIu+pDaXS0Sct69LPpWJ4KUjwt04a9CvFhZzbT6A+
vIJyboIvHExGbWli+L+DVpsY6dA/9Nw+N18Uw5JKvIIJGbB/V2jbv2uJ4bbN
fnUjYIumuri8bWI4Vrz/st5dOjI05xNiFxfD3Kxly6Ng3svtzprjoni6xWtY
/z7k6/SOpVWpovhZbXdWEnj+t0e0aIQodnuz99hv8GjN9rYnnqK498HWjjuZ
MF93VqPLTFHcGPC5eiIL9sd1n9sw9KNHG/XupmfT0axfgNsZHhGsnvm4YQqs
qCZwnf5LGJfJi83vegT9S+DVx4wmYdyqOmIyDvbfdmiPZYIwZjGIX0aPIZ6v
JOs9NghjG5ef1n1P6Miop2Q5Zt0azJ0fJ7D1Bexf/L6MpHJBfENjmR4A9pTO
NVHxFcTrS5wc34OzX7h/PbJdEO+o1Hp9tgD6g7QLMzZOAB9pG3CtKYT1PJNi
ph3kxy8X6NXOxVA/nBdXdvXyYkdmX2DOGzpyS4rPbKjjxC6G/CwL4LHBZyFH
L3Dik0ZE2K4yOuoue6g+p8qJvSyuxfSD+11vDKAkDnzeQTNVCsN8P4ysiXVh
x/GhN8puVEA/in3m94KPFVdXMFkD38L59GHyTuDKPFlbc+ryO3DwulpXQ+95
sr4ukUeiFurtRjtr+485svnjmFAhePreTjf7llmyq+/O5t/vIB9ZLB1fFEyT
M2xT+scbIN+O31+9M2ucnOeSqs0HO116KS4kP04u8e4xZnkP/RRPKM5b/yZZ
hdMtU8G3lguuR57+RfJv2evY3gj9NaHZ16H4J7lV/3743mY6avp6Zw9rbR/5
YG7nowywTf1arYb+XlI+d6h+Bmy/882nRY5eUlFUSSjjI5x3t0YDnNO7SfUf
xcnTLbA/1pEG1Rs7yJfJB8v2tEJ+xsQJq9/4RBJmf3vSwNlPH/fL8rWR2q/0
Zfe0wfrYT5pPin0k9a805qV++ndeywoKiL4jqxheLZPgSB4Bm2XfGtJwWnh2
VzucP499Uo1/VpJGh221JsE4TZnivvKGbBBaPryrA9637neE7u5XpElNWnAK
+LXNIRPRFwWkhXJ/teFnWG+YVgV3z0Oy9Xv4UDJ4nsAJ9bzppFXittUTYCz5
VC6r6ippx+phlvyFjsw++KYci7jO6CwU8h4H10obWn3XTWMccSuI3/kV8jvh
rbK9yAPGsZaFL7/Bq4jQSpW4fEZfRMofg07o9+JhWkdSCxgntBnSd8As8lvn
tMKKGIPjvczf/8YPWwab7CxhuGSFORp0QT/VLa/Q63nNGLaVi0zq+vf+V3J7
D5AMd4G6nDEw0TZYxfsRMzz9BMcTu6Fe+k5kfxusYEwqPF8zBt5t9EhSsrWS
4dNjqaH/Da5vyT5R+qSKMXtrzjoR7E9J8sz0rmb477lz7hc4I/XPptKtNYzF
P9qpzB5Yn+IJg5HKGkbQ82/kbXCxTPo3SZO3jL9OoX2j/+x4/qBi1VvGxXVb
OZm98L22qjx9lWwtg6Xprdxt8Krk3pVU71pGaJib0Sg4MrBXsDW3lsFB5z+l
1wfrT93ifau5lhH+69n1BLCZGn3wXW8tY9U9i+cj4HF07tvRrlpGtNVMK/oO
+WZGu8WsqmXwrU6ciweP/639cyShlnGN1JQcAXtynu++t7+WQfHp0kb9kL97
BB8uLb1l3JAPPhoPpvzHO2h1/S1DpGtz6DDYM7+yOYv/LSMhrjqTMQDf485E
52ffGoaEocvbW+Am8Yqz/XXVjDuLvMM//3nX0u+XPNWM9c+e8DEGoV7vL9sz
1aoYqcfNlG+BpQ/PhvvtqmQk3H6R8x1M8YJ2b1PBiK0Xk1X7Afn47Tb6eaCc
Eb0ScDcUbBZzI15UDzPC1LrWfwSzGKpc4VQrY1xwRombhuB5cz2NZmWlDP/k
+8Je/8w+YfBnyyuGO7sbL+Un7JcOtQxdeMFwor2/fPTnv/O3ZUPZmTyG/UkV
1mdgFjWpoObQHIZly+zcvmFwYhaPU0ESQ/v+pYErIzB/tWjjjVz3SGr7oP1X
MMsxzQdmQTmkymqjzu2j4HGDdtP0fFLGm9LyDmz/ZsOqzy0l5Gr9VMw9BvWx
b++BP6FvSQ4/Fm1rsLSWbt5Xoo78m3O86AE444tOQTnre3JyzfanO3/Dfgm/
NjBxaia/9L1MvjQO9/PnPFt/v51sFZMUbwFLS1zZx2b0mWw0On9j8wTcz+IV
cXjxC1nxXD+qHIzXyvm5+nWTOaFNviuTdNQxvatPZ6KPzHypNmkyBfl8tmar
3fB3Mm044VQaGLW8FN0y1E/esDh8QmcavkdejuU/nxgkAzYPmwfOwLiCpNol
7RHyjNW+93Uz/+KvHFFuN0q6R+ftlpyF+fTmFd8+/4u0n/RlvAIX8wgErTT9
JndXsP83Nwf72/Ttqqr1JCnhsGGV9yJ8bx+bWNLImCP7tl6YwuDiAYHB16bz
5OOf3d0CS5BfY+V3DrEukLpeGYU5YMpYAXu32yLpGLzleN8y9FebTQ65Vn/I
52nbysxXoH9HmDu+fsuK937V8FHh0ES+Wy8YcpWswiLpCUcvgGfjb3WuqPDg
boc5owYwNUbtSmc2Dz4zXLzJhVMToah6MXoyL05c0PqQzqWJcpDE/f3RfLhf
nLldkEcThUXfv2q1m4IvWJr0/OLXRLvuZQaqJYngmlpZN6aAJqpasas4+0ME
C+qsTCWA1S30j0lRRXHG1jxuJKiJdprf3ZjWKoorZoWUb1A00csdSxU0MXHM
ldR2niqsibKlhMRbctbiq12H1l2U0EQqJntDbghtxClOJ60oWzTRyr6K8wZG
W3GZVfZyLVUT7egO/cuhq4KnrnxfvYmmiRSy9CMrrFSwfLnUugAwv7ScQoCH
Cr6pEE/fRmiiyIa0/qYMFezCEuobRddEQcoNNjLsqlg45+D4Hm1N5HXuvbFS
jSp2+SPQX6eniZ7/8FG9YKCGU3cYTW1maqK1474Vfw+q4Y/Ol9kCwdbCsrpn
vNWwzsclaQV9TeTdcKNwxz01vObh0OErBppoX/G+ojUravi1WUX73l2aaD3H
D+9tL9XxxOU/g/fBBy7o+L5rUMeypcTsElghOmze9rs6jtv6TCR3tyZanqGw
G1M0sNNisjmfkSb6fZLC4uWqgVOU2+1PgGtKD1yNu6iBm0+s8XwNFttueOdu
vAbW/hB5zX2vJkofK1W+Xq6BvTiqUqvAa0rQLfd2DfyAvpK73lgTzVx4N0H8
0sCdpzVf+4Cr6EcFp9moWCjzbH0D+KBsckmqBBX/D+IsIso=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$17937, {4}}]& ], 
          Annotation[#, "Charting`Private`Tag$17937#4"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {22.385, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {22.385, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"hinge\"", TraditionalForm], 
       PlotRange -> {{22.385, 26.3}, {-51.27655007282074, 43.31502066340416}},
        PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"inc\"", "\"ic\"", "\"itot\"", "\"gtot\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             FaceForm[
              Opacity[0.3]], 
             RGBColor[0.368417, 0.506779, 0.709798]], 
            LineBox[CompressedData["
1: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
/XmXwAJOmXUtlkk9WLP4+8VcOwtizewe1On24Gpew6zrDSyI0V3ZOznbjZNX
I9atrWRB7XrT4br4btzm4VP6oYidD/dCRiWlCwUWzzbvSWHBWa9+bu6HXVgm
zXmRHs2C8sqKOc0DXcglIFxNDWHnY3Xi7b17nTjBYzVo5sSC+3e5yhOVOtH7
e9DtnnMsaOyL/JbV1oHvZfZV3tdnQdLQ4sfKzR1ofEl7001ZFlhIJrKeebRj
63c3/iIBdj2LUXoVBW1o9Ib7vvTKEqSpcCYeVm1FuQj1kkfdS3DWY/+TNJFm
fNG1QTHZewkkN+x0eHeyCR+X/powt14CFy2B19MBjWj813fwiO4SFJ88YaFC
qceIp9u0X/AtwRsGAW89rsFFOc6vMQmLwNu94vYPyrBmu2O9eRATOmyPX/Ty
KUEXbAvitGTCb+Wj3EdyirHuzpnp4X1MCNkxISnCX4gHr43CThoD3jrfWshx
eY32/H9zVx1igPOWR1k/g2LAZ2w4NNdrAW6rbNJmKSVBl/nucekNC2Dx/YPa
Ubc06Orh2fozcx4Mjywo2Mi8BaNxu/Du9jlw09lz4213EYzQLXIOC83C5tuJ
btvKqsHrHnzPPD4JFZe1ktRyv4K/V0DCYMsEuDoeKpZ+VQNf7Vdz3DeagHS5
v6qaj+rg8caeQbXj41CWrrfp64UmsJOp0z6mOgo1iiqE5y4dMMovcs3fcxjE
j9vzz5I7YPXOJCMdfTKoiytpJpt1wvlz0+/DxUjAaGjSm1bvgoOz0vcXSgch
OHk2THZVD6g5S8Q1knohpVomJsqKALovef6TKmgA8adXD2A1AbyWVmpGd9RB
/M6P9Ffy/VAcreVwIekrBHQO77aZ7Qejl6mdpF/lEHUoIzXUaRD8KHFewwLP
Iea8FFWrehAemtgzk0K9QcPdSMJOfAjGr23dlBAVhevjdvaVNbB1Q+Fa44ps
vNVomP5jAwlOF1A+9XJV43Pf8jYJKxLIfHAO5r9fg433Vgt4vCGB3ivqx1Or
6vHY98cZjw6RoUJvxJQ534zPQ14rSegOw787ubtsjLvwq1Vc4e7gYdgl7OLP
GdSNlU72Jse/DIPRkvkH89webC8sbW3ZQoGAluRj79k8P/b3GL90AAW4tm9+
NPF4CHmyFB5KPqMAMaqqvf4rEXkf2xeM51LghqBB6KFFEqquSTk+OkiBdz/t
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
5Sq6jXCFipfDL3dpeVNBYnrKUMqHiolVvy0HWFRY2B966MkTdjwy6RcvnQZt
6xy1SpKpqPzu1uHkqyPgssFAp/s1Fc36zij7jIzATvc/D0dzqRgeFuOYYjkK
xGDDGzOfqOjpM9LE0zEK1omdFpNfqKjwJO95ue4Y/JA8mTdUQ8XHP7e55ReP
gUzQM3pdIxU5ckukp3aMw93N/elZ36g4Gk2dtI8fh77NjSbB7ex8fILVpDgm
wOXJ3DOzTir6ptRWbHWbgBzijMD2LipK5C5cvdg7AUf8jx0ZZdsPLd+SJ2pO
wsQLW4XMDiq+TzrW/SJjEqQU/Txt26jYF5npm849BediGn+LtLDrXyNwe+LK
FEi0faxtqadilPoOOc+mKcjyjShfVU1FqY0S53eoToOyvcIennIqBgiajbaz
ed9v/6aCkQIq3pDnOOH5Yxo4uvNn4t9S8dM+lXVrLWbAyefIi60vqVg5lPM6
/hOb368VJQXGUvHqqfzXYsKz8LjaqqEilIr866VinrrPQtAAlxSBvR4z+YrM
9fWzoLB4KreDvV55qcfM70rOQUzx38hsC3b+y591aJ5zoMz4MeBiQMX+6xeO
H6uZg1Xzx79tUKOifvXlxTThedDtsk5PkqbiYRORluVL8yDqu+vVxg1UnL2+
6YJR7jxYnBQNrKFQMMKPp2Dy6ALwzxpv4W6iYPCp5aB9YQtAmVg+r5lPwT1i
ZkJ3WxZg6HtJ4ZWnFIyfHloY5qbDn90ZqVG+FNzfJ6zKqUCH7x9VUz7YUtCN
U261nD4dNP8L29WiQ8E4Y5s0PQc69MQpya/jpqDzHaH1ES/oUPl07qL1t2Fs
ZLZpZJfSIfBr+JrSyGHs1hBZae2iA7c7j4+CwTBKZPfeZczQYWh6eSKfYxh/
7bIlb+ZiwIPVp59eKCdjj8TkaQ0JBhDTKfXy18koyfeAcWkvA9b2GRF1B0j4
h9/vbJElAyKdw5xfRpLQWOLPWbI7A2R9N1ftY99bhc9LuNcHMeDrVJM+9yQR
49V2h/wXw47nKX55WzwRBcP/UVzSGVCZsd8/SIuIvfqz/6XkM+CYB51n38QQ
Pij4l95RyYBtl3N8Dz8ewg7ZN7vXfmNAWee7M0n7h1BaOHsG+hlAOUrisSQM
4oMpp4W7IwxQ9u/eGXRnECOutOuXzjHgsNEZHUHxQRQSD/n34zsDLsVxU4XK
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
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$18005, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$18005#1"]& ]}}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True}, 
       AxesLabel -> {
         FormBox["\[Phi]", TraditionalForm], 
         FormBox["\[Psi]", TraditionalForm]}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "ScalingFunctions" -> None}, 
       PlotRange -> {{-0.5848902918188825, 
        0.5966157195402074}, {-1.3560024061003457`, 1.3782096327354607`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"1\""}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], "]"}], "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             FaceForm[
              Opacity[0.3]], 
             RGBColor[0.368417, 0.506779, 0.709798]], 
            LineBox[CompressedData["
1:eJw0l3c81u/3x42MNPSJJFFGRoQSKslBKkRDNLS0QwNRtihFRghJZmb23hx7
z9ve68Z929xm1u/+/vH76/14Pa5znetc57rO9T5PvsdvtZ7R0dDQWDDT0Pzv
a8WecGnQ8jP8/xd2uxBucH6D8aH/IojGn4GTxF8dnfodGnjjGNdufgamQ0yT
uyK94Hd2Ma+w6GfYZvPbwtbIB/KunzxuPPEJms2meltO+4HatMTlYf9PYKUq
fC120x9UfhZPOp/+BF0v5j77FwXCAOvW0LtSB7BWWs0LVQwBFgn5iBQFB3jx
RFo1JSgUgjW3Gd6JsocjTSc+Vv/7A5xSaaE2mx9hwFSiNV87HIz6dv13SuUj
xAxL0j+Ki4Dy8N+GMGcL/aJaBx1po+DjxoEfUads4MVgkcXWjWio3Yj6NHzX
ClhF9FhUZ2PgxMprgwGFD3DJU7gbz8TBMd/Imyc2TcH1tFrFkF083NqZSDAL
MIEPV/dK5NIkgetl47Ab0wbQbn62Sz0oCdwu3d/+6+UzCI4+n9hzJhlKR/8N
C1x6CCrb6yTTDVLAQFmj5NqSHCTRyuS3bKXA4iPrttv/TqOk7dRopFcqJCQP
JMWm3EAR8cSU/clp8Nzf9fDPjRdotfJowEM+HUI0X070PnuLOwfufzEpS4ev
KTPmPJ/eIZiVOR5tyIDwnMAHtmZW2LOk/6n7aibYPj8R89PXDiPs/QKS6jKB
0EU7U0qyR94+ztrPhVlAyj3Hqan2BTvXEgufyGTD7LDWF3RxQt+lPw+EorJB
QGho30jnNzzacusxt30OHDq1Fvnv53dMyGdQOUnOAZ9ID8Vgek+U/pBstKCZ
CyfvyX9/o+iFfnE5rYq78iDhcl1xX6U3+pDM1lNe5MHP4zvE+Nl9kbFX6VVA
QR5McN1fa3/yE4m7ju+PfJQPNLde/9fG6o+l4c5PkuLzwe2LRE+24W88FsBn
xLCUDzZTgcKXagJQOUF81F+uAJ4Zh/9VkwjCZZhnemFVADy3Ny65egejekJu
ol5WATRLlHtN2oYgx4XH7HZzBZBoV9u2Lh2KDIUjftlCCCdvF1+8OxmK1lMm
/My3EejEszsmwv+gVMQ5zieOCHvOu4t4PQjDfU46uiUJCAc6R2xPHAjHx23n
d/G3ICiqNzTHtYRjFdtkm/kiQofHjppRjwg8cKRqWG97IXBq8mQWaUYiv6DD
37V9hcAzZR10eEcUivKdFPnGWwjMHrWKQ5VRmHW1f3L70UJQg+8HJr5E49Tg
J8UJyULQMFn1PqjzFw9ERubdky4E+eKgLi2BGGQw3Ct5T7YQmDzOsurPxSDp
tqnzmEwhjMZkMMliLIbpfGDekCqEd2H/1D1d47Ah5+Sb3+KF8GPVnlvrTjyW
53UlFQkWwmd6689XBRNwU0Fp7c3BQqjqW9HSm03AUPrpuD+7C6FbWFbgbk4i
pujsqc7aRAhey5F0UUrCoe1nr57uRqgNcjwiHZGE7/fcMi5NQaDRLbNjY05G
b5tG7gfU/CXQoDK7QTKOzHz5w3gD4XXKj8d8Ncn4rOJSPR5EMDbNrhYUS0Hp
WVMe1/4CmAox1dv5LQWvCU7avgkqgKR9loyFYynY9V5AzeB2AcSqRweLqaRi
d5Ga3KddBWA4+vc/ueBUDFn8Yp+fnw9HSMGX2lZSkazBMsCjnw+7JFxkJq6l
IbtmouNf1nwYeHGu50lUGvqItFy5cyUP+IvFo49dTceC5fli59FcoH0yI3wj
JB3r5gzPblrkwtyvmoPfZtKRZMuzmM+cC3vIObN58hm4u1HApdErB2Kcz51s
/5qBr46uL53jzIHD8bu9ShszcOjldc/dv7LheGXpgNH+THT5tJGz7poF5d53
9TMCMzHsbuXQMZos0I3cLyjSm4kBATIPR95kgmQOTdd2rizcpbd29XhnBggL
7FZT1c5Cm+v0xzkhA3jvokGjSxamJXL2R4Wkw/rBOpPvhVkYuWxoNL6RBu8T
LFpN5rNw+9NK9YmbaZC8FKf+ki8bI7+HH8uITYVP/z1pvK+ZjU/M+I/dWk8B
fgWueKX32fg34FZml2oKeLsqmdAFZOOvu2in6ZkMQUkXt9wLsvFp35BuXmsS
8ByI+dLWm40bcjmG0hxJsHLWy7NyNRsDyI+uf4lIgCtDwnQ6e3Pw/erlzEmO
eJAcJe97JZyDC2XHVLI+xsLuNZqXm6dzcFq3rZBh+C9Yq09T1i/m4FFeR7r5
c9EwwyPGded6Dqoebb/v7xkJd+7Nhm27nYMi2aaN3H3hIHDctWxONweHlPbQ
+gmEAd+rCF42qq57+hzEHoeC96xt+V2dHJRLJlZNngyGX4235FAjBxXU+kyl
fH9DtfpZsxOKOVjrIND2YuIncKoxjEdK5iDhySm3+pPecEMn6Sv7Qep63N0O
f996QPGaYe5buhzcy8JNsFBwBiXxVJOEkWzUk7sa7+9oD5aXFsjlpVT97Ey7
k8E7UHoIdknB2Zj9/WF2Qr8GeH38aP6Ymt9J0aw9ngUvUULaYKlFNRvd/+tS
1jOxQg62kry3XNlozMEQmK/tiNrZi7TqJOr5ujjWhz70Qm6ZRtEo8yy8EHc5
7fJFX4y/fbv+8NksJNGpJxlJ++NcLcWqZDUTa1OKpTv3hqJa0v0floaZWKBm
27PFFoZrRs3rjocykaH15RwHZwQynHv4Ia4uA69uLl1XF/mLenWn68/xZqCF
XjT/g+QkfMd5plXENw3rffVeFeUko41zi0fR0TTUC1XXK6IW+I18A9Mn2amo
cO5V/pGuNLxu5PmVujiudp/7d44pGxuyi+62lCRhkEWD2C3qPdgm/ORv4qkk
FKF7rMPPk4vl/zkcOnY1EQNje/7pnsjHZZltIRzLcSjYY0H7JboQbz7bhtmk
KPyZViAqL1aED/bsTovyjMS5jYMS2vFFGEmMetolFYFap+4NvE0sRuYfeoFS
D/6gevmxxuy/pXjc7k52Yqofpik0XRwVLMO9x58Cr6sPsjm/k6EJLUN3EXOx
Zh0vfN3zjlLyoxz52bSS5i2/4vHd61HMBpV41Glum8eCHihi1SR3TyUSGoZD
Kgbfw0fTF/8la1ShWrN3OAkdYPZi0w2ho9UoNOodI93uAcHyZaenvauxYUT0
tV+kNzhcHvKm36rGx6FbveMOfmAaKtg3WleDhTLaNlXHQ+Bs++EfgVK1qMKj
uFB44g8cPn/NzMSnFg04rilUng4Hi20RIho6dZg8MrjqczsahtJUsnzz6lGZ
031s6XUSfM2ctTVjbcCho4LZ3nbJ8DBmrllWrwErXsS8ivyRAn4vXvxUWmvA
M1/zrhCL0yBcf1dIPn8j/jPj+Dfdmw7Oh3fQ5F1sxFV5bnvRtQzYz+d+8opL
I/KtJPNMnc0Gk+n/HnXHNmJsrmPV1Yc5cEO5CeRrGvH2hfN2/p9z4Z/0uf5X
jE344+rGg98t+dAXfmFIlr8JDy5P6ohuFYCfr7tglXwTRkpsWfyl/vfuxZz9
Jf+mCc9U5H9nVSkCg9OvTh1wbEKj6CFDjZ4iOPt16F+afxO2fN2tdsysGMKa
c5Z2JTYhi2zf1fDdJcAb423AX9yEfiZ59n+jSyCAXzdztrkJ9+12yz5+vhT8
PzHqfiA2Ya7M/QSJvlJYJ9hR0ihNqGszv/DTogxWmZvvRdMSMCvVaVNvXzk4
jLN9u7abgMXdsQdsk8shzsT2S9wBAnIWnzcd1qyArFQwyxUgoJ++A4/jeAWY
rzHGWh8jYCx7OMOtr5XALfo8YeYkAa14/mxpHKmCh80qB9jlCNiycatEt6gK
Ipi1f5IVCJi8pTH17kE1fJQ5N/lWmYBv0h03XdaqgRLqzxalQsCXmZ8e+PrV
gNhvJcHvFwgYbH3pwReZWriWInhVhKrdPqycvkqoBdnDh9tMzhNwt4s+O/FN
Hcw3ie1/q0hA0loq7ekd9bBfcNiHR56AUbeZts5F1QMzPqfYyhIwT6tllaTc
AJntXkM/JAmo86e4QayvAXhrW4TvCxPQTqs8ylq+Edx8ZgK7eaj737PM/ce5
ES6PyZ7fw0bA8qOpoXZtjbDaU3R0nZGAvxsYXXYLNIHLDwbTkNUmXMnWOar6
tgn07vZpb443YbtFX6VgbhN0sF9n29/dhDdCz6eEMBLAvoCfdbKKOn79mVjK
dQKcpjmRaZvZhGpW6uY3Aggwod3m1BjWhN8vxHTbjBLgI+sU67B7E04J6P8U
Pd4M8QQZcqZ5E3JcOjKlZdEMp57eLrz2qAlVfh06PFvUDM2p3zQSVZuQtYbN
eG17C9AnBQSXsjXhdt1r7kp+LeBHeMNut9yIK7ark2/6WmDeQesHY1cj8l4o
+zEj0Aqij48///y7EUOm97I2xrVCpr1Ygq1lIwZ37Qrgn22F5XP3SJq3G3Hf
+MBQvFQb/CIftH63pxHdGL/paKe3gdnN7vuHG6j155TGXP6vDb68vtUfa9mA
50SD+8ShHZ5uNz/RXlWPhI98/FjaDmNiI9z2r+vR7oajegdDB2gNxnH67K5H
jedeuyoudMArIcNj/6nVYcxpcGEo7oAoxz9mn4dqseNWqeOFzQ6Id+sQNreo
xdKIkd9nz3TCncTHnkvBNShz+v0rsdhO+ObWLOoqWYM/SqfpOYY64YLRAmdW
XjWu5Mib+O3vgh8iry3JDVX459T+j5dsu6Cs3qV4VacKzXzykp4ldsGJgRXJ
jM5KDHcd797s64K/Tgxial0VWNuurPPlTDckKxRmid6qQOn2Y5vPn3bDtZjO
3fVN5XihwuR2lFs3OCs9/P2msAytzh6iE+/uhgfDR1XeS5dhQ0e307OtbiC4
3PPXjizFum2k40S+HlgP+dyzm6MUY08G9v9R7oGu2J0bfz+VoHF4kt/vRz2g
M75zQXSmGM2bXttW2vbAtgdXan1vF2M96R5BwL8HJGrVw+axCCU6FxajUnvg
xcR/YecFi9DnwRXDqzU9oHY5LNvdqRC/x0a3sg/2ALN+85PkZsT61qur8ws9
sJdJpVnDqwBdl/bkERl74a1nX/iqRj6ycdIJjXD0AsUzebiIPg/7lC4/njnS
C72JJ1wTM3Kw0WMYN4/3QuKLWK7aZ9m41eGXvPtsL9yxVtvP918WgslWHdf5
XrB05jyVlZWBr7vlGg+p9YIePdO93/fSUeN1vx+HZi/M/+fyvWU9FQnPmyU2
r/TCc7Win69/pWBRQTs2UXVX0H06I6lkzDopEeKm0QvZF9m4a74non7/f5cl
VHtBV1H8flJqHJ4ui3+SpNQLL8TXDoQ3/sX6tH0Ze870gnaBQ0vOaCS+DxY/
rSHRC3kpRBPmpTBc2MjZrsfXCyIVTTtDN0PQ1OKeqdreXtiwbzGTog3AVub3
kwy0vaD50kJ854oPsoTI7f0x1QORnvXdlJLv+OOLefB0ew9U3v1qdtX2E64e
F0vnKOwBFYbBlU2bV8gXO/pie2QPyNyfiFnSewYPOyjsZc49EB2u8frymD0c
om8XVzXsAYoN3RRtpA94nEqVDhbuAR/HldkjrAHQOxptb0TXAz2v5KZElUJB
TIOXZRv1Pj3VWKNRLo6CQS/fa68duyFv5bDDvqYYEHprXPtCtxtqK3KWLw7H
w7Kw6LqBeDdc9qzpM2ZOgZSHtxOc6rpge8HRDKJPKsTl7JoN9e+CjHiGy9+O
pANdlezTomdd8H03V+CQShaklGvS/7fUCUx5V4eutmXD5wODTxRzO4GYY/jx
2ctcYJOte2JqS9XyTWL/3ArAtS/tDplanzslFMuvvy6GuQMLSdtI7TDE/G9H
sGwJ/KIzELkZ2A5GU5uJUVslkOWcdTnuWjsMjzyS9/cog/lit30vk9ugG9Nv
ZsdWQoCZtqz43VaIdXg+6m9UBXw3bm2l0LRCxlOOD+7S1SCYxjmkHN4CIlK8
u7Wya2Be/VOE40gzbMSS/Aip9fAiqDmy4BoBnlTrYs2bBng/2s+QN9oEms7m
GXvYG+EXLzNvo2UTfMhtvVFU3QjHZH6+uxDYCK2iqXGXjxEg2iGz4NbPOvCj
MJ2j2BNA+XtBkXpELZAY1X1etRHgwqL145+JNXAqTflChFUz+L6ZlNbNroIL
2sGv1tJbQOpSWdbTP2VgyXAlfIka9/6XQ/k03qXw2KBb4JV6K+xI2sEq51AC
2b8av/zuaAXOQ2uaCdpFcE69FZV52iDzVYf41ulCIA/vG5fXa4Nqi5vvpaQL
gC3x5CT9YBvYNRzWTI3IBpHzB58VHmoHnpdlO07qZMI6LX9PnG47PDlqzR+7
mQbu1V+4FmvbYbHN/sECJIH7+Y+nztN3AJeip91WYixsG5apCTvVAY+FWppm
WiLh/c12UQf/DviW3LA9bf0XTH5v5iiq7YC8W9eDPum5g9Zh7d2h6x0wn2H+
Vf24Mbw/9O/iQdFOaAul7w/Ks8TIhwTCUZ1OyGK9zpFe6IlH+NbjK2w6Qb94
oKZjLACnRbVKZsM6wfS8QjTpv3A8KffgTTupE+4Xhr32MkzE91/Lf35n6oJD
qTG9Z36koB6nCF+VQBdw8Ns9ZjNLR8rTPwkO57pAWaVWifduFv75pF+dp90F
PlIKc0cv5OKUfn7Ie/0uSOdlZFyVKsCJXS5fUqy64NHXAH9Rr0J89o6QYeTS
Be6n65MddhZjjMyfrDS/LtBWV+984VSC6iw2hz6GdUEig1FJHkMZ2oy5+bfF
dsHNxZflTz6X4w8+had5yV1gzOA1rrCtEkfU1dtk07vAUaNgXtKxCoU4/dnV
MrqgaTryJidTDSpk1NqvpnVBeI2MRqdzLZ6S+9CvSZ3PQrAk3NhVj/echF5q
UP0fps9Ie+nZgMem7oiv/+mCKzucVde/NeIHWgemp9T49uq+njHWpPadmTuy
Xajxl3koWjLsIaD5zmNCVtZdEGjSwxhFIGBf89xFOcMuCHF1j77o04yazb/m
m251gYqfumHLrRYcHN0Toq7cBQ99HG8qcrXio2tTd+JFu0CRIemtZU8rpvdp
BdH/1wUdxJZ8k6A27K7u/31zsRNkmpYvH9Brx+mF3NnE9k7gP/5C7AFfBxIP
ZO05kNUJw3tW358Y6sC7oSfJv307oZ/7k86nP53Yu2UfpvyuEx56PVg//7gL
M3oliPzCnWD1yqKR0N+NQ09fBhhR3w0nb6ywD+zB4TR6DpaWDhA5eJ/3kW4v
3pEXuKZq2QHNTYHB75r68GNHCAtzWju8mCuLDekcQK2PIoFVtu1wu2Xn/ufS
g2gr76orqNoO/uH++5zcBzFJiiehsa0NHvke+VCmOIRBn5ZOzRNbQY3NLf9p
wDCGhBUR7SNawWg0/7Dm3DD6+peNzj1tBZbprdW7F4j43z93dq+BFsjLDmRv
GSdisEwA65+aZujkPe7jKDqKmQMqBdqOzTBx2v2B5/tRvPefWayIQjMwZjw0
CSoaRT09Qzv1eAL4Rk96R2uPYV/byQsMDk1QU/bszsprEpq1bN7TkmkCC8NI
MedkEpKkM6TGxhqBxC0bsUQh4YGVeJsl9UZwN2T8eMuMjAcPZ1Zs31sPAkkT
1eX649gutH+s5XUdnFFvXm0KG8fzRi8uP6ishRB08AvoGUfptfClHIsaaHOR
dX+iPoGNUZXt3o3VwLc61XbHbgJNd3g4yQlVw4lLRSb0qRO4b2F6cr6uEnz1
vno845hEH7rUsO28lbBFf7KQ8+IkXnaNfLhgVAHXtSHI1HQSJ4MJU+qs5VBo
v5nIXTeJTCkcznsVSuDd78tu06+nsEPO6c3gl2L452JHE+U1hSOa3FFO9UUw
73MmaSl9CkuZ9/x+oFsIF30tX2ivTCH9f9xxnOcQbgqlkB/sn8bO5Q/WvCX5
0LFwLnBVehq335vZJVGZAyxEfoVOw2lMYKpfkryUDa+z0o4cdJzG2u0nT7SV
ZELrfjuJsYBppK8TlD2kkAFVl0Q3zqZOowbrrA9DRhqcu5KpyFk5jQ4fl6Oc
xVLhuunlTMvuafyVbG0fFZQMfNenjj2emsbowxGC91iTQHrPRau6jWk8Is9l
rrYWB+ce2Tnn7pxBxqsubuuEv5D7lEdDjGsGK4ozTtRERMKzjzWlB4VmsGcg
ZTXhXRiULUjQuR6fQZcTG82h8iFwJqT5sNWZGRR0w11naf1BKmHvRZLiDH7N
bKuXtfsBO9oXfhEuzqBXtOeozqgzXORhtzlzeQaP7DxxT8zUArRt88S5r8yg
q+8lE7r642jJdIzZ8uoMvtRd/MaYaYUeFK3XWlS9dLuYdU3ZBQ8SnVrCNWdw
/YPl9zt63vhvp3ySkfoM9i6x6zwV+Y3nymdN0i/MIHecqCb9RgiVx2WCTGAG
ozIsrL8ZhGN6Pmtq1CmqDj7zPrUnCkvC+U5pS8zg080KSsL+WFSJZSUpHJlB
LfGlFuebCZjH4KnczDmDm1Wfovxrk7BbsnxyDzVf0n13herfpuCpxyT3ZWo+
G8aClJrZ09DF9EDLl+lpZHcWUQjJTcdlWSbDgt5p7IkYaHy+OxunD3BdFcya
xoFBnvcXc3JwRfgjvXbYNH78+M0DX+ShvxZr+1G3abTNbipVrkCUNRApqro3
jX05H7V+5RUiJ1P5lR/K0+i8TBcMvkX4Y380mU54Gt/Iu6nZXC7BZ4OWF5sn
phA5PiptEy7FlwUOridrp9Bpl/OxA/RleCX9++jp2CkkiK4oVuaVI8nHjXzi
2RT6t1l/vuJfgXvZ7/IIKk6hnJnzd3nzSixTNLHKOzCFdRJC6gIy1Yi8+c1t
ldT6MZJUZ2CvwSBuhvt3giZRpT4ti5dSg+fV3kjYmUzic3UGL0JyHfZ8/VCe
Sq2/057fPjT/bES2jmbLnCsTWGt599tbpibE7GrKtQMTyNr6JXvmfRPqB4z1
OA2N43HPD3+sdAhIYfm81W00jrV7682rWVvQRTJPktmGjNMXMou9bFpQdZOt
/488GU9fZsxfHG9BA1JIR88/Eq58fvz2UWkrHv2VYyP+joQN/7p5vI3aMbT0
/qszN8Ywrklra6WzHSNEhK+WM43hz2OGdL+VO7Cm9fHZ2ZxR3B16Vv3Rf50Y
UTevysUziqclybIGYV34bA3iihuJeDbYXFKSoRvPVAvInbQkoohKEHPes25c
WRTYqchPRNqaoH0T/D1oultNRfLNMJbpbp3McOlFS6sre98uDmICm/XPbeRe
5G4szLVzGcRAdyn/Myp96CjA/ZlyeBA1C1noKJQ+3PJMmGFRGcCQMy/fq6j2
4/aCitmnUf0owX1FjMO/Hy+5SJKdS/pQOkVHisw1gG7iqiGG8z34/nsgpQQG
0GDWdIcMAzWOjOybok8G0C9yqHSKvRsfi71Z2e04gPYsZuRAvi48UNAh/Sxi
AE0fCd68ItaJD9nscg6XDuCxeskkZqkObB0plJcaHEDmumOG7TLtGJge/1Cc
YxDdHNlG+6VbcYLD99Km+CBuUhLSpI634OF5yZzl84Movn0vXa1IM07rV9Cx
3h7Ee7L0H3IOEfAAr276GYNBLHH84r9rbxMeeixo/sZyENUHbje20jWixw6X
B+FOg9jGPRyvOlSHndnHJJq9B5FE3+fCkVODaixdAZSgQZQK9ec461aFFkfT
2LYiB/FFSk9d790KPBm3ODgTN4hmgalVwkJlqMBYqluUNIjaPz8knZ8sRl2+
8+5vUwYxcf569P2EQtTnepK8nDyIp1qtPC525uGc2wbN7cRB5NrNuPPrlSy8
8enD++8xg5gfHa7Wm5eKBzV3GQaFDSJB55bjbbUEVPnVxvbFfxBFH9LKpOyM
wNtGHNGq3wcxbL+2tbjzT5T9T/8G2X4Q6TIfFJS4v8N1xZVyQ5NBjGzKvVQV
4wLv+TUHmvUG8TKNcZrEtRBQie3MFdYcxE97d4sU5P+FU3SsN96covp/82Ac
fiUD19i9xETqPTFPPGRaeTMD/BsPLSwwDKLIr2xvxv25gHdbjC6ND+Dm8pHw
r50Iux998FKIp55fUTVXSXIpHOEyHl51GcB9uWejd++rgEN6PpEzLwfw4vUV
Ex/zKtC+38dbwDOAQo9f4luoh9pG9/HHE/24VSlSKHK9EY6wH7AS8etHhzQH
zwvUPmDmVFxSCakP5furCtmGm+FjWrvjff1e9N461ckc0AER826zj+h7MSHM
Rb6vohPKm43fH/vdg6IDR9ed57vAJS1K1bG0Gx8oyCbQqvSCTVy6xTXaLpT0
6B16NT4Au/59Fbnv3Ym5f7bmOo0GgXQ1YFpaqBOVuFUjzJYGIdrnn73vxQ7M
7L1Rvn9rCN6X7J47bd2Gi1DeJcYwAqL5rzxoqwl4Si3qomsfCYSVDNW4tAjI
N7ZB66BNhsLKexM0XU0orVXzVqGKDEM3tNIfkxux6eKQyL+EcfgcdNyYjrUe
G5m1iHsMJ4EutGaC4Xs5pj52Ul/7MwMsplWXXUPK0GOX4vMB2llI2emt/iml
FFkV/2txPzEL90Wbqrrai9Ez7pJMjfss2PmdDX56vQDb2JtJsYpzYO3Yts3d
Og91VDe9dAznwC55qa87Ogev16fOqfjMwb7qtcLlbZnYbEg0mx+dg069TCfu
n4n4JKo51cJ+HqL++X+3o4nDIdbJEaXIeZCM+Yu3XkWj464dpZer5+FKKPOE
4eVQ3L8nh8S/hwLZ9T9ZMk9boOCF7S4tXhTQ+8YkfHL5Inx4tC89OJkC2nN8
18lDtjB36mvu3wYKPIqMvHI+zgd8U15oWWxfgC0z4jxjbDTwdxCqN98tQO4Z
ukBn5jh48DDkl4LrAkjry9k5PUmEHQXVBcVhC2D8x0l2gzkVsrh1Dv9sXACL
xJHraSlpoBSfMjY6sgAGV11Cjt7NgDB6G17Lfwsg7JU4rR6dDfxGd3Ya8C0C
q+FPoxWNXBCtKblVfnIRwo82P3o6mwfn7h5XeXZhETSl7msUHCiEsYg0JYPn
i7DzVq6xD7kQsM5uucFsETw9zfjrs4pga3Tk54fPi/BCybr8uU4JeJBWKS7B
i+Bf1cJSyV8KD/8EPVqJpdp/+KPiPlMKb3NJPJGZi2D+/dZWdm4ZnHxxndGn
eBG6R59+vPy1HJJoiKultYuwaVywQ0WrAiK3veuUaVuElL/1TuHclbBWnvR1
rG8RnJfT/rwerYR7WXvJnaOL4P0p+WxIYhVYHq4b3jm9CFdinuucM6+GAP65
hx8XFmHhvOzfC4o18G9M75L0v0XYdc5lLJupFijBOY4iW4ugISjH8Lu+Fvbt
fsN8n34JZOWKKsjedcC1UlzQxLgEkmyZRZG69ZCsX/Dry/YlcGmJyCIcboDE
NH5Xqx1L8KX26+s3xAYw+ez4LWnnEjxcMhE9p90IFpxyLoK7luCpVbPaWnoj
fOoR+tJFHZdlvf6fyf4m4Ho2YdpAnX/IwWE81LwJOjL/u7GNZQmir3HtcOls
gj96YzwWTFQdNmoqLkcAG9NrLeLblqDO2WvNyZ8AWp9+v+enWYIM2UeZgf8I
UErvwXhrbRH2fmkYMNRtBhXauK81i4swZdFhT8luBtXfW5t2M4uwR/+KpfSB
FvAyPfjOlLQI/7bkrSTMW8D4A91k9MAifBnKlBhsawGFn5zveDoWwUtwPEJD
phW8jWTYCPWLoHZob5PGXCv13nA1rWUvwq16GaGBK20A8S93GCcsAu+P27tF
46h8ZZzwU+jPIni03IWBZ+2gemF1UuvrIlDOTFPUi9thh51BT5X5IhxLzmDU
P9QBdBMBBvb6i+Dbq3Yst7UDlMijeSmq1POTKjSaOt4JCa7GScdOLYKQfIhd
vUsnmBgFho4dWQTXiA0NH8Uu4BT0HOPdXACzfOnrdJHd0D2xIRgetQBEjy6L
BYYekBtYf87nvgCs2yScTZ71gII0gVRArbe9LcoctAK9cEhY5fFd+QUoCW30
227fC1ohmpm6hxfAQ1Ut2rWvF3qJLUxWtAvgdGxRfvJnH8iJ0r08XEKB0aIx
qQJKH/Q1cw+F/aGA4Vu9FsqVfrDpSD6mbk+ByPdKkpm0A3B1UpJn4ywFZn4r
BY0lD8All/NK9FHzYPKyXHypZwB8Fny3B9rNg4vfriwfpkFQnKuO1701D5Ph
O46+uzsIVcT+XOVt89Bz5QNz5GfquBtv2evOOTj4q2jiRvwgWMaYkvLjqe8Z
Z9QW08YgqJ9mbau/MQf2iqm8tEeGIPq58nUPwTn49r1L7q76ELzd1aRqvjQL
3Xz20/t8huCUWDRvvs8sxNAelW7iG4bVHYEOat4zsL926TbN+WF4at+Wpyo6
AyLcg6paT4Yh7+GtIv+CafBPfeooHzoMvBXRPWeGpmD60O8XJQXDoOvOoOBk
PAWqj4Ws1buH4dEOpg2xrUlwdTW/K/MfEShnX/Wa7ZuEZaeY5S+iRDAbMdnH
EzQB0XwXn6QpEyGymr3noOAExAppKabdIcLMWY8sk5hx0HuyRrZ+S4SirnOn
+CXGQXj9bdy2z0TgIPHPiCaRIaSy5rnSTyLcIbM6ux0nw1vhDpLIXyLAgcpy
9UQSPHu9701SNhGWdKLdnhwjQbyXDmddJRFkJlRmOqLG4LdEkOa7Nmo88VdP
x/GNwUv72MCfQ0Sgs0ta6vs1ChaR7FbiU0RI0TBifrdnFDj5CgRElojw3mkx
0cBxBH6bpP2w3CCCrFi5f+UKEdKWI2E//Qh838yb+G5ABPOvfGKzjCNQVLNd
o7RrGNIcfu9dZh6Btdv7l/XVqHlrev2BZ/sIJCXqFDtmDMF44Nl8baYRSKcV
PcrDPwRNO4QZ3Kn+Rk6o3JB1HYTkR3n1OdT13DMJ3B0LA3CKcuBW7SIRBInc
B1nuDQBjpJpT2gQRlB4Gwt9P/TBSXKj3rJ8I1ebnLe01+qBe5Hx4bxMR9jq0
CZYJ9wKjiSSDVjERrsXkD1TS9AB/VoR/VhIRPuq8nghq7wJzjQQH5kAiHL23
EK4b1wlyQsVTp78SoTFy3m6PXQccVDWzUKaez8USXca2q+0wUhY5WH6aCJyE
W6cmJlrAj8b2wikuIpSemRgzyGwGAam4J4arw8AxKySta08AY6NfShzJw3Bf
hevO3J5GEH58tf+b8zCMH/6+GhxfB9p6Jp74cBgy2u4/2n+qBoL7R1lMGIbh
vEoA1yGVctDNsZdbbhmCRPu3hUcqS0DYflDi8p8hsJdemWlWL4Isj9ptVrJD
MNAss3XBPwsSg4ToFy4MArHwwmD3Yy/g5/jhPrhtEPKejgd0ltzBOPmSc1NF
A+DkqXTTyNcH+Zk+VHjLDkDZQd8U0ZwE5GgWSAjY3wceUlE2+7yLMGyiKsbX
shf4jls3PGIuxfvXkKG0qwesPrGXS1mW41LurK3Sj264y2hq91WnBre0ojff
kDpAVTuUPtKEgPQOdfJ/oBnG/v7Y9SykG5XO3pyhcSTAg+L1E89ye/Cd9ElJ
u6om2BPxwa26uRdtz/9RP3utEWIuqrp9W+/HVn2T5OsJ1fAmpidajmMIL0ou
VUi+yQeJahKN/+YImq8+Vbc8kQPCszYs9rZUHvO/6Tq6mAGKCeelXNZH8Y2N
hfOyQxK4Sl8LpqGM4dFtf8/o+7lBI828nGoVGWWEp4qtDdNx6/PgajMXlX+F
lqtv22bhNf7sHitrKt+OmG38dc3Fsyb91xV6ptAo39b2Q10hPqcbsGLzncYW
rq4eApWX2YrmJOkpM+hXE5dlvZ3Kq9JuVqxH55D7jFE0a1YTSmzopxepz2H7
7xiNvc8IqGQQ6ehgOIch5S4Zd3Ka0ZPWUPx4zBxaB7LWxlxvw/z+bUrnuOex
p4LL5i2lDXlX+Xqeyc4j7VHVJx4/qLyan24TeHUeL93f1Byo78B+LZ71M3bz
OLtNKf3biW60c3jTI9I8jxctvhhvK+/GNVJDZPXIPLLcsJetv92DOdCfbbU8
j7kZ+wkaFr04tyOmZQcnBcM3a3m2GPuw8NN78rgQBTnuu99c9+rD0W8Kjzql
Kejqx8XbHNGPbHMW3kRNCrYqZG9pcwxguXDlfdo7FPzmaGM7fHsAaZfHI8Sf
UJDmvcg7b/8BHPAIMdV/RUGHqwKSL7oHqPx0gJBmSsEQzRr2uwcHsfrR9gpW
awoeXZ7//lZ3EOOi8u9ZOlDw36MsSpgflSc5xQIXvlLtl8xdllsH8chhph+2
rhRUYn1Yd+2/IeS6t+/ndg8KJgvUSTZeHsLHkw7c8V4UXDRXXTF1HMLGjzOS
+t4U/D502UqhYAgPBK/3nfOhoHJz6d5jS0Mo/VrjtBhV5z9/syYvPoxfyoIu
n6DaR918+NToyTAybFs/eo3q7/jX335lfsMo8zhz5Ot3CponC9aerRtG0Q+m
Xh0uFMwjPd5DoCGi3zm9C8rUeHdx3XT4epKIkjM395XZU1Bi1zv1u8+I2J5S
z/XIioIXmfJMNHyJ+EVt5S0HNR+th+RH75QT0enK+vERQwr+2ICfDotEnF7m
s657TMFPT9uflwmMIEmqwbjhNgXrK24L8F0fQY7cTOkJ6nkEkE/7eNuMoKz+
FplXmYKFKyLmh/6OoO/L29lGMhSsGP6mn988gsqOInVdwtT9LLYsvd0YQbc3
uVoPD1DwyGR3gLTQKLLFvbDc3E7Bl1zXK6dMR3FQ6Lm9G2keN5MH+/v8R3Fy
H6nJpm0e2VdspLtxFDcMVKOcS+YxIt++ZWB4FPvo351PTpzHkVPE7CnGMdxt
rTq54D+PdJW7irZExtBBqm1C23Eem8IqYtnVx1D1YLhH05t57J5kLD/nPIY6
VoVc/DCPej/oaDSjxnDJcDR1SXAeK9gr+XRKx7DjQbAuecc86ph26N8YGMPv
vxzN/s3OYafWB+YLa1R7PGkk2jqHu9R2sArvI2Gom2SuRdYcTuor3FgSJ+GN
j/a1JP85/DLAWHr1Hgmvr4vJityfQ9dIYctmYxIaSSj4rMrP4d3f4idPfSFh
Zd3+ysmDc6jAMqb54RcJP901fEj3bxaHRlbOeMSSMKOAdk6ufRZLU0NMbfNI
GK2wY//P1Fm0iYiSVagl4eo5DqP932eR6yO7U00XCW3G7IPz9GdRbFPeh59E
1U/nNb6en0X+Ttk4WCBhxyEvAXPuWWTvKR4+tEVC2rjqsMPkGfRyaTDIYybj
6POCvUE/Z1Dpbaku+39kTOn8tvZKZQZHUw628nOS0VMxucZtZhrLPr1eG+Yh
o6in4wLtr2kcTDJh0uYn46Pwy+PVitN46jWqvxUko02f2ZHx0SksWd0tICVM
fRdTT/M8cplCylGDMT+qfvZl4toJiSnUhayNYCEyKh24q3ivYRJdE9xHzh8h
40XWxrfDbybx0DZpIXteMt5buq5fuZOqN7/paR8ko+X1nwU7/06gkKD0kRx2
Mu78pMqScn4C8wUUNhJ2klHLTWopu2cczyRJS/bTkzGibOM6WI2j6nXGxMpV
EkZePn5Ij3McU/X5Il9Ok5CP9ROZJ42Mbo3Lh/IGSejrT3/P8goZLx0PmcZm
EkZRSs59GCOhbn/7lFEpCZlWD1hz2JHwpY9MQm0oCZV1zcNVYsZQa1clj5E7
CU/TWj/oODeGVctc21MsSPgnoFeAs3EUr/JsXKfRIOHek5k60bMjKLw++pf+
JAmbrCsJW7YjWJm6/OwHJwmPSZK+/bdzBFlkyzrO91PvH8uxSTN+ItruJ+7W
LRxDf6O1UkLsMD70c0gaCx5DlQg9pc2Tw/jmpZTNDd0xlJPX8+xSHELTmx4F
QjJjyFWRf/1X2SCaGB5ouLt7DPnburyU1QYxG/1m2nJH8VhO9YiZ5gDa1Z8z
ZPMYxajInZkCAf1492FERNDjUZRvbRc3/92HlyW303jRjaJciUNfpXcPcry0
q/0tPoJ3XkQwW5p2oGCFoMIahYjKtiMsNPrt2LuP/45fFhFpHtS237vXho5C
80Xu8kSEXzMEBsUW5LSRMouWHMb0oPgjsN6AsTV3B46RhrAyajSpuKMOo5Wm
9jMFD+ENK/WfmWk16FbwOqOVaQg58hKahgwr8HCAuEVM+QD2nXi442tuPubx
eYhGmQzgnj/yjyPNs/GgG53fGZ4B7M40jbl/Oh1P8OxZ9ujpw4za5slyh7+o
f/zkQRO6Hhy/7tKdUf8dPp1Ruq1EasUjc6L1SkeK4XhtCd3YjlbUfmb6JUyp
FHYuTm3vEm/B1b8XZPLulMP61lDef68JuNdewkLNohoO3SpP259Zh74pPTuf
n26CQ1/tcopJNWgl0Bz/QpJA5RHHnS6c1agRahy3X6AZ/m5/psLxrhy7Teii
FGlagS8RXigcL8D9p69k83t0wFvmowp+NjnIFtxesWbQCT/eGendqcrAnfNa
4weUu8BE8MBGdXYCfnGui6Qf6YYrbUmy2288wETWi7rN633Q9Tt4/eSpfLgw
qxBrcnoIbkYE3zliXAj/1dK6130ZgmXW0fp8lWLgktDuPdo8BIFa4ywPR8pA
pCqvfPDZMKQElzoHMNXBXd1bP4+9I4IGG4Q2VtZDsfv2AKNkIiQaaLg/P98I
3F/FDOKoff+SyBDjtXVq/1UZ18SoNwIJs+seardboUypKkr42Chk6AhZG4m2
wbQgfxaL7iikB1DyPf61wRohvrHHcRR28F5n8fHugKbqmg219lEQKM8bf/ag
EzSvbbIMr4+Cb/QHARahLnju+ve/F7xjIHDU+EhsQjcozN/gOPZoDJz6DR38
3vbA/e1Shwxtx8Bz924GOYlecCCunvD8NQav6Ky3nMZ7QXGr7nZgyhioN8W/
tA3vg/a+3F/uVWMQff6PGvu9fgh+93jtSd8YtEiUSP1hHoBbTKGfuOfGwLlr
VWXb4wHYNdkqm0lLgsxzFyvFcwZAOcl//8k9JCh7Lihxd8cg9Di+v1h3kARs
7qZO/+NTSaXGXldBEliVO7SbxgzCyKDCdmNxEhgwPyy6tzII2jwac+YnSWDm
/unk0QtDsNtpPSfsFAmEwnQtOjyGwC5J2Wn2DAk+HCr8/rJ7CKavlX54IEeC
z7+kNduPDAOzfXbY5GkScF45ksP/ehiMjrbx+cuQ4AgdiUktbRiY7ujQPz9O
Asm0+Quq/4ahQJmgffUoCYp8w40PARFKZgN5dHhJ8PBU3u8qByJktn9/+H4f
CfbFOxIvlRGh3k14fwozCcKOlt37SeWzF6neZ5n+jUFHfixTxsUR4E3dXWBK
HoP3J7VmQqmcZ8Kf5bzaNga6BV8E7pSMwPZjnJ+9i8fgUsyOqM6tEWBpeu2m
EjcGF3a6GvOdHYWbUTN2zN5jYCM4YSFhNgpPRQYk+y3GgJfUmbYZPwoJlt9f
Vdwfg+1RFts9RkZBfVmQthDGYMcvyq2Bg2OABypTKw6PwbfZsfdT18aAf2rp
Qu/GKGzGbDuR/nkMgv579H6rcxTqgt6qyGSOwce1YVrxtFG4lXFA35BEXVfP
LOyp6yg0zCso6XCS4HiA276Ix6Pg6XTk3uxFEvCVFbNNyY7CRZr6Z8dDSFBf
dDzRvXMExvubDjZWUzX0tYxEjUAxwS2OY4EERlLJAWA6Ahkhry7TcpOheCWm
319hBORHYundlMnwvPTdpyVqHnm0sqoyXpDh51K4zfU6Ilh1nrS2ciGD8ZHU
1hhPIlRu77xTWU8GQ7KbmA47EVI/vnZVmyZDfQAmhxOGYTHhUtqtnePwOz8g
fsZ9GJrOvFqeFhmHQHHtDBkqL/9oKbixQ2Uc5vY5u7ynHYbyRwO+0ffHgUZZ
gyslcwjYejaMi83GwTv2hj3JcAho5m4YaLuOU7mfaR/XoSH4uP6z6U4o1b8y
87NL9YOQeIIwVJc2DudFIhSNrQchNuhadGz5ONDTiOX6iVC5cFOAdrptHO4H
FJ5AwgBcyZKs+j4yDqY79lwdtRyA7jvTgS7z47BjppF1D98AKDLE7OnZGIdT
uUc9bb71w+rN5SwrpgkYf3Dn2nh9H+Rxu1CeslL1JVOLV6xUHldiP+21bwKE
I5dmWDR64eyLFZrNAxMQ4B//uO5zD5izNcX/4Z6A/FcXdPKyu+EJcavbkmcC
WPIFBQfHu4AlzkvMnjpeHJuz8yJnFyhk/tNOos7n6VgRXVLqhOonN/Toqf7r
hQY+b7zoAJ2hHa/Mdk/AisRZZv1v7fDSjZYiyzABWR94D2n6tsFK++elrNVx
WJY5F7w/qBUmGzPMlibGIeWYfUxPaAt49wYwTXSPww2rz+HJoc1g+duA4FU1
Dn19B6XjAwmwTbMqbJyaz+kBfxjzaYJ0Q5qFmcBxeG1TOWr+rRFuvfzCEvp5
HCxLaVdXluohv6BlbP3lODRK6W5wEWrhXt/hJ/SXx4Fdz5rLM7IaXNoar7Mz
j8PNq29e6cuXg2EQXw//MBkUaZ2jVTdLQO5MnC8xlwx4M6HVLKcIDFrmT3s/
J4OK+a5PHhdy4OKDxxS302SwuJQlOxeUDu7CMS+1mMnwNA1jDswkQUoPveH9
UBLcDExMEu8IhB10ZRmuOWPAteue8sk/UXgnKc921Ipaj51eiezJSXi2dZ1G
7+wYJGU0JDv4pOOG4oPuSWrdWcCPZdBHzJNileT0HoE+Cw8+J58qfKNxcIhT
dQT8po6P5uyuxdfBnT3p/4igoPyENetrPcqIlDsw3SMC+aDyHkpuE87sDWSt
3zMMNhe7Ka7hbei/O1nI5toAlF/xudTMPYCuYrrdChP9wPd7y5A/ZQB3s1TE
/ZLuB6/af9seXKT2QzdnJuZLe+EvMM0/NxzCegGx+Ji+Lpg7kVxnFElE8be7
5cSYWuFQf76XWzu1r7tc59d8tQX6V3681dQmY/EehTeJfs2g9p9C7LsGMm7W
Sr8QEiPAXCmW9BeOIz3Xj/yGqHpoiLiZV/x9Ei3u5PPvUaiDwIyRJoWtSTx2
5Z2xQGsN6EZcUaN/PYU/lybkBhiqoOqw3+jd89PYfZ5QomFSAjy3pBz3dc8g
y0Xv/ArWYviV3Kd45dAsKqqpxp1NoP7PhwXoJK/MIlubTql4Ty58vGyrfTF2
FrMN8/98pSQB+8MWxyLdOVR7ejipxjoOAhM6p558nsM/HwgGPziioP6n/wpv
/BxyxYbf+RnnBzT3u1+Pr82hiYCjLSPFEzlmbxZkuc9jeLVYh59jAJ6Yc+8S
T57HqXWNi/lfw1Blm+CRfMI8csslrMfSJ+Dt78OComwUZD1349apwGSUeP6q
nkmKgu371FYPyqZh/D8ax62rFCwI73yuopeNE+Zic/LOFAy/lB77di4XXUej
3B3CKehVcTdwxq4AQfEKy1ABBb1/vP73pLoIv42sPJ6epfJphu8d/fpyPHCw
jyinvoBNfIeeNu6oxHUnQqnmgwXkG7rypeBSFQZP29BaGi/g6ormXoHcGlwU
W1Q95LOArE6TTzznazFw/ICkb8QC5p03KjUXqUfJ30MiwukLeKOMS5FwqRF3
PeDf5d20gPt3up8yHmhEX0U7wtu+BTSICCZfMG/CHL+7j56OL6DQXt66K6wE
/OR8Lcp4cQFjLZ/AtwgCigKf18+tBXxRdObHklwzEvMiWNuYF/F5be85r4Zm
nA8c3iX+3yLmN/Z43X3SgkJ6bFYBnItYS6fXem2pBVNtrS8cObyIg4UHH/61
bcWzqW7rBkcW8Q9rbO1FxjYkL57dHBNZxOweiQhhtzacoM2X/31sEfkTim+p
s7UjY++5mM+Si7g4/iE03q8dT57edib8xCIyVgeevcbTgQxiwd2rUov4Mj8y
+XhoB4rHVH12PLmIBbFyjzSPdCKT5XnhS1Tt2dqaFB7ZidF1RekKVPsnKh+v
yIh04awQv8Cr44tYGbwfN6K7sKXS4HGD+CKyG65orot040RY/POXooso+7iX
XTK6G6cpU/ynhBbR6mGOibdQD/75LfHtLN8iXmv7MCga3oPGNp+/mx1cRMnG
6z9meXsxKZtRaIR9EYu++hoNB/Ti231Fit92LeLb7auqtJx9GE1IIjxlWERe
Uamnql596JRYX2+6voB3XRU6Mnb0o47EhnDO/AJ+ava8o/65H78072iSJi1g
+SNxoFnvxw0S5hF7FnDm2hGaZ6YD6JO7W5hYsoDKMyfDJhMGMPFG2beTGQuY
m9lmSUMewLkQs7XMqAX8vLj8tfzuIA4fXax76LSAfxfy9rz3HsSzRZHsnz4s
IL/vbGVs7SB+XmWQ6n62gL8T/gyFnh1Cx+WFnKOKC3jlVV/VA5Mh9OzYtpP3
2ALeLpqy848eQtGpu5vq+xdQrdll6TPbMPKwbHkpTFBwV+b8DknVYayqjeBm
aqEgUcqp44r1MHaxV+zblkfBW8Z2HcShYbQ0viHym1pPyoprTDr7iCh2OOaY
zFsKmgdalUpeImLASYH39NoU/KkmkcL5l4gPp2+lyx+k4LAebNN5NoIxjhFC
fCHzyHiCvzLbawSVeOq+37ObR13uoBVDHEE6//K9tffnMTuwfiqSYxSrVpye
X+Kcx80ZubtCSqN4/v4RuRsLc/gkD0MGDEYx19VW/EfDHJo/IYTPUXnz9kLQ
58RPc9jsKt92bngUDwxsp7jcm0OmT72jidvHMMFn1SdAeg5fpRq3TN8YQ3Wz
RE/doVlUC9oplPRhDCX9ti0xZc1i7njTqp3/GH5q+xxOdp3F6hMvx6V6x3DG
M5+sJj2L3jl+VbFbY3gtZuX0ON0sftnju2eCl4SPsyb3y4bOYMXTA+kkRRKK
sRyJyZKbwfWX724FPCRhXWM1zT3CND6c5zmwaU3CV9dOEw+/nMYPx6GC4RcJ
jYdKWLatT6F0loj3aC0JCWzn/cUOTeHX63+CEokkjPygtOtN3CTm57022fxH
Qh2/a+31pyex/D33wRpWMuYb6aprlkzg36+9MbsEyOghIB5DujyBFp7Lhwqk
ych6PlE0hDCO3g+uvG9RIeOlHzfXTW6NY+m12+aqN6jzP06r63WRUf1Hb+N/
emSMMHh27cVdMj6VD+wVNiRjh3GX9tcuahybUjH2pmQ8ozlXjrdIeInr3MQ+
azLqGjop7GkeQ5LDTuyyJ2NDp5afucYYfvdZXCpzJOOyicv6Ssko+jOc/1r7
lYzvbmesep4ZxS0pGvphqu4VsvNWiR/BKN37Lzao9rf0le7sPTyCJ5hZaVgd
yGiizWW04U5EDUX9ABbqet+PMiYxbwzjvOJx96F3ZIwLYEw4pT+Mc/sVG5z0
yRhGlqh3b6ZyPev9sel7ZPStHrjKJj+EN90SPzBeISOZ7ZBuzZ9BtPzY3lIo
T8bUHmeGAqZBfCH86xfrUTK+eWn9iGIwgHbJzYXEvWTklcpaJvn144Ir/wsp
av6bZzaLfG/3oU5bacZEHwmHPA+dZdzXi20x7Brbikg4VxJkebW+G4m7irON
/o9iMw+H8u3iuMpeylKWqCgU0aIkSx1UihTRQmWpRCnip6jsosjWSkRKi1Qo
Kks4WbIr+77NmH3GmBkzKlHvvH9+r3Oe577vc59znvOZ65qnNHQp3BiXED2A
X7e7FWmH0jDISd2z36gfH/dOpNluoKGgufe5akoPPmGvi8ufT8OxB9qiDhbd
CNFj23d2UTE2ckB8OaMT51VsyBnypWLSnpg43tZ23GikE8QwouKvl1sKnub/
wD+eA/s1/1IwwqzA4eNkCzJ/brXdEEXBPq0Vrw3O1aORStLvheYUzLAqDLJ+
WospISsom/6QcWbdfRHZniq02W8eFXaejJIJzdbaV0vwBi1HtW4tCaU3xI29
CglHyaSN4hfbx/HOW3F2rXUilAayT/VdHcffY//0TtzLhnKznvETVUSMSLmh
qnrjI/z3mU1MMSVgUNV/DfSz30BU8ojolyFhvyM/CGr9XQ+BnsEud0LG8L/I
S7+Zt5uEc01O/Hb/Ucwmi78cff4DdCZcfR/vG0KTcMxX6e6CWyRHs8nCbiSH
hpaV+wjnd0lb0W1DXXj5eUbO0INRaBHRmeGLdmH/QrsP8SfH4MulbQNmRzrw
xyrJFfZCvnCk3A6oobTiieqGwT2549DQM3q2+sJXHH+7bybjIxUWJJ2KCAqv
QN1P9mHnN9AgSWdhZLBOGa7Hv5TQVzSo1B1mm0cXYfXLUyrX79LBwPoAne6W
hmfFnLHAgQlG9Ktn5vkWQTDhDVk7ig1K7hpStx5+BrOQY7+PjbEhWPv2vNSS
Uvi4vcG3w2wSvpfKO1VyEAwNc9JeciZhT7f60mb5OtipovWE/owD9ZzvxVLj
bcCvkbY/3sKF4OLblfsftEN4vJLX1gku7NvfWaG5uwPSG+dWgAwP3uwfaLqb
1QnxtbMLqDY8kDmyOVhtTw94lQ1fjS7nQVOllnQ/owf21vl4UHt4kLTYcYda
ci/8qtHkB3N4oL41I3VzZx+0rN/lYaIxBWPhI/cvWQ8CoeXvz8XXpkBmLOOk
6fggSLXPRMxLnALzvanbbgQPQQF33xHtp1PQTJbdGJUzDPPD3VdK1E7BrgNd
P7eZjkBnxtZNNV1TMJjSqXymdQR8asLrP5CmQOq8Z73axCic2l5SrD2fD4lS
3rKHd4yBn3T42rwlfHjmk7DO8cYYVFTctPFU44P+F+NV8Q1jsMnjja7DOj4I
huZd+LOIAPXuRu1+W/iwXTc59Lk9Abab/7Kq3sGH49P3GqLuE+DaZ9MHVnv5
sIPO//qomwDWgyNf5+z4kKsdMUhSJEIC06mLeowPKoGn4jyPEeEo91u3qBsf
vPOO7l6RSoSAYGrz4bN82PBfe6hkDxFW+W6s6PXmw4OOa0/WLh0H24XtBYmX
+MCXKFp2/dA4fE5ryg0M4MM/mYvH/iUKtYD8/l4gHwY0b7R9bhyHGZFvTYSr
fDhIJ1CyREnw5wl79sx1PnS6HfhXupMEKyUHbVWC+bC1/0SU6FUSFK/+g/OE
OrUtoCPsPQkk11WfWCH0F7Gvt1lHI0Gn5Geti8L3XT45ZCGyigwYHr6GfYUP
ZooEGfEjZNgYxT/+/D8+UOc0/26/TQb9Yu2OeF8+THsvOvGokgwvFlxJzjnP
B2eSvucaHhm2p2akTZ/hg9TqLSf6NSlgV9n086oLH5ao/PQpPUqBXq/3HzYc
5UNSyL+G6lsUcAlJ/aF0kA9q2tcT+cUU+PTl6vGte/hwohI6D1ApcH2j/Mlo
Uz7MO6qZ07qMCk+4IqMSm/nAjWFLBeyiwgnvIXalFh/e73bgmPlRQW71oUe5
KnzQIJpZ6mZQQVfMjF6/iA9jgqt9xvVUWLuymaPybwok+m6FeHOpEBn+FLM4
UwBZX2lly2kQNo/n5UyYAq+ZjAadXTSYu50zZ9U+BXdp6boud2mgNg02lflT
YLBPduW+MhqMBbS25qVPQed06t7VRBrU74XMvJgp6LgsfpUu5FUfc8OxiktT
8GiVs9PjDXSwusOvGnGagpJPcxcNHelwc22Xv6zFFPTP1a76FEiH2A6/NY7r
puCIblDY8TI6hHjH+S3i84A3M3H4+gAdhlao3L7Rx4Poghbly7/poEzyzF4k
rM/E/y7H7FZiQMeybrHXT3iQdcTTjLaFAaNH94ofjeDBy5zG8hN2DLDRWv9H
8RQPLsXUWjw+z4AFLjwLpjkPdvu1fPVNF/L7RP/xH3NcaO9Rq555L/R/oS8x
NsCFR+fIlZZ1DJD8HFQqVsyFrrfUXZYDDCiW1mSb3+NCVENkJ5/FgKhe0XX3
LnLhipLXxJG/DHi+6sfk7z1cCJP5Ln5qMROkGGmdV1dyoWJFm7vcCiak1lE8
l0xzwEsx2uK0LhNuElZZVrZwwHvdDcLBbUyYHzEx72Y2B8547HXpMGdCWpof
eAVx4OtV419UayYEGD7JP72fA0uGgiXjDzGhrAjZV1dyYP1h3zufjzHBybf4
0BHCJLwfFJPzPMkEWcK/xdwbk5BwjT72wI0JOUN3LtRpToJkllfwzlNMWLjd
r6Knhg2vBwMSXIU6jfLWec0pNqz0WtfOEfo/azW8nzc7ATYSXZJc4fsknIzK
AlMmICnT/9QJJyY0uGeoRWyYgB6Jj/T1wr6eWect1lzLgt7QB0xXGyY8DT6D
Ts4sWHfzVRdHeJ6g2oMpuiwm8LYvXThiyASxVNcBi1AmRGZvX7FGhwlD/+LJ
WYuYQHBXul++nAm+aadWWQnvSW+6hPJKWhi/J4vFtmkzQGRD7K2RXwzoItht
8X9Ph7ZJqZduZAb4y1Mv/t5OByfOFVftNgbQDG/ntCEN3m4WuRbwlAGlhdN7
rjRQwUIy3p8Tw4ANCZGS+2yooG6kovBUmB8WM9dfX26igKnyzQ0R6xmwr0VG
jvmNDPJiv0VfSDEgVFHp3w4LMjxZ0mZNINNh3vrnhnNlJLhy8sz324/o0Lh1
cv6A8Htpf2dtDdWXDvrbxM3EV41D4vH4HthFh27dePnye0S4KCHPqCLTgPZ8
bynjCgGm1V8PgRwNFA8ui1R1HoFZzXcKLwao8C0lPvG65TBMj2zIVMqmQl3x
qZXTOkPgwPOla6ynAuTnqb+Z6oe/T2P9H2lRIKgljSJ7pRuKXic67h8lQ8Gk
us4xhy4Y06VelU4lg7jIbMPTDZ3w5fSAf7kIGZz/erYhqQ3O5FduiK0Yh2V/
/PnZDxugwVqet/HcOCitDh15sbcO6BM5PCW5cdhgnJVY97sG0tpcH7W7EMHL
yOrmdGUlZD7qktYljUHwQlWz42OvQargMOOo2yBY3Gud/HqoGCOa+MpysQPw
VNSwYcm7LxhBDOyl5PdD02qv/3b+RbzSvDnC4WcvPBGD6oO7a/GPefh+6cAu
2NFw6O/Fhy14ILmt8ca9Tqh/ZpdUk/Edm/b8vU3KE37P3Rs+HbBrw1sr6Uc+
EtrAO+N8Wua+DrRNJRakhzfB7kvZP2yVejBimyU7/m0DfA+6wtFa0IsUiNwW
3VMHHYr3TWuZvbhtYuWQuG4N7JCR/rOmqB93B5/Mb3tQDLnilmu9VYbxX5eV
a+NgKgalvBGzzCKgnDLl7UnGc7z5vtd66Twiupp9lJ4gvsVHdhOGre5ELFUY
PruU+AnjZbIfT6qM472P905TmqoxSh0DRv8j4R6vxYUnv9TiOpuwdz9qSBh1
DHvEc+vQhVMv9lSejN+7Vp+0Dm5CqrGhxEguGdXTjv15+KcNz9f7+JVVUtCr
1P+0H6UdQ6761KcI51id3Qn+h3504MM37/0OmFGxzMVJjZvehUrKXJW9H6iY
O9ZalBIqnJNHbTtjaVTUq+SJyrn24LeAX4eyV9Bwz5coYyflPgyxzjA6HknD
myLPjsrz+pC56/J/PwtoeLnF+/m1xn40FSErew/RcF/MIrnN/oOYrdDt2bqB
joY/e675Wwxhwk4NTvlhOp7KZ9+0WDKMKqmNOeFX6Zh+797k5ecjyKkN9gop
FXJD9O8PLedHsXZXo92nHjqGSi4Ka1Ucw8js+drIpWP7Nw0/n6AxPF7/4Eia
NAOPFdxLrOkZQ8fQ5Xt3aTDQzlVhRetWAqrt6nQrN2SgiYwG69ZdAp5rVJon
uo+BNYoJ17gsAm5xabul4sTArjaRUxJ7iRhWsNh29iwDL+5+fKs+i4iqxV5P
3/ozMPPR5xsbfxIxfMONdu1gBroduLh2x4Fx5JgXaPlEMbBORe4I+9k47iKa
DIXeYmBPYHGuuWAcfTsV9Z1uM1AQvk3ZQMj3IiJO+/4I9f2R0HtfU0l4Vynl
iGccA6uCb76lU0goNpEc8CiGgcz+uxvfbiVjUl958Z1wIV/2ZyxaECm85/Qc
/YNBDKzYMiZgN5Px+Vxoz4+LDFyROHHn4jIKEgsKXy91Z+DAZZOiay4U3LHi
QrLqIQZa/6PJLn1BwX0T9PPjwMD0fpqZMZ2CSorOCy/oMZClGE2h6FHRrd3P
5IMiA8OLCguXXxJyaEX0+49/6ViVXq/XUUBF95uRKpdJdPSK+kCQnqRiRtOi
pex6IVcWbnes1qMh786VTRq5wvtc/HDe9DkaXrEjcxbG0nGRo6P78+c0XP6y
v/GdBx0L+ZpD9cI8KXEtUZ8PdHzaNNDqvpSO3pq+B6SV6GhmYvHwP2s66m2+
HJI0QUPTPy/E5ofSsdjhTUSvkAs7zx8PX1Qg5NFHU8/H79OwcZeiW/IoHbn5
a7Q+nKHh2QBj2q3FDDwid9h452Ya1qiuPTllykBN/ZcycbNUvLWuNkzpHgMN
HpLj7BOo+GTYZ1dTGQN9FyoGNNpT0ZrbIUIiMFBly/kXv+SpKKt+J+mUBBNN
tz6wGOqg4GvR+kBYz8QXxM7A/+5Q0Opom8P1A0wsrnYOKd1PQenNF10X+zKx
yWkkrUCUgn+r7dp/JjDx6duhDY5fyKj5mZpm8IaJgYX5RdmXyFj1HHzLvjHx
P9sN3zI0yNh4cyv59igTO/8KtMzbSSj7Q6CZ9ZOJPQf+NsaHkdBKimbPk2Hh
B4N9g2E6JNQOMZQIX83Cb/CkWrljHK+qFHWBIQv3rOna5CzkynkyHwc3WLHQ
kFKuaa42jm6Dd0WtjrAw+FLXdGsFEVc8MueGnWZh8lMptwUuRAxUmJvt8GFh
zOjpcMJvAr44fM3ENIiFnwdfMM8/IOCGfLVn78NY2DKT/uGJHgGfVx4rXx/N
wgcfY09FVY/hxZl/Ri9vsfCT7eAy5aNj2Fwi4bgsjoV3Yw/z6r6PorOy1KXL
sSwscD+T1c4awd2ircNlMSw0redzncVH8PdQb8VYBAsz7T0E3qrDaOqa0zxy
jYX8/bn/ZPWEfeRl8co8Pxauzpquct4+iLVijnO7z7Jwf3iJzWHzAfwgR517
coyF+36ekZTb3Y/FpDekj3tZaPTlc9ezXX1YPOp9JkIYH5sbSjQV6EWNGsX6
P+osbG6rZiRu68EW1q+9q6VZmDOoNaag240ze29KTHKYeO9A7ZYalS4UPVYk
7tbNxGg5m1cfxTrRzOpkkG8xE9v+HTw4n92O+pMeTaqpTFz1tjG1vqMNU2br
xWztmHhe+mGcs2YrylxxifmxlonP1zSpKQw0oZWO3XPunLAPWa/eUBDXgCrS
a1xXPhfW4fmovem9NfizgfBk838MXO+8ojwgsArfLPq9RrCTgRbfMipi1SvR
dIqm/6adjqzz15njFz7iPyfD+nepdNzvV3g7RaoAVcyNyZEn6Njj7Hh5ev1L
TC8I7mkT1t/QWrJ9+WUP/CV7YJ9NPRVTyyirPKOKIObBm+tmUVQsqZ3349DO
EmBtPCbz0pSK2cEjF5/OlkMo29lJ9g0FPb+8ddaHGrhs8MKwO5CM8u29qXK1
LfC44q/mjSEiDpb752t19ILcgMOOCzFENPde3frnTx8sjpk2zdEnorMuRzRO
cwBKIxKybUMIGH6058lp/yFgsKcb0hTGUH/No9ufg8fgV9pyzjqvAdzUj31i
7SRYdHt28UBeP4rFr5I8d5QMK++C/FV+H0ZMmuy7MUAGalLC5Y+RvcgezeM1
jlBgtIO0PyWzC4fW94pwe2hwNrD7+5n6VqxcjnkvI1kw071Tu+hkCwbEzjZs
5bCgenOA/wyvCVWeTJ4wcZmArOMi6fGrG3Dn8S262QZsePDo3FXrpGp8cmFk
CTZNwqnOuMaVF/Nx6bUztWXHuLAzTez983uvUbUpJkr6JhdSEjYPZFRmY8w+
GbGLRVyoUtz8l/84ASOtK7w8FvIg4UTCMurtLHCy2ZOv954HYcRf1jT/l/Bu
rb/pol4esL9v+bRO+S0k+Fvp/J3lAevnNqMv64rgwE67ABWrKZBXePKjzrgS
Qu8+P76xdQp4ifETude/QnpC4qPnrCnQfbL5yMueKggJrn+ku5APJIN2glZc
Lahxoyf8hHyZv+NE6NPRb1B5h7J70ykhX28jGZpurYddviEe80P4IPe2Vh97
G+HCjO3USD4fyDdnYp5qN8O3yOgT9Do+2LDotncCWmBGazhUfIQPb1vXeSRK
/AA1/p2+q1ICCLU5Emq9tg2Slabmf18hgPKl9ftbGttg8ab8ZsPNApja3pfV
tLADTnEWKe44IoD7B382Wr7tgBDSk5ihswIYdP4s8tG6EyI1Qi4lXRFAu4VI
gRq1E6QTBhsdogVwXE5xdfCNLjCK/Hpb554AHF4nVbau7Ia3afQc+SwBlNhU
L1Yo7YZPvapKi98KIPv5kJ+1Qw8scVL+rvpZACpErv4lRg/YC9yrTb8KgFUY
2BYV2Qubl7vRfRoFcPhpU1+UUh8Y6L/dXtguANO55Lc+7/rgWtzgS8l+AWhE
lL6xMO8H1XFHbf9RAXiI6pye6+gH97boAiZJAOh32jbLYwCIfyWMrtIFUOOX
V6clGABWqFeh4oQAXk27GCdHD0JvywKl+knhenFeegPyQ8A0OHw8jiuALT/3
Sos9HYI+GPF34Qngg0e62mK9YdjVK+q4S6hZYWcbpz4PwyxHYspE6D+QbBL3
0XwEKh319u4Wvs/I6MWLg40jcOTm891uLAFYPVPY8dV+FFInfMbiaUL7nrkC
id5RaNx0bknTuADYi5ty5DaMwZ4f9nUqIwK4NRR5T9JvDAwcS35f7xXAOV+j
RK8PY1Az9Sdz4ocASAs1y/R5Y7BAel+Of70AfLVgxXEDAtC846QkKgVg/frG
LaY/AVZeCirJKxKAgSD4x9h7Avzuz845+1oAM5OM6e2TBJCdOtK0IUMA/mYV
74bWEaFUY/5JTrIADm0ONBScIoKorEIVIUoAUhNXr0emE+GUeg97vjAfDIiE
GxEdRKBKnhhw9BRAvuCBKldqHAKnI652HRWA+pqe7+3m4/BmtUFltJUAKg7e
2T3ybhzsTlksvbxGqH8N2kgQx6F1+uLiIlkBrD3vUZSuSALbV+LRGnN8yD2S
PPo7lASacSbFCZ18MOkJFal+TwKoc3KPq+DDxOJskwmikPNmtE5+esWHeZJn
Kjz2kCGzQ2bd40A+RHsUXnt3hQxJJTPUwy58kE8JsD74kgx2f4MHduzig+Sl
mfyH8ykQl7LSInMRH5SaRt8abqKAwl3dPAXOFBz54h2n6UIBfh7HtLRjCuaa
ygWEjxSY0pxffffhFFRscn+dO0qB5YMDFbVXpkDpJzmoUIoKTpFDZO0jU+Dj
8qos6AQVtAz0Bq/KTUG4xX+T629QwXX5u8pzbB74dBZ9kH0j1HdJM7eaeLDW
m7HDWUCFmlVn6w5HCHXMpcNFKjQ4j98j5h/nAbfyzSXdHTT4ds2eMWrAA6dr
EhZCLoBtviTQJXKhYrHOkEQ2DfhWgRdTS7gwLftXpbyKBqJOAY1bk7gQdJdf
pf6XBmcW/80XMeJCssGGH7XL6cDLIdzaKM2FTn2f3qPb6FAoN7Y5eYgDEPbp
Tps9HZ6vUO5dlc+BqiLS9fXedDDT+/eUEMYBy+zoYfcoOuh9MyrpOsiBNOXR
Ld5pdCiuTNr1ewUH1KdLM0Zq6BBEHo3JD5gEXfaXWLNeOnQc1qNoyExCWP1m
48N0oe6SXPH7BRv0Vi0wXDVDh9CXNrZbTdmwN/WcfqqQ720p7rGdPybgBu0z
6ZMSAxzUXft6Tk/Ac41fm65oMmBis9LWnXwW3CpJY3/fyABJgetNqWgW8B7y
11QYM2Cc4/RuuzwLrGiOncaWDEglPLna/IQJZdcXrAdrBjyyufipSocJuxYs
0Kg/yIA/f0V1VIsYMGnx5nuzAwM6Xu/P6DVhQJiM1dK9Rxiw+drc6PRXOpy/
+fmLwVEGfFco7rm6hw46ZjJHY4X2wXm6oS4NNHj6oGCFhSMDAm7A9AtrGsRf
3svwsWNAaEDYw4FmKmxJqt0uYsOA6jML5kXbUqEO1j/nCPd37K/GwuxmClxJ
Tnc3Eq6btKRrwNCaAp0sec0W4fkSFuJP829k+JT1b++rNQxoS3M8/g3I8GPC
5nP5MgbMi7S5/K2EBOevLxkWE2eA++pvFrs3keCuoaTiVT4dXsnQ7Pa8Gofo
bWvkpQh0oDlpNbUsH4exL1m9+c10yF7nHTmaSISMXY/fu36kg1JMHy/qHwGy
x3daLX5MB0/jOIeKSwQwkHa8XhQutHcXxz4cGQN2/emKz5Z0IC1W9A31G4X4
2yGR8zTosEA3zdbSagQcNThM1TkaHDvKeBOrMgxPBv4RsvKF+cvSiJ4sGQBF
s8nAPzdo0BPENN8Z0w/+38v+SB+jQdzlUpq3nXB+0d97f+s0FQy9VO83DHdD
b+rJz/uqqXCQIt20ObsL2HflxMQSqKCbp7+Z7tEJCkN+14KUqZB808WwktwG
mYtv3by/jAK7nkgaq3+oBwUR+b6NP8gQwJ+rIWl9g61f1t5NvSmMa/JOD+e0
auDd3U/ksoX96ElW+/BMGYR/GupdmzMOIWP3A0Zl0+Ejc23tRftxiD90hpcW
EwgLrnfuo/wkAsV3xdKHiYmo+zPc5JOFUNcXStiVv8Xhwc8hH6rH4OCHsc/d
olU4nZc4etVtDFbneUUujq7B/Wdua4lOj8Ke54SPB0Tq8MB6ssJulxEo3zPu
wGM34Yl7HjsUlw7Cv2v5613tOpBgMUftgS4QXbUsgZo0iN0Xu0N9DnbCUOLX
H3XVQ3gn8FDt2ZMd8J/c3hijqWGMvri/fzKwDXJ/nxmp1hzDsrfp9okOjdBt
u3F26Vki2lXXnnt35CPYdqeMK8dR0KSCcyP6/nsYnr+4OFeUiitVTrCv5uRC
Uci/jO1hVLxze/BF3KWHsDbK7PHBCzRk9c50byFko4m8fIuLPgN3JCXb96nV
4LJzr29EHJrAF7liE+yhWsy6OmcjlzeBhc9bUolpddhpflXwSpyNryQdTy+T
bsI9/ZYR40VsDEv8cn3IvQ053bsJhdOTKCurKO21pR3P17ep7dTg4AO671EN
0Q50j8zLXWvFQXwuYSb3tBMVHjmESidyUG/gxZ+zVT34WO3hJsUlXOTlqdnw
o3vxuE79Mh19Lur8EnTcs+rDzXrSrZY2XBRzusOdrunHmoOk4PhILkpdtgws
Dh9AK9eZ9rLHXJSPhbthxoP4J+xjMfejUPNELyrnDKHJ7X9dgSQuzr4700s5
Pow9FVlO32a4uOFBJKNo0QhuG55coCbLw7oPSkUW3qPoa3nTgWjEw8KEqeh/
0mPYr+K12cGGh7cH6or63cawMNq+oOkED295tNiEihMwoZbK7A7m4ciVksoO
BwJeMe17FRjHw43Zjf9ZPiHgwdngY+YpPJQ51vilmSbkQtNkmS3ZPLxTd77Z
x4CI77Z97z2Yx0NrM9mhtcFEFPkkWnu/mIcmtJydv6uJ2KasOjqviocCq6EN
BKlxnLPTNkxr5OGjqYe9I3bjyGFdbndu52EWITKI+2Aca12yKnf1Cfcjsd5a
uX8cT/s9FD82wsPDLx74OaiR8KtXfuH9cR4eODItm+VKQp0vX5p/U3nYl1l0
Yi6LhL3jCsfjmDwUS/jpe3GMhKvln561ZPNQriv6KHMVGb1CBQJNDg8JOz/o
XXMl441QT/nNXB5WuFiKL8sg42d30WpPoY72yR2p6CPjqpTyhXVC/z5JnXf/
LaWg9c1r0wcnedhdVBdgYEdBtqJ63LwJHqY+nNSYjaXgNo+spmG68PwvImK/
V1FwK6pXj5N5GHiNf+v1bwoarl8ZpEAQxsOVKRK3iYqvKIe4Fwd5yHzRWeLr
ScXN0L+d08VD4zWJx50eU5Hc4Xk0s5WHs6vaU3f/oGJuo5vj5W88nMmPlTOY
T0OxqgHjK+U8nE/WPbZqKw23ljctfVrIw5Qv/jzpszSsCVDm8HN4uC/issfU
AxqW8T/3BWTwUHTgP4XeGhrGDH8ZUrvDQ2nJ24c/cmmIJ+4v5ETxUGf1Jr+4
lXRs/bgicOIyDwcHmM8O29AxhlOxYZknD0+mqyxdeoWOjwnnrL2O8nBLXGb/
tyd0fNbaNTi+h4fVAdNTXvV0HEp/P3d7Kw/1PZQGLy9joOWPSCfnJTz80SU4
OmjCwJO3uE0Rf7hIbym5ouMm5N8zuuadFC7aVYX1nYxiYNObsQH7di6yjlku
C3jBQEH/+q+/y7hIMXAqPv+Ngf1XTil9f85FG8xfsZPMwHvettLf47l4tMvP
+YoGE715xVcPOXPR6j4PO3Ywsc8IjnTv5GK1ZfzUfGcmXlj6KylmDRdTkg1p
8wOYGPH38MnTElycdL6X9iOeiU2Xrk1fYHBQckBPwfM5EyVWPHuU3cLBmGIv
75pSJlqEJ4SL53Pw6KVGX9J3Jr72fEZPTRL2C+ddA9+ITIwPPqB0zJeDRK+b
tz0ETLxieNFm9wEOmg20hFaIsxAno7+5refggc64mFZFFu6eftCcK8lBi2O3
w+5qsTC4+AvsaZrEV1Nq+8W3sLCJZCz9MHISD1dn/1gHLNxcXBu8y2gSS25P
/hVYs/CsDlPpEJONGw8WNXk7svDCwb+ulZlsbCA7la0+ycKqC2mv2vay0VHu
z9TOMyxsbL/TMzM5gVrkoAXl51iYnHU5ckfKBE6MHvZIucjCngs7tqSZTOB0
bf6PJl8WwgFP/8XDLGw5u0Tl6CXhft7Jl2WGspCiWrzBUGgn3he5tVeNhe5J
4evPXmDh3w/9touEcTK9GyQ97snCtEUbIliOTMzQqV34zp2Fir7Tj2gsBqpJ
/bSrcGJhrlj6snnRDHzxM+O3gp1wvdMDN7apMPAQ/YxR3i4Wbp0nEhP3jo7d
7i8HYrax8IFyY9/MDjoq21b9SF/LwgVTlZ7xrTQ0gz/pNGE8FeXe7jM7QcO2
xeo3LoiycOHkcO9iKhWX/1gStYrDxOaI7DJRfypSzz9rlqxmYuuiXeTT4RR0
/1MisfU1E5dtVLvWtkBY15UtRiEJTLzT7KN08SYZe4pdP9jYCf3tapV23iSh
VH3Iwxp9JpZ0f70ctoCEWbC6YKc0EyWbbJgi4eOoTyssWlHBwKqWP2dofkRU
pKno5UoxMPY/9b3bLMZQROm40qleOqod0LCfOD2K1kurysey6XhKraY42XwE
P5k9K1DfQseaeaoLc6cGcVBv5ujm7TR8Xngy9YFZL/4k3bzzYYqKF1+dKgyR
6sErx1qPjr8T9pNeNe3Eri48RPW09FCm4m9W5aaasx0oMvcgwbWLjDu2tzsI
uE0YnzjiQwolo3l1ROHaoAacO+3KsdUiY6rm5c27/nzD3ncB3TwfEqZWP/t0
f14VPsi3UJekEZHWHqNYaf4O074Ts1YtH0WpmKsPOf9KoF9M5wNYjSAp6tuo
VVAFrPx8Svus3zAW/jU8VjP1FYYfE2UNcRCHZXarhDl9A9W+RyFs6z6MPa99
X5rdCoUhcu1W53uxR3k2r2JBG1SnqhQF3+rBb6XqISSZdtA6scGw/2sXHp/5
JauzvBNO2i9d3KDTjke27NkTKNsLa82XylyybMN9m+9b3xDvg4TeJ/YGn75j
sEuy5qXffTBTSWgIUGjGMZuDN/K6B8DIazj1TWMN7t3391KY5wg4SJCsdje+
wGDXCZ95/kTgHtAvnSf6GOOvnJwrbSNC9p7WKTY3FpN3qdu92jAO2xfQP9Hu
3IHXPhlvlMjCue36Afrc/UIwuhUX4mhGhjoLTrm7zmcw3R/Vl5lIhs+WEnf9
vpSC4dnzU8rDZNh9yPK2ifdXqMlX1H8aSIFXJX1la87Xw39bbSwY96mgt7Zk
26fVjXCsKlarsIcKF4zmf3rY3wRtuV7er5VoIF6gf4m08zvM/6Q6t/IBDU6+
vz2S+V8HvMpvp+sF0eHx6D9Nr12dkLPm1wX3t3T41RD+64Z8F/SfLLf4OkwH
jSJP7Udvu2HV0NdfC3YwYE9iw6qLDX3Q8mS/6kMyAwKzQi133OoHErsAL0oz
wdfrlDfsHoBET3GlSH0m1LzLu1tTMggnejr5rr5MqJ+2/WnqNwSKzYsWrEtg
glvY5+EOrWEgvdzTqfeaCQa/JF1s4kfA7fSNT7QBJrjy4tesMR2FjS+rIYvL
hJeEbSlS9FH4Y60ackecBZniovqhNmNwwUtbvVyFBWfUjGhXs8YALI6PaKxn
wdqzvX1XpsagginrWWXCgoN+ryz+syKA8aqTZ9L3saDmFyf44iMClM49DHt3
mAUy1ibpp+kEmCMdOvnTlQV3FluXOBgT4Z2LbeZ1Lxb0KCebmMYSQXPxkhFh
X4O4FboOy3uI8FCs5vO6ABYQgkWk2KvHoeSPwheHQBZwFE3fffQdB6dkzrWi
IBZ8eJd47WLpOGi1u4baCPXor5EwhQUk2PcabJSusGDFxuSxnP1CtqaLuqv4
s6DMQ6Zn7X0SfPZ8ut3+Agt0i/f53e0ngXq25b4vZ1hge3JnEXElGfT/I806
H2fBUpk3lSpnyDBas6lyvR0LvjFWZGx9RYa1+v4TGy1ZEF7fvnMzjQwVDVzS
2S0sOPxm7IWMDgXmDr752bKaBY0B3Or6cxRYTjnu7yHLgqIGrRsuORR4u3Nl
yvpZJiT+U21pIVEgfEXXMw0KE7Zt3hOloEEFR96v+j3fmVDkKuqy8SQVHt3a
vSX1IxM8nGN0V6ZQYaRgk9iyNCYcX/j7x/B3KiwNZh2pDGZC1b3z9+rMaPBS
3vJFsikTskaKtZj+NGDWej79pMyEablfnr0vaRD40VB5AZ8BVqmFs7F9NOje
EcUJbGVAwaxD7JyUkIMzO+bLvmTAs3l9xQYmdCjvwBWt1xlwtSpBXfs8HVZv
XCyWJ+TsTfW3+Ttq6JD19rVMG4cO9mEbfVzYdJAC5XBZpMPnerDbrMwAKZu9
Lr7xdDBW4CsUmzNg/iG7bbQjdCju2KjJ8mJAzeeTd0JW0mEgtprbmsiA3Mff
6DpkGjQwQ4acCxlAn5hfys6lwSG7MLGzPxnAbLQKL9GnwXhqY9WIEhOMl55x
LGNRgWBj7vpzmzCuRLUTrblU2N6w/fvbw0wg3foqzfGgAlvt18Lffkx4Fbt4
WH0lFWxoLzoH45mQkPn3qGs3BUw37Hxv/5IJh/2rZHJuU0CNyV13uIIJuvvo
ub93UEDzytvbxE4myGzsYB6eJMOAT196AYMJUisMYltShXnxNY/w5R8TdjQ+
OMTdQQYh7Q3MU2BBU+7AjmoCCWIU09OCNVlgUqwevPMGCcwOt2uu2cqCvozh
7LOrSbDK336Aa8GCWWvlGCMch46a1X/HDgjzSvLXyY/OwjwPyfakH2MBO33o
xxCXCAoZzmkL3FkAl2R+fbhFhMSoRU1rPVnwi/rb31CVCOZEtvZBb2EdPZh2
Ov+OAJcOMUx9L7KgnnnprL0pAWz26eSGC/W4ypHRifoxmPDeWXlN6B+imlu2
x2EMpFgpbY7C96WlmmmXfhwFk4GHG8WE6yW+0/C89HUE8nf5rY4R7scq+Jhp
Wb2w77CfrGy2FdbV7HeNnKYhiNMvav0OLLj/TU1hT+MgcHJDpm5tYkHV9TXJ
L2oGQJN1/id7pbBvpLzK6C3th/fexmGz0ixwO1b4nfu2Dwz3TTbl8pmw/WmU
uWR6L0h3rS/nDDLhtJJGyuboHrjvI9Pe/JUJddp/BTHe3RBC3eW87TkTlvqH
Llh1oAtiZT0vvnVngmUc43eCRAfIfGha+kFYF89Pu9lmjLbBeidSltlSJlwY
ipdtOvcDVJzDZygVwnyjKlftz20CdYnuFKlkBhg12Uh+M2+Aw6b/9Za6MODa
fh9qdcc3sKN8/dMzRYclEdfNrlC/QvRK7mDPAjqwmu9SPvm9hQWGMsEbqmng
bhfr3mP+DCZtPgQdD6MBjTDucE8hAZ5d+vT4DIcK80T7X/1Z8xh/z0RpNZVT
wDWWG3Yw/gvKFlvNc7og1J8CNGPdv2K4Blt1uzIFzNZ2GjX9qcYT4rPlxj5k
UC4veLjWoAF1Fs9LOCQuzCPps2fKbdrxVuK0+awoAQ5f0Bs0uT6Iy9afXzab
MwY836ltYc+HUHVLrG+IsN/PuauZ8ZuGkdw9VeiiNgp31cTTZIRcW9x0Tlt/
zRDQlC/+uG5FxFN/LLcYru6BkbWWjP3RFFxTrWM2/3Q3uEi9L6OIUXH2yU6V
mWddYNUpEiB7k4rDAWkL0lZ3QuUDRsJsJA0XSBix89a2wcZ8EfGvXgx00iHs
1Uyuhbzq+r82tAk0jd4qzlGtgbrQkzv1D7GRR95jNZ5bBZRfd5P+K2FjgaNY
1Yt7FSB70GTvmqhJbDh1+sYZ/UJYlE7VlYjk4HDDL5uQj/mwgfLj2ayQF2bS
9kgYKORCiMGvvxpDHHzamJ52BR/DousS/81u4WLprv4ExQd3UM/0ijqvn4tB
V/SPHUx6jGWDkyfOzeNhkslji9qdz3HxZMz6JeuEfPmIfTZGLR8PHRj7xf6P
h/5Gy7cr1JeixuewhTN/eXjVZ/yZsU85/nzp9/7nqinkbFWJXyiL+FY6Pkvb
fAq9Q13NqrSq8V7834fKYVNY8fSy1j7beqTNZKgf5Ezh+qp63TvvGtC3ebO7
uAwfQ/pc/32UbsLjt0NMW9bx0cr45pWwry2oo+jSE+HCx0VR6/pVlL/ji2e9
6ZcC+aj3XW5XmM8PTDunL3YxiY+nk6rlGyXbsdJCoiHxCx9Br+6t2vt2vOnh
rFbUxkdHu8w+26Md6FF7aDGFxMdk89SNplmdeP9nSellaQH+zF1XLbDowns3
8FybqgCNxrMuxYx3oVt6yVNjPQH6UTkvV6zpwV/B3Xe22gjw2Gx+2uqqHhTP
KzGpOyZAY19Kn8ClF8O8x+3PegiQtmN728Pfvejs59Ys5yfAwZmRBpEHfSjv
M/es+boAgyaeSBrq9+N513Ut96KFz9fri27+1o9Nd1daeCUK8EQtX23qxAA+
vSr7a99DAU6q+qRd4w7gNvcJqlGGAB/9DBqujhnEn0/dJbZmC3BvjY5Tq/IQ
+vCWHNiRI0BC8eyJ1DdDWOkYWeD4VoArf+sYrDIdRtulAs2gfAG68eqszwjr
YLtH4vOc9wKsnlCZPeU0ggu/HdcgfxCgP/tbuAp5BMV+Gz3YWChAfbd6zVi/
UQxd0Mi9KbSvujC0793MKI42pmxkFgiwu3NmYbWQO46+/mt5Mk+AfWl3O2/G
jOH+15oaA7kCfPZy4fPnDWNI8hVBj5cC7LgwEK+0kIBXLJzlZrMEqF63NZRg
S0DNyNpFT9ME+PL11mCRJAJeYrx9aX9PgOsVTe4FfCfgYW9ok7ktQLuFG58Y
LyZim0FoRG+EAGWnWs4eOkBEO7v9b/IChfeX5jdaGk9EkWtnLe5cEPo3L+7x
bxTafQ4ah7sJcOemc/1B4uOo9zsq5rqDAFMdLj1sshzHD2uTVaJ2CzBN+fJ3
+9Jx/LGxgvJJS4AVVJVlkVPj+Gbnd3HiUmH8LP0mf+qRcI8WxWz5AgFSy2ru
FJ0l4Vjl4lBXDh/9AnKWFmaS8Dv99Zf8IT66rSbFcLtIGGmWOiHdwMe0rX/r
Ly0k4y5Rd8mAQmH+thxMWRVIxm8HtnV4RvNxS+JuY9s3ZFzy3yU/3gVh/l86
1Z43TMZoe8ueOAc+xh3775KoJQUNVdTJg2p8lFdJNJ/6j4KzE1djU0T4ePtj
+hPp5xTcbXmLdnJ8Cnc230p/IULFODcHxqJXU/j6s+rhA/pU3EoRCUu6OYW3
ZSeTlJypWLc8r0TTcwpbU1Of/8ujooPLCafk1VNY8/B8xNJeKjIVQsfO/OPh
lj3a/O3/qBjj+/3IgUEeNt1i78uwpWG61cbLbnd4mLKZG9TmT8PdJooused5
SCkpG//7kIYTtk8K6yx4aOcSEWYwSMNILuVA9CQXx5a6nV8/S8M3qU68Bd+4
eEVqa5OYGh1HDCS/pqVxMU/2tOpuJyGnG1uXSZpzcUNwnnf6ZToKTlu6EuW4
yPE8n/U5mY6xkSMqnUQOLnmvn3U3l47X2Zr6g4UcDP92xEqzmo5nB//0zgj7
59a9IvJe/XRMtO52NrDnYHVmcq7DJB11KR84kSs4+H2fRdfoAgZ2FLws6Oyc
xJUxqSYSSgyMGXuc2OU9idrJZ1Kq1jFw9bMVY+Iik3h7VCVPwpiBjYQP8y7c
Z+P6A1UnOvYy0Kdwbuc8LTYu/brw/fIjDKxI+9Ld+HECqdNDbf3uDIz72MSv
tZzAqU4XUakLDDy85EMJ7zsLWX3DSc8CGFjUsHOzozMLFwWypDOvM3B8utKN
QmBi6+qtRH44AyP7tpi8O8fEXVsdP2TfYODXwPqiFxMM/CQhsuJpDAObzerK
f/gxcGT21XGKUNOeku31eXS031g44xvNwM4t98Mq/IVxuU2eNIhkoElDjn/E
JA1TBPFc3RAGKoaejg68QMN9ujVn7a4wMOm69cGnZCpWJebZPLrIwNSTpwr/
ulBx+QRn0dwpBiZSpKfudVHQ+t6rqMvC8+Ycaqh1tabgjrSK+QIrBt7orj/t
UU7GU9vK7C5vY2A/VfbJK30yDsSRs6lrGHjK1W9qnbBujoTwCnYtYaCx4960
SWkSNlmpN4f8oqPb0O17/wLH8d2We9ybo3RUzigqcSUQcWyminuklo6Px8ua
FGyIqJzTHTX8SpgvbV4B2h8ISI9qvyJ3i44lDokOWYoEPG+wqpPsQUeC1f1/
t66P4XHaRUk7czoetPRX6SkdRUc57TsfhXHwe7hv9InJMNKD3y3NrKGh6fXx
iO7pQbRMnFH9/++fBwa+lJx7P4CFdTrXmjfScK3OOEtdrQ8PVY6cKNxDxfnP
QrJS+zuwhJjgNCNJRa9PdctPPm5HxeRfe/iNFHTx6LrVcqIN1yevoS3aQ0EJ
CTrHr7AZF8W+MItRJ2OyPGd05YMq3PHzxnyxDhIeTa46PG9pJdoOD6hfiSTh
k0vau0f/lqCi4OZF54Fx1ORf23bqdR5GbtIdbr1CRM5QwXGNlofCpulhfUyZ
iJ9lPv22nnsBv2aeTdiWEjBoJo3vIlMApep3RUumx/BQMFmeFVcKtJeM+kU1
I7g7u3+eZ04dXEy47SMr04cvGrNM6wa64IOhiGzVxl7cvnNny4p5PVC2IIV9
+lAP9hWcfd2h2QtuS0aS6Xe7MO3C+gfiHv0Qs8s8uEu6HSOvHLz+Hofh2Oqj
BtEjNeg5MjwjzSEC+9/Lz0NK1aife2X7Y+9xWN71q/LFoa/o2GOvHzQ+DkFf
HnbVJ5aiX9B4o2QbCZSJ5V8z6K+QlEygnXlAgc+jHXtHDr+HRBMtTb9GOkxU
KO+skPoI6ktUj2ltEvJbf2FCX2kxhMk5kn48YMDxB38kU6URPhtslJJwYkKg
bY/xpaI6YL5fx1tYx4LStw3Oy4MaoCBr9+HrahPwucR4o59RE/T8+mJJ9JuA
foUu7568VrCqOj31VIEN/5ae3F1p1AFxIZIfaOaTIPsn6ev+hZ0QeeBXhMGt
SVj1b9k4Z6gTNqg4yl9vngRyvny8z/Vu2NKjsGn+Wg5UqL5SLMvsA69r8gvj
Mjnw0F7WI+5UPzTwvpu+LeHA4VzFTPs1A9BpqjjX2sGBWQ0JUvnTQZhZ7zay
TJQLoffSdWqjRmB2cciRouNc6BL7Q120bRTsVGePjPhwIUtE6YkJdRQK04vF
F0ZwIdGL1pb5bAzkYv+NnX/GhcJjN2+J/RyDbiuWccZ7LjzN1Hc7sZ8ANz/8
e9ZWyQWf1OK4Vg4BNBTeMqGPC7PJO99QLYhwk+45eX2cC9pB9K/Mu0SIO/fD
qmSCC67KkSV9Y0SQXx717+c0F/Kp853yNozDxzG6lsk/LsjMYyeeCx6HMmXH
b2HiPPh7ZCNI1Y9Dlxaf+m0RD5gv89WS5EjAzpZPXSLPA/eVMkTBcRIcHNAc
PKHIA3F51hl4ToKSsp4vb1R4cNyNbn+eQYJQozXms6o8cFZpN/pvExmaD4X6
2q/gAVf/To3TFTKEaFJtc4Q641nwfdVSMmwcmh4TEWqZ1brLS/+QIbN43iYX
4fPW97WrNwo5+OqZfVCuzIPMQyqLw0Ip8FD2t8LKZTw42vfNKVvIL8pTe4ui
ZHmgMiHWlT5DgRtyOasZ0jxIz3hQf9aICq8WEbwOi/Lgv8EOv3kBVEjQUo2r
muWC94OM/gt5VIhkiSVu5nMhwJvyK5tChW8eMsEvGFy4kndm5MVKGnSsOXVi
+RgXpgu1fC8docHdw/JG97u4cJX2JTr4Fg3ehd8vYjZwQdd8/NTlEhpIqMiV
eZVzwUE5ysyJRgO7xszDEgVcoGCRmpYSHTwfOCc1PeUCQenCQN9uOpyRDA34
cJcLb1e4O/v708Hd4LhceSQXWr/NDeytp0OfPLnQzI0LYxqyRyI5dCCr5/YW
2nKhx8fpeoqykA8d1X/aGnOhuYQ8Eg1CflxmoLVQiws4xP5pfZYBH1+rB00s
4cJ7C9ut43EMKCfqLuD/5kBbhxLzQB4DDgzNja0c50Cm7N0/CRwGaI88/kko
5IDxSGnLCVkmZNCkz15P48D81Oc8zgYmPFLcm2QUzoFFXUlp1rZM4C9feUfF
gwOrLQtIp88xoXPLmlvq+zgwEbj4k/ENJqS4Pbpju54DAvFZueYMJpTd2NGU
KcOB730niXItTMi8nBfhnjUJDezEhVUEJhToE86Nu07C9bPpwyunmeCeNZz0
QW0SNMo2XFknxYJMz8DVzX1s8NQOuDewnAXfm/bYb7rPhlf37U4YrGfB8eRr
5oT9bKCIaq7WNxHyfa/8spH5bPhTcVe0YS8Lfth00LVLJmA3bXinyGEWXJi3
o/PLhQm4ZtG0vNOVBbn6S8cyVkyAkSqLuuMcC5Y80FZqamUBSWREf6cfC9Qk
va/uCmHB76BIn/ZAFlScVZiT1GGB+JP4DYJgFgTdvfRoeRcTxHu+yOWEs2DE
66Lx1VAmMPOTykmRLOhz+NqsocWErWMb6W+jWHC7Z8ZEqZkBdlefbJ8R2h0c
3S47XWJAVM/suVbh88mx2hfJcgww4GlJrBGuu+VR06rKQjpcPuVd+ku4/rPS
x5nEQ3RY8iRuYL9wf00yDRKOkzSwMRvpUhHuv3XS6cmSeBokuWS9cROeT+GA
YY2yFg1S0jsuLXcU2svjxC9VUOGknUKvlRULYg8uX6dwmAqE9c80CEYsSDd+
qCtOp0CQQncZeS0L0iy3HLEOoUBCHsPMXpEFjh/+mY/IUIB9Z8l2tQUs0Mu1
JtVlkmF8+0vSbjYTItZ6p4vpkWHmTOa9VGTC5wFtwp1dJDgkOXf+80smeF1N
CCa1jINM9Ola1dtMOB3nbJtxeBzwlNj+ZweYsPti5gdbNyJIKTYNftRjQvOr
2l57IgHaCmo/CqSYwH3scKrtDAFCHj13pFQyIGetarXb6TH4cFyi1jmVATZO
qq16taNw/3TIeYEPA0z8en6xv46AxEZ7zt1lDFhw9d2+ysIhYKR/lGcfoIN1
zqBg9Fof6Hucb9gkrFeTXKkvlp69YC7372PkCA16RC/qvrfvgdYbZ4cOeNHg
3hOlzSrqXUDtbrUrPUWFm+s/PH7l9AP8K3xy7qkKdVmo7DnlVth0kp+T1EmB
RyY+ArWeJvCiBb2U3EkBb//T3R62dbDa8XUlaY4EJMuUaOtjZTARd6bqiAER
5m/876LJ7heor85www4CrEgNnSDZ5uHskVPD0/4EeJf1PrVUuwi3na/ykcwT
nlvz8G5TlXKc/FriG7hhBLzqzkcUD9Xhte+LS/uTekFJghfXSezE1yb3WmY+
9YD4OydJKWoXfjnvZHhwqBumozYm5dO60bfjbMagdhe8nvZ1XEDqxRThYPDw
UxtsWDM6X6l0EO/bVvzdnVQDL2779A2dI+BShz96ee+qwKLb5rruEAGf5+tq
v01BmF++lXNLyIUV586GXVMogT01hn5ndccxu3H/uoQt2bD1wlmOVwsJwWH3
v5rrD+HeC9sl7I1kvMo8ecTB4Tq8UTCMvXyXjO4GqzP11qSicU5GfORBCqr/
/HhI5eZH9O15q5P2noqG7sQDbL0SHOK9WrNSlIZfy3hnSn58QV3p02nZR2io
LXnT79+NKqw75P0+l0dDZSPRv4ueNCBl/PHX/KUMlAu4++ixSxM2nd7fqO/E
QKfxZ/f1lrfga/sdXW/TGLija+vjv3E/MK04pfaFIhMNLzBtlDU6UZ2fOBX7
i4k3Hy4U+zHViaVDmxh/17Ow/I5eS3ltF5464pgc4MLCKetrmzRO9aBCZ+oH
pzIW1qV8s4/X68VPRCe5RjIL9QJ2uspP92LsopMkoyUTWLq80MD9Rj9+oRHu
y56cwD8Hzz1V2zuAnIImi+vhE2j94nDBmKRwDtZTECc+ncDMq1EGOQ2DqHP3
WfXerxOY94X45sLNIZSPsDz6dngCl+/e90THchiHSCkZi35PoJr6JrehP8Oo
8bXF54I8G4uDhn8vPj+KNWnN/9SBjXVetSt3LR7DjqAB1yAHNj6MXnSb4zmG
e8PXxTSdYeP0tej8xMoxDHQy2L48gI0iO8IvKC8jYLiqu7FnBBtHtL0eJ3kT
cGRumVV+PBsHl1RrsysJ+IV8S4n3gI0Lm+isrfJErHwce3pzBhvn2S3+4u5B
xPvZ2b0XnrFx5V9dj0ufiGjwZ3b1sxdsDF2vg65i46hrtZjV9pKN7NcvQvQO
j6OewtPuGaG95Uy+Vc///99zaH7Yymw2miXd63Rmj2OR3Ksw00w2vujI7/lo
TMJ+8zcXDqWw8YKcWDfpBgnFEyY73RLZeFNey5YqzMO7xg4WnlFsDMlPKhYs
ISNRbdk6x0A26l+44fr7EBm3NXgEXT/Hxv5A5nLOPTIeDThRNejERo0NEUW9
HWScM824H7iXjVUGJpw8OQoKpP4F2mxlY1jIy3Q/Owrm6MhMHl3FxviYAJ8V
CRRcIvL42mNJNv6v4XIPpjqBo7hQKoSLlLyTq5raallZk5/dSmWFWquHVN6i
x04qqyUSo9L0UIrchrJ0lcf16EE4dEOeud7K87rv3+/WbfTwutnfn9+ZM985
c+bMmfkIijxVSxtFmD8ruW6kkMOCX6RYqypGVPyZh809ckR67+i87CRG7rEg
0/IKOThzfkRDpBgdRVOhXZly7FcLKR57QvNOatAIM0aO+RWRKf2jYhwdvvOe
c1COeBen39mGEtTZFLFPOMihDI+eaPxXgryplR1xJIWdn14/YBRKkJqTyep6
TeFgpiJt7ZAEE3k6lvvTKZxJdWPqaknhf1F4Qes4hVf/sO9WO0qxPn1v26ct
FL7kdJttDJFi2GPPsnlLKIQvsFYNu0XrVW8dJQZJtLhl1BsIpDjhfaDMOZLE
O69Q/SRNGdoWeCYpnUh46DBuFW6UIcaONy5QJfE0Pv3vFB8ZKpMD0yYaZbBe
MzC0gubv3rIcb9sUGc4ZrJnxZcmgvMfovOguA8Wf+bKzWoYEPlX2g/5rzqvj
mc7QvB5YpuOXJKU5RtA5Z0SigRwsciKkSPQ3Hk34mURxSu4Ph+8SGC1WduXs
JlFt73PFi85BTT03/UgIieSSre8v+UuQ3bRaWBpL631Z8R36EkSPzrjev03i
j3kRhvZvxOAfuL+HwSZx2X2fM+e0GDdR4230isRaiV2pi7kYLuONEbmtJHor
+YSQ5k7fXEH2SzqXQBWtLtZpEbjMbI47SeKb4Pr5kOUirJb+auZH74pFU8Kp
32qEaLPcuF6oRuGb73GTdf5CTNZ+/TiiTWE2N856taoQ0Rk95juXUmC+qA63
fyiA1hjLaZkphYgrQ8Z7nQVQ3j0V42ZFIfOxMSduYBzfO8na/lUUfPOSftSc
HoeGrUt7FZPeqXV1jnqLx5G+O1FFQd/dXoGzUVl8tCex7kbYUHDvrff6uomP
9TZBGbYrKaQ8H3mW8mYMrpv9OszNKLS8WGrr7D2GTZeuGbkZUehjBq/S5Y9C
Ty6czqJ78UtpYNn8k6Ngcz5vNFan/UZvb3JVjCBNKzig5DsJje03nw+qjMBB
u27bYSmJDzccWf3aw7B7Vtu1fIDEKsUl/R1GQ1BbMm001EDntSNbZG86iKnJ
oMSHpSTmzpczys0/oNfzZctRFokv+spGntl7GE8lx5pfJKGj3BXJnO3Hk4W3
lG6BJLbOJ5KievpgNSWuaTcn8Sc3rCQqpgceLh7ZJtMyOJZWPwpy64b11/0F
r3kyRDlU3Kg36EKWXsAGnWgZHlxQHDiV1QGr4Oa35TvpHibf0VSvbccHanSY
YyiDYiDUZbNTKz4mxByufCyF9k9hBxiWjTD055K1BRKwbKyC+kIrMClnCxAq
QTiDp/zPtByqC/u3/GUhQbrP65X69wuhm+GkH3tVjKsmZZMrTt5EnJXngqht
Iqj05B8UR5YQx1dUiIbkQugWxX/OG3xOqDgbBASmCRE4IeUMb68iGFey+KYj
ArhdyT8WnMIlbNO4PjlHxmHwYtOGfZ7tBNs6Uctrlo+Qs6ar3sV2EOpVPIP6
e3xMxy40LuzkEWefcu0PtYzh7SOB3feobmKX3m2LY8xRDETvKEgvGCAszi0P
O5U0AKiwa3d1jBGp8Ijflt+Pj71VXz6G8YlKRr5nc2sfuNq6mRNzfIL5bbjK
Vb8XapqnlZ9tBUS9ScsZ7+xOrAxPCGoIFhHOltcyFr3h4e0im4ZghYgodyzm
aUk60MYpvmEVLSYW3bRZGB7QDhPnoyXDiRKiSNO/SVjQCr2lB692a0gJWVuB
g/9kM3Kotpruy1LC+pG+lWJbE+B+gvtBQ0b479I+lJPaiGrz6hhRooz4Hwah
udo=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$18048, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$18048#1"]& ]}}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True}, 
       AxesLabel -> {
         FormBox[
          SuperscriptBox["\[Phi]", "\[Prime]", MultilineFunction -> None], 
          TraditionalForm], 
         FormBox["\[Psi]", TraditionalForm]}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "ScalingFunctions" -> None}, 
       PlotRange -> {{-0.8917338010485535, 
        0.8909511141237147}, {-1.3560024061003457`, 1.3782096327354607`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"1\""}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], "]"}], "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
      Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
      Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
      "\"untitled\"", Typeset`specs$$ = {{
        Hold[$CellContext`a$$], 0, 30}}, Typeset`size$$ = {
      450., {190., 197.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
      Typeset`skipInitDone$$ = True, $CellContext`a$18218$$ = 0}, 
      DynamicBox[Manipulate`ManipulateBoxes[
       1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
        "ControllerVariables" :> {
          Hold[$CellContext`a$$, $CellContext`a$18218$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, 
        "Body" :> $CellContext`drawWing[
          Part[$CellContext`sols, 1], $CellContext`a$$], 
        "Specifications" :> {{$CellContext`a$$, 0, 30, AnimationRepetitions -> 
           1, DefaultDuration -> 30, 
           AppearanceElements -> {
            "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
             "DirectionButton"}}}, 
        "Options" :> {
         ControlType -> Animator, AppearanceElements -> None, 
          DefaultBaseStyle -> "Animate", DefaultLabelStyle -> "AnimateLabel", 
          SynchronousUpdating -> True, ShrinkingDelay -> 60.}, 
        "DefaultOptions" :> {}],
       ImageSizeCache->{511., {238., 245.}},
       SingleEvaluation->True],
      Deinitialization:>None,
      DynamicModuleValues:>{},
      SynchronousInitialization->True,
      UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
      UnsavedVariables:>{Typeset`initDone$$},
      UntrackedVariables:>{Typeset`size$$}], "Animate",
     Deployed->True,
     StripOnInput->False],
    Manipulate`InterpretManipulate[1]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.758872280050231*^9, 3.7588723347509184`*^9, {3.7588723894935484`*^9, 
   3.758872455533968*^9}, 3.758873083534842*^9, {3.7588731505157776`*^9, 
   3.7588731827156544`*^9}, 3.7588732329215*^9, {3.75887328799125*^9, 
   3.7588733474821014`*^9}, {3.7588734270085473`*^9, 
   3.7588734346550183`*^9}, {3.7588736398906617`*^9, 3.758873652184871*^9}, {
   3.7588736931533794`*^9, 3.7588737743442283`*^9}, 3.7589704674030285`*^9, 
   3.758970654121313*^9, {3.7593106524879436`*^9, 3.7593106681794395`*^9}, 
   3.7851628524268827`*^9, 3.785162926348107*^9, 3.785163043538539*^9, {
   3.7852435023740625`*^9, 3.7852435232731843`*^9}, 3.7852437305684443`*^9, 
   3.7852440356513777`*^9, {3.7852441043430486`*^9, 3.785244210015951*^9}, {
   3.785244242217107*^9, 3.785244271118507*^9}, 3.7852443574106984`*^9, 
   3.7852450463135014`*^9, {3.7852456064819465`*^9, 3.7852456296292934`*^9}, 
   3.7852507977379675`*^9, 3.7852509069239635`*^9, 3.785252912158183*^9, 
   3.7852531671287184`*^9, 3.785253210422945*^9, 3.7852532626277757`*^9, {
   3.7852537637628202`*^9, 3.7852538088500366`*^9}, {3.7852541114975405`*^9, 
   3.785254133831778*^9}, 3.78525424249282*^9, 3.7852542771054907`*^9, 
   3.785261258021784*^9, 3.785262076859126*^9, 3.785262163426772*^9, 
   3.7852624801405516`*^9, 3.7852631846830416`*^9, 3.785263302406492*^9, 
   3.7852633631776466`*^9, 3.7852635134671392`*^9, {3.7852635741211967`*^9, 
   3.7852635893176556`*^9}, 3.785263851611332*^9, {3.7852639664179106`*^9, 
   3.7852639873723183`*^9}, 3.7852641204463067`*^9, 3.785264158743861*^9, {
   3.7852641992874966`*^9, 3.7852642276409445`*^9}, {3.7852643182265663`*^9, 
   3.7852643493376245`*^9}, 3.7852644089011292`*^9, {3.785264520063408*^9, 
   3.785264539752267*^9}, 3.785267409528537*^9, 3.7852681749202657`*^9, 
   3.7852697630160265`*^9, 3.7852699982707105`*^9, 3.785534749843243*^9, 
   3.7855385258230906`*^9, 3.7855385721228037`*^9, {3.7855386068082347`*^9, 
   3.7855386238566217`*^9}, {3.7855386555543323`*^9, 3.785538751666424*^9}},
 CellLabel->
  "Out[135]=",ExpressionUUID->"af1005be-949c-4ed0-b130-e9fc56650759"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{985, 1241},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 228, 4, 67, "Subsection",ExpressionUUID->"e64cb84f-de9f-4b90-a5e9-1ea323c30588"],
Cell[811, 28, 53162, 876, 112, "Text",ExpressionUUID->"64d0d6bf-1eab-41bc-a7cd-251369f4e925"],
Cell[53976, 906, 24888, 610, 2523, "Input",ExpressionUUID->"7405a249-8e74-42ba-8cb9-4ad6b37b789b"],
Cell[78867, 1518, 9415, 243, 569, "Input",ExpressionUUID->"b8b499bb-9d2f-4be1-820a-74f2d72ede84"],
Cell[88285, 1763, 9134, 211, 693, "Input",ExpressionUUID->"51dba8ce-d54e-473b-8306-f61498bec997"],
Cell[CellGroupData[{
Cell[97444, 1978, 6346, 126, 324, "Input",ExpressionUUID->"3bbaf733-b67e-4179-9c2d-703a445bf966"],
Cell[103793, 2106, 494976, 8743, 1315, "Output",ExpressionUUID->"af1005be-949c-4ed0-b130-e9fc56650759"]
}, Open  ]]
}, Open  ]]
}
]
*)

