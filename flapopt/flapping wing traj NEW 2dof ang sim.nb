(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    608583,      11151]
NotebookOptionsPosition[    607130,      11119]
NotebookOutlinePosition[    607503,      11135]
CellTagsIndexPosition[    607460,      11132]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["2DOF angular - 3D ambient", "Subsection",
 CellChangeTimes->{{3.758808037911851*^9, 3.7588080500165825`*^9}, {
  3.7851630712097263`*^9, 
  3.7851630750113926`*^9}},ExpressionUUID->"e64cb84f-de9f-4b90-a5e9-\
1ea323c30588"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQeUVUXW9/2uz3HEBJIzKEiQLEFAUECSBMlBoiJBsgISJOcMknMUJeec
JGcQAYmiAyIiGGbG55nnHbtv6Pf33f9z9jrc29xumm7C2Hsteh3OPadO1a4d
/rtqV9UL731Qp83/93/+z//ploQ/dVr0LNe1a4uP6z7Hf+p37tbu/c6tW1Xp
/FHr91t3LfHeY9xsxL/LPP//X0c9muTz+Twezz/+8Y/vvvuufPnyX3311f/8
z/+cPn36b3/7W0REhN/v9znk9XojIyP5yzX3ueYB/st1vNdKX+ET/P3jjz/+
/ve/jxs3buTIkf/1X//Ff+P9c480WR+JaSJ3x7l/etCVjZn8AYrNY0F31Eb7
ye+iOJR/p4+Kme7/+kNISqEn3XeCPm195H7AEyD96g2QHuCmuxDdDK2YPSO9
ttfdzLFn0C/7lu5zJ6gy9q1/B4g7//rXv/75z39iMX755Zcff/zxxo0bvwaI
/167du2HH374+eefz549e+LEiT179hw+fPjChQsHDx5ct27drl279u7du2PH
jv379/OXXw8dOvTFF1/s3r17+/bta9eu5ZrHjh079s0331y9epXCUfz/GyC0
XnVzt0sX+mt3eDgyQLzCNfcxU1xQeXdLE8JqJVK8k1tlHmyXyRkhYIjTzp07
+/Tpg9BKLBP602hB7ty5H3vssVGjRoX/nGSbGq5atSqha5VARP3hKkaGJjRv
3vzy5cvw+cCBA1iDh0dn6QVsIFaOqsqEJtKdSNZY3gTJfNDVuWsyHx2G3L7e
XIyMAz9FOCSHG1Sa+07Qp8N8UY4PEg6350Mhn57xOGS/2gPuJphvFbbnv7QC
16nK21+BcwsHVLKu3cW6vyiPDPE6BUpx+Pvf//3fKDvA/qeffrp58yZAgkhE
oIIY5Msvvzx//vylS5cITPbt24cp4M65c+e4iU04evQoUOHIkSNcnzx5Elyx
ceNGUMSpU6cIYb7++mu9DizhJ2EPvUIJXPATKszfb7/99vvvv+ejv/322++/
/y4IES1miw1Z16gc4imVSav1Fw7QZO7Hj4Am0n0kC6OkMg+wJv9yCBdJ5J4k
SZKGDRsiVPchQEa269at+/jjj48YMSIME9yGccOGDQldqwQixT6ocLt27apV
qzZ69GiQCbZClu1B1+5/SbGbjZk86Oo81CSEjM1Hd+4Deo93ChrhiRaNBA3+
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
Au+9nganr169SkdQ26NHj8JYRCVoD5nYkw0/iuduJ3XvFU6k+0MaLM2fPz8A
9UHX5U9Nsleo0uHDh+fNm4dbsUNe4jbv/+chreVctWoVTjlz5swjR47E92lF
+YULFyZPnvzGG2+AH+CqZZBiANevX79w4UKAyogRI1q0aFGmTBni5QULFig3
IMznNIlA8A4gCYMVhUbkXo8fP16hQoXatWtXqlQJ804IwB00LkOGDJj6vn37
pk2bFnfsu8N+6XcqPzKwidDy5ctx91oxFxHdvtmnT5/mW3h87Y7iczIt4+yw
eJ0AvFixYgUKFIDVtkSIygMA8FxPPPEEEKt48eJ169atU6cOKLFt27Y08Kef
fhK0sCwawTMwDI9RT8EMHYdE1IxdAtucPHnS65yHCBqBhzY0QWdRk0jnLCRh
eO1VsnXr1oEDBy5duhRuB8E8jWN88cUXVBJvCDhRAmpQFmjQcKXWGA4ePBis
lSRJkooVKyotR0KlT/OXm9o3yTJqVE+hUANjceN8jER9+vfvD/6kUff+FZ+T
40RXAnJoV3wNOPgcokzEY9euXeCQxo0b16pVK2hJdezJnRnuBlRxXgeUSPeZ
pGgETa+99tqoUaMedHX+1CRDunLlyvr16+M98apmXeMrevpPJaLRKVOm4B/T
pEnTs2fPGzdu2IA5xg1/tHjxYkw0RhWHKHul3UJAI5MCRECNJ7106ZK2Ng1v
chUndunSJU+ePETfd3pM8zLamQfAA4DBRTZt2pTq7d69GyNMPIhv/eyzz779
9luKQgflqWPZarVRRzTK/RkF1R9XeP78+T59+gAVBgwY4D46OZbfCuUAraPA
Z555ZtmyZRooEJqiOa1aterRowcoa9y4cRs2bNBRTaAmHX/mc3LPRELdwCp4
Qk9pJ1jQGp0COEQXnn322Q4dOvDr/v37hwwZkjx58sqVKyuLXmOJ6mhb1SKV
EUbSPoqRIfvn29gFCA0/u3nzZr0Sup2agQefc6QF0Pf9999PmjRpqlSpjh07
ptxpvUtHL1myZO7cuVQe7CT9pQ6ff/75oEGDxo4dC2hU1k3CTcVSLEwDyIVP
4Y4N2RAWjAJ709fKrYoX/+5zbeVEtyIbcBLIWrBgQXB13Mq0LbX37Nlz9uxZ
jdr5Qvb5T6SHlvzOgkd0fPbs2Q+6On9qQpv27dtHnE7IRlRI7InpU5JP4pBj
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
NgWvYqCIXOrWrdu5c+eZM2du2bJF4zAJVOH/PKILlixZorM14apiVYz/wYMH
Xw3QgQMHIp1Tw+L8ifitcyLdB7LAymYEzNy5A3OLUjXMKPOIJbHD3y9cuHD4
8OGtW7cuW7Zs2rRp06dPB+jOmTNn8uTJXI8ePRoE0rFjx/r16xM2vvHGG7t3
7w6qiddZe5I5c+ZevXp5Aoe/xG+U5wssGNSpu/hfPlS5cmWiGzDS7Nmz9+3b
d/XqVZoTv2uNH2byOxuF0TVPPvnkV199ZdNAfx51xhgiabt27frggw+qVKnS
p08fYitLo41lIZr1e+WVV5InT44goSAIFQEgRYV5C20qWrRo7ty5g2ZY+O78
+fOTJk0KRNRoFYWjazdv3vwmQLZ4855afs+kXCZAF8BpwoQJ6HWWLFmqVasG
rkOPNFgXHiVqhAowo+NEH06pUyAjM0hETyAzcODApUuXHjt2DNMneyg9etA1
fZQIYwvqrlSp0qlTp27cuHHr1q3FixfXqVMnT548XGjqWaNJD7qmiXT/yMY0
bCJYwEOQI9I5Re7XX39F9c6fP79t2zZMpZDGsGHDgBmoZ4cOHd59991atWrp
2NlsAcqXLx+xUlaHChYsCO4tX748McXGjRuDUtCjbgckOAVNyocmG9wLaUZD
e1ZUrVq1Z8+eIKjLly9r53YdLqNwL76++JCTJdXgiNOlS6czZf6I6dSt/zBC
FDGGgwcPbtmyJShap+NFm/wQhmAjgBwIgZwrlwbtAHujOGHe+v3333mmZMmS
oYAEK41lLl269Ny5cwH5U6ZM6d2790cffdS9e/fly5fbYsm4Nzs+iGrglKlV
o0aNEKEGDRqMGTNm7dq1mzdv1kaCMfLQHQfFmC3zoMjvHMOhmUGwk47e+8M5
NleTQaFHzyRSGIJvRAFITrt27QB4uBIcBFJEAItFkjAIBz7omibS/SObvvQ4
p+cgDL/99htGdd26datXr545c+bw4cPx3aCO1q1bN2zYsHbt2lyAQJo3b67z
3Nu0aYOLx1QCJDDswwNEhIhN1gVmat68eRhS4gsAgLQ42poIkPTv318T+vGb
1Cqjh508evTooUOHfvrpJ0shUIqackEfuJ2/b+RzFjO+/PLLhLdSfw22P5yu
ISEIDiDwu3fv1lYqfte+AeFfFIvkp+DhBx988NRTT2FdheGR+QIFCoRPkMa1
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
MjfsXRup0IUOu8dIAgBwcASYoAV8PTDgwoULeDGcAvZZATgYg2ssOfaTB667
6FKAABhnz57lgodxEFyDKCift3TiFaEiv4I9eADUcerUqePHj3NBCRQuEKL9
oLRDFD9xn1odO3aMYJlf+QmcY7tFaZcDUA2uGbfCRyn5WoD4lXYBVyzfWPkG
cgduTtrGWV5XhqSb7Oxd94ySu3fcHWFiYHfcM1AeZxsHnysr0vrLHrM8QA0I
IE60ncZqYcWqVatAGhMnTgR4TJo0SVtvgUmWLFmyc+dOWMHzaq99SEJlYb4+
6k55DZqA892e7WPPU5nevXvny5cP3sbXRIPfSVykwo0aNSpVqtS2bdsQwojA
4ezqL/ULgrR58+Y+ffpUqVIF/WrduvWsWbMQEtvb34Ya3G0J+px2KdGMT8+e
PQkc+GjBggVLly69adMmWOcefLOGx22EBC5VqFAhW7ZsHTp0QNTde0FTASBi
zZo106VLR6PUWZ673A4ukRKCLO2KvsuePbupSSJQTKRHjvyB8We8do4cOTp3
7hy3QtxTFbpwn/PrvjC/5j4LWJYc6/3rr78KD+Cd8e84caw3zpq/gAoqiZu7
HCCgAp59z549/KQRD2AA93lAWzqAQPD1vKWtkGyAQqT0QhpO4Cy/r/u2p4T8
oxL+bW8BKql9Jm1UXM9oNcf/DZAOmaIVlKwP/Rag/9femcf5XK7//49TJIka
axzbQ6FCKJSYiCLryC6SLYbQIWMZk+xkLNlmZBk7Y1B2o0ZoLNnLLrK0kHN0
+nb+OJn5fPyev8/rvO/H7fMZY0xjhnpff3we73nP+32/7+W6r+t1Xfd1Xzdm
Mr+0CDmPCgbbKN0ldQbzHPMRbaH+VFswhscANrQU5IOm0H16hnKM1awU36bn
jWdAriGDVbxW2EyS79RRY5sb4Gdf2OtTQkfmRY+z2UqF8CHaSOsYr8TERGz/
eT5auHAhynf48OHgkMWLF69YsSIuLg58sn//fgZLMDIT0kZR1alTp6LEjbPl
j5epXhIsXLt2LRMHvEED0dfiB/oEcDt37lywEHAF5NCyZcthw4YBmOUfS76d
2GbNFw0BTNK6detcuXJVqVJl2bJlGX5+AWw8cODAcePGAacN2DBEzWNjY4OC
gkJCQsyhmS4gyXLSQiS/L7/8cvHixW0LxcUkLt1bJOWCqKlWrVrjxo3TXYht
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

    "], {{0, 89}, {731, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{731, 89},
  PlotRange->{{0, 731}, {0, 89}}]], "Text",
 CellChangeTimes->{3.785534731477183*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"64d0d6bf-1eab-41bc-a7cd-251369f4e925"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Rspar", "[", "\[Phi]_", "]"}], ":=", 
   RowBox[{"RotationMatrix", "[", 
    RowBox[{"\[Phi]", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Rhinge", "[", "\[Psi]_", "]"}], ":=", 
    RowBox[{"RotationMatrix", "[", 
     RowBox[{"\[Psi]", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Assumption", " ", "Rcop"}], ",", 
    RowBox[{"x", " ", "=", " ", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["r", "^"], "1"], "R", " ", "in", " ", "Chen", 
      RowBox[{"(", "2016", ")"}], " ", "eq", " ", 
      RowBox[{
       RowBox[{"(", "5", ")"}], ".", " ", "Ixx"}], " ", "from", " ", 
      "\"\<incorporate R\>\"", " ", 
      RowBox[{"notes", "."}]}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wingsubs", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"R", "\[Rule]", 
       RowBox[{"Aw", "/", "cbar"}]}], ",", 
      RowBox[{"ycp", "\[Rule]", 
       RowBox[{"R", " ", 
        SubscriptBox[
         OverscriptBox["r", "^"], "1"]}]}], ",", 
      RowBox[{"Ixx", "\[Rule]", 
       RowBox[{"(*", 
        RowBox[{"mwing", " ", 
         RowBox[{"ycp", "^", "2"}]}], "*)"}], "0"}], ",", 
      RowBox[{"Izz", "\[Rule]", 
       RowBox[{
        RowBox[{"cbar", "^", "2"}], 
        RowBox[{"\[Gamma]", "^", "2"}], "mwing"}]}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", " ", "nonlin", " ", "transmission"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Tau]inv", "[", "\[Phi]o_", "]"}], ":=", 
    RowBox[{
     RowBox[{"\[Phi]o", " ", 
      RowBox[{"ycp", "/", "\[Tau]1"}]}], "-", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Phi]o", " ", "ycp"}], ")"}], "^", "3"}], 
      RowBox[{"\[Tau]2", "/", 
       RowBox[{"(", 
        RowBox[{"3", 
         RowBox[{"\[Tau]1", "^", "4"}]}], ")"}]}]}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "draw", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"drawWing", "[", 
     RowBox[{"sol_", ",", "a_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"pspar", ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"A", " ", "wing", " ", "in", " ", "local", " ", "fram"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"polyverts", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "R", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "R", ",", 
             RowBox[{"-", "cbar"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "cbar"}]}], "}"}]}], "}"}]}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pspar", "=", 
        RowBox[{
         RowBox[{"Rspar", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "R", ",", "0"}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Transform", " ", "to", " ", "world", " ", "frame"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"polyverts", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Rspar", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ".", 
           RowBox[{"Rhinge", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], ".", 
           RowBox[{"polyverts", "\[Transpose]"}]}], ")"}], "\[Transpose]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Graphics3D", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"Thick", ",", "\[IndentingNewLine]", 
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "pspar"}], 
                 "}"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Polygon", "[", "polyverts", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Opacity", "[", "1", "]"}], ",", "\[IndentingNewLine]",
                "Blue", ",", "\[IndentingNewLine]", 
               RowBox[{"Arrow", "[", 
                RowBox[{"{", 
                 RowBox[{"paero", ",", 
                  RowBox[{"paero", "+", 
                   RowBox[{"1", "Faero"}]}]}], "}"}], "]"}]}], 
              "\[IndentingNewLine]", "}"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"FaceGrids", "\[Rule]", "All"}]}], "]"}], "/.", "sol"}], 
          "/.", 
          RowBox[{"t", "\[Rule]", "a"}]}], "//.", "wingsubs"}], "/.", 
        "params"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"plotTrajs", "[", 
     RowBox[{"sol_", ",", "t2_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"t1", "=", 
         RowBox[{
          RowBox[{"t2", "-", 
           RowBox[{"Ndt", " ", "dt"}]}], "/.", "params"}]}], ",", 
        RowBox[{"FD", "=", 
         RowBox[{"Faero", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\[Phi]mag", "=", 
         RowBox[{"First", "@", 
          RowBox[{"FindMaximum", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"\[Phi]", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
              RowBox[{"t1", "\[LessEqual]", "t", "\[LessEqual]", "t2"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"t1", "+", "t2"}], ")"}], "/", "2"}]}], "}"}]}], 
           "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\[Psi]mag", "=", 
         RowBox[{"First", "@", 
          RowBox[{"FindMaximum", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"\[Psi]", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
              RowBox[{"t1", "\[LessEqual]", "t", "\[LessEqual]", "t2"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"t1", "+", "t2"}], ")"}], "/", "2"}]}], "}"}]}], 
           "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"avglift", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Faero", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "/.", "sol"}], "//.", 
               "wingsubs"}], "/.", "params"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "t1", ",", "t2"}], "}"}]}], "]"}], "/", 
           RowBox[{"(", 
            RowBox[{"t2", "-", "t1"}], ")"}]}], "*", 
          RowBox[{"1000", "/", "9.81"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\[Sigma]amax", "=", "0.35"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<\[Phi]mag=\>\"", ",", "\[Phi]mag", ",", "\"\<, \[Psi]mag=\>\"", 
         ",", "\[Psi]mag", ",", "\"\<, avglift=\>\"", ",", "avglift"}], "]"}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[Tau]inv", "[", 
              RowBox[{
               RowBox[{"\[Phi]", "[", "t", "]"}], "/.", "sol"}], "]"}], "//.",
              "wingsubs"}], "/.", "params"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\[Sigma]act"}], ",", 
           RowBox[{"GridLines", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "\[Sigma]amax"}], ",", "\[Sigma]amax"}], "}"}]}],
              "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Phi]", "[", "t", "]"}], "/.", "sol"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\[Phi]"}], ",", 
           RowBox[{"GridLines", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "\[Phi]mag"}], ",", "\[Phi]mag"}], "}"}]}], 
             "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Psi]", "[", "t", "]"}], "/.", "sol"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\[Psi]"}], ",", 
           RowBox[{"GridLines", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.24"}], ",", 
                RowBox[{"-", "\[Psi]mag"}], ",", "\[Psi]mag", ",", "1.24"}], 
               "}"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Faero", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "*", 
               RowBox[{"1000", "/", "9.81"}]}], "/.", "sol"}], "//.", 
             "wingsubs"}], "/.", "params"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<FL [mg]\>\""}], ",", 
           RowBox[{"GridLines", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", "avglift", "}"}]}], "}"}]}], ",", 
           RowBox[{"Filling", "\[Rule]", "avglift"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"FD", "*", 
               RowBox[{"1000", "/", "9.81"}]}], "/.", "sol"}], "//.", 
             "wingsubs"}], "/.", "params"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<FDx [mg]\>\""}]}], "]"}]}], 
        RowBox[{"(*", 
         RowBox[{",", "\[IndentingNewLine]", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Tau]act", "/.", 
              RowBox[{"c2", "[", "]"}]}], "/.", "params"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "u"}]}], "]"}], ","}], "*)"}], 
        "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"debugComponentsPlot", "[", 
     RowBox[{"sol_", ",", "t2_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"stiff", ",", 
        RowBox[{"t1", "=", 
         RowBox[{
          RowBox[{"t2", "-", 
           RowBox[{"Ndt", " ", "dt"}]}], "/.", "params"}]}], ",", "M", ",", 
        "inertial", ",", "Mdiag", ",", "inc", ",", "ic"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"stiff", "=", 
        RowBox[{"D", "[", 
         RowBox[{"L2", ",", 
          RowBox[{"{", "q", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"M", "=", 
        RowBox[{"D", "[", 
         RowBox[{"KE", ",", 
          RowBox[{"{", 
           RowBox[{"dq", ",", "2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"inertial", "=", 
        RowBox[{"M", ".", "ddq"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Mdiag", "=", 
        RowBox[{"DiagonalMatrix", "@", 
         RowBox[{"Diagonal", "[", "M", "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"inc", "=", 
        RowBox[{"Mdiag", ".", "ddq"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ic", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M", "-", "Mdiag"}], ")"}], ".", "ddq"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
           RowBox[{"inertial", "//.", "wingsubs"}], "/.", "params"}], "]"}], 
         ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"inertial", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<i\>\""}], "]"}],
                    ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"stiff", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", 
                    RowBox[{"\[Tau]damp", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "\"\<g\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"\[Tau]aero", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<aero\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"\[Tau]inp", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/.", 
                    RowBox[{"c2", "[", "]"}]}], ",", "\"\<act\>\""}], "]"}]}],
                   "\[IndentingNewLine]", "}"}], "/.", "sol"}], "//.", 
                "wingsubs"}], "/.", "params"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                "Dashed"}], "}"}]}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"i", "\[Equal]", "1"}], ",", "\"\<stroke\>\"", ",", 
                "\"\<hinge\>\""}], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "2"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"inc", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<inc\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"ic", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<ic\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"inertial", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<itot\>\""}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"stiff", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<gtot\>\""}], 
                    "]"}]}], "\[IndentingNewLine]", "}"}], "/.", "sol"}], "//.",
                 "wingsubs"}], "/.", "params"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "Automatic", ",", "Automatic", ",", "Dashed", ",", 
                "Automatic"}], "}"}]}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"i", "\[Equal]", "1"}], ",", "\"\<stroke\>\"", ",", 
                "\"\<hinge\>\""}], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"aeroForce", "[", 
     RowBox[{"{", 
      RowBox[{"\[Phi]_", ",", "\[Psi]_", ",", "d\[Phi]_", ",", "d\[Psi]_"}], 
      "}"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sparVecB", "=", 
         RowBox[{
          RowBox[{"Rspar", "[", "\[Phi]", "]"}], ".", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ",", 
        RowBox[{"(*", 
         RowBox[{"vector", " ", "along", " ", "wing"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"chordB", "=", 
         RowBox[{
          RowBox[{"Rspar", "[", "\[Phi]", "]"}], ".", 
          RowBox[{"Rhinge", "[", "\[Psi]", "]"}], ".", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}]}], ",", 
        RowBox[{"(*", 
         RowBox[{"wing", " ", "chord", " ", "unit", " ", "vector"}], "*)"}], 
        "\[IndentingNewLine]", "le", ",", "ne", ",", "pcopB", ",", 
        "rcopnondim", ",", "\[IndentingNewLine]", "eD", ",", "eL", ",", 
        "\[Alpha]", ",", "paero", ",", "Caero", ",", "Faero"}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Leading", " ", "edge", " ", "velocity", " ", "direction"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"le", "=", 
        RowBox[{"Cross", "[", 
         RowBox[{
          RowBox[{"d\[Phi]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ",", 
          RowBox[{"ycp", " ", "sparVecB"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ne", "=", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"le", ".", "le"}], "]"}], "+", "\[Epsilon]aero"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"COP", ":", " ", 
         RowBox[{"nondim", " ", "from", " ", "Chen"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"rcopnondim", "=", 
        RowBox[{"0.25", "+", 
         RowBox[{"0.25", "/", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Exp", "[", 
             RowBox[{"5.0", "*", 
              RowBox[{"(", 
               RowBox[{"1.0", "-", 
                RowBox[{"4", "*", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Pi]", "/", "2"}], "-", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"\[Psi]", "^", "2"}], "]"}]}], ")"}], "/", 
                  "\[Pi]"}]}]}], ")"}]}], "]"}]}], ")"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pcopB", "=", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "d"}], "}"}], "+"}], "*)"}], 
        RowBox[{
         RowBox[{"ycp", " ", "sparVecB"}], "+", 
         RowBox[{"rcopnondim", " ", "chordB"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Lift", "/", "drag"}], " ", "directions"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"eD", "=", 
        RowBox[{
         RowBox[{"-", "le"}], "/", "ne"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"eL", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Aero", " ", "force", " ", "calculate"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{
         RowBox[{"\[Pi]", "/", "2"}], "-", "\[Psi]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"paero", "=", 
        RowBox[{
         RowBox[{"Rspar", "[", "\[Phi]", "]"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "ycp", ",", "0"}], "}"}], "+", 
           RowBox[{
            RowBox[{"Rhinge", "[", "\[Psi]", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{
               RowBox[{"-", "rcopnondim"}], " ", "cbar"}]}], "}"}]}]}], 
          ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Caero", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"CDmax", "+", "CD0"}], ")"}], "/", "2"}], "-", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"CDmax", "-", "CD0"}], ")"}], "/", "2"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", "\[Alpha]"}], "]"}]}]}], ")"}], ",", 
          RowBox[{"CLmax", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", "\[Alpha]"}], "]"}]}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          SubscriptBox[
           OverscriptBox["r", "^"], "2"], " ", "from", " ", "Whitney", " ", 
          "2010", " ", 
          RowBox[{
           RowBox[{"(", "2.23", ")"}], ".", " ", "Assumes"}], " ", "Rcopx"}], 
         "=", 
         RowBox[{
          RowBox[{"ycp", " ", "stays", " ", "constant"}], " ", "-", " ", 
          RowBox[{"OK", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Faero", "=", 
        RowBox[{
         RowBox[{"1", "/", "2"}], "\[Rho]", " ", 
         RowBox[{"d\[Phi]", "^", "2"}], " ", "cbar", " ", 
         RowBox[{"R", "^", "3"}], " ", 
         RowBox[{
          SubscriptBox[
           OverscriptBox["r", "^"], "2"], "^", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Caero", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "eD"}], "+", 
           RowBox[{
            RowBox[{"Caero", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "eL", " ", 
            RowBox[{"Sign", "[", 
             RowBox[{"-", "d\[Phi]"}], "]"}]}]}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"paero", ",", "Faero"}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Psi]", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Pi]", "/", "2"}], " ", "-", " ", 
       RowBox[{"CD0", " ", "should", " ", "remain", " ", "in", " ", 
        RowBox[{"drag", ".", "\[IndentingNewLine]", "Need"}], " ", "to", " ", 
        "check", " ", "lift", " ", 
        RowBox[{"sign", ".", " ", "Trying"}], " ", "to", " ", "coincide", " ",
         "with", " ", "2", "D", " ", "sim", " ", "results", " ", 
        RowBox[{"https", ":"}]}]}], "//", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"github", ".", "com"}], "/", "avikde"}], "/", 
           "robobee3d"}], "/", "issues"}], "/", "88"}], "\[IndentingNewLine]", 
        RowBox[{"i", ".", "e", ".", " ", "when"}], " ", "stroke", " ", 
        "vel"}], " ", ">", " ", "0"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"hinge", " ", "ang"}], " ", "<", " ", 
     RowBox[{"0", " ", "for", " ", 
      RowBox[{"lift", "."}]}]}]}], "\[IndentingNewLine]", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"aeroForce", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Pi]", "/", "4"}], ",", 
          RowBox[{"-", "1"}], ",", "0"}], "}"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "//.", "wingsubs"}], "/.", "params"}], 
    "//", "Simplify"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.785163733169914*^9, 3.785163768788862*^9}, {
   3.7851638219331465`*^9, 3.7851638221495667`*^9}, {3.7851638575914416`*^9, 
   3.7851638656639175`*^9}, {3.785163952461292*^9, 3.785163959194874*^9}, {
   3.785181113450061*^9, 3.7851811849114933`*^9}, {3.785181223420051*^9, 
   3.7851814480879383`*^9}, {3.7851815284493275`*^9, 3.785181574334261*^9}, {
   3.785181607927892*^9, 3.7851818562133703`*^9}, {3.785181897023181*^9, 
   3.785181973204109*^9}, {3.7851820183846817`*^9, 3.785182035584442*^9}, {
   3.785182130927059*^9, 3.7851822788151007`*^9}, {3.785182768706132*^9, 
   3.785182824611698*^9}, {3.7851835377984476`*^9, 3.7851835381465435`*^9}, {
   3.785183574632366*^9, 3.7851838963880434`*^9}, {3.785183935005065*^9, 
   3.78518393938645*^9}, {3.7852369154777946`*^9, 3.7852369276973515`*^9}, {
   3.785237068661893*^9, 3.785237159502931*^9}, {3.7852390830870667`*^9, 
   3.785239105554223*^9}, {3.785239223653453*^9, 3.785239230566188*^9}, {
   3.785239332872146*^9, 3.7852394831645365`*^9}, {3.785239522904046*^9, 
   3.785239527846*^9}, {3.785239574459278*^9, 3.785239590976102*^9}, {
   3.785239663394473*^9, 3.785239765859336*^9}, {3.785239822253582*^9, 
   3.785239852287075*^9}, {3.7852411853333817`*^9, 3.7852412095104837`*^9}, {
   3.7852412747392893`*^9, 3.785241284555241*^9}, {3.785242577855811*^9, 
   3.7852426072696886`*^9}, {3.785242760532243*^9, 3.785242764687683*^9}, {
   3.785243042341342*^9, 3.785243082387663*^9}, {3.78524369984238*^9, 
   3.7852437033492184`*^9}, {3.785243878758131*^9, 3.7852438818282394`*^9}, {
   3.785250588656488*^9, 3.785250591357007*^9}, {3.7852507564570065`*^9, 
   3.7852507638104935`*^9}, {3.785253091532304*^9, 3.785253138847148*^9}, {
   3.7852531795009995`*^9, 3.7852531822852845`*^9}, {3.78525322760236*^9, 
   3.7852532347079835`*^9}, {3.785253269736401*^9, 3.7852533186729493`*^9}, {
   3.7852533499356813`*^9, 3.7852533536194243`*^9}, {3.7852534684496627`*^9, 
   3.7852534710220785`*^9}, {3.7852535409719725`*^9, 3.785253541682535*^9}, {
   3.7852537363906927`*^9, 3.7852537365316057`*^9}, 3.785254209543125*^9, 
   3.785254249221677*^9, {3.7852618005450153`*^9, 3.785261822043441*^9}, {
   3.785261857787959*^9, 3.7852618586202583`*^9}, {3.7852618892287784`*^9, 
   3.785261946037554*^9}, 3.785262059440189*^9, {3.7852620993981705`*^9, 
   3.785262120227375*^9}, {3.785263145319659*^9, 3.7852631460221624`*^9}, {
   3.7852632381337895`*^9, 3.7852632587033963`*^9}, {3.7852633271116285`*^9, 
   3.7852633460395827`*^9}, 3.785263472773306*^9, 3.785263866855198*^9, 
   3.785268139559249*^9, {3.78526972929168*^9, 3.785269729727641*^9}, {
   3.7852699615872583`*^9, 3.7852699902755356`*^9}, {3.7856194498325715`*^9, 
   3.7856194866198425`*^9}, {3.785620292632592*^9, 3.7856204176271205`*^9}, {
   3.785621000831133*^9, 3.7856210498957686`*^9}, {3.785621146464704*^9, 
   3.785621189540737*^9}, {3.7856212292364116`*^9, 3.785621241303481*^9}, {
   3.785830618745776*^9, 3.78583062683438*^9}, 3.785831709123893*^9, {
   3.7858334724121633`*^9, 3.7858334949023423`*^9}, {3.7858335584412346`*^9, 
   3.7858335601674433`*^9}, {3.785833642845225*^9, 3.785833650689127*^9}, {
   3.7858356619043493`*^9, 3.7858357311644955`*^9}, {3.7858357783741217`*^9, 
   3.7858357974762607`*^9}, {3.785835833989029*^9, 3.7858358613427205`*^9}, {
   3.785837432637359*^9, 3.785837437126499*^9}, 3.786458227189885*^9, 
   3.7864587047832603`*^9},
 CellLabel->
  "In[103]:=",ExpressionUUID->"7405a249-8e74-42ba-8cb9-4ad6b37b789b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Lagrangian", " ", "setup"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"q", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Phi]", "[", "t", "]"}], ",", 
       RowBox[{"\[Psi]", "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dq", "=", 
     RowBox[{"D", "[", 
      RowBox[{"q", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ddq", "=", 
     RowBox[{"D", "[", 
      RowBox[{"dq", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"for", " ", "analysis"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pwing", "=", 
     RowBox[{
      RowBox[{"Rspar", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "ycp", ",", "0"}], "}"}], "+", 
        RowBox[{
         RowBox[{"Rhinge", "[", 
          RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", 
           RowBox[{
            RowBox[{"-", "\[Gamma]"}], " ", "cbar"}]}], "}"}]}]}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"See", " ", 
       RowBox[{"https", ":"}]}], "//", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"github", ".", "com"}], "/", "avikde"}], "/", 
           "robobee3d"}], "/", "pull"}], "/", "105"}], "#issue"}], "-", 
       RowBox[{
       "349667100", " ", "for", " ", "my", " ", "replacement", " ", "of", " ",
         "Ixx"}]}]}], ",", "Izz"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KE", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "2"}], "Ixx", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], "^", "2"}]}], "+", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "Izz", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "'"}], "[", "t", "]"}], "^", "2"}]}], "+", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "mwing", " ", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"pwing", ",", "t"}], "]"}], ".", 
        RowBox[{"D", "[", 
         RowBox[{"pwing", ",", "t"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "ma", " ", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Tau]inv", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", "t"}], "]"}], "^", 
        "2"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PE", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", "2"}], " ", "k\[Psi]", " ", 
        RowBox[{
         RowBox[{"\[Psi]", "[", "t", "]"}], "^", "2"}]}], "+", 
       RowBox[{
        RowBox[{"1", "/", "2"}], 
        RowBox[{"(", 
         RowBox[{"ko", " ", 
          RowBox[{"ycp", "^", "2"}]}], ")"}], 
        RowBox[{
         RowBox[{"\[Phi]", "[", "t", "]"}], "^", "2"}]}], "+", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "ka", " ", 
        RowBox[{
         RowBox[{"\[Tau]inv", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], ")"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L2", "=", 
     RowBox[{"KE", "-", "PE"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Llhs", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"L2", ",", 
            RowBox[{"{", "dq", "}"}]}], "]"}], ",", "t"}], "]"}], "-", 
        RowBox[{"D", "[", 
         RowBox[{"L2", ",", 
          RowBox[{"{", "q", "}"}]}], "]"}]}], ")"}], "//", "Simplify"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Llhs", "=", 
     RowBox[{
      RowBox[{"First", "@", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"And", "@@", 
          RowBox[{"Thread", "[", 
           RowBox[{"Llhs", "\[Equal]", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Phi]", "''"}], "[", "t", "]"}], ",", 
           RowBox[{
            RowBox[{"\[Psi]", "''"}], "[", "t", "]"}]}], "}"}]}], "]"}]}], "//",
       "Simplify"}]}], "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Add", " ", "non"}], "-", "lagrangian"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"paero", ",", "Faero"}], "}"}], "=", 
     RowBox[{"aeroForce", "[", 
      RowBox[{"Join", "[", 
       RowBox[{"q", ",", "dq"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]aero", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"paero", ",", 
           RowBox[{"{", "q", "}"}]}], "]"}], "\[Transpose]"}], ".", "Faero"}],
        ",", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"R", ">", "0"}], ",", " ", 
          RowBox[{
           SubscriptBox[
            OverscriptBox["r", "^"], "1"], ">", "0"}]}], "}"}]}]}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Tau]damp", "=", 
     RowBox[{"-", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"b\[Psi]", " ", 
         RowBox[{
          RowBox[{"\[Psi]", "'"}], "[", "t", "]"}]}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]inp", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Tau]inv", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", 
        RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], "\[Tau]act"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]rhs", "=", 
     RowBox[{"\[Tau]aero", "+", "\[Tau]damp", "+", "\[Tau]inp"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Simplify", " ", "may", " ", "take", " ", "a", " ", "little", " ", 
     "time"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eoms", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{"Llhs", "\[Equal]", "\[Tau]rhs"}], "]"}], "//.", 
        "wingsubs"}], ",", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"cbar", ">", "0"}], ",", 
          RowBox[{
           RowBox[{"\[Psi]", "[", "t", "]"}], "\[Element]", "Reals"}], ",", 
          RowBox[{"ycp", ">", "0"}]}], "}"}]}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.785163733169914*^9, 3.785163768788862*^9}, {
   3.7851638219331465`*^9, 3.7851638221495667`*^9}, {3.7851638575914416`*^9, 
   3.7851638656639175`*^9}, {3.785163952461292*^9, 3.785163959194874*^9}, {
   3.785181113450061*^9, 3.7851811849114933`*^9}, {3.785181223420051*^9, 
   3.7851814480879383`*^9}, {3.7851815284493275`*^9, 3.785181574334261*^9}, {
   3.785181607927892*^9, 3.7851818562133703`*^9}, {3.785181897023181*^9, 
   3.785181973204109*^9}, {3.7851820183846817`*^9, 3.785182035584442*^9}, {
   3.785182130927059*^9, 3.7851822788151007`*^9}, {3.785182768706132*^9, 
   3.785182824611698*^9}, {3.7851835377984476`*^9, 3.7851835381465435`*^9}, {
   3.785183574632366*^9, 3.7851838963880434`*^9}, {3.785183935005065*^9, 
   3.78518393938645*^9}, {3.7852369154777946`*^9, 3.7852369276973515`*^9}, {
   3.785237068661893*^9, 3.785237159502931*^9}, {3.7852390830870667`*^9, 
   3.785239105554223*^9}, {3.785239223653453*^9, 3.785239230566188*^9}, {
   3.785239332872146*^9, 3.7852394831645365`*^9}, {3.785239522904046*^9, 
   3.785239527846*^9}, {3.785239574459278*^9, 3.785239590976102*^9}, {
   3.785239663394473*^9, 3.785239765859336*^9}, {3.785239822253582*^9, 
   3.785239852287075*^9}, {3.7852411853333817`*^9, 3.7852412095104837`*^9}, {
   3.7852412747392893`*^9, 3.785241284555241*^9}, {3.785242577855811*^9, 
   3.7852426072696886`*^9}, {3.785242760532243*^9, 3.785242764687683*^9}, {
   3.785243042341342*^9, 3.785243082387663*^9}, {3.78524369984238*^9, 
   3.7852437033492184`*^9}, {3.785243878758131*^9, 3.7852438818282394`*^9}, {
   3.785250588656488*^9, 3.785250591357007*^9}, {3.7852507564570065`*^9, 
   3.7852507638104935`*^9}, {3.785253091532304*^9, 3.785253138847148*^9}, {
   3.7852531795009995`*^9, 3.7852531822852845`*^9}, {3.78525322760236*^9, 
   3.7852532347079835`*^9}, {3.785253269736401*^9, 3.7852533186729493`*^9}, {
   3.7852533499356813`*^9, 3.7852533536194243`*^9}, {3.7852534684496627`*^9, 
   3.7852534710220785`*^9}, {3.7852535409719725`*^9, 3.785253541682535*^9}, {
   3.7852537363906927`*^9, 3.7852537365316057`*^9}, 3.785254209543125*^9, 
   3.785254249221677*^9, {3.7852618005450153`*^9, 3.7852618049458847`*^9}, {
   3.7852619352877183`*^9, 3.7852619378303013`*^9}, {3.785262049200818*^9, 
   3.7852620500145736`*^9}, {3.785262103253174*^9, 3.7852621096136494`*^9}, {
   3.785263447209785*^9, 3.7852634489854174`*^9}, 3.7852635401829467`*^9, {
   3.78526380795971*^9, 3.785263833479515*^9}, {3.785264076495087*^9, 
   3.7852640857027893`*^9}, {3.7852681432932625`*^9, 
   3.7852681474119186`*^9}, {3.785831869007831*^9, 3.785831870271266*^9}, {
   3.7858329219017763`*^9, 3.7858329347845373`*^9}, {3.785832983264346*^9, 
   3.7858330065270085`*^9}, 3.7858335037219863`*^9, {3.7858336604094815`*^9, 
   3.785833664118662*^9}, {3.786458626140443*^9, 3.786458639847027*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"b8b499bb-9d2f-4be1-820a-74f2d72ede84"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"For", " ", "analysis"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"compareEomTo2D", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eomsanalysis", ",", "Mm"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"eoms", " ", "for", " ", "analysis", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"comparison", " ", "to", " ", "2", "D"}], ")"}], ".", " ", 
          "Also"}], " ", "comment", " ", "out", " ", "the", " ", "rcopnondim",
          " ", "line"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"eomsanalysis", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{"Llhs", "\[Equal]", "\[Tau]rhs"}], "]"}], 
            RowBox[{"(*", 
             RowBox[{"//.", "wingsubs"}], "*)"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Tau]2", "\[Rule]", "0"}], ",", 
              RowBox[{"\[Epsilon]aero", "\[Rule]", "0"}]}], "}"}]}], ",", 
           RowBox[{"Assumptions", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"cbar", ">", "0"}], ",", 
              RowBox[{
               RowBox[{"\[Psi]", "[", "t", "]"}], "<", "0"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], ">", "0"}], ",", 
              RowBox[{"ycp", ">", "0"}]}], "}"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Get", " ", "all", " ", "the", " ", "terms", " ", "on", " ", "the", 
          " ", "LHS"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"eomsanalysis", "=", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"eom", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"eom", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"eom", ",", "eomsanalysis"}], "}"}]}], "]"}], "//", 
          "Simplify"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Mm", "=", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{"eomsanalysis", ",", 
              RowBox[{"{", "ddq", "}"}]}], "]"}], "//", "Simplify"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<M=\>\"", ",", 
            RowBox[{"Mm", "//", "MatrixForm"}]}], "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<M=\>\"", ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{"KE", ",", 
               RowBox[{"{", 
                RowBox[{"dq", ",", "2"}], "}"}]}], "]"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Tau]2", "\[Rule]", "0"}], ",", 
               RowBox[{"\[Epsilon]aero", "\[Rule]", "0"}]}], "}"}]}], "//", 
            "Simplify"}], "//", "MatrixForm"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<N=\>\"", ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{"PE", ",", 
               RowBox[{"{", "q", "}"}]}], "]"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Tau]2", "\[Rule]", "0"}], ",", 
               RowBox[{"\[Epsilon]aero", "\[Rule]", "0"}]}], "}"}]}], "//", 
            "Simplify"}], "//", "MatrixForm"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"CoefficientList", "[", 
        RowBox[{
         RowBox[{"eomsanalysis", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"\[Phi]", "''"}], "[", "t", "]"}]}], "]"}], "*)"}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"compareEomTo2D", "[", "]"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.785163733169914*^9, 3.785163768788862*^9}, {
   3.7851638219331465`*^9, 3.7851638221495667`*^9}, {3.7851638575914416`*^9, 
   3.7851638656639175`*^9}, {3.785163952461292*^9, 3.785163959194874*^9}, {
   3.785181113450061*^9, 3.7851811849114933`*^9}, {3.785181223420051*^9, 
   3.7851814480879383`*^9}, {3.7851815284493275`*^9, 3.785181574334261*^9}, {
   3.785181607927892*^9, 3.7851818562133703`*^9}, {3.785181897023181*^9, 
   3.785181973204109*^9}, {3.7851820183846817`*^9, 3.785182035584442*^9}, {
   3.785182130927059*^9, 3.7851822788151007`*^9}, {3.785182768706132*^9, 
   3.785182824611698*^9}, {3.7851835377984476`*^9, 3.7851835381465435`*^9}, {
   3.785183574632366*^9, 3.7851838963880434`*^9}, {3.785183935005065*^9, 
   3.78518393938645*^9}, {3.7852369154777946`*^9, 3.7852369276973515`*^9}, {
   3.785237068661893*^9, 3.785237159502931*^9}, {3.7852390830870667`*^9, 
   3.785239105554223*^9}, {3.785239223653453*^9, 3.785239230566188*^9}, {
   3.785239332872146*^9, 3.7852394831645365`*^9}, {3.785239522904046*^9, 
   3.785239527846*^9}, {3.785239574459278*^9, 3.785239590976102*^9}, {
   3.785239663394473*^9, 3.785239765859336*^9}, {3.785239822253582*^9, 
   3.785239852287075*^9}, {3.7852411853333817`*^9, 3.7852412095104837`*^9}, {
   3.7852412747392893`*^9, 3.785241284555241*^9}, {3.785242577855811*^9, 
   3.7852426072696886`*^9}, {3.785242760532243*^9, 3.785242764687683*^9}, {
   3.785243042341342*^9, 3.785243082387663*^9}, {3.78524369984238*^9, 
   3.7852437033492184`*^9}, {3.785243878758131*^9, 3.7852438818282394`*^9}, {
   3.785250588656488*^9, 3.785250591357007*^9}, {3.7852507564570065`*^9, 
   3.7852507638104935`*^9}, {3.785253091532304*^9, 3.785253138847148*^9}, {
   3.7852531795009995`*^9, 3.7852531822852845`*^9}, {3.78525322760236*^9, 
   3.7852532347079835`*^9}, {3.785253269736401*^9, 3.7852533186729493`*^9}, {
   3.7852533499356813`*^9, 3.7852533536194243`*^9}, {3.7852534684496627`*^9, 
   3.7852534710220785`*^9}, {3.7852535409719725`*^9, 3.785253541682535*^9}, {
   3.7852537363906927`*^9, 3.7852537365316057`*^9}, 3.785254209543125*^9, 
   3.785254249221677*^9, {3.7852618005450153`*^9, 3.7852618049458847`*^9}, {
   3.7852619352877183`*^9, 3.7852619378303013`*^9}, {3.785262049200818*^9, 
   3.7852620500145736`*^9}, {3.785262103253174*^9, 3.7852621096136494`*^9}, {
   3.785263447209785*^9, 3.7852634489854174`*^9}, 3.7852635401829467`*^9, {
   3.78526380795971*^9, 3.785263833479515*^9}, {3.785264076495087*^9, 
   3.7852640857027893`*^9}, {3.7852681432932625`*^9, 
   3.7852681474119186`*^9}, {3.785831869007831*^9, 3.785831870271266*^9}, {
   3.7858329219017763`*^9, 3.7858329347845373`*^9}, {3.785832983264346*^9, 
   3.7858330065270085`*^9}, {3.7858330819961247`*^9, 3.7858331447841687`*^9}, 
   3.785833279240972*^9, 3.786458198877563*^9, {3.7864585529787188`*^9, 
   3.786458647859321*^9}, 3.78645869620494*^9},
 CellLabel->
  "In[125]:=",ExpressionUUID->"7c173ea2-2946-49d8-b3f4-f6b2d745c11e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"wing", " ", "params", " ", "r1h"}], ",", 
    RowBox[{
     RowBox[{"r2h", " ", "from", " ", "Chen", 
      RowBox[{"(", "2016", ")"}]}], ":", " ", 
     RowBox[{"see", " ", "the", " ", "\"\<incorporate R\>\"", " ", 
      RowBox[{"notes", ".", " ", "N"}], " ", "is", " ", "from", " ", "the", 
      " ", "julia", " ", "traj", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"just", " ", "used", " ", "to", " ", "map", " ", "dt"}], 
        ")"}], "."}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"paramsFixed", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ko", "\[Rule]", "0.55"}], ",", 
       RowBox[{"ma", "\[Rule]", "6"}], ",", 
       RowBox[{"ka", "\[Rule]", "150"}], ",", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["r", "^"], "1"], "\[Rule]", "0.49"}], ",", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["r", "^"], "2"], "\[Rule]", "0.551"}], ",", 
       RowBox[{"\[Epsilon]aero", "\[Rule]", "0.001"}], ",", 
       RowBox[{"CDmax", "\[Rule]", "3.4"}], ",", 
       RowBox[{"CLmax", "\[Rule]", "1.8"}], ",", 
       RowBox[{"CD0", "\[Rule]", "0.4"}], ",", 
       RowBox[{"\[Rho]", "\[Rule]", 
        RowBox[{"1.225", "*", "0.001"}]}], ",", 
       RowBox[{"\[Gamma]", "\[Rule]", "0.5"}], ",", 
       RowBox[{"Ndt", "\[Rule]", "45"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"paramsOpt", "=", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "cbar", ",", "\[Tau]1", ",", "mwing", ",", "k\[Psi]", ",", "b\[Psi]", 
         ",", "\[Tau]2", ",", "Aw", ",", "dt"}], "}"}], "\[Rule]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"4.928", ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "15.98", "*)"}], "14.5", ",", " ", 
         "\[IndentingNewLine]", "0.971", ",", " ", "\[IndentingNewLine]", 
         RowBox[{"(*", "26.653", "*)"}], "16", ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "19.792", "*)"}], "8", ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "31.959", "*)"}], "29", ",", " ", 
         "\[IndentingNewLine]", "97.113", ",", " ", "\[IndentingNewLine]", 
         RowBox[{"(*", "0.087", "*)"}], "0.145"}], "\[IndentingNewLine]", 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"paramsFixed", ",", "paramsOpt"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eomsp", "=", 
     RowBox[{"eoms", "/.", "params"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"other", " ", "stuff"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ic3", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Phi]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Psi]", "[", "0", "]"}], "\[Equal]", "0.01"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "'"}], "[", "0", "]"}], "\[Equal]", "0.01"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"c1", "=", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", "\[Rule]", 
        RowBox[{"0.08", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[Pi]", " ", "130", "t"}], "]"}]}]}], "}"}]}], ";"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "c2", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"c2", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"freq", "=", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"Ndt", "*", "dt"}], ")"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Tau]act", "\[Rule]", 
        RowBox[{"75", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", "\[Pi]", " ", "freq", " ", "t"}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Make", " ", "sure", " ", "reasonable"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eomsfinal", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{"eomsp", ",", "ic3"}], "]"}], "/.", 
       RowBox[{"c2", "[", "]"}]}], "/.", "params"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"eomsfinal", "/.", 
      RowBox[{"Thread", "[", 
       RowBox[{"q", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.3", ",", "0.2"}], "}"}]}], "]"}]}], "/.", 
     RowBox[{"Thread", "[", 
      RowBox[{"dq", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", "0.1"}], "}"}]}], "]"}]}], "*)"}], "\n", 
   RowBox[{"(*", "Sim", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tf", "=", "50"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"First", "@", 
      RowBox[{"NDSolve", "[", 
       RowBox[{"eomsfinal", ",", "q", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tf"}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"sol", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"dq", "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"q", "/.", "sol"}], ",", "t"}], "]"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"sol", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"ddq", "\[Rule]", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"dq", "/.", "sol"}], ",", "t"}], "]"}]}], "]"}]}], "]"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sols", "=", 
     RowBox[{"{", "sol", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Nn", "=", 
     RowBox[{"Length", "@", "sols"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Period=\>\"", ",", 
      RowBox[{
       RowBox[{"Ndt", "*", "dt"}], "/.", "params"}], ",", "\"\<, freq=\>\"", 
      ",", 
      RowBox[{"1000", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Ndt", "*", "dt"}], "/.", "params"}], ")"}]}]}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t2", "=", 
     RowBox[{"tf", "-", "2.85"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t1", "=", 
     RowBox[{
      RowBox[{"t2", "-", 
       RowBox[{"Ndt", "*", "dt"}]}], "/.", "params"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"\[Tau]inv", "[", "\[Phi]o1", "]"}], ",", "\[Phi]o1"}], 
             "]"}]}], "/.", 
           RowBox[{"\[Phi]o1", "\[Rule]", "\[Phi]o"}]}], "//.", "wingsubs"}], 
         "/.", "params"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Phi]o", ",", 
          RowBox[{"-", "0.6"}], ",", "0.6"}], "}"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<T\>\""}]}], "]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"plotTrajs", "[", 
      RowBox[{"sol", ",", "t2"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"debugComponentsPlot", "[", 
      RowBox[{"sol", ",", "t2"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Legended", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Phi]", "[", "t", "]"}], ",", 
                 RowBox[{"\[Psi]", "[", "t", "]"}]}], "}"}], "/.", 
               RowBox[{"sols", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ",", 
              RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "Nn"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\[Phi]", ",", "\[Psi]"}], "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Legended", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], ",", 
                 RowBox[{"\[Psi]", "[", "t", "]"}]}], "}"}], "/.", 
               RowBox[{"sols", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ",", 
              RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "Nn"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Phi]", "'"}], ",", "\[Psi]"}], "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Show", "@", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{",", 
            RowBox[{"{", 
             RowBox[{"soli", ",", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"sols3", ",", "sols4", ",", "sols5"}], "}"}], "}"}]}],
              "}"}]}], "]"}]}], ","}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Animate", "[", 
        RowBox[{
         RowBox[{"drawWing", "[", 
          RowBox[{
           RowBox[{"sols", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "a"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "t1", ",", "t2"}], "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"AnimationRepetitions", "\[Rule]", "1"}], ","}], "*)"}], 
         RowBox[{"DefaultDuration", "\[Rule]", "4"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.785163733169914*^9, 3.785163768788862*^9}, {
   3.7851638219331465`*^9, 3.7851638221495667`*^9}, {3.7851638575914416`*^9, 
   3.7851638656639175`*^9}, {3.785163952461292*^9, 3.785163959194874*^9}, {
   3.785181113450061*^9, 3.7851811849114933`*^9}, {3.785181223420051*^9, 
   3.7851814480879383`*^9}, {3.7851815284493275`*^9, 3.785181574334261*^9}, {
   3.785181607927892*^9, 3.7851818562133703`*^9}, {3.785181897023181*^9, 
   3.785181973204109*^9}, {3.7851820183846817`*^9, 3.785182035584442*^9}, {
   3.785182130927059*^9, 3.7851822788151007`*^9}, {3.785182768706132*^9, 
   3.785182824611698*^9}, {3.7851835377984476`*^9, 3.7851835381465435`*^9}, {
   3.785183574632366*^9, 3.7851838963880434`*^9}, {3.785183935005065*^9, 
   3.78518393938645*^9}, {3.7852369154777946`*^9, 3.7852369276973515`*^9}, {
   3.785237068661893*^9, 3.785237159502931*^9}, {3.7852390830870667`*^9, 
   3.785239105554223*^9}, {3.785239223653453*^9, 3.785239230566188*^9}, {
   3.785239332872146*^9, 3.7852394831645365`*^9}, {3.785239522904046*^9, 
   3.785239527846*^9}, {3.785239574459278*^9, 3.785239590976102*^9}, {
   3.785239663394473*^9, 3.785239765859336*^9}, {3.785239822253582*^9, 
   3.785239852287075*^9}, {3.7852411853333817`*^9, 3.7852412095104837`*^9}, {
   3.7852412747392893`*^9, 3.785241284555241*^9}, {3.785242577855811*^9, 
   3.7852426072696886`*^9}, {3.785242760532243*^9, 3.785242764687683*^9}, {
   3.785243042341342*^9, 3.785243082387663*^9}, {3.78524369984238*^9, 
   3.7852437033492184`*^9}, {3.785243878758131*^9, 3.7852438818282394`*^9}, {
   3.785250588656488*^9, 3.785250591357007*^9}, {3.7852507564570065`*^9, 
   3.7852507638104935`*^9}, {3.785253091532304*^9, 3.785253138847148*^9}, {
   3.7852531795009995`*^9, 3.7852531822852845`*^9}, {3.78525322760236*^9, 
   3.7852532347079835`*^9}, {3.785253269736401*^9, 3.7852533186729493`*^9}, {
   3.7852533499356813`*^9, 3.7852533536194243`*^9}, {3.7852534684496627`*^9, 
   3.7852534710220785`*^9}, {3.7852535409719725`*^9, 3.785253541682535*^9}, {
   3.7852537363906927`*^9, 3.7852537365316057`*^9}, 3.785254209543125*^9, 
   3.785254249221677*^9, {3.7852618005450153`*^9, 3.7852618049458847`*^9}, {
   3.7852619352877183`*^9, 3.7852619378303013`*^9}, {3.785262049200818*^9, 
   3.7852620500145736`*^9}, {3.785262103253174*^9, 3.7852621096136494`*^9}, {
   3.785263447209785*^9, 3.7852634489854174`*^9}, 3.7852635401829467`*^9, {
   3.78526380795971*^9, 3.785263846861192*^9}, {3.7852639620550404`*^9, 
   3.78526398507434*^9}, {3.7852641063890386`*^9, 3.785264110993264*^9}, {
   3.7852641564011707`*^9, 3.7852641571082044`*^9}, {3.7852641960012693`*^9, 
   3.785264216721649*^9}, {3.7852643149914474`*^9, 3.7852643475935354`*^9}, {
   3.7852644069901733`*^9, 3.7852644070928326`*^9}, {3.7852645182904143`*^9, 
   3.7852645377768126`*^9}, {3.7852681182959647`*^9, 3.785268128246215*^9}, 
   3.785269285445484*^9, {3.7852697491566772`*^9, 3.7852697592097054`*^9}, {
   3.785538474804677*^9, 3.7855384812477183`*^9}, 3.7855385189985633`*^9, {
   3.7855385626121855`*^9, 3.7855385662395616`*^9}, {3.785538601860875*^9, 
   3.785538671427971*^9}, {3.785538871632335*^9, 3.785538909036092*^9}, {
   3.7855389463657703`*^9, 3.785538946443622*^9}, {3.785538996298153*^9, 
   3.785539013899557*^9}, {3.7855391273264093`*^9, 3.785539209008417*^9}, {
   3.7855393350449324`*^9, 3.7855393651778836`*^9}, {3.785539442555038*^9, 
   3.7855394441299467`*^9}, 3.785539483284238*^9, {3.785539521251288*^9, 
   3.7855395227811527`*^9}, {3.7855395551847734`*^9, 3.785539555422123*^9}, {
   3.7855395893291893`*^9, 3.785539589949419*^9}, {3.785539636192365*^9, 
   3.7855396769178057`*^9}, {3.78553972259588*^9, 3.7855398435198965`*^9}, {
   3.7855398777105055`*^9, 3.785539954121219*^9}, {3.78561033198108*^9, 
   3.7856104315554953`*^9}, {3.7856105924933624`*^9, 3.785610618959749*^9}, {
   3.7856110746210976`*^9, 3.78561108814141*^9}, {3.7856111337757998`*^9, 
   3.785611138201707*^9}, {3.7856111763604455`*^9, 3.7856112032749205`*^9}, {
   3.7856112397351365`*^9, 3.7856112637734766`*^9}, {3.7856115446899896`*^9, 
   3.7856115449683943`*^9}, {3.785611584275441*^9, 3.785611584356102*^9}, {
   3.7856116328821845`*^9, 3.7856118315286884`*^9}, {3.7856196069008217`*^9, 
   3.785619647460866*^9}, {3.7856197076804085`*^9, 3.785619740585253*^9}, {
   3.785620220584257*^9, 3.785620286772295*^9}, 3.7856203291213646`*^9, {
   3.7856204645278873`*^9, 3.785620503571483*^9}, {3.785620595294875*^9, 
   3.7856206516223783`*^9}, {3.78562070093008*^9, 3.785620703179044*^9}, {
   3.78562108390994*^9, 3.7856211103944044`*^9}, {3.785621343166565*^9, 
   3.7856213761699677`*^9}, {3.7856214080899544`*^9, 3.7856214104346447`*^9}, 
   3.7856215894350953`*^9, 3.785621667110781*^9, {3.7856222098792725`*^9, 
   3.7856222197106028`*^9}, {3.7856225296821537`*^9, 3.7856225297917056`*^9}, 
   3.7858333152064767`*^9, {3.785833834000317*^9, 3.7858338359457874`*^9}, {
   3.785833878396678*^9, 3.785833925023576*^9}, {3.785833960324053*^9, 
   3.785833991089741*^9}, {3.78583525264093*^9, 3.7858353505219145`*^9}, {
   3.7858353845036736`*^9, 3.785835399633337*^9}, {3.7858354498533483`*^9, 
   3.7858354994134316`*^9}, {3.785835550896733*^9, 3.7858355797900333`*^9}, {
   3.7858359237897863`*^9, 3.785835943243043*^9}, {3.7858359959208937`*^9, 
   3.7858360237849255`*^9}, {3.7858360655689564`*^9, 
   3.7858363164565797`*^9}, {3.7858363712222834`*^9, 
   3.7858363972293186`*^9}, {3.7858364680972967`*^9, 3.785836613740854*^9}, {
   3.7858367010687027`*^9, 3.7858367291513357`*^9}, {3.7858370359648848`*^9, 
   3.785837077485405*^9}, {3.7858371352936296`*^9, 3.785837135721219*^9}, {
   3.785837166998909*^9, 3.7858371868821044`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"51dba8ce-d54e-473b-8306-f61498bec997"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Period=\"\>", "\[InvisibleSpace]", "6.5249999999999995`", 
   "\[InvisibleSpace]", "\<\", freq=\"\>", "\[InvisibleSpace]", 
   "153.25670498084293`"}],
  SequenceForm["Period=", 6.5249999999999995`, ", freq=", 153.25670498084293`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.7856117181236324`*^9, 3.7856117472842274`*^9}, {
   3.785611822556508*^9, 3.785611832420286*^9}, 3.7856182917107253`*^9, 
   3.7856195327693353`*^9, {3.7856196079095793`*^9, 3.785619648254488*^9}, 
   3.785619708792785*^9, 3.7856197412604027`*^9, 3.7856203389831967`*^9, 
   3.7856204236524086`*^9, {3.7856204658232155`*^9, 3.785620504456672*^9}, {
   3.7856206300565457`*^9, 3.7856206524465322`*^9}, 3.7856207042580476`*^9, {
   3.785621055133337*^9, 3.78562111132628*^9}, 3.785621208968561*^9, 
   3.7856212459582443`*^9, 3.7856213799968123`*^9, 3.7856214117513294`*^9, 
   3.785621590169964*^9, 3.7856219801292534`*^9, {3.7856222107186995`*^9, 
   3.7856222205164337`*^9}, 3.7856225305327187`*^9, 3.78583067394069*^9, {
   3.785833315873413*^9, 3.7858333356725883`*^9}, 3.7858334021011252`*^9, 
   3.7858334420789747`*^9, 3.785833512397271*^9, 3.7858335734542665`*^9, 
   3.785833607230345*^9, 3.785833698609768*^9, 3.785833836742333*^9, {
   3.7858338882462716`*^9, 3.7858339258768277`*^9}, {3.7858339759716606`*^9, 
   3.7858339939847393`*^9}, {3.785835253678414*^9, 3.7858353513484545`*^9}, {
   3.7858353863596373`*^9, 3.7858354004402275`*^9}, {3.785835450593163*^9, 
   3.785835501284029*^9}, {3.7858355518192444`*^9, 3.785835580440194*^9}, 
   3.78583576868977*^9, 3.78583580327425*^9, 3.7858358663136873`*^9, {
   3.7858359249027925`*^9, 3.785835944085446*^9}, {3.7858359991182756`*^9, 
   3.7858360244895754`*^9}, {3.785836066640252*^9, 3.7858362010708904`*^9}, {
   3.7858362362322903`*^9, 3.785836323514908*^9}, {3.78583637307673*^9, 
   3.785836397995373*^9}, {3.785836469156339*^9, 3.7858366146745043`*^9}, {
   3.7858367051595297`*^9, 3.7858367301078415`*^9}, {3.7858370402658453`*^9, 
   3.7858370784883842`*^9}, 3.7858371365406604`*^9, {3.7858371689336524`*^9, 
   3.7858371875954933`*^9}, 3.785837441570032*^9, 3.786458077301555*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"2305aa2b-fae3-4094-8900-c83b6869b682"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Phi]mag=\"\>", "\[InvisibleSpace]", "0.5885120913488002`", 
   "\[InvisibleSpace]", "\<\", \[Psi]mag=\"\>", "\[InvisibleSpace]", 
   "1.1133947643237487`", "\[InvisibleSpace]", "\<\", avglift=\"\>", 
   "\[InvisibleSpace]", "186.04242155687558`"}],
  SequenceForm[
  "\[Phi]mag=", 0.5885120913488002, ", \[Psi]mag=", 1.1133947643237487`, 
   ", avglift=", 186.04242155687558`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.7856117181236324`*^9, 3.7856117472842274`*^9}, {
   3.785611822556508*^9, 3.785611832420286*^9}, 3.7856182917107253`*^9, 
   3.7856195327693353`*^9, {3.7856196079095793`*^9, 3.785619648254488*^9}, 
   3.785619708792785*^9, 3.7856197412604027`*^9, 3.7856203389831967`*^9, 
   3.7856204236524086`*^9, {3.7856204658232155`*^9, 3.785620504456672*^9}, {
   3.7856206300565457`*^9, 3.7856206524465322`*^9}, 3.7856207042580476`*^9, {
   3.785621055133337*^9, 3.78562111132628*^9}, 3.785621208968561*^9, 
   3.7856212459582443`*^9, 3.7856213799968123`*^9, 3.7856214117513294`*^9, 
   3.785621590169964*^9, 3.7856219801292534`*^9, {3.7856222107186995`*^9, 
   3.7856222205164337`*^9}, 3.7856225305327187`*^9, 3.78583067394069*^9, {
   3.785833315873413*^9, 3.7858333356725883`*^9}, 3.7858334021011252`*^9, 
   3.7858334420789747`*^9, 3.785833512397271*^9, 3.7858335734542665`*^9, 
   3.785833607230345*^9, 3.785833698609768*^9, 3.785833836742333*^9, {
   3.7858338882462716`*^9, 3.7858339258768277`*^9}, {3.7858339759716606`*^9, 
   3.7858339939847393`*^9}, {3.785835253678414*^9, 3.7858353513484545`*^9}, {
   3.7858353863596373`*^9, 3.7858354004402275`*^9}, {3.785835450593163*^9, 
   3.785835501284029*^9}, {3.7858355518192444`*^9, 3.785835580440194*^9}, 
   3.78583576868977*^9, 3.78583580327425*^9, 3.7858358663136873`*^9, {
   3.7858359249027925`*^9, 3.785835944085446*^9}, {3.7858359991182756`*^9, 
   3.7858360244895754`*^9}, {3.785836066640252*^9, 3.7858362010708904`*^9}, {
   3.7858362362322903`*^9, 3.785836323514908*^9}, {3.78583637307673*^9, 
   3.785836397995373*^9}, {3.785836469156339*^9, 3.7858366146745043`*^9}, {
   3.7858367051595297`*^9, 3.7858367301078415`*^9}, {3.7858370402658453`*^9, 
   3.7858370784883842`*^9}, 3.7858371365406604`*^9, {3.7858371689336524`*^9, 
   3.7858371875954933`*^9}, 3.785837441570032*^9, 3.7864580803366537`*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"d639d12d-315d-434d-8318-78fac94757e0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
bh9Em4dxH9u0DPWtnkcvyA6AqX1yDbvvMnzIHNjd3DUIc0azl825VqBSOV/r
sd0QLD4gxraWrcD505xdST+GAaUImg9e+Qvr7OrMxCJHAYo4vJuEVkEpxHuv
K+sYwAR/QMv3VehQHdIKejsGd469ceJ7uwaEreGt3mefAbxORe6zIVGWGKJV
moZ0kJzvTqcvkCgdQd33MozpYD5WQHFaJFHS5f1k15vRQSMlQ4hlhUQ540FP
eX2LDsX5G1P3k8mUJM7URxrOdBg98KU3nhXP++pC+pRIOvy6w1yWsZtMCU7i
mT3cQgf+EY1NZafJFGPN1tznb+mwe7HPyP4cmbJvyuXGcjsdzv0WZJfTJVOG
lfv7qnrooMqh7Z9/iUyRa4+pOUing/Gv/77SrpMpH5Y5Q1T+0sF+QxoIuZIp
WakNmrEkBmyQLa2adSdTPLTuri4wMSCFmEpu9CJTxJ50OVA3M8DGMPClvR+Z
4iwdcUWZhwEyAmhyMJxM0X4PnDH8DFg+p9lZEUmm7HL+0fZbiAEz4u6SsdFk
Smv9OSgTZ4CKcrvC1XgyJdFyldi+hwEShv2MI4lkyl32gpJ7MgywXGfLJppC
ppwovWbbLc8A40G/FyzpZMr//Q+B//8f8j8VWJar
         "]]},
       Annotation[#, "Charting`Private`Tag$2869#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 1.5016380148060489`},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"T\"", TraditionalForm],
    PlotRange->{{-0.6, 0.6}, {1.5016380148060489`, 2.206027523394745}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
nvORwqM7s3x83FjiYna/zAG88aDCKTdXqAf/RXbt4O4fbbMsDkJ+Vc1K/NJM
YbfSkVNNTixROTQkNdFC4UP2r48pQj/zHc/fYdxK4Zo9mpovof+9TDh8IxJ8
7KSL7VFblviXtm2SaoP+4Ju2v2obS2pkGk5Mb6fwdrs//UstoP/cvTuk3gn5
UDrpr+FGlnz67tJi0gvXd1+L5GpD/1j0pvUMeKpk/IswTeh3jsvaX4NXj7y6
VKLOEuO64U7zzxTuOqksoaLKkqybp/u29sH5uTXdLlViyUHHW7/s+il846mK
4h5plnyr7Zd1HaSwXE+5tVMPQyby/Nec+Q3z/WDPzEeZDNlo0v24Hizx40uL
YgZDorp3cmaOQryDHrT7JYZIaSHLLLBLi+/f6UkMmZYlfeDRGIWlZ7+4YnyG
IWqXMxMG/8DzVcZfGvoxhHv+ZfdOMS6W8BBdfY5iyLnAOSmLp3BxouibLdc6
hOSNroF3pgoX7xL/TCbPFZKA8c4tfrpcbPfuybHpmgJi4DLJphQ8M3rbsiFV
Afler7FrAty82X+lcI6AuGftdzm7lIvV/zm/MBbenxw3t57IWsbFRoVja5vE
BcQk9UO+YDkXRz66KPmjlU9mGwimG6zkYimROMOBdD4pP/yEGTLi4ui+IbxN
kk8kkxnNlYiLYx/pzakU5RPrx5+PBIDPLZ/H6P5pIJ+nKc4cBZ+eWyQY+9FA
lItdbScwF+/Ut7vr09pAjokovJXexMUB6vPmVZY3EIPkA+/m0VxcfcPOusWj
gdx9LNNkYsnF8prlBQde8IjT1qX58WCdfz7WhzzlEaU2q0gWfNPwpt35ch6J
mnRpifNWLr7cOjX1Vj6P7DLXDg614mKL4n+ccy7yiGTjprnF27j4qGNs10MX
HnH4GbxX3Y6LrXr98jaI8shUnW/tfxzh9yNaJfq31BHrECkxvI+LMa2O43Ad
SalboBoBjnP/M6S+oo7M97HZI+nExQXyuiUGSnVEr7hUOHU/F8+LuzOtvbWW
WOOoqvkHuFh/9dpqT79akmIzO9fYlYvL5NslF8TXkLkhm9xO+nDxJZEC24nc
1+S555O00nAu3vZ3MN3cp5o0Br2ts0jk4nvJXauyVJ+STDeHsOIsLt7w4ppc
4kQxafAPNQwt4uJV+RPO05WzyD2naYeUq7lYaXTEwTD7HFo8+IrjxHKxocIx
7m2Te0g+ba7mlB4uXoEqSOm/BOVptUZEj3Bxpqz5XYF+NbpTa9ThJEPjI453
XYh7DXrd5S51E/zXw9D6ZGQN6p1I0/kGHhCqGm1Iq0Fa+sP+x6fQmCP24GvE
ixp0NSV/UpIsjSV31GQ4L6hFiXtVtaum0jjqn4GXx/i1KGhQ1E1bgcYJ3EMT
OYvqkali1bc+FRrv2nZBbCXDQ7/6e+x159BYVVNBR7GZh7KrZWs8wTuSb/j2
d/HQ3wCbvEHwuzcFlmdGeOh+Y7vj8FwaC7pKZ3mqNKA5V8X4Yqo0vvtxmfvn
vQ3o62JcOFuDxuxyW4Xs9gaULu6sthss0pjVmtXXgEw+nErIAAdOy72a8aMB
ZcXVu8/XpPGan3P7j4nzkd2Ag6amFo1vzvTL/aDGR0+LQlL0FkI83j0/LB35
KAmXH6N1aPxgrKayleGj2+H9bufAHY/PBF/8yEeVlfPtGfBJxWtCTicfDXCi
jPfr0njh3zGH6CE+MjPdIhO6FOKf+vBttrwAiVl/Si/WozHlc2az5RYB8t4v
TjQNafz9XMP03RUCdCrb8J47eEbNzhsSzwQos/Ng1gNw9Brf5pxXAlRzsOaU
8Uoar9ocuK6eFSBt9+St9qtoHP575OGjAQFq9tduS1pDY99nTVYy6kK0Jdps
koQR7Le5kv3BcCH6Hu1nzAWjYWWv3GghSj2VHnIanPf4wpaWs0LUcbrvpyyi
sWuKkd/6FCEKOnu2SxHTONcsITDzlhDdSHjzQnsjjUPNk9fI8IVIJN0sxoxL
470WtrqnVBh0I92vOg48V6oopW0+g8wy0sV44A9/LftWajAo5XJfkA1N4/yc
mF2vdRike/XsYXsTiGfVJa+MDQzalfPG3GszjWfKLfX4as+gwnyzfxItaMyd
1/fa6hKDPljP+SsA9ybt2V2ewSCJX1++zLCkcaqph/G8qwyyWX/udQp4ReNi
Bd4NBg295J1M20rjmp70r+0PGGTQtn38mjWN5bNxSm0Ng/ac1OprA6deH5pe
W8+gqIXD79W3wX7/7P1VxWeQ0DO1JAfs/LFQNPsdg/zHGn1v2tBYvL/HaHoH
rG+GY2+BLY2FXL8T937D+kr03g2C87tll5iMw/p2i77Q30HjoBQ123d/YX3X
rmcXgt8FWOt2irNoSLdz70M7WE++1uR7ciwyoGEI74LzW516S16VRXs+r60S
2U3jpI96n43VWBQVN6XQGPylL5y4abBIKLhz/hnY7qDP8psLWeTv+M38xR4a
p32Z5fBej0WFgf7P6hxorBypgqUwi7gnt61U3EvjLfvohSPGLHqXoH9zN/hX
Yeu1lk0sGssdONcDzsrQtU6nWbSRdd8ltg/yY351Z4kFPK/VrNYEHLer56L7
Vha59C/G8WCn1oT+2dYsOiPRqznHCepLujXWYTuLePoHBg330zhGKqM5fjeL
nIw4zsHg0Wl936TtIX5T9beV4JmHNR4GO7Bo1r7WCktnqLdunwDzfSxyiLc/
7XqAxqf6U34nubBoIG39WD54e6CODHOQRRE3VDx/gcdzorvkXFmU8+j9tkgX
Gl865yXndphFX/q2z798EPZj37t9NV4sOjFscKEd3HVm8TyBN4umic+YtPgQ
jRMvPa7g+7BohTL/czH4faLXnQo/Fj3XvGf/B6y9Kkw8159FtssTeJtcaezp
UGYSc4RFQSYWxTwwu6fj5roAFsna6C6a5UZj73rxGuljLMrcK5thD36ge6eH
B3569HX4Z3DMYfN5m4NYZB1xc0jvMOSX0/0N4+COuNMHA8A740Occ4+zSCqH
u0XCncaK+QFMTzCL0go0n2wGW47baIWGsEinQmLFebDTtqGzU0+wyFJQqTTP
g8a1znpZSqEsamm+dtYZLHXr0e5EsO/nsL+3wJf0vq6cHMaiFFHUscqTxpVR
AfsbwQvl5u04AS5bNKliTTiLSpX+vHoO9my/Ql0Ab9b4sH6KF43jJUfEO8Af
lpXnW4FzaqtHl0awyHNdmloquGR620I/sAgdmNwMDpQeSC8AX7C2k9L0pvHa
dMa6G6zusOr4YTD55GU1K5JFnEWyq++Cz0RTU43AzkMtQ1/BeXU1ww7gKFJ0
T8+HxmJy66YHgbNjYjx9wXNUa+zjwc+3711SCGZUq1oywZ2qBj0/wbYz517O
A0t+kcpZ5Uvj/oAPKXfAWiUf9wWC5Qed+bfA3Ij788rBZVI7tmaBD2451TQO
rhxKUkwBn1bak2rkB8+PvKIZCc5r19seBlbY9E+UG/jlv5PkK8ESY3EG5uDe
wMY6cX+Yt/cb1y4Ey1D5Zymw2dfnaX8h/sXTokxOgeOQhl09eHOT3aRXYB+P
T0fTwIdv6FbKHIH5ZP1jdC841kcs1Bx89ad3z3zwnfVv150D2+zz3tQI51Ez
+c5IPZiIL5oWD+7nhxVNP0pjr+991kbgpa6LlyWDz2yWMI+F87YwmOhjwUYR
qlOWgL0mBHlKATSemPPNCv4fo4LkELUMcHXD9DNdkF88R+tPH8HnAp9FeIEH
l2hnzD9G433ezTN/QD7qV/IUs8CNAfcXfIZ8tY7L4XeAO/rMrtuD/eyC4rUC
oZ7lpBveQH4XflWXvgWWn2G8JRXyf6VKwHhBEFx/7ob1d6gn2y6z0u/gC+5v
mP/rK+Ce6lGD4zT2MLRcHnaURQ/p199KwEMz7p/6DfW5xn9u++NgmKeuo1vz
oZ53oe9XREJo/ELtoiEP6j1I5sWejeBZG/xUv0A/KLvqzVaBw3rrVRU9WbS+
9tmrmhPQn0zYIzpuLMJabgWNYTS+aKfWeQT60UW+t7xGOI0dN1LdWo4s+noi
wN8DzGyNMOBD/0p/G7VaJILGyfOXMLP2sOjX6StPNCNhXqwwM3C0ZdHtPiHP
+yQ8b9/bwn5TFomlNumXgUOiPfm0CYvsOG1J4tE0dhF3EGRwIV8vf7NLAb/7
bXtjFfRnRwuZ1vJT0A+ud11fvp5FM++hQckYGt9yDTiHdFnkbs/dthVcpqEf
ZL6ERc+ktxRdAjOrVnTZLGKRt9OuQJ2zsJ+z/3Gx02TRG4UjotaxMF+HZRWX
zGVR2NFb0y+fo3Fb+NTUybIseqt2z68LvDvinmyDNORPfQmzLB7mdYF5Wspk
FjVpV12qBDuYrdGcCfNs5ftPC3oS4H1BZedIN8zD2JNdkcvPQ76qpK9IHGZQ
+/L+ziCwTZsIb+1PBiXEjN6Uu0Bji159y9ABBnWvFJXdAZZOttg05yuDjNon
e14FWzstLS/qY1BS/FReL5hnaknMehnUt05Rf0UizKuYeXbNXQz6D6No1DA=

         "]]},
       Annotation[#, "Charting`Private`Tag$5984#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{40.625, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, {-0.35, 0.35}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\[Sigma]act", TraditionalForm],
    PlotRange->{{40.625, 47.15}, {-0.3517824999307263, 0.35178675396480125`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
Ao11t6E/L+VHF6hQ9H/3FTKS
         "]]},
       Annotation[#, "Charting`Private`Tag$6031#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{40.625, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, {-0.5885120913488002, 0.5885120913488002}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\[Phi]", TraditionalForm],
    PlotRange->{{40.625, 47.15}, {-0.5885120913460256, 0.5885213118891542}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
4ent2zfs8RojtnvX58WAveqiG0YDx4jUJ5OQN+C/p1oPhUSNkVDuxLX2eykc
yAo7nXBnjBwwUD533oTCJRqFzjtejxGe7p1yxWYUfrml3eHRmnFy5Me5oyv3
w3MjrbcKb8aJ+MW0/5zAi0sXG4T0jZMGqWreArBe28E3PSPjZNM2gfwdVhTm
H/DUODU/ThaFJHIcOEDhNS/2rFquMkGKhYvTYw9ReA579t31mSCCapOf56wp
HKPEsjQWmiSm/nxc2IbCLd9XLe+RnCTXmlcoBINfFmTaHlGYJMtPmx/isaXw
yq4ka331SbKx+GmHoB2F150WMSemMB6H1iw/RuGBoZg5oQQYb77sge4J2D/7
sf51fGzSfU+jJgTs8kUreEyATeSn9T/XgBv3edL3hdjkQWLA8j1OFP7vkigS
kmSTJx8+Xzd1pnCaotGDnFUw3jE33M6Fwqs3eqor6rGJnP9OpwunKVzd6Rk4
4cMmX9y4t9aCS325pyTPskmmfZ0Arzvsz4IYj+0BbKJtoJ8TDh6ekUg8F8om
pjJm7EgPCktPd8c0xbJJ2FNb7yteFL43Ufc8O4NN2D+CglN9KayY1NMU2Mkm
xcM7zfrAFlGreda9ZRP/Xm6lFX4U1j7KZ9vZzSaLai7V3AbjWo8g6T42WZUQ
x3f/LIX3i7M8vEfY5IBGenS2P4Uf8krWe/1lk2rXF0lPgyhcwbko9PpKmkw1
xk7Og6ejb/D9XkWTVco2DCqYwqlP22UsVGgS9pFzog2s+eL0N651NGHt3ak7
FkJheWVXf2VNmjSq1w7Kh0G9L/D9mcKiyczla9uOgZVvPvpcspsma0Yc4rLA
/gci3Jr1aRJ5m3er9kUKy7mecpkwpomB2O5ok3AKbzj2XHTGkiYtU02bQiMo
PBpVvkD3OE04TFIuNYKbFuw/tfQETTbmnPwgHEnhryK2UYNONIk9tiT8Jlhu
9sDHc640MX1j1FMcReEhCTF+Ty+adJS8DhqOprBQ9qtTV4NpslD89psNMRS+
6GPqvzqUJpvd3Nd6g602ThoVXqDJNRWxTq5YCntv27TzRThNLBPNVWTjKMyu
PR33IJom3X5dzUbxFP4itr89O5EmidduusSCU/37vb8k0WT/I7vFbWDcn3lW
KoUmb4Ynd+9LgLxYzJnjdYsmbfv5ag5epTDz0Xjjwjs0adLUKXW8DvWr++6N
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
/vdBuQL9D9w53Nk=
         "]]},
       Annotation[#, "Charting`Private`Tag$6078#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{40.625, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{
     None, {-1.24, -1.1133947643237487`, 1.1133947643237487`, 1.24}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\[Psi]", TraditionalForm],
    PlotRange->{{40.625, 47.15}, {-1.1133947587450999`, 1.1133613494000998`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
M8RvCg==
      "], {{
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[{
           PolygonBox[{{738, 742, 1, 525, 355, 230, 143, 86, 51, 2, 3, 4, 526,
             356, 231, 144, 87, 52, 5, 527, 357, 232, 145, 88, 53, 6, 528, 
            358, 233, 146, 89, 54, 7, 8}}], PolygonBox[CompressedData["
1:eJwV0jlPlFEAheHBABrhF7Al1mxCx9LIYqmsEToYShYbBCoQxIB7oxFEG2lA
I0ICA5TshWwFYChAUQiJVGijjfrc4s17zrlfZm6+mSvR21VtFyKRSBxiyMep
4QQVcjYy5V4PxOOD3o5KXLO/tKVgSX+IHGTZ+2wJmNDvoMo2pmdiJ3SU2Ib0
VCyH5/RP8g080hv0mFyAb3puuI/tnp6Ij3qzviCXoUOv1sflLIzI57xr75Z3
5Fuo1kv1YTkNz+UfvGLvkNflm+Hucjwe2xt51rbAhfyWf/N3ZwPygbzBDTzN
l/EFV8M74X77HF/kp3zMWzzpvIUXw/dzOY/xX97nTuc1/E7Pxmv5J+/Ze+Rd
uQ41epn+Sk7HC/mMV+2d8oZcEd6ZnIAn9ijP2Ra5iEf5T/jscD/ng3yob3Ij
z3ASviIv/B583z7Pl/hZ+N/wNk85b+WlcAe+zuP8j7uc1crv5Ry8kX/xZ/td
eU+uR61ero/IGVjTu/RNuTK8R71Jn5eLcaI/CO9djiImJ+MI/wGFyGNf
            "]], PolygonBox[CompressedData["
1:eJwl0slTz3Ecx/Hfr4tutqQQWvgD7MuMsqbSBRfEjLKbaSMMB0ucRHJhFP1a
uDBDndDiYsrYmxxQmSEzXDJDZMnB4zMOz3m+Xq/39P01v+8vtbBkfXFcJBKJ
YgAflUEkyElc7PBVvoLtWIYF9ir7WNzVj2MSku0ltm9yLQqRY6u3peGJnomF
tnP6ONzTT2CT7bY+B316IqbYSvVhuQ679HY9E0V6rh6T0/FUz8Ii23l9PO7r
pXqXnIOT+mb9jjwXMXmE++2V8hu5AJP1qXqZ/F0+K7+Xr8q75Q45C9flUd5h
z5Mb5E7O4Es8xL38zP0ov9Qf8wZu4THox3L3xVxtb+MJXMOfuIfb3Mu4W+/m
XL7JUZxy28IttnnR/+/wtP5W3ookfZpeLv+Qq+QP8jV5j9wpPwz/A9/gv/ya
d7qv40b9Ac/iy/yFX/Fz92PcE94rb+RWjscAVrgv4Qv2dp7IF/lz6G7l8iM5
D7fkOFTaC7jVNh/v9DN6n7wNyXqKfkAekevDbwL5tibbbLzQV2KprUZPQEf4
TsLvCdPtB20/5Vh4n1gV3nf4njDDvcL9l9wQviOsDp+LmW6H3H7LjdiLNeGZ
SHU77PZHbsI+ZIfnIc3tiNuo3Iz9WBueF/4O/wBed3Bq
            "]]}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwt0b1PU1EAhvHCQCJCpa3KKP0LaP0IKuJIOzOIQRBjJCqinesHCQyAspgI
CIng4mTQGFBJapjUhLqYsLTCQjRhwPIxyMLk7yQMT97nfc/Nze1p8mau40F1
JBKpwgx+K3+Q4G24cbjv4b6HGp3F+SCWELWN45z9kt6LaexiwH7SHuNrSOvv
cdX2RP+Mev0Zztpa9R9I6nPI2q7rl/kX9Okv9R3c00/oDfwaL2NY/6Xv89c8
Jd+hkz+2R+RbZG3fkeOfzJv8Oa+TBflUnpEXna3LGnxAh70of8q8LDpflRV9
SjbJZTkrM7LHeUke6G9km/wqC/KWnHK+EX4/3+b9/Dg/xrt4CUN6Wf8X7oQ3
y3lc4Y/sGf4N4U/8qB/lYzitX9BXcEp/hXZbtz6JCu7aErYof4hF1NpGkbaf
D3eLCfzFHXvcXs/zWMAR2whS9pbw3XiBLdy2x8K9hu8K7w7P4z9Rrkl0
            "]], PolygonBox[CompressedData["
1:eJwl0LtPk1EAhvFCJ/8ARUZtoRec1UGByITQFk100yZuGmyVsqjcFhAGFi8k
mDCQ0NbrVA2bLUxiHLSNizGCEQYn3Vzw8jtxePK+z3uS8518R64UzxfaI5FI
G1awS/ZQ0p8j6mAGadsxnsMYnqHdPo2Usx6exU08DffZp5B0luYL2ESnbQn9
9gxvIc2rOGe7wZ9E/j9oEglbin7FSf4Keds8z+hvMc43+GH9Ifr4ML+ot8I9
vMl/6o/CfbKCEb1o/x2+rw/IBq7pj+3f9EX9r74uJ3i3TPIv8gBqyNvfyc9y
Tu44/yh/8VV5ItwrX8rL8q7zTzKKF+Gt9jdyS5Zkw/l3/b7eIR+gVx+yX9Cb
mOAf+A99ObxJlpHTC/Yzeh1XeZX/wR3exRP6No7zGi7Z5ngdh8J3cdp2lr9H
gq8ha7vOK+Gf4bYtbuvWZ/EaB233cMo+yEdRxj5u2WP2Lj2OGI7iHze2Tp4=

            "]]}]}, {}, {}}, {{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1:eJwl1nfYlmMcxvFXixYhZCRlFKFhVWSErNCSSKq3ZKRCJNKySkNbW7sIKW2b
opRCRkVGJSR7hazPefjje5zj6nm6n/u6rl9VLuzatMseBQUF24sUFETL0vbM
F/xQtMBJUBcURTHsLXTwZ77kh+FKnIzi2Mfadda+4oejJU5BCZSz1tHaDn4E
rsKp2BN7Yav1krQUSqMM9tVd7zNf8yNxNU5DTf2D+pJ4Rr4rz4799DfodvKj
0Ap1UEvfX18KC+S78zuwv/5G3Tf8aFyDhrqJukpYJddFbd0AuTQWyl3kFfwF
6Jn3JD/J18Cj/C90o74fv4G/GvvI5eWb+G/5gfxn/CN8B/5ZfjmtT2fQP+kG
2tr6BXSS/AI9Ip+h39D19I38fvqW/AZtSufREvgI9bKH9CH9s7QMHUa/oIus
deVf4y/EnCL/b/Y92Vf6lK4mJvO/0k36e/mNfCuUkw+QO/Hf8WNwnfycfCau
lS+UH+UrY7V8es6LbqBcFovlXjkrurlyLXyYvceBupvl7/mxaIMzcqb0g/R7
Y4ncO3uPg/SddT/w49AW9bPP2GatPK1Ac+h/5MejHc7MWdQPzj5hqdwnvw0H
67vqfuInoBAX6SbrqmCNfFbOpW5I3gmWyX1zxnVPy7XxUX4PDtHdIv/MT0RH
+Xn5LLSXL5an8EfiTfnsnGHdw/K+2UP5Fvl1/iL0y72Q5/EnYQr/G92sv4/f
xF+Dg+RD5Vv5X/hB/BZ+En89/wJ/Nmbyu2kH/SX8VP5FehQdQ7+l79K1uUf0
7ewrbUbn0z2xGefk7tCh+ufofnQ4/ZK+kzNi/Va6Ul5JL6ZPZA7h3txdOl93
Mj6W75c/5FujgnyYfBv/Kz+Y35q7x9/Av8ivyDPQWfSv3MfMJuuN6DT5JXo0
HUu/o+/RddZ70neyr7R55gvdCx+jgfV6dJj+ebo/HUG/SrZ2G7+KvwRP8kVw
X+YKfUZ3Cj6RH8jdzP3AwXJFuRv/Gz85ZwKX6qbrjsFb8rm5O7rhcvnMgryT
nCccrr9dt4ufkv3EednvvCdUsn6H9d/5qXlHOD9/L46w1t3aH/w03JgZmO9E
ZWt3WvuTn46bMovyfahirYe13fwMdMpdz/flc/jcehV6JI7C0fG6u3zmL34m
bs5dyp3Wj9AfkLOW94Nj8jn93bq/+VnojMt0M3RV8XbuS+64bqR8YPZVfhCt
dQvkU/GpXDXPoOsp/8PPzm+VX5IboIt8uTyTr4Zx/Pc5q/p7+PX8FdnbzAt5
VO4URvI76Mv6bpnH/CraiD5Fi+bcor/1a+nC/Fl6Gp1Kd9H3829Bnjt3J/ee
tqELaEl8gmp5J5nNmXn0X3kI3SY/lr3hX+bPxWz+b9pV35ifxR+L8fwPdL2+
F/8u3wKNMsPk0blbeEW+XV7NX4oBcht5EV8HW+Rj8051veT85+HxzCU00c2W
j8ucyDnODNM9krOOV+WHcByq6Xvr9sCczIPsL6rn+6310RfJXMjdyv7g+HzW
Wl990dyzvPeC//8P05iekM/z/awVyx7kt+S5cI5+jO4QLJcH4sR8Z2aOrjjm
ynegqe4xuXpmQzIa6MbKh2a+5M/Ja/jLMEhuKy/m62KrXCPPkxkgl8DTuSfy
K/x56C43kx/nj8cE/secB31v/j3+SjTL/ZfH8YdhFP81fU3fnX+TvzzPzhfD
YH07uiR7SevRafR3us1a/8wzfi1tSxfSUvgUNfNO6P36pZnn9GH6eeYQnZd7
S1/N30/Pz/mj/9BNmRfWm9M58gmYyP9EP9D34d/nW6J5ZpQ8nq+I0fxO+rr+
Tn4t3zjvjC+OIfpCujRniJ5Op9M/8t15PusDclfkdbQdXURL526hVvaDPqBf
lplOh9LtmSN0fuYLXZ5noA1zpnPPaA9rV/BP8CdiEv8z3aDvy3/AX5X5kLkq
T+APx0q5h7yOb5L3KLeXl/FnYHvuQt47X4jFfBlsQW1r/wEdp2tV
           "]]},
         Annotation[#, "Charting`Private`Tag$6125#1"]& ]}}], {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{40.625, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, {186.04242155687558`}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}, "AxesInFront" -> True},
    PlotLabel->FormBox["\"FL [mg]\"", TraditionalForm],
    PlotRange->{{40.625, 47.15}, {-0.9551693277402031, 433.6655127758507}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$6176#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{40.625, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"FDx [mg]\"", TraditionalForm],
    PlotRange->{{40.625, 47.15}, {-321.21641846679006`, 321.2255226433187}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
YJHSeK8u+R+y4900
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$6233, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$6233#1"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
s3GE2Q==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$6233, {2}}]& ], 
          Annotation[#, "Charting`Private`Tag$6233#2"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
Ehcj0hB8wvhEHhNsU1+2n4wxIbleQj4y5VgPr3Pten3NyIBVzKnt6FMzz9TK
D5sRVb0/99PR2cnVthmRZuTKbGevQgXmp1epOTPVjESmPNi1opIJZ70OGlq9
NSP25bSdOu9xPzdIBUpLmJMRrf0utFomqGbW6zsXmhNNoa7DJ9C6fff3O78z
J15/HC4RdOpczyrbWnPSWmLavL4O59+lvEvlmzl5sx1vmvVM0HAQOeC91IKc
S7hma9/IBEshN7eVLhZEe7yK7tWK41eDnYr9FqSW2tSfiX7zql7u5rgFOXS+
+uwoWuOdsK3wrAV5ubKuMbyNCWHu505WL7MkrD3NHpfbsV6HznSnGVgS784v
4dUdOD9ROWbHjloSXm0PJdFOJowtKtISjbYkj450l25DrxuwOHPtjCWZEP/O
14fuuPJQIeKaJYmy/3mF8zPuJ8VcgcgiS3Kj7NeLNV+Z8MJrPMNn1pKsFzvs
GoHev9g0/C8XjfR6/ZktRf9t/UVC+GhEh2N6/ZYuJpzvt19Ck6aR12b/6v26
MY99bvz+ZUwj7dm8w7d6mLCTmdza5Ucj4f9OJ/ahZ2JdRawCaUTRlt9o1Xfc
vzayOdeO0MiegWXHXqP7kxYnLomjkd+qoktbe7GffPi6dSSdRkTS5NX4+5mw
dEqptbOSRuiZKSK26AauGPc7NTQSms/PcQFdUKAo6NpII58apztEfmL9nc88
G99JI/f4WxNlBpiQ+/GZ/KJhHJ+07XF39FutPStXj9MIn+Y7vxvoY6d8Ujf9
ppED9GdMlUHMN9cQBcY8jZhGnJ/TGmLCeO2knpUARXzPLh7wQ48+k/BsXU6R
9KvhbU/Qaj5jqvaiFOHM9322epgJv+sOcvDIUOT9CNNn7QgTlPINNh1Rp8jc
3BvnY2hOTRsXDy2K6PEbb3iDvqL9VcdQhyIpGisU1o0yAWz/fryymiL/eSw0
WY1hvvO6nfQ0p0jigZC3Z9DJQkbUdUu83oQPP61GV9W4cpRSFFG/2nnafhzz
J9zJvHoDRVwfOIQmoeXjd8dlMyhyNq/KuxmtIqF1JJxFkbGGAsp1gglrmKum
G60potK1SjcNfeOls6u7DUWcRu7JfEILic9x1tlS5OScHK/CL9xP5yu/aG+m
yCu+lN870ap/Q9sO2lNkSIq/JwPdr/25+foWiihoRNf3oEf9utkvHChibzz9
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
wvA/6c28zQ==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$6233, {3}}]& ], 
          Annotation[#, "Charting`Private`Tag$6233#3"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$6233, {4}}]& ], 
          Annotation[#, "Charting`Private`Tag$6233#4"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {40.625, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {40.625, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"stroke\"", TraditionalForm], 
       PlotRange -> {{40.625, 47.15}, {-54.52590997973479, 
        54.52548083250462}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"i\"", "\"g\"", "\"aero\"", "\"act\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
3ydBnfStkdZfHsWFvHhVj+4MdfI/+9HwJg==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$6385, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$6385#1"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV13k4VG0bAHDZiuxLZN+NZWbOSCLFrWbOKJEtSxFJWVIJJaIk9ZIS0UaL
UCpZ2lQUTxQpUZTQSkKKkJIS3/39w/W7xhzPcm9HO2Cr6wZBAQGBbPzx/9/2
4+ozBJy58HCV5ZO7tQziMR6cZYc+7XeeYdHMIIHjNwz3ofu+eUqe6GSQvePL
nERduBBlED8+c4RBKsa350i4cuHNtvw3ZWpGxOT3s/lz3blg9s50WfhWIyI1
ER9q5sWFZ3uyd8iKGBO1icf/ItEPJ9RimiSNifGEfMYt9Ddtq6bYOcaEP3H5
tqU3F3oDTNLzDI1JwsQrYdvVXHB4WjIyf5kxGZlgnnPw4YIt477chRRj8vLP
u9ZAfy54ts2vsZphQlasX/C1CL3zSNTB4Vkm5OHTdMEf6PXrWwdzZEzIzdNL
OXvX4edlao4vNE1Ips3ltDMBXGDXWaRVLjYhrolRy9oCufBXVb7yRrQJeSE2
u5ofwoWIjVuiDT6bEPuIwLY09K7t3+9VfjUhpPP+4Cu0YuPiR8tGTUhZUbha
YCgXOhi2G52nTUi6Y1tMwiYuOH/wqhKba0qcM86b393MhS4JH2crB1PSpGx5
xTiCC29bZR61XDElL+G/2ZvRPVn/wi3KTMmb4LawUnS10aP2rFumpP9OFNs8
kguO4WM9dsSUCHlfu7k4igt5tiN6vq9MieUp42rnHVz4tScl4NSUKcmbq/5y
RywXDCx+/jR2ZJJLdmHz76JTPkxX9rkwSWlI5fG/aGnfnfQ5Dya5d9fbO2EX
/n38j4IpPyZ57X38fUocF9o36WzeHcEkEtnSX07v5sLBeTIr9x5nkh0qglM1
iVzYWjS2NK2TSaZ7JmSF93HhxgqH6MPvmSS5dESfh54+cPLQf91Mks3tcqxH
bzcY8AkbYJKqLeTM0yQuSPT2H/s9wSSitbsXvzzABTGHuGJVZRY5vulv3OeD
XBiY/VjpqDOLaFr8SDdI5cKY3efLQ24scknga0EQOuruyCLak0UqjnU2fkGH
dx/b0uvLIu+r76oNHcL42RG95Gsoixgo7Lz3Kw33q5w4NSuJRW7fG/s7M5ML
de8+riq6ziJXvv/JdEJ/uyIdcvkWi5zWmWF6DP2i4IRK3h0WSUyW9NHJ4oLN
8XXh+6pYZIW7wb1Fx7hwvPdzhugTFun+6hm37QQXyOmrLgofWURKtXKyM4cL
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
BlHQPPbUPOkg1qtVbU5Gsbjf2NdNTpk0jEwbWXnnUXA2dG1CeT4Nb7/8ylUc
pqB+yCz/H9osodXNdwTXGzGzjltAg3VRBF0wSoHdrrLZreiXBaGt7J94PqmC
J75foKGid1nvoj8UmBRfLGZcooFn+rLMSJgDd74PdWZfpeF1QtAcXSUOdEXW
/utCF/mDGF+ZA+K/T2gZFeP674xFh8zlwBoBu4230VreF0svq3JgSiZzpLWE
Bqubl9vmaHGAa7ZgluQ1GoQ4VPhZBgdeRO2Zv+cWPi+eVrGw5EDynWV5D9Bf
QmzHJK04AJPy0sLlNBRv/dnwCV2671J/Mvr9wstuKdYcOHz0Rc7R2zRcH85y
rLThwLIyXcGLd2lwvF5Ol3M5IDA2uKUf3XrgSfAmHu5nwZ03xhU0JF80n6dB
c8CwesWtUvT7pVuvxvE5INK0PfhuJa5v0jpXbTkHHnytb2q8T8PS5trZPU4c
2Mk+ai1dhfm0wGbZtpUcoCJ9Lrmgn1fffPsXfe7P8N42tP+t2SOzXDgQL6Yy
/2M1DQ9FbtoKunHA3LHnvA6h4aSp35kY9Lf0EqkNaDXzacMh9Brlpf1f0H/O
FZY2uXPAyjAs58cDGo4+ivsb5sGB4VCLWRY1mD8J5vOeoS+VCGzfia6pydtq
7MkBJYtjTv/QUS3F3W/QTTF+lba1NLhpukpTXhw4cN+IkYiGn5Wme9E/uVUz
Zj7E+Fr6W1/FmwNXk5O3LENHt7ePr0MHNrq+SUVbmOVcvIhudeu7KfMI//+T
gQMGqzlw8MQ1bTd0+b9DJevQS97sSjuGdv6w8Nwp9LUAmWCVOhoGWYP10+gB
+33/rUGrBa2fw1zDAT32r4un0Sne3xZ6otcqhtS9Q8+U7qJ2o0/+ffNZo54G
8YCcH+fRLV1OIv7oJ1Pbd9egJR4/0DuPXrK+sfEDmi4x53aj53z40zGBTsgq
XK/7mAb3zLXnZXw4UBGrsi8QrRixSkMPPeZ/OO8CemqxzQpzNIsvUNOLzk3Z
aWCHDmZGdhk2YH6UB15ajs6T7xUIQa/6uf6ZM/rthJfWFfTjJe3pbug5H5/a
fkVrb+MMuaKd62z8TJ/QkPVKqssJffDqtd2b0Tlu/YF89MOjemdL0K6pnO2L
0FM7T9z/jp7r7SfJQlv6ib+jnuL5t/Yx1NARvPjJbWguf0mtKPqqybDqDXTM
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
ziBfrRXN5mVifM07IPW8lkH+BzrEdgE=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$6385, {2}}]& ], 
          Annotation[#, "Charting`Private`Tag$6385#2"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV13c8Vm8bAPDHJpI9HidRRmRVmsq51TOUESpSRCKiJDQIPzsaUiiEUnYh
ZVfOSWVXsldF9h7Z873ev3y+n+M85z7Xuu8ja3PFxI6VQqFQ2SiU///VndvI
QjGiodxD1ikh/FO46ZxDpA64UtYvc37XFG47904xADxp+WJWwnIK95s7Yshp
TEOHC6ZlHTKm8OK5a0/5TGhI6Gfp7e06//Bt8992SZ6gIey/Mx08VtP4/nmJ
ytPg+d48TqbfNK47f94iDpyYEJqn9nIat51f8N90koa8tO0Sl3un8bh5+Vp5
UxryVQ2iR9nP4PwL3o47TtGQUW3OSO/pWRxbqFhxA3PalbE235jFlReEH+aB
d8t9eX8tchZnLqQX7DWnIcWe3ImPNbO470IjO36ahrrDnB4G7pvDJxdUn+lZ
0NCi+Ha1U+zzOGXx5o77YLc+bztLbB7nX/z89TvYX3s5UUJzHldeNB8xtqSh
s7GFAe9s5nGbxaB9p87SkP74f84PP8zjDYu/6m2taUjA+t+b8PMLuP75PcOv
wFuLvir+u7mAf6kOZ/0Hdm4IfccXtoDnxh3e7neOhnbGew47FCzgEdrpYfE2
NGQpbn32D+cibuLvfqTJlobmwu92Po9ZxKuGvllvtKOh6XhOxYGMRfzQccWb
tmCHF649M+8X8R1ybSlT4JXqeY+LvxZxoTKcfYM9DY01z2lUbFzCf/LwEsyL
NLS8JfakctQSrutq2xQGzjojs1735RJOtn0cbQT/t7MheH/OEv7mlQtm60hD
1VOZg89rlvBwgyYPXycaStIq+BvKsowbPUzULLpMQwbZ0u88bJfx7xJ7M5Rd
aejnpMzFm8IreAO6zXsZXKxF6vRgK3i7Q9OlbPCubkH3Awor+EChu7qmGw1d
Z6pav9u7grOZ5+QedKehkscj5l8tVvC9McqE0XUa+idj9+NL4gr+QnJjw3VP
Gsp53eGgIruKp+lc2lUElnkuXP1+6yqeffH94yXwlZhyJtJYxT8UmZv73qKh
ZFkOAyV8FW82f/w71IuGQgrN3H0tVnG+2A2DcT40ZPdYI8s+ahW/TmVdLfWn
IZ7JexUyLGv4Ws+CIHsADYVdtrfw5VrDQ7In5elgdnO1+db1a3gsrcugHMx7
sJO8RV3DS5zJ+OpAGhqu6BPw3rmGc372OdgQDOs7U3Q4wnYNf+y05NV7B/rB
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
tIcaTTJQ+44e4+Y4jJz4WYCfmoL6Gbbk+pKGkZs71VRjwYG9w/FPXmHkibFk
agf4JGlHP5OFkUXrImes/jHQDsHpyLfvMNL/sMsr+2mYv5hKy7OPGJkLHwzp
4MO+qU+mCIzstzobPAzm4RZk31WKkfpe+ueuzDBQXX5zTkgZRvrc+WyYA77a
eLQtpgIj30TvP/APrERt9o6twkjRvK3iN2YZiH/Ght3xO0bqfn7GXgTeLu32
fW8tRnr+FJtaBLs8+dA1+xMjf4+yf/OZg3kgw/YWNWKkwPKtYhLc8WzpZE0T
Rh5e9y+VdR7mI32LILMFI9MUuvyDwS6vymJ52iG/8Remv4GVbSOnnTowslN4
xE50Ac5TH87sLv6FkV53rjZbgJOzpY2mf2OkBMucbhL4bVXtdmonvP8Nr+Jh
sBrFtHpbF0YajbGo7FyE89JXPz6lvxg5Yns73hNsrCLWK9iNkSHtfBtKwV0z
pbQ+sJzJI1+eJQZ6lS4nldKDkWSF+JQR2Dz5s5lxL0Za4PHno8HftwkP9YPn
8zY3/gFvcHX5dLEPIyNV0hiKy3A9XfZbE1jjpWqhM/gdz8lltX6MrJF8p5QP
nqvfpO0Kvhi+9+nK/6+f9vZ7DubkKuGjrzDQHVbDvCLwC+/DPvfAAYdNKz6C
tacrxuvBwmkH01+D2xwNz0mtQnyr7jOCwde76utswC9McsKOgoVOmdMywH9H
pq4swHqyvv/OmwT7Mb1aHoGP0m0V963B/dwn88XAfe8Ho33B0uXn5gLh/fx3
XFlXAXZbtQn9BfGQTp++tYHCRBGc0+Yy4OJNnqOm/7ftJVMDiJ/p47WzCeD/
WEUv2UK8p/iCanvBAvn7Q+wgH8qLD965szCRQhstRP4PRpa5iMp/ANd/r6f3
QH5t+mMfs7EykX/Rjo/3IP+xDckej8DGP0LuxLZi5G69bcOt4B+q4YVrzRhZ
9+mNhSwbEz3/GmRkCPW1Lvs9/gYshyiXUuswMkVeJ2cObNbQ8jUH6vVQXNlm
nB3WN0zbnQz17Bn6k+M7OG5wmp0J9T58vr96mIOJKHeWptxIqI+2Swd3cjLR
vNzxuC/QX3LGU1me4KYo4YyVYqgH7ZWHPFxMZF3dFrk1D/IrIXxKkZuJVB5w
c1pBPzs8iK50BmeLKuycSMJIdk5prXxw68d3LBcTMfLAv63SdB4mqt0agwnG
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
fFhLdMfOCCY6drumtXv9FP4/wXgLxQ==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$6385, {3}}]& ], 
          Annotation[#, "Charting`Private`Tag$6385#3"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxNzX0s1HEABvAfcZa36krD5Q/F2TjpFGmtS0teZoektDa325HsFBeHTnm5
O0wy1O+msNQqm8hkOlZaGbnV5CWdl9ykdhFTmXbrh5Jqa57vsz179vnrcZWk
Rp82pyhK+Lf/NpRxMaOiggKp/znBJGkOEU5gWj3UhJVMWATrKPyEyaixjYa9
Fvv8nGJg+6Ucqe9JWL888TZBDPc7BjR4psGZzua/u1Rw+1PTTysaTlQoV5ru
wd1OuZe4Wrhcv2V1VQebfPReRWOwVeq6kfczcPHL1+oby8SfJavZzebImvOM
ZwriOLDWEB/H8OCq9oHW+APwl6ZhO34kPBZkwW4Uw2nP79CMDM6OMTjWqeBd
fWqOOw0fF+tcWXUwW8MfotvgnEZbyqSDYyeUfO0YPPk98UPoLLxaL993eQku
U2yr9LQJXnOv9x5ZLQfO+jUlTPeGO5I7h00CuOmZtSE0ErbnzRtXxLBLzmFp
4Xn4RUpn9WMlPJ492h9Bw7VSUX7bXfiNPM8vTwu3SDYmOetgz4VXQZIRmF3t
4m4zA9dzP6qKFuEHfYJPEuuQNYc59MzPcWBNYMeFEB4sLAq3tBDAj5rDN9AR
hBXy7n4RvEO092KyDA7kSh+O58PXh2RsNyX8LTdLfo5wzWhBAKWCfxTf6nRX
w41z+kFZIby15eACqwQ+Gxd8LIpw93qhtoqwTHJKwbsC927OMIsuhfMzGzbd
LINHt7ekTxPeOdA+7FMOGzx6qroI+7+bdJ2pgEsLp9X8q7CR/3Uqm3BFyfJ9
u2vwZ38z21jCAqNVym3CmnL7wVnCc/sdfHfT8B/nyhFy
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$6385, {4}}]& ], 
          Annotation[#, "Charting`Private`Tag$6385#4"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {40.625, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {40.625, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"hinge\"", TraditionalForm], 
       PlotRange -> {{40.625, 47.15}, {-17.359999283656602`, 
        17.36065011291319}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"i\"", "\"g\"", "\"aero\"", "\"act\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$6463, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$6463#1"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
nv2RvmU6iELY3+6VVqBdyz0Cmv5fH+zdYmsYbGjKsZXuxHo6M0WexaCP/zo5
IHCQQvivyURUoQXXq63aFEchX/netW9gYn5+UUxVOU4huYR+ydyEDev9Cyek
z2E/CUqzPYEWS+WTkcmkkEPygzxv0CqNO3caXaKQXbFZnrar2TDy7MLRJ/kU
QlnLp7ltDdajxGCj5EPsX8POnefR/N+yDSefUMifzPvJHWj163G7hmoopHPG
d2znWjZo9pdEar+lkIsV7+95mmK/XlXE4u2lkJD3jKEi9AfLtXqrhyjEauCy
3CQ6aabr+pkfFDIvGZQUtw7j2ff8/i3sn14Ry1xz1rPhb7dZf/RKKjFN23+m
Dz0b5XCvFvuxZH73a21gw7rxq8v11KnkdUsp/RF671OJ04HGVKJrtFmobQM+
741MW8Y2Kllk/XC9nBkbRD5GTE7uopJuL8Vwb7T2rqQ1Ebup5PSZiS//oXdk
2Xz5tp9Kfv936v4yFhvc594zwnKopOZuo9smDht8rx/12DVKJVl1q8+dQlun
nPjGi/dX2Ner9e1ooVORHXV8ckR9Rajxbi6ef2H99bcr5UhKsJjIEXM2PDVT
vXWeI0e262+peLIJn88Aw/U35Ii+eeWIgCUbKuXjNaFcjgi5qShZoVXvdlXt
rpUjlSenUjrR3t//mWp/liNKP854TFuxYffj3vFjEvJkpKRliYEtG4L+6o0V
J8sTc99vPyPQv2Pv1XzKlCfXlKY/VaLlO1/fNSqSJ87nV94yt2PDARWTAsfX
8qQuztnGbTP2G87EQLmAAilw6Ek76cCG1bzDKRHmCoRPdDKiBW0/NJ/K3axA
dr3ic5XdgvlqEZ24ykmBSJqq6BWgO33O5xkGKJAjarvfV21lwwWiKWJwSoF4
zIwsHdvOhubPHRU8OD9V3fs7TXNkw9lvKR8lhhSIzD7R7ih0Q06Qyfr/FEjD
V73SBTvYMCqxpfkdzmPwJsSO6oTz1JJKaq+BIqFe/p1utRPrN2CyaCRJkbSz
BFbcdGND8SLxlEYLJVJTJcQaQa9+8rykcKsSKWEuj9BxZ8MmdwObU+5KJH6V
XOdtdJ8ce01mlBLRFmdeLfPA++Tr2ZUpRUoktnePYZUXGwLo/CmzS5WJanyT
fYMv9gPnDcf0hpTJsrmOIyv8cF64k5HvPa1MZsO7yx3QFzK4hrcXqJB3fqMy
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
QGsl8j8gpPf+
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$6463, {2}}]& ], 
          Annotation[#, "Charting`Private`Tag$6463#2"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
YJHSeK8u+R+y4900
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$6463, {3}}]& ], 
          Annotation[#, "Charting`Private`Tag$6463#3"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
s3GE2Q==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$6463, {4}}]& ], 
          Annotation[#, "Charting`Private`Tag$6463#4"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {40.625, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {40.625, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"stroke\"", TraditionalForm], 
       PlotRange -> {{40.625, 47.15}, {-74.27628781245596, 74.2731971766978}},
        PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"inc\"", "\"ic\"", "\"itot\"", "\"gtot\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
NJEPjakTvg/fypL/AQOz3RE=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$6541, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$6541#1"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
XYJ8Gdp2aN8lJjR1PWR905ckb5R30yrQlPs3/06YSZJGO4/iefTJctaRYWtJ
UvIg+H1SGs7Lq+mx17dLkgNxJ1YXpDNh9umVi1bHJImYwuO57kw8z0R36315
I0m4Nz1NVctiwlrfLbpPPkmSyZgGPW/032QxrvhBSdL1tX3nb/RzZsxC15wk
uXp3uFL8MhO0coOrU5ZIkVXrlKOZuUxYFOknrekrRTwjj/4rucoExvPjO1MG
pch3v+hPo2jNGLMP28akiM/uyKeMa0yIH0w4KDItRfyt9x2/j07fsrViNS+V
hIi6iVYVMGFl38TbciUqic4DpebrTNAek8rR30gl8+dXL4gWMeHuu79Xm+zx
vI43+7wZ7f9YRM7BiUpi/ejX2tHL3B4sNnCnksTlqvo9N5iwVf2ux6IDVJLa
tLD6RzHWt8at25qXqUSm8q+yXgnmYyhZMy2fSi7dmuYKRJu92rduuoBKMs6P
1o6j9R6W5BwupZLcXZ82zNxiQu6rXzl3qqlkyZYeA/NSnLcnOq6m1FDJlbVv
JaLRB9ea7NnVQCUFWq0dXLfx/Hc2FyMtVFI8/mSnwB0mTHPz+9x4TyUG/Y8s
1qEVdM8FTn+iktLOctVT6MPf/C2N+qjk7uNb/eJ3mVDO8/35vkEqqTh+2V/2
HhOO9QtNKPymklUHMjZtR+ffShzrmqaSx74X6Zlog6B5g/hZKnmyOXlSuYwJ
gQo/k4sWqKRm8eFDmveZkBCs0KEoSCO3whK/BKDtT5hOHxSmkYzWczb30XWa
Ly7Wi9JI8PFCGrOcCc7SkVHKUjSyo/dOVBLa4tm6zmU0GmGbV/a2oRs8+D5q
yOB9a/xVsdsDJjCddqh1L6YR/g09UkVoi/+cWy8q0MhEwcCBMXT5wgFvSyUa
ado5yzxSwYQYmekYR1UaKXvAe7MebRcuovpUjUZypcQlxR4y4eWHD72L1Wkk
vFH9QxY6Epz4U5bSiJu6gXU/2iP9/akSTRrZcNisaNkjvJ8mtIU+0KIRs661
4qHoM3cNmku0aUTdZOP+R+gl0d+upejQiNiZbT3cj5ngHjQp4apLI7ODbla2
aNW8jUqKy2hkgOlfmIKO0RjqrkW/ygkXfYcW2le73VmPRh7PxoSqVOL8a2kt
eo8u+C+pyxN96hl3z3p9Gjl7+4LlLfSJAxv+FaIPCede+43m9q3SHkd7ed4Q
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
74vywNOhhpbmKjYU+za1l84tWN7ZI+EtX88GKan/QlUEpi1/2MQl7EBLf+F9
1ls1ZalhOFWQhRbwIJvdQ6cs0/72DCg34Hwwkom5+eG3ZUxqobt6I/azrkaa
demk5ZZ6Cxe959hfxc827GNPWI7oBGy1aGEDcWCdKU/8Yak73sTc04n9uMlA
+G5tjWWL5frv19F3zeQVzO4Qy33JzUmj6O+am7X2mz62rFjW2nboLdZPtsyz
lssllhzPDtdL7/B9q07eEcKvVnv0fDzU3I3xGu/kWZnXUn257leZ6Ses50Y/
vvy+/mqpDKWlwt/Z0PDTeYNtzp/q65qfY+P/4P3q5qepam1hUvzSon+PEAdq
7kdsu1cgQ2yl60aHFDgwE5kckqOlSlLh8QGOHgfirmeuGPmkQTbGr+fjteBA
bo+vW5mKLpmID7Vio+9N5CvbGuuStITM6ET00W0ntXvYuqQ/cei3iCUHPnBd
aJwO0CVRSUlfpYED2db9V0QrdUlByosGrbUckOA6InB42zLClbn+5Ho2B95F
PAoSPalHCjJD60+jjbLXl09m6ZH1WZk8r9DFB/hutZXqkYvZQ1GOHA5s3bc5
e98bPaKfm+S3y4YD00XxH4xV9YnztRcbgtZxIGur4Vz8PX1SVrpe/PwmDriu
2VD4tsWAvLdXnG9Hz4x0+Gd9MiC8U8PDtM0cgLQ1nRvGDIjj6uTnF9GpPjfn
AiUNyWTjq+MZWzhgxnF0KrE3JCZf/pvLs+cAs0FnovyVIdl5XHPoC7p5ubEt
X68hOaY93aXuwAEvT+sys1FD0hGY9uAaOsd7eXIBhU7C/naHFDlywCUiwEhY
g07KaK6Dt7dygPeDHXfnDjp5/4D+bhy99KB3W+weOuHdwd1gtI0DpaJX2pR8
6MQxL/9qGfpQJK+nUjidTOoPuFQ4cSCSqfLb/AydKL6+v2kG7fh93NPhAp0w
w+LXrNqOn++K3Lc1k05SH2kpVKJ5aZ9vKhXSiQnHt7PamQMbbV/sK6qik50/
VtVx7eBAsEjsDK2GTo6dFi6zQrsWvXvl00gnHe3FZ2vQjTXqbi1tuB/X0Q0N
OzmgHid89eBXOslaRMwFdnEguSGdpTtEJ7UFKbq26B/HpuTIKJ3QfjIEXqAv
jvyxzv2D+48Mq2nZzYGG8ePLtQUZhH3cwVTahQNXReQfO4kyyLsUo6Id6OgP
i5y8JRnkb+FY8ne04F2rg+qLGeTUvVZuQ1cOrBeScWhRZBDl6lth+9HzbObA
VlUGWdvp78zjxoGOktHuBU0G6fi8/qUNOpzhd0ZFl0E8f+rCGfQfLqtcBX0G
OcE7uFRxD+bzxokDhUYMIi/RmLYHXadTlmK6nEGKFQqFi9BXVIsLclcwyCuj
vePL3TkQIuocwLuaQfZYMD0OocWUqgP/rWGQSVv1t8/QWd8cxF9ZMkj8fzzr
BD3w+ytd70dZMYis2+fKzejTOcc5/9YyyHV/Ynjx//83UCzaxmSQVQdy8t+j
Zd1uHTvBYpDmuMPS6ns5sIbSfewcm0F2n9mV6IPmDrZ3DOEwyFjG6r+laMNr
X7K1bRgktkAhcAqdmBYkch9Nuzvbu9qTA/Ees+tkbRnkWlWXQxy6MSmfdzPa
tKmivgktbXG9fwe6sePSSgkvzE9e4MU1aOfe8OKt6Jtqh+t+4e8ND/2nko1e
Xh2vdBh9eNrkXB+61XvPuve4HolFND5dbw74Ocr+EUXni/2KCEZTdne3SeH6
jeXbfpSjGb6SCT9wv7VL7+z6h17f/N/TVGsG2cpIeWXtg/PndriBJMbn++og
65NotZMHD7oAg0TZbCp/hb7C+cc6YsEgIo76OrK+HDgXFGAVjPm47CKStQvd
rmVjarSKQeh+Q2JX0V6Lzw7XYv6ehj8/+gN96Pg1PW3Mr31s0STdjwPmPhbV
OzD//acTvSLQ/+WHBLgYMojANfZGXn8OWL/8sbZTm0Eybi8l69Cv9VjzNksZ
RK+S1/gsukfA/99JNQbZ3P5MTjmAAztrHv86iPXa+zEvyQPd8ssyVleaQUJ+
xMzfQG85sz6uUIJBLnJb9q8I5IBwc7SECD+DaIsqbzuMTrc5seIXN4M8lPvX
VIveoPeDcn0O54Xh41K7IFyvQH5X5DidqO9ecdAvmANKCvTlZe+w/3VEzErQ
j8aq3Q9hv3pM9k6OoKciQ8XVmunk6smTgSH7MB4ux0d7n2C//ueyrAxNU+fP
H35AJwOqJt9/o0eostrtt+lE88EHt8gQnP9L8x5syqcTduxd5cfoxwndk5wM
OvHamNAzh+4M2fVm5zk6ud5H/y8mFPO9Szfd+Sid6Eocs0kI44Aiv1Kp+E46
WdfjxNeEHvn38rOQPZ34Feg/E9rPAZHauKpcDp0Ur35rnox+H//eydSITgx8
dA0vhHNgc82h/ZWL6GSTycJQJ9pGKfVB/4ghCVpovy4XwYG/oVtel70xJLcv
RC/JQmd6vNYneYbE6Nkr6SsHOFD2Ntr6rLEhsT99ra0fffAxL6dIxpCEOkWd
0YzE+dh+/o3zjAEpG1EXvIEeHc6J0K4yIKYKEXO3ozhAP1dml2dhQFaGKfU9
OcSBZ/xHf5Tq4vljOZHDFY3n0y2DZhOKPokSati5Fi1YxvC0/axHHuUGd9ah
HYbHBrdc1COrX9Y0NR/mwLVHnQ1Ff5cR0PS93R2D9b2HXc53X5dcaguW0jjK
gc+7TWt7juuSkcMRYQHo2DbBoN1bdUnm22NmXLFYj432nzhTOmQqMYcsjeNA
b0H7cWsjHXJzqONV8HE8PzfHXUm/rEVk7liOU05iPSdd38frqkH8d7EdtqAr
Zk35JPU0SI3gxvvpaHUx76eaf9RJ8B7nSL0kDugu3sFdkKJOXlD3c9uf4gDf
JDFUqVlCYsJvSGYnY/+8fnY1lq5G3i65E/oVvcTphr3ygioxaH3wxvAMnncf
fP8ItqiSHq269Gfoa8E7Sl/6qxLTrk9q31M4cEZBLeTWDhVy6vjXOMZZrJff
ynw5/5RJH+PnQBQ66thVsjVXmaScnC0SPccBX/3L3bTvSuSbKbfINnTIzEtn
sdNKxKKPPzAXLVojd/6xkRJJPSP2ahB98ksrVaZLkQyZSxsZn+dAWqZdgGyM
IvkfNqZ0sQ==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$6541, {2}}]& ], 
          Annotation[#, "Charting`Private`Tag$6541#2"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
3ydBnfStkdZfHsWFvHhVj+4MdfI/+9HwJg==
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$6541, {3}}]& ], 
          Annotation[#, "Charting`Private`Tag$6541#3"]& ], 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
aDB63zXD6A+/11SeojNxfv33lnfc/8P/H+e5ang=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$6541, {4}}]& ], 
          Annotation[#, "Charting`Private`Tag$6541#4"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {40.625, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {40.625, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"hinge\"", TraditionalForm], 
       PlotRange -> {{40.625, 47.15}, {-19.546030423765036`, 
        19.546833167652508`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"inc\"", "\"ic\"", "\"itot\"", "\"gtot\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             FaceForm[
              Opacity[0.3]], 
             RGBColor[0.368417, 0.506779, 0.709798]], 
            LineBox[CompressedData["
1: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
1VBhytfK/FazFFdjmw+b6gbK8YK6mXE3q3Hd5On8f9T7t/x7cvAAbzVOfly5
ZvD/8XFcaY8rqkJ3WS35YsqnYquqWG5WYdpljf3vKGcm6Ooe4alCb5YTW29R
Zh+XzTUvrETP4SfDBym/+NOtZHOjEqP07d8wU9bYeJXHaFMl3v3y6lAxNZ9r
24Jf7P1WgaeXfRudKK9upZMMywpsWzNvuIfyjwKe+y+5K7DKLGN4gFqvdI4f
10XyyvHX3pTbPpRPyK7ifHm1HCUnHr6roNZfwpLTVSGrDE0sbp4ypnxOt6jb
1LQMJfiYOWapeHm/c5zZkaMMz0S7EUtUfE0LPmwxMChF0Ut6K1woX2iJWy/N
VopxpyK1f1PxKFZSeHAsvgRDDdV8O6l4FROd9tq2VIyPqo47HaHc2qp0ODSm
GKdGaSkfqfh+ezaOa0mjGN+6Li7qUvHPyXL/QEBEEXaovMD7VP7cMirmzINC
HGNKs/s/vzIPzonLNCDqTPuEjZUT4LQq/EyRIOIp304LVSofWe6K6j8qKECz
2fl36VQ+WxgV39Caz0WzB0upJVS+X70j8/v7qVx8znjmUEfVg/BbC9kOr3Jw
6R/blqYCan4PBT8S3JuNV/q449/kUOvRlOG83joDV+j/fryfqkeH0zd+XBOf
hBIGjT/rEgmQLw6N0BRIxLQbNy6ZUPUrpGjpoUlAPMakX5S0jSNAnC7lOWH9
BU9d6dlxNoqA4/l3NYYkPuGkdJMH4xUBli4thxxs/fDz+hR3qZcE+F/ivLxD
4gm6bazebR5M/f9+ZBUbPkKtri/Jhc+ofKqcDpNpP453akfKVXwIkN68WHi1
yxsO3Sq+p3afgH547env9xGSo1cl73ckgO3Xm9YlgSh4+HpUU9Ceqk+fj1hZ
JkVDxpzg3MBtAk5bjL3hav0MJ19bbZGxpOZTwU7wqUASrLwn0bmsQ0B9UObo
0dYMOPO1dib2AgHF8wujqWGZ4Hxrm+g5Laoer2WzWH8tC9bZPODyPUvFh7DV
fu+5bJCJZZVqp/ph8bcHDP3N+WBq7mpsCgRU2Qi+X9uXD5oOKmyjygQ0KtdH
REUVgJzPcPO4IgFhjx9Lu+xFmD1yhstiHwGPF+OWCxYQWs4PjffLE3DmE6vB
rGkhXDH/dl1HjgCzHwt5t0spq9a8KZem4q1WOGtgZxH8B78nh+M=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$6613, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$6613#1"]& ]}}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True}, 
       AxesLabel -> {
         FormBox["\[Phi]", TraditionalForm], 
         FormBox["\[Psi]", TraditionalForm]}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "ScalingFunctions" -> None}, 
       PlotRange -> {{-0.5885120913453613, 
        0.5885213118514435}, {-1.1133947587327302`, 1.113361349400921}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"1\""}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], "]"}], "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{{}, {}, 
         TagBox[
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             FaceForm[
              Opacity[0.3]], 
             RGBColor[0.368417, 0.506779, 0.709798]], 
            LineBox[CompressedData["
1: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
zOuFuSAV7Ka9uTMP11eKp3VvyIP/ALTJhRs=
             "]]}, 
           Annotation[#, {{Legended}, Charting`Private`Tag$6659, {1}}]& ], 
          Annotation[#, "Charting`Private`Tag$6659#1"]& ]}}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True}, 
       AxesLabel -> {
         FormBox[
          SuperscriptBox["\[Phi]", "\[Prime]", MultilineFunction -> None], 
          TraditionalForm], 
         FormBox["\[Psi]", TraditionalForm]}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "ScalingFunctions" -> None}, 
       PlotRange -> {{-0.6264906386735689, 
        0.6265138489018349}, {-1.1133947587327302`, 1.113361349400921}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"1\""}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], "]"}], "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`a$$ = 44.186539268493654`, 
      Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
      Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ =
       1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
        Hold[$CellContext`a$$], 40.625, 47.15}}, Typeset`size$$ = {
      450., {190., 197.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
      Typeset`skipInitDone$$ = True, $CellContext`a$6842$$ = 0}, 
      DynamicBox[Manipulate`ManipulateBoxes[
       1, StandardForm, "Variables" :> {$CellContext`a$$ = 40.625}, 
        "ControllerVariables" :> {
          Hold[$CellContext`a$$, $CellContext`a$6842$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, 
        "Body" :> $CellContext`drawWing[
          Part[$CellContext`sols, 1], $CellContext`a$$], 
        "Specifications" :> {{$CellContext`a$$, 40.625, 47.15, 
           DefaultDuration -> 4, 
           AppearanceElements -> {
            "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
             "DirectionButton"}}}, 
        "Options" :> {
         ControlType -> Animator, AppearanceElements -> None, 
          DefaultBaseStyle -> "Animate", DefaultLabelStyle -> "AnimateLabel", 
          SynchronousUpdating -> True, ShrinkingDelay -> 8.}, 
        "DefaultOptions" :> {}],
       ImageSizeCache->{511., {239., 246.}},
       SingleEvaluation->True],
      Deinitialization:>None,
      DynamicModuleValues:>{},
      SynchronousInitialization->True,
      UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
      UnsavedVariables:>{Typeset`initDone$$},
      UntrackedVariables:>{Typeset`size$$}], "Animate",
     Deployed->True,
     StripOnInput->False],
    Manipulate`InterpretManipulate[1]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.758872280050231*^9, 3.7588723347509184`*^9, {3.7588723894935484`*^9, 
   3.758872455533968*^9}, 3.758873083534842*^9, {3.7588731505157776`*^9, 
   3.7588731827156544`*^9}, 3.7588732329215*^9, {3.75887328799125*^9, 
   3.7588733474821014`*^9}, {3.7588734270085473`*^9, 
   3.7588734346550183`*^9}, {3.7588736398906617`*^9, 3.758873652184871*^9}, {
   3.7588736931533794`*^9, 3.7588737743442283`*^9}, 3.7589704674030285`*^9, 
   3.758970654121313*^9, {3.7593106524879436`*^9, 3.7593106681794395`*^9}, 
   3.7851628524268827`*^9, 3.785162926348107*^9, 3.785163043538539*^9, {
   3.7852435023740625`*^9, 3.7852435232731843`*^9}, 3.7852437305684443`*^9, 
   3.7852440356513777`*^9, {3.7852441043430486`*^9, 3.785244210015951*^9}, {
   3.785244242217107*^9, 3.785244271118507*^9}, 3.7852443574106984`*^9, 
   3.7852450463135014`*^9, {3.7852456064819465`*^9, 3.7852456296292934`*^9}, 
   3.7852507977379675`*^9, 3.7852509069239635`*^9, 3.785252912158183*^9, 
   3.7852531671287184`*^9, 3.785253210422945*^9, 3.7852532626277757`*^9, {
   3.7852537637628202`*^9, 3.7852538088500366`*^9}, {3.7852541114975405`*^9, 
   3.785254133831778*^9}, 3.78525424249282*^9, 3.7852542771054907`*^9, 
   3.785261258021784*^9, 3.785262076859126*^9, 3.785262163426772*^9, 
   3.7852624801405516`*^9, 3.7852631846830416`*^9, 3.785263302406492*^9, 
   3.7852633631776466`*^9, 3.7852635134671392`*^9, {3.7852635741211967`*^9, 
   3.7852635893176556`*^9}, 3.785263851611332*^9, {3.7852639664179106`*^9, 
   3.7852639873723183`*^9}, 3.7852641204463067`*^9, 3.785264158743861*^9, {
   3.7852641992874966`*^9, 3.7852642276409445`*^9}, {3.7852643182265663`*^9, 
   3.7852643493376245`*^9}, 3.7852644089011292`*^9, {3.785264520063408*^9, 
   3.785264539752267*^9}, 3.785267409528537*^9, 3.7852681749202657`*^9, 
   3.7852697630160265`*^9, 3.7852699982707105`*^9, 3.785534749843243*^9, 
   3.7855385258230906`*^9, 3.7855385721228037`*^9, {3.7855386068082347`*^9, 
   3.7855386238566217`*^9}, {3.7855386555543323`*^9, 3.785538751666424*^9}, {
   3.785538884970377*^9, 3.7855389150766773`*^9}, 3.785538952636283*^9, 
   3.7855390152016325`*^9, {3.785539055340662*^9, 3.7855390954977546`*^9}, {
   3.785539136433443*^9, 3.785539217698493*^9}, 3.7855393426364856`*^9, 
   3.7855393728231783`*^9, 3.785539450376194*^9, 3.7855394889345913`*^9, 
   3.785539530898578*^9, 3.785539562612153*^9, 3.785539596795638*^9, {
   3.7855396441754913`*^9, 3.7855396864201255`*^9}, {3.7855397305300894`*^9, 
   3.7855398483485813`*^9}, {3.785539883725809*^9, 3.7855399593852243`*^9}, 
   3.7856088080241747`*^9, {3.7856103777528644`*^9, 3.785610439922303*^9}, {
   3.7856105990123158`*^9, 3.78561062523814*^9}, {3.785611081511992*^9, 
   3.785611094662157*^9}, 3.7856111436067*^9, {3.785611185347499*^9, 
   3.7856112087623625`*^9}, {3.7856112463653803`*^9, 3.785611269706914*^9}, 
   3.7856115520974693`*^9, 3.7856115908282676`*^9, {3.7856116390026703`*^9, 
   3.785611669542353*^9}, {3.785611722898271*^9, 3.7856117516608343`*^9}, {
   3.7856118269823356`*^9, 3.7856118368420296`*^9}, 3.7856183031976185`*^9, 
   3.7856195360614257`*^9, {3.785619611331256*^9, 3.7856196515918794`*^9}, 
   3.7856197125390778`*^9, 3.785619744725647*^9, 3.78562034267293*^9, 
   3.785620427261402*^9, {3.7856204696110797`*^9, 3.785620508307721*^9}, {
   3.785620633816839*^9, 3.7856206563054457`*^9}, 3.7856207080796957`*^9, {
   3.785621059008577*^9, 3.78562111498225*^9}, 3.7856212132105384`*^9, 
   3.785621249442583*^9, 3.7856213837873807`*^9, 3.7856214152889743`*^9, 
   3.7856215941738997`*^9, 3.785621984088272*^9, {3.7856222144398317`*^9, 
   3.785622224181604*^9}, 3.78562253436259*^9, 3.785830682384946*^9, {
   3.785833321269907*^9, 3.785833343446749*^9}, 3.7858334092447085`*^9, 
   3.7858334501385565`*^9, 3.7858335202649107`*^9, 3.7858335772630177`*^9, 
   3.785833615421275*^9, 3.785833702928934*^9, 3.7858338413113956`*^9, {
   3.785833893784486*^9, 3.7858339303882637`*^9}, {3.7858339806311803`*^9, 
   3.7858339984397635`*^9}, {3.785835258520028*^9, 3.785835355975478*^9}, {
   3.7858353914118395`*^9, 3.7858354047230186`*^9}, {3.7858354547055416`*^9, 
   3.7858355051179953`*^9}, {3.7858355557085934`*^9, 3.785835584397952*^9}, 
   3.785835774140715*^9, 3.7858358081611495`*^9, 3.785835871146635*^9, {
   3.7858359297498217`*^9, 3.78583594903004*^9}, {3.7858360036339746`*^9, 
   3.785836029403308*^9}, {3.7858360714444723`*^9, 3.78583620668647*^9}, {
   3.7858362420794225`*^9, 3.7858363288547688`*^9}, {3.7858363783262577`*^9, 
   3.785836403486186*^9}, {3.7858364743836584`*^9, 3.785836622902642*^9}, {
   3.785836711548108*^9, 3.78583673608899*^9}, {3.785837046439609*^9, 
   3.785837084895321*^9}, 3.785837143225133*^9, {3.7858371768534718`*^9, 
   3.7858371932654033`*^9}, 3.7858374483979993`*^9, 3.786458088301794*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"c1131078-d358-4e03-9b8b-c2dbb9b29694"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Pi]", "/", "2"}], "-", "\[Alpha]"}], "/.", 
  RowBox[{"Last", "@", 
   RowBox[{"Maximize", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"CLmax", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", "\[Alpha]"}], "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"CDmax", "+", "CD0"}], ")"}], "/", "2"}], "-", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"CDmax", "-", "CD0"}], ")"}], "/", "2"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", "\[Alpha]"}], "]"}]}]}], ")"}]}], "/.", "params"}], 
       ",", 
       RowBox[{"0", "\[LessEqual]", "\[Alpha]", "\[LessEqual]", 
        RowBox[{"\[Pi]", "/", "2"}]}]}], "}"}], ",", "\[Alpha]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7858372462756205`*^9, 3.785837410137821*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"da6096ee-6a39-4d4a-9d64-8f02f4d3debd"],

Cell[BoxData["1.2403736788776414`"], "Output",
 CellChangeTimes->{{3.785837283263133*^9, 3.7858373180600815`*^9}, {
   3.7858373511608734`*^9, 3.7858373875893126`*^9}, 3.786458089227337*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"a795c738-2e98-4d63-9b53-94d64ae36517"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{998, 1241},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 228, 4, 67, "Subsection",ExpressionUUID->"e64cb84f-de9f-4b90-a5e9-1ea323c30588"],
Cell[811, 28, 53162, 876, 113, "Text",ExpressionUUID->"64d0d6bf-1eab-41bc-a7cd-251369f4e925"],
Cell[53976, 906, 29784, 725, 2715, "Input",ExpressionUUID->"7405a249-8e74-42ba-8cb9-4ad6b37b789b"],
Cell[83763, 1633, 9755, 250, 593, "Input",ExpressionUUID->"b8b499bb-9d2f-4be1-820a-74f2d72ede84"],
Cell[93521, 1885, 7229, 152, 348, "Input",ExpressionUUID->"7c173ea2-2946-49d8-b3f4-f6b2d745c11e"],
Cell[CellGroupData[{
Cell[100775, 2041, 16412, 365, 1293, "Input",ExpressionUUID->"51dba8ce-d54e-473b-8306-f61498bec997"],
Cell[CellGroupData[{
Cell[117212, 2410, 2290, 34, 28, "Print",ExpressionUUID->"2305aa2b-fae3-4094-8900-c83b6869b682"],
Cell[119505, 2446, 2440, 37, 28, "Print",ExpressionUUID->"d639d12d-315d-434d-8318-78fac94757e0"]
}, Open  ]],
Cell[121960, 2486, 483734, 8588, 1547, "Output",ExpressionUUID->"c1131078-d358-4e03-9b8b-c2dbb9b29694"]
}, Open  ]],
Cell[CellGroupData[{
Cell[605731, 11079, 1099, 31, 84, "Input",ExpressionUUID->"da6096ee-6a39-4d4a-9d64-8f02f4d3debd"],
Cell[606833, 11112, 269, 3, 40, "Output",ExpressionUUID->"a795c738-2e98-4d63-9b53-94d64ae36517"]
}, Open  ]]
}, Open  ]]
}
]
*)

