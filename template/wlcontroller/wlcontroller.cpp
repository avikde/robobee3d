/**
 * @file wlcontroller.cpp
 * @author Avik De (avikde@gmail.com)
 * @brief Use the wlqp with numerical quadratic fit wrench map
 * @version 0.1
 * @date 2020-08-12
 * 
 * @copyright Copyright (c) 2020
 * 
 */
#include "wlcontroller.hpp"
#include <iostream>

WLController::WLController() {
  // load popts
  Eigen::Matrix<float, 6, 15> popts;
  // // poptsEmp col major
  // popts << -0.41498716334913877, 0.04853925386307669, -1.0443154298902466, -39.162566526689496, 3.86697945239634, 1.5868629373519454, 0.004161530470390393, -0.0005410195533586718, 0.008730954429386921, 0.4347272529556003, -0.054406534814573505, -0.013584604586031352, -0.04921896208897451, 0.03325717298367986, 3.774256296882532, 35.20801123124533, 4.136310537263415, 8.897152221477027, -0.08114084916912893, 0.11402108349065512, -6.565041851772019, 8.960105550238962, -2.40430210592086, 6.856427471376807, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -2.1498519749986776e-05, 2.9591070779816484e-06, 7.255944919680254e-05, -0.002179040590683337, 0.00034641731566390497, 1.2282136287999407e-05, 0.0007452193674740687, -0.0003656669558602931, -0.024440375440139876, -0.20825719312770322, -0.05418716099028047, -0.05776369789309159, -0.000592201745189127, -0.0006235124178038529, 0.03221142824195457, -0.2710167102094739, 0.011121246757241961, -0.0360868798609794, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.489837075232938, -0.15022060357201647, -23.321197610424026, 98.4856348629078, 5.142757475687521, 8.468979086282319, -0.8220389384978928, 0.0003189736297552722, 3.865481128472532, 34.454898506387536, -10.274310705200136, 0.7365484310116243, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -0.6424779320800695, 0.09522768136462195, 1.7626691411728337, -68.47304863790173, 11.418953851491452, 0.44877875839694553, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0;
  // popts
  popts << -0.006546634426549249, 9.029009225475524e-06, -0.4235793432635114, 0.0004970273589210487, -0.04967855748617539, 2.7799826925561083e-05, 5.619730433095801e-05, -1.4986231356039162e-07, 0.0021338360840689285, -6.882776500900782e-06, 0.0008594741997761248, -4.33980866463365e-07, -0.10046126965362534, 4.371403330671029e-08, 2.4430560265465476e-05, -0.0004592020239540682, -5.141024035634106, -3.7886225940335855e-07, 2.8269636386847336e-07, 1.023574109414231, 3.328050926551559e-05, -28.07432375743903, -3.6947357033333146e-05, -0.30424162339652516, 3.3260105206082036e-07, 0.017039273759093976, 1.0836641499138236e-05, -0.0008354886614699838, 0.0001902321337739334, -3.041423746090091, -8.561129105121841e-07, 1.2043402924645282e-09, 0.00023127061314787283, 5.190747088376899e-08, -9.815504649772921e-06, 3.4860207993083713e-09, 0.0010378391603621869, -3.473465666769341e-10, -1.9501837214353561e-07, 3.322441340705155e-06, 0.06222625213186152, 7.844144603352391e-09, -2.1526976705866592e-09, -0.012121931849592966, -2.513252554856101e-07, 0.521662596083329, 2.897975880464687e-07, 0.0033650097914274413, -2.4682847177637722e-09, -0.00020828441245571597, -7.917131239703786e-08, 3.863531490483966e-05, -1.5177479898802682e-06, 0.022997043353002334, 0.00030895094854226844, 4.490548891202895e-09, 1.911118527187613e-05, -0.0004502665930561039, 0.0011965904064848794, -2.9579795830697566e-06, -5.498973958767363e-08, -0.0028584701763253568, -2.529699081072906e-05, 0.01632414175861271, -8.836115186850822e-05, -0.4118396574989255, -3.6850719187462874e-07, 0.00042179444241666956, -3.1099855170076864e-05, 0.01085839020243772, -6.286132183531711e-05, -0.006259667773324984, -0.012527592056397634, -8.389602378310228e-06, 2.4948092705639127, 5.8402721126669827e-05, -0.16089773884138625, -0.00020662428061023186, -0.2386723461724283, -8.792969701568155e-07, -0.007818245388260668, -0.0013350535953576411, -0.5157669811698968, 7.841637217987254e-06, -0.011289258444268205, 7.233850163004005e-06, 0.10682098780722615, -0.003619350491662568, -0.017986323101450558, 3.213543642962808e-05;

  for (int i = 0; i < 6; ++i)
    fa[i].init(popts.row(i));
}

w_t WLController::wrenchMap(const u_t &u) {
  static w_t w;
  for (int i = 0; i < w.size(); ++i) {
    w[i] = fa[i].f(u);
  }
  return w;
}

dw_du_t WLController::wrenchJacMap(const u_t &u) {
  static dw_du_t dw_du;
  for (int i = 0; i < dw_du.rows(); ++i) {
    dw_du.row(i) = fa[i].Df(u);
  }
  return dw_du;
}
